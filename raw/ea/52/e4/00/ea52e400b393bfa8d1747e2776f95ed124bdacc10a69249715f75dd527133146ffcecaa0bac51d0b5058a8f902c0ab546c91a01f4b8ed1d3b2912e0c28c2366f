%PDF-1.6%‚„œ”
1 0 obj<</Names 14 0 R/Outlines 5 0 R/Metadata 712 0 R/Pages 2 0 R/SpiderInfo 698 0 R/StructTreeRoot 7 0 R/Type/Catalog>>endobj2 0 obj<</Count 9/Type/Pages/Kids[11 0 R 84 0 R 165 0 R 246 0 R 327 0 R 408 0 R 489 0 R 572 0 R 653 0 R]>>endobj3 0 obj<</CreationDate(D:20061103204556-08'00')/Producer(Acrobat Web Capture 7.0)/ModDate(D:20061103204558-08'00')/Title(An Introduction to Scheme and its Implementation - Table of Contents)>>endobj5 0 obj<</First 710 0 R/Count 2/Last 710 0 R/Type/Outlines>>endobj7 0 obj<</K 9 0 R/ParentTree 12 0 R/ParentTreeNextKey 9/Type/StructTreeRoot/ClassMap 8 0 R>>endobj8 0 obj<</SpdrArt<</O/WebCapture>>>>endobj9 0 obj<</K 10 0 R/P 7 0 R/S/Document>>endobj10 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 84 0 R/Type/MCR>><</MCID 0/Pg 165 0 R/Type/MCR>><</MCID 0/Pg 246 0 R/Type/MCR>><</MCID 0/Pg 327 0 R/Type/MCR>><</MCID 0/Pg 408 0 R/Type/MCR>><</MCID 0/Pg 489 0 R/Type/MCR>><</MCID 0/Pg 572 0 R/Type/MCR>><</MCID 0/Pg 653 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 11 0 R>>endobj11 0 obj<</Annots 18 0 R/Parent 2 0 R/ID 704 0 R/StructParents 0/Contents 688 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 684 0 R/T1_1 685 0 R/T1_2 686 0 R/T1_3 687 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj12 0 obj<</Nums[0 13 0 R 1 85 0 R 2 166 0 R 3 247 0 R 4 328 0 R 5 409 0 R 6 490 0 R 7 573 0 R 8 654 0 R]>>endobj13 0 obj[10 0 R]endobj14 0 obj<</IDS 708 0 R/Dests 15 0 R/URLS 709 0 R>>endobj15 0 obj<</Kids[293 0 R 362 0 R 431 0 R 500 0 R 566 0 R 635 0 R 636 0 R 218 0 R 219 0 R]>>endobj16 0 obj[11 0 R/XYZ 0 668.554 null]endobj17 0 obj<</Rect[50.0 652.154 105.202 667.154]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_2.html#SEC1)/S/URI>>/Border[0 0 0]>>endobj18 0 obj[17 0 R 20 0 R 22 0 R 24 0 R 26 0 R 28 0 R 30 0 R 32 0 R 34 0 R 36 0 R 38 0 R 40 0 R 42 0 R 44 0 R 46 0 R 48 0 R 50 0 R 52 0 R 54 0 R 56 0 R 58 0 R 60 0 R 62 0 R 64 0 R 66 0 R 68 0 R 70 0 R 72 0 R 74 0 R 76 0 R 78 0 R 80 0 R 82 0 R]endobj19 0 obj[11 0 R/XYZ 0 649.754 null]endobj20 0 obj<</Rect[90.0 633.354 325.256 648.354]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_3.html#SEC2)/S/URI>>/Border[0 0 0]>>endobj21 0 obj[11 0 R/XYZ 0 630.954 null]endobj22 0 obj<</Rect[90.0 614.554 217.554 629.554]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_4.html#SEC3)/S/URI>>/Border[0 0 0]>>endobj23 0 obj[11 0 R/XYZ 0 612.154 null]endobj24 0 obj<</Rect[90.0 595.754 171.256 610.754]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_5.html#SEC4)/S/URI>>/Border[0 0 0]>>endobj25 0 obj[11 0 R/XYZ 0 593.354 null]endobj26 0 obj<</Rect[90.0 576.954 201.972 591.954]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_5.html#SEC5)/S/URI>>/Border[0 0 0]>>endobj27 0 obj[11 0 R/XYZ 0 574.554 null]endobj28 0 obj<</Rect[90.0 558.154 216.0 573.154]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_6.html#SEC6)/S/URI>>/Border[0 0 0]>>endobj29 0 obj[11 0 R/XYZ 0 555.754 null]endobj30 0 obj<</Rect[90.0 539.354 214.054 554.354]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_7.html#SEC7)/S/URI>>/Border[0 0 0]>>endobj31 0 obj[11 0 R/XYZ 0 536.954 null]endobj32 0 obj<</Rect[50.0 520.554 119.216 535.554]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_8.html#SEC8)/S/URI>>/Border[0 0 0]>>endobj33 0 obj[11 0 R/XYZ 0 518.154 null]endobj34 0 obj<</Rect[90.0 501.754 244.742 516.754]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_9.html#SEC9)/S/URI>>/Border[0 0 0]>>endobj35 0 obj[11 0 R/XYZ 0 499.354 null]endobj36 0 obj<</Rect[90.0 482.954 219.864 497.954]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_10.html#SEC10)/S/URI>>/Border[0 0 0]>>endobj37 0 obj[11 0 R/XYZ 0 480.554 null]endobj38 0 obj<</Rect[130.0 464.154 296.838 479.154]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_11.html#SEC11)/S/URI>>/Border[0 0 0]>>endobj39 0 obj[11 0 R/XYZ 0 461.754 null]endobj40 0 obj<</Rect[170.0 445.354 356.634 460.354]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_12.html#SEC12)/S/URI>>/Border[0 0 0]>>endobj41 0 obj[11 0 R/XYZ 0 442.954 null]endobj42 0 obj<</Rect[170.0 426.554 483.782 441.554]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_13.html#SEC13)/S/URI>>/Border[0 0 0]>>endobj43 0 obj[11 0 R/XYZ 0 424.154 null]endobj44 0 obj<</Rect[170.0 407.754 366.336 422.754]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_14.html#SEC14)/S/URI>>/Border[0 0 0]>>endobj45 0 obj[11 0 R/XYZ 0 405.354 null]endobj46 0 obj<</Rect[170.0 388.954 343.782 403.954]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_15.html#SEC15)/S/URI>>/Border[0 0 0]>>endobj47 0 obj[11 0 R/XYZ 0 386.554 null]endobj48 0 obj<</Rect[170.0 370.154 328.284 385.154]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_16.html#SEC16)/S/URI>>/Border[0 0 0]>>endobj49 0 obj[11 0 R/XYZ 0 367.754 null]endobj50 0 obj<</Rect[170.0 351.354 250.5 366.354]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_17.html#SEC17)/S/URI>>/Border[0 0 0]>>endobj51 0 obj[11 0 R/XYZ 0 348.954 null]endobj52 0 obj<</Rect[170.0 332.554 364.81 347.554]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_18.html#SEC18)/S/URI>>/Border[0 0 0]>>endobj53 0 obj[11 0 R/XYZ 0 330.154 null]endobj54 0 obj<</Rect[130.0 313.686 308.626 328.754]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_19.html#SEC19)/S/URI>>/Border[0 0 0]>>endobj55 0 obj[11 0 R/XYZ 0 311.286 null]endobj56 0 obj<</Rect[130.0 294.819 461.1 309.886]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_20.html#SEC20)/S/URI>>/Border[0 0 0]>>endobj57 0 obj[11 0 R/XYZ 0 292.419 null]endobj58 0 obj<</Rect[170.0 276.019 203.6 291.019]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_21.html#SEC21)/S/URI>>/Border[0 0 0]>>endobj59 0 obj[11 0 R/XYZ 0 273.619 null]endobj60 0 obj<</Rect[170.0 257.152 239.216 272.219]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_22.html#SEC22)/S/URI>>/Border[0 0 0]>>endobj61 0 obj[11 0 R/XYZ 0 254.752 null]endobj62 0 obj<</Rect[170.0 238.284 300.956 253.352]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_22.html#SEC23)/S/URI>>/Border[0 0 0]>>endobj63 0 obj[11 0 R/XYZ 0 235.884 null]endobj64 0 obj<</Rect[130.0 219.484 247.446 234.484]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_23.html#SEC24)/S/URI>>/Border[0 0 0]>>endobj65 0 obj[11 0 R/XYZ 0 217.084 null]endobj66 0 obj<</Rect[130.0 200.684 355.904 215.684]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_24.html#SEC25)/S/URI>>/Border[0 0 0]>>endobj67 0 obj[11 0 R/XYZ 0 198.284 null]endobj68 0 obj<</Rect[170.0 181.884 317.756 196.884]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_25.html#SEC26)/S/URI>>/Border[0 0 0]>>endobj69 0 obj[11 0 R/XYZ 0 179.484 null]endobj70 0 obj<</Rect[170.0 163.084 492.77 178.084]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_26.html#SEC27)/S/URI>>/Border[0 0 0]>>endobj71 0 obj[11 0 R/XYZ 0 160.684 null]endobj72 0 obj<</Rect[170.0 144.217 260.762 159.284]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_27.html#SEC28)/S/URI>>/Border[0 0 0]>>endobj73 0 obj[11 0 R/XYZ 0 141.817 null]endobj74 0 obj<</Rect[170.0 125.417 350.418 140.417]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_28.html#SEC29)/S/URI>>/Border[0 0 0]>>endobj75 0 obj[11 0 R/XYZ 0 123.017 null]endobj76 0 obj<</Rect[130.0 106.617 320.918 121.617]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_29.html#SEC30)/S/URI>>/Border[0 0 0]>>endobj77 0 obj[11 0 R/XYZ 0 104.217 null]endobj78 0 obj<</Rect[170.0 87.8169 300.256 102.817]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_30.html#SEC31)/S/URI>>/Border[0 0 0]>>endobj79 0 obj[11 0 R/XYZ 0 85.4169 null]endobj80 0 obj<</Rect[170.0 69.0169 474.486 84.0169]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_31.html#SEC32)/S/URI>>/Border[0 0 0]>>endobj81 0 obj[11 0 R/XYZ 0 66.6169 null]endobj82 0 obj<</Rect[170.0 50.2169 283.918 65.2169]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_32.html#SEC33)/S/URI>>/Border[0 0 0]>>endobj83 0 obj[11 0 R/XYZ 0 47.8169 null]endobj84 0 obj<</Annots 87 0 R/Parent 2 0 R/ID 704 0 R/StructParents 1/Contents 689 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 684 0 R/T1_1 686 0 R/T1_2 687 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj85 0 obj[10 0 R]endobj86 0 obj<</Rect[130.0 749.6 365.256 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_33.html#SEC34)/S/URI>>/Border[0 0 0]>>endobj87 0 obj[86 0 R 89 0 R 91 0 R 93 0 R 95 0 R 97 0 R 99 0 R 101 0 R 103 0 R 105 0 R 107 0 R 109 0 R 111 0 R 113 0 R 115 0 R 117 0 R 119 0 R 121 0 R 123 0 R 125 0 R 127 0 R 129 0 R 131 0 R 133 0 R 135 0 R 137 0 R 139 0 R 141 0 R 143 0 R 145 0 R 147 0 R 151 0 R 153 0 R 155 0 R 157 0 R 159 0 R 161 0 R 163 0 R]endobj88 0 obj[84 0 R/XYZ 0 747.2 null]endobj89 0 obj<</Rect[130.0 730.8 338.194 745.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_34.html#SEC35)/S/URI>>/Border[0 0 0]>>endobj90 0 obj[84 0 R/XYZ 0 728.4 null]endobj91 0 obj<</Rect[170.0 712.0 260.608 727.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_34.html#SEC36)/S/URI>>/Border[0 0 0]>>endobj92 0 obj[84 0 R/XYZ 0 709.6 null]endobj93 0 obj<</Rect[130.0 693.2 273.878 708.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_35.html#SEC37)/S/URI>>/Border[0 0 0]>>endobj94 0 obj[84 0 R/XYZ 0 690.8 null]endobj95 0 obj<</Rect[90.0 674.4 172.446 689.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_36.html#SEC38)/S/URI>>/Border[0 0 0]>>endobj96 0 obj[84 0 R/XYZ 0 672.0 null]endobj97 0 obj<</Rect[130.0 655.533 224.668 670.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_37.html#SEC39)/S/URI>>/Border[0 0 0]>>endobj98 0 obj[84 0 R/XYZ 0 653.133 null]endobj99 0 obj<</Rect[130.0 636.733 230.338 651.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_38.html#SEC40)/S/URI>>/Border[0 0 0]>>endobj100 0 obj[84 0 R/XYZ 0 634.333 null]endobj101 0 obj<</Rect[130.0 617.933 332.202 632.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_39.html#SEC41)/S/URI>>/Border[0 0 0]>>endobj102 0 obj[84 0 R/XYZ 0 615.533 null]endobj103 0 obj<</Rect[130.0 599.133 388.958 614.133]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_40.html#SEC42)/S/URI>>/Border[0 0 0]>>endobj104 0 obj[84 0 R/XYZ 0 596.733 null]endobj105 0 obj<</Rect[130.0 580.333 180.4 595.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_41.html#SEC43)/S/URI>>/Border[0 0 0]>>endobj106 0 obj[84 0 R/XYZ 0 577.933 null]endobj107 0 obj<</Rect[170.0 561.533 203.6 576.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_42.html#SEC44)/S/URI>>/Border[0 0 0]>>endobj108 0 obj[84 0 R/XYZ 0 559.133 null]endobj109 0 obj<</Rect[170.0 542.733 220.4 557.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_43.html#SEC45)/S/URI>>/Border[0 0 0]>>endobj110 0 obj[84 0 R/XYZ 0 540.333 null]endobj111 0 obj<</Rect[170.0 523.933 228.8 538.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_44.html#SEC46)/S/URI>>/Border[0 0 0]>>endobj112 0 obj[84 0 R/XYZ 0 521.533 null]endobj113 0 obj<</Rect[170.0 505.133 220.4 520.133]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_45.html#SEC47)/S/URI>>/Border[0 0 0]>>endobj114 0 obj[84 0 R/XYZ 0 502.733 null]endobj115 0 obj<</Rect[90.0 486.333 358.282 501.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html#SEC48)/S/URI>>/Border[0 0 0]>>endobj116 0 obj[84 0 R/XYZ 0 483.933 null]endobj117 0 obj<</Rect[130.0 467.533 180.4 482.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html#SEC49)/S/URI>>/Border[0 0 0]>>endobj118 0 obj[84 0 R/XYZ 0 465.133 null]endobj119 0 obj<</Rect[130.0 448.733 208.96 463.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html#SEC50)/S/URI>>/Border[0 0 0]>>endobj120 0 obj[84 0 R/XYZ 0 446.333 null]endobj121 0 obj<</Rect[130.0 429.865 266.416 444.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html#SEC51)/S/URI>>/Border[0 0 0]>>endobj122 0 obj[84 0 R/XYZ 0 427.465 null]endobj123 0 obj<</Rect[170.0 411.065 220.4 426.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html#SEC52)/S/URI>>/Border[0 0 0]>>endobj124 0 obj[84 0 R/XYZ 0 408.665 null]endobj125 0 obj<</Rect[170.0 392.265 228.8 407.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html#SEC53)/S/URI>>/Border[0 0 0]>>endobj126 0 obj[84 0 R/XYZ 0 389.865 null]endobj127 0 obj<</Rect[90.0 373.465 312.012 388.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_47.html#SEC54)/S/URI>>/Border[0 0 0]>>endobj128 0 obj[84 0 R/XYZ 0 371.065 null]endobj129 0 obj<</Rect[130.0 354.665 219.81 369.665]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_48.html#SEC55)/S/URI>>/Border[0 0 0]>>endobj130 0 obj[84 0 R/XYZ 0 352.265 null]endobj131 0 obj<</Rect[130.0 335.865 238.486 350.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_49.html#SEC56)/S/URI>>/Border[0 0 0]>>endobj132 0 obj[84 0 R/XYZ 0 333.465 null]endobj133 0 obj<</Rect[130.0 317.065 347.756 332.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_50.html#SEC57)/S/URI>>/Border[0 0 0]>>endobj134 0 obj[84 0 R/XYZ 0 314.665 null]endobj135 0 obj<</Rect[90.0 298.265 205.878 313.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_51.html#SEC58)/S/URI>>/Border[0 0 0]>>endobj136 0 obj[84 0 R/XYZ 0 295.865 null]endobj137 0 obj<</Rect[130.0 279.465 331.04 294.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_52.html#SEC59)/S/URI>>/Border[0 0 0]>>endobj138 0 obj[84 0 R/XYZ 0 277.065 null]endobj139 0 obj<</Rect[90.0 260.665 285.944 275.665]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_53.html#SEC60)/S/URI>>/Border[0 0 0]>>endobj140 0 obj[84 0 R/XYZ 0 258.265 null]endobj141 0 obj<</Rect[130.0 241.865 155.2 256.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_54.html#SEC61)/S/URI>>/Border[0 0 0]>>endobj142 0 obj[84 0 R/XYZ 0 239.465 null]endobj143 0 obj<</Rect[170.0 222.998 323.524 238.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_55.html#SEC62)/S/URI>>/Border[0 0 0]>>endobj144 0 obj[84 0 R/XYZ 0 220.598 null]endobj145 0 obj<</Rect[130.0 204.198 209.702 219.198]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_56.html#SEC63)/S/URI>>/Border[0 0 0]>>endobj146 0 obj[84 0 R/XYZ 0 201.798 null]endobj147 0 obj<</Rect[170.0 185.398 424.352 200.398]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_57.html#SEC64)/S/URI>>/Border[0 0 0]>>endobj148 0 obj[84 0 R/XYZ 0 182.998 null]endobj151 0 obj<</Rect[170.0 166.53 370.172 181.598]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_58.html#SEC65)/S/URI>>/Border[0 0 0]>>endobj152 0 obj[84 0 R/XYZ 0 164.13 null]endobj153 0 obj<</Rect[130.0 147.73 163.6 162.73]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_59.html#SEC66)/S/URI>>/Border[0 0 0]>>endobj154 0 obj[84 0 R/XYZ 0 145.33 null]endobj155 0 obj<</Rect[90.0 128.93 209.742 143.93]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_60.html#SEC67)/S/URI>>/Border[0 0 0]>>endobj156 0 obj[84 0 R/XYZ 0 126.53 null]endobj157 0 obj<</Rect[130.0 110.13 275.81 125.13]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_61.html#SEC68)/S/URI>>/Border[0 0 0]>>endobj158 0 obj[84 0 R/XYZ 0 107.73 null]endobj159 0 obj<</Rect[130.0 91.3304 271.89 106.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_62.html#SEC69)/S/URI>>/Border[0 0 0]>>endobj160 0 obj[84 0 R/XYZ 0 88.9304 null]endobj161 0 obj<</Rect[130.0 72.463 341.764 87.5304]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_63.html#SEC70)/S/URI>>/Border[0 0 0]>>endobj162 0 obj[84 0 R/XYZ 0 70.063 null]endobj163 0 obj<</Rect[130.0 53.5956 347.196 68.663]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_64.html#SEC71)/S/URI>>/Border[0 0 0]>>endobj164 0 obj[84 0 R/XYZ 0 51.1956 null]endobj165 0 obj<</Annots 168 0 R/Parent 2 0 R/ID 704 0 R/StructParents 2/Contents 690 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 684 0 R/T1_1 686 0 R/T1_2 687 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj166 0 obj[10 0 R]endobj167 0 obj<</Rect[130.0 749.6 228.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_65.html#SEC72)/S/URI>>/Border[0 0 0]>>endobj168 0 obj[167 0 R 170 0 R 172 0 R 174 0 R 176 0 R 178 0 R 180 0 R 182 0 R 184 0 R 186 0 R 188 0 R 190 0 R 192 0 R 194 0 R 196 0 R 198 0 R 200 0 R 202 0 R 204 0 R 206 0 R 208 0 R 210 0 R 212 0 R 214 0 R 216 0 R 220 0 R 222 0 R 224 0 R 226 0 R 228 0 R 230 0 R 232 0 R 234 0 R 236 0 R 238 0 R 240 0 R 242 0 R 244 0 R]endobj169 0 obj[165 0 R/XYZ 0 747.2 null]endobj170 0 obj<</Rect[130.0 730.733 364.682 745.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_66.html#SEC73)/S/URI>>/Border[0 0 0]>>endobj171 0 obj[165 0 R/XYZ 0 728.333 null]endobj172 0 obj<</Rect[130.0 711.865 346.286 726.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_67.html#SEC74)/S/URI>>/Border[0 0 0]>>endobj173 0 obj[165 0 R/XYZ 0 709.465 null]endobj174 0 obj<</Rect[130.0 693.065 528.51 708.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_68.html#SEC75)/S/URI>>/Border[0 0 0]>>endobj175 0 obj[165 0 R/XYZ 0 690.665 null]endobj176 0 obj<</Rect[130.0 674.265 172.0 689.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_69.html#SEC76)/S/URI>>/Border[0 0 0]>>endobj177 0 obj[165 0 R/XYZ 0 671.865 null]endobj178 0 obj<</Rect[90.0 655.465 224.54 670.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_70.html#SEC77)/S/URI>>/Border[0 0 0]>>endobj179 0 obj[165 0 R/XYZ 0 653.065 null]endobj180 0 obj<</Rect[130.0 636.665 268.404 651.665]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_71.html#SEC78)/S/URI>>/Border[0 0 0]>>endobj181 0 obj[165 0 R/XYZ 0 634.265 null]endobj182 0 obj<</Rect[130.0 617.865 318.986 632.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_72.html#SEC79)/S/URI>>/Border[0 0 0]>>endobj183 0 obj[165 0 R/XYZ 0 615.465 null]endobj184 0 obj<</Rect[90.0 599.065 230.364 614.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_73.html#SEC80)/S/URI>>/Border[0 0 0]>>endobj185 0 obj[165 0 R/XYZ 0 596.665 null]endobj186 0 obj<</Rect[90.0 580.265 131.986 595.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_74.html#SEC81)/S/URI>>/Border[0 0 0]>>endobj187 0 obj[165 0 R/XYZ 0 577.865 null]endobj188 0 obj<</Rect[90.0 561.465 168.568 576.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_75.html#SEC82)/S/URI>>/Border[0 0 0]>>endobj189 0 obj[165 0 R/XYZ 0 559.065 null]endobj190 0 obj<</Rect[90.0 542.665 200.824 557.665]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_76.html#SEC83)/S/URI>>/Border[0 0 0]>>endobj191 0 obj[165 0 R/XYZ 0 540.265 null]endobj192 0 obj<</Rect[90.0 523.865 221.432 538.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_77.html#SEC84)/S/URI>>/Border[0 0 0]>>endobj193 0 obj[165 0 R/XYZ 0 521.465 null]endobj194 0 obj<</Rect[50.0 505.065 202.81 520.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_79.html#SEC85)/S/URI>>/Border[0 0 0]>>endobj195 0 obj[165 0 R/XYZ 0 502.665 null]endobj196 0 obj<</Rect[90.0 486.265 384.35 501.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_80.html#SEC86)/S/URI>>/Border[0 0 0]>>endobj197 0 obj[165 0 R/XYZ 0 483.865 null]endobj198 0 obj<</Rect[130.0 467.465 222.162 482.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_81.html#SEC87)/S/URI>>/Border[0 0 0]>>endobj199 0 obj[165 0 R/XYZ 0 465.065 null]endobj200 0 obj<</Rect[130.0 448.665 375.35 463.665]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_82.html#SEC88)/S/URI>>/Border[0 0 0]>>endobj201 0 obj[165 0 R/XYZ 0 446.265 null]endobj202 0 obj<</Rect[130.0 429.865 266.864 444.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_83.html#SEC89)/S/URI>>/Border[0 0 0]>>endobj203 0 obj[165 0 R/XYZ 0 427.465 null]endobj204 0 obj<</Rect[130.0 411.065 244.702 426.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_84.html#SEC90)/S/URI>>/Border[0 0 0]>>endobj205 0 obj[165 0 R/XYZ 0 408.665 null]endobj206 0 obj<</Rect[130.0 392.265 278.554 407.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_85.html#SEC91)/S/URI>>/Border[0 0 0]>>endobj207 0 obj[165 0 R/XYZ 0 389.865 null]endobj208 0 obj<</Rect[130.0 373.465 297.594 388.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_86.html#SEC92)/S/URI>>/Border[0 0 0]>>endobj209 0 obj[165 0 R/XYZ 0 371.065 null]endobj210 0 obj<</Rect[130.0 354.665 280.892 369.665]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_87.html#SEC93)/S/URI>>/Border[0 0 0]>>endobj211 0 obj[165 0 R/XYZ 0 352.265 null]endobj212 0 obj<</Rect[130.0 335.865 195.324 350.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_88.html#SEC94)/S/URI>>/Border[0 0 0]>>endobj213 0 obj[165 0 R/XYZ 0 333.465 null]endobj214 0 obj<</Rect[130.0 317.065 315.08 332.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_89.html#SEC95)/S/URI>>/Border[0 0 0]>>endobj215 0 obj[165 0 R/XYZ 0 314.665 null]endobj216 0 obj<</Rect[170.0 298.198 240.546 313.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_90.html#SEC96)/S/URI>>/Border[0 0 0]>>endobj217 0 obj[165 0 R/XYZ 0 295.798 null]endobj218 0 obj<</Limits[(Ô1™+X÷¢¡‘≈êlêÑSEC39)(Ô1™+X÷¢¡‘≈êlêÑSEC67)]/Names[(Ô1™+X÷¢¡‘≈êlêÑSEC39)96 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC4)23 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC40)98 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC41)100 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC42)102 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC43)104 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC44)106 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC45)108 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC46)110 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC47)112 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC48)114 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC49)116 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC5)25 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC50)118 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC51)120 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC52)122 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC53)124 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC54)126 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC55)128 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC56)130 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC57)132 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC58)134 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC59)136 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC6)27 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC60)138 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC61)140 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC62)142 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC63)144 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC64)146 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC65)148 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC66)152 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC67)154 0 R]>>endobj219 0 obj<</Limits[(Ô1™+X÷¢¡‘≈êlêÑSEC68)(Ô1™+X÷¢¡‘≈êlêÑSEC99)]/Names[(Ô1™+X÷¢¡‘≈êlêÑSEC68)156 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC69)158 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC7)29 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC70)160 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC71)162 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC72)164 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC73)169 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC74)171 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC75)173 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC76)175 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC77)177 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC78)179 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC79)181 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC8)31 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC80)183 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC81)185 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC82)187 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC83)189 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC84)191 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC85)193 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC86)195 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC87)197 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC88)199 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC89)201 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC9)33 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC90)203 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC91)205 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC92)207 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC93)209 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC94)211 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC95)213 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC96)215 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC97)217 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC98)221 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC99)223 0 R]>>endobj220 0 obj<</Rect[170.0 279.33 276.162 294.398]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_91.html#SEC97)/S/URI>>/Border[0 0 0]>>endobj221 0 obj[165 0 R/XYZ 0 276.93 null]endobj222 0 obj<</Rect[130.0 260.53 312.756 275.53]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_92.html#SEC98)/S/URI>>/Border[0 0 0]>>endobj223 0 obj[165 0 R/XYZ 0 258.13 null]endobj224 0 obj<</Rect[130.0 241.73 212.446 256.73]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_93.html#SEC99)/S/URI>>/Border[0 0 0]>>endobj225 0 obj[165 0 R/XYZ 0 239.33 null]endobj226 0 obj<</Rect[90.0 222.93 242.026 237.93]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_94.html#SEC100)/S/URI>>/Border[0 0 0]>>endobj227 0 obj[165 0 R/XYZ 0 220.53 null]endobj228 0 obj<</Rect[130.0 204.13 256.756 219.13]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_95.html#SEC101)/S/URI>>/Border[0 0 0]>>endobj229 0 obj[165 0 R/XYZ 0 201.73 null]endobj230 0 obj<</Rect[130.0 185.33 275.432 200.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_96.html#SEC102)/S/URI>>/Border[0 0 0]>>endobj231 0 obj[165 0 R/XYZ 0 182.93 null]endobj232 0 obj<</Rect[90.0 166.463 374.522 181.53]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_97.html#SEC103)/S/URI>>/Border[0 0 0]>>endobj233 0 obj[165 0 R/XYZ 0 164.063 null]endobj234 0 obj<</Rect[90.0 147.663 491.66 162.663]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_98.html#SEC104)/S/URI>>/Border[0 0 0]>>endobj235 0 obj[165 0 R/XYZ 0 145.263 null]endobj236 0 obj<</Rect[130.0 128.863 256.378 143.863]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_98.html#SEC105)/S/URI>>/Border[0 0 0]>>endobj237 0 obj[165 0 R/XYZ 0 126.463 null]endobj238 0 obj<</Rect[130.0 110.063 379.606 125.063]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_99.html#SEC106)/S/URI>>/Border[0 0 0]>>endobj239 0 obj[165 0 R/XYZ 0 107.663 null]endobj240 0 obj<</Rect[90.0 91.263 337.674 106.263]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_100.html#SEC107)/S/URI>>/Border[0 0 0]>>endobj241 0 obj[165 0 R/XYZ 0 88.863 null]endobj242 0 obj<</Rect[130.0 72.463 289.404 87.463]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_100.html#SEC108)/S/URI>>/Border[0 0 0]>>endobj243 0 obj[165 0 R/XYZ 0 70.063 null]endobj244 0 obj<</Rect[130.0 53.663 275.432 68.663]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_100.html#SEC109)/S/URI>>/Border[0 0 0]>>endobj245 0 obj[165 0 R/XYZ 0 51.263 null]endobj246 0 obj<</Annots 249 0 R/Parent 2 0 R/ID 704 0 R/StructParents 3/Contents 691 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 684 0 R/T1_1 686 0 R/T1_2 687 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj247 0 obj[10 0 R]endobj248 0 obj<</Rect[130.0 749.6 350.094 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_100.html#SEC110)/S/URI>>/Border[0 0 0]>>endobj249 0 obj[248 0 R 251 0 R 253 0 R 255 0 R 257 0 R 259 0 R 261 0 R 263 0 R 265 0 R 267 0 R 269 0 R 271 0 R 273 0 R 275 0 R 277 0 R 279 0 R 281 0 R 283 0 R 285 0 R 287 0 R 289 0 R 291 0 R 295 0 R 297 0 R 299 0 R 301 0 R 303 0 R 305 0 R 307 0 R 309 0 R 311 0 R 313 0 R 315 0 R 317 0 R 319 0 R 321 0 R 323 0 R 325 0 R]endobj250 0 obj[246 0 R/XYZ 0 747.2 null]endobj251 0 obj<</Rect[90.0 730.8 265.742 745.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_101.html#SEC111)/S/URI>>/Border[0 0 0]>>endobj252 0 obj[246 0 R/XYZ 0 728.4 null]endobj253 0 obj<</Rect[130.0 712.0 169.676 727.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_102.html#SEC112)/S/URI>>/Border[0 0 0]>>endobj254 0 obj[246 0 R/XYZ 0 709.6 null]endobj255 0 obj<</Rect[130.0 693.2 179.014 708.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_103.html#SEC113)/S/URI>>/Border[0 0 0]>>endobj256 0 obj[246 0 R/XYZ 0 690.8 null]endobj257 0 obj<</Rect[170.0 674.4 289.364 689.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_104.html#SEC114)/S/URI>>/Border[0 0 0]>>endobj258 0 obj[246 0 R/XYZ 0 672.0 null]endobj259 0 obj<</Rect[130.0 655.6 194.946 670.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_105.html#SEC115)/S/URI>>/Border[0 0 0]>>endobj260 0 obj[246 0 R/XYZ 0 653.2 null]endobj261 0 obj<</Rect[170.0 636.8 284.702 651.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_105.html#SEC116)/S/URI>>/Border[0 0 0]>>endobj262 0 obj[246 0 R/XYZ 0 634.4 null]endobj263 0 obj<</Rect[170.0 618.0 279.662 633.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_105.html#SEC117)/S/URI>>/Border[0 0 0]>>endobj264 0 obj[246 0 R/XYZ 0 615.6 null]endobj265 0 obj<</Rect[90.0 599.2 315.54 614.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#SEC118)/S/URI>>/Border[0 0 0]>>endobj266 0 obj[246 0 R/XYZ 0 596.8 null]endobj267 0 obj<</Rect[130.0 580.4 285.162 595.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#SEC119)/S/URI>>/Border[0 0 0]>>endobj268 0 obj[246 0 R/XYZ 0 578.0 null]endobj269 0 obj<</Rect[130.0 561.533 249.616 576.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#SEC120)/S/URI>>/Border[0 0 0]>>endobj270 0 obj[246 0 R/XYZ 0 559.133 null]endobj271 0 obj<</Rect[170.0 542.733 195.2 557.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#SEC121)/S/URI>>/Border[0 0 0]>>endobj272 0 obj[246 0 R/XYZ 0 540.333 null]endobj273 0 obj<</Rect[170.0 523.933 237.2 538.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#SEC122)/S/URI>>/Border[0 0 0]>>endobj274 0 obj[246 0 R/XYZ 0 521.533 null]endobj275 0 obj<</Rect[130.0 505.065 319.21 520.133]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#SEC123)/S/URI>>/Border[0 0 0]>>endobj276 0 obj[246 0 R/XYZ 0 502.665 null]endobj277 0 obj<</Rect[170.0 486.198 325.316 501.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#SEC124)/S/URI>>/Border[0 0 0]>>endobj278 0 obj[246 0 R/XYZ 0 483.798 null]endobj279 0 obj<</Rect[170.0 467.33 316.916 482.398]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#SEC125)/S/URI>>/Border[0 0 0]>>endobj280 0 obj[246 0 R/XYZ 0 464.93 null]endobj281 0 obj<</Rect[90.0 448.53 219.472 463.53]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_107.html#SEC126)/S/URI>>/Border[0 0 0]>>endobj282 0 obj[246 0 R/XYZ 0 446.13 null]endobj283 0 obj<</Rect[130.0 429.73 269.58 444.73]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_108.html#SEC127)/S/URI>>/Border[0 0 0]>>endobj284 0 obj[246 0 R/XYZ 0 427.33 null]endobj285 0 obj<</Rect[130.0 410.93 262.608 425.93]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_109.html#SEC128)/S/URI>>/Border[0 0 0]>>endobj286 0 obj[246 0 R/XYZ 0 408.53 null]endobj287 0 obj<</Rect[130.0 392.13 180.554 407.13]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_110.html#SEC129)/S/URI>>/Border[0 0 0]>>endobj288 0 obj[246 0 R/XYZ 0 389.73 null]endobj289 0 obj<</Rect[90.0 373.33 221.432 388.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_110.html#SEC130)/S/URI>>/Border[0 0 0]>>endobj290 0 obj[246 0 R/XYZ 0 370.93 null]endobj291 0 obj<</Rect[50.0 354.53 172.85 369.53]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_111.html#SEC131)/S/URI>>/Border[0 0 0]>>endobj292 0 obj[246 0 R/XYZ 0 352.13 null]endobj293 0 obj<</Limits[(Ô1™+X÷¢¡‘≈êlêÑSEC1)(Ô1™+X÷¢¡‘≈êlêÑSEC127)]/Names[(Ô1™+X÷¢¡‘≈êlêÑSEC1)16 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC10)35 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC100)225 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC101)227 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC102)229 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC103)231 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC104)233 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC105)235 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC106)237 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC107)239 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC108)241 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC109)243 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC11)37 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC110)245 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC111)250 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC112)252 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC113)254 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC114)256 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC115)258 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC116)260 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC117)262 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC118)264 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC119)266 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC12)39 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC120)268 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC121)270 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC122)272 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC123)274 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC124)276 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC125)278 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC126)280 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC127)282 0 R]>>endobj295 0 obj<</Rect[90.0 335.73 263.432 350.73]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_112.html#SEC132)/S/URI>>/Border[0 0 0]>>endobj296 0 obj[246 0 R/XYZ 0 333.33 null]endobj297 0 obj<</Rect[90.0 316.93 284.026 331.93]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_113.html#SEC133)/S/URI>>/Border[0 0 0]>>endobj298 0 obj[246 0 R/XYZ 0 314.53 null]endobj299 0 obj<</Rect[130.0 298.13 279.31 313.13]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_114.html#SEC134)/S/URI>>/Border[0 0 0]>>endobj300 0 obj[246 0 R/XYZ 0 295.73 null]endobj301 0 obj<</Rect[130.0 279.33 194.918 294.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_115.html#SEC135)/S/URI>>/Border[0 0 0]>>endobj302 0 obj[246 0 R/XYZ 0 276.93 null]endobj303 0 obj<</Rect[170.0 260.463 285.654 275.53]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_115.html#SEC136)/S/URI>>/Border[0 0 0]>>endobj304 0 obj[246 0 R/XYZ 0 258.063 null]endobj305 0 obj<</Rect[170.0 241.596 365.734 256.663]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_115.html#SEC137)/S/URI>>/Border[0 0 0]>>endobj306 0 obj[246 0 R/XYZ 0 239.196 null]endobj307 0 obj<</Rect[170.0 222.796 311.932 237.796]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_115.html#SEC138)/S/URI>>/Border[0 0 0]>>endobj308 0 obj[246 0 R/XYZ 0 220.396 null]endobj309 0 obj<</Rect[130.0 203.996 250.148 218.996]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html#SEC139)/S/URI>>/Border[0 0 0]>>endobj310 0 obj[246 0 R/XYZ 0 201.596 null]endobj311 0 obj<</Rect[170.0 185.196 390.878 200.196]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html#SEC140)/S/URI>>/Border[0 0 0]>>endobj312 0 obj[246 0 R/XYZ 0 182.796 null]endobj313 0 obj<</Rect[130.0 166.396 346.594 181.396]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html#SEC141)/S/URI>>/Border[0 0 0]>>endobj314 0 obj[246 0 R/XYZ 0 163.996 null]endobj315 0 obj<</Rect[170.0 147.596 218.216 162.596]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html#SEC142)/S/URI>>/Border[0 0 0]>>endobj316 0 obj[246 0 R/XYZ 0 145.196 null]endobj317 0 obj<</Rect[170.0 128.796 369.892 143.796]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html#SEC143)/S/URI>>/Border[0 0 0]>>endobj318 0 obj[246 0 R/XYZ 0 126.396 null]endobj319 0 obj<</Rect[130.0 109.996 315.472 124.996]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_117.html#SEC144)/S/URI>>/Border[0 0 0]>>endobj320 0 obj[246 0 R/XYZ 0 107.596 null]endobj321 0 obj<</Rect[170.0 91.1956 402.148 106.196]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_117.html#SEC145)/S/URI>>/Border[0 0 0]>>endobj322 0 obj[246 0 R/XYZ 0 88.7956 null]endobj323 0 obj<</Rect[170.0 72.3956 357.81 87.3956]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_117.html#SEC146)/S/URI>>/Border[0 0 0]>>endobj324 0 obj[246 0 R/XYZ 0 69.9956 null]endobj325 0 obj<</Rect[90.0 53.5956 221.432 68.5956]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_118.html#SEC147)/S/URI>>/Border[0 0 0]>>endobj326 0 obj[246 0 R/XYZ 0 51.1956 null]endobj327 0 obj<</Annots 330 0 R/Parent 2 0 R/ID 704 0 R/StructParents 4/Contents 692 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 684 0 R/T1_1 686 0 R/T1_2 687 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj328 0 obj[10 0 R]endobj329 0 obj<</Rect[50.0 749.6 217.972 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_119.html#SEC148)/S/URI>>/Border[0 0 0]>>endobj330 0 obj[329 0 R 332 0 R 334 0 R 336 0 R 338 0 R 340 0 R 342 0 R 344 0 R 346 0 R 348 0 R 350 0 R 352 0 R 354 0 R 356 0 R 358 0 R 360 0 R 364 0 R 366 0 R 368 0 R 370 0 R 372 0 R 374 0 R 376 0 R 378 0 R 380 0 R 382 0 R 384 0 R 386 0 R 388 0 R 390 0 R 392 0 R 394 0 R 396 0 R 398 0 R 400 0 R 402 0 R 404 0 R 406 0 R]endobj331 0 obj[327 0 R/XYZ 0 747.2 null]endobj332 0 obj<</Rect[90.0 730.733 278.748 745.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_120.html#SEC149)/S/URI>>/Border[0 0 0]>>endobj333 0 obj[327 0 R/XYZ 0 728.333 null]endobj334 0 obj<</Rect[130.0 711.933 155.2 726.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_121.html#SEC150)/S/URI>>/Border[0 0 0]>>endobj335 0 obj[327 0 R/XYZ 0 709.533 null]endobj336 0 obj<</Rect[130.0 693.133 180.4 708.133]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_122.html#SEC151)/S/URI>>/Border[0 0 0]>>endobj337 0 obj[327 0 R/XYZ 0 690.733 null]endobj338 0 obj<</Rect[170.0 674.333 305.296 689.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_122.html#SEC152)/S/URI>>/Border[0 0 0]>>endobj339 0 obj[327 0 R/XYZ 0 671.933 null]endobj340 0 obj<</Rect[90.0 655.533 312.012 670.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_122.html#SEC153)/S/URI>>/Border[0 0 0]>>endobj341 0 obj[327 0 R/XYZ 0 653.133 null]endobj342 0 obj<</Rect[90.0 636.665 304.396 651.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_123.html#SEC154)/S/URI>>/Border[0 0 0]>>endobj343 0 obj[327 0 R/XYZ 0 634.265 null]endobj344 0 obj<</Rect[130.0 617.865 398.296 632.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_123.html#SEC155)/S/URI>>/Border[0 0 0]>>endobj345 0 obj[327 0 R/XYZ 0 615.465 null]endobj346 0 obj<</Rect[130.0 599.065 413.066 614.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_123.html#SEC156)/S/URI>>/Border[0 0 0]>>endobj347 0 obj[327 0 R/XYZ 0 596.665 null]endobj348 0 obj<</Rect[130.0 580.198 224.794 595.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_124.html#SEC157)/S/URI>>/Border[0 0 0]>>endobj349 0 obj[327 0 R/XYZ 0 577.798 null]endobj350 0 obj<</Rect[130.0 561.33 304.706 576.398]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_124.html#SEC158)/S/URI>>/Border[0 0 0]>>endobj351 0 obj[327 0 R/XYZ 0 558.93 null]endobj352 0 obj<</Rect[130.0 542.463 378.696 557.53]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_125.html#SEC159)/S/URI>>/Border[0 0 0]>>endobj353 0 obj[327 0 R/XYZ 0 540.063 null]endobj354 0 obj<</Rect[170.0 523.663 441.012 538.663]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_125.html#SEC160)/S/URI>>/Border[0 0 0]>>endobj355 0 obj[327 0 R/XYZ 0 521.263 null]endobj356 0 obj<</Rect[90.0 504.796 299.902 519.863]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_126.html#SEC161)/S/URI>>/Border[0 0 0]>>endobj357 0 obj[327 0 R/XYZ 0 502.396 null]endobj358 0 obj<</Rect[130.0 485.928 266.332 500.996]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_126.html#SEC162)/S/URI>>/Border[0 0 0]>>endobj359 0 obj[327 0 R/XYZ 0 483.528 null]endobj360 0 obj<</Rect[170.0 467.061 466.016 482.128]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_126.html#SEC163)/S/URI>>/Border[0 0 0]>>endobj361 0 obj[327 0 R/XYZ 0 464.661 null]endobj362 0 obj<</Limits[(Ô1™+X÷¢¡‘≈êlêÑSEC128)(Ô1™+X÷¢¡‘≈êlêÑSEC156)]/Names[(Ô1™+X÷¢¡‘≈êlêÑSEC128)284 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC129)286 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC13)41 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC130)288 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC131)290 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC132)292 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC133)296 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC134)298 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC135)300 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC136)302 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC137)304 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC138)306 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC139)308 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC14)43 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC140)310 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC141)312 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC142)314 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC143)316 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC144)318 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC145)320 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC146)322 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC147)324 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC148)326 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC149)331 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC15)45 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC150)333 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC151)335 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC152)337 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC153)339 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC154)341 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC155)343 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC156)345 0 R]>>endobj364 0 obj<</Rect[130.0 448.261 163.6 463.261]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_126.html#SEC164)/S/URI>>/Border[0 0 0]>>endobj365 0 obj[327 0 R/XYZ 0 445.861 null]endobj366 0 obj<</Rect[90.0 429.461 200.824 444.461]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_126.html#SEC165)/S/URI>>/Border[0 0 0]>>endobj367 0 obj[327 0 R/XYZ 0 427.061 null]endobj368 0 obj<</Rect[130.0 410.593 199.132 425.661]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_126.html#SEC166)/S/URI>>/Border[0 0 0]>>endobj369 0 obj[327 0 R/XYZ 0 408.193 null]endobj370 0 obj<</Rect[90.0 391.793 366.864 406.793]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_126.html#SEC167)/S/URI>>/Border[0 0 0]>>endobj371 0 obj[327 0 R/XYZ 0 389.393 null]endobj372 0 obj<</Rect[90.0 372.993 143.648 387.993]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_126.html#SEC168)/S/URI>>/Border[0 0 0]>>endobj373 0 obj[327 0 R/XYZ 0 370.593 null]endobj374 0 obj<</Rect[50.0 354.193 168.986 369.193]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC169)/S/URI>>/Border[0 0 0]>>endobj375 0 obj[327 0 R/XYZ 0 351.793 null]endobj376 0 obj<</Rect[90.0 335.393 384.756 350.393]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC170)/S/URI>>/Border[0 0 0]>>endobj377 0 obj[327 0 R/XYZ 0 332.993 null]endobj378 0 obj<</Rect[90.0 316.593 225.338 331.593]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC171)/S/URI>>/Border[0 0 0]>>endobj379 0 obj[327 0 R/XYZ 0 314.193 null]endobj380 0 obj<</Rect[90.0 297.793 235.446 312.793]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC172)/S/URI>>/Border[0 0 0]>>endobj381 0 obj[327 0 R/XYZ 0 295.393 null]endobj382 0 obj<</Rect[130.0 278.993 370.296 293.993]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC173)/S/URI>>/Border[0 0 0]>>endobj383 0 obj[327 0 R/XYZ 0 276.593 null]endobj384 0 obj<</Rect[170.0 260.193 259.46 275.193]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC174)/S/URI>>/Border[0 0 0]>>endobj385 0 obj[327 0 R/XYZ 0 257.793 null]endobj386 0 obj<</Rect[170.0 241.326 390.71 256.393]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC175)/S/URI>>/Border[0 0 0]>>endobj387 0 obj[327 0 R/XYZ 0 238.926 null]endobj388 0 obj<</Rect[130.0 222.526 180.4 237.526]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC176)/S/URI>>/Border[0 0 0]>>endobj389 0 obj[327 0 R/XYZ 0 220.126 null]endobj390 0 obj<</Rect[90.0 203.726 212.864 218.726]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC177)/S/URI>>/Border[0 0 0]>>endobj391 0 obj[327 0 R/XYZ 0 201.326 null]endobj392 0 obj<</Rect[130.0 184.859 196.024 199.926]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC178)/S/URI>>/Border[0 0 0]>>endobj393 0 obj[327 0 R/XYZ 0 182.459 null]endobj394 0 obj<</Rect[130.0 166.059 146.8 181.059]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC179)/S/URI>>/Border[0 0 0]>>endobj395 0 obj[327 0 R/XYZ 0 163.659 null]endobj396 0 obj<</Rect[50.0 147.259 204.756 162.259]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_128.html#SEC180)/S/URI>>/Border[0 0 0]>>endobj397 0 obj[327 0 R/XYZ 0 144.859 null]endobj398 0 obj<</Rect[90.0 128.459 174.0 143.459]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_129.html#SEC181)/S/URI>>/Border[0 0 0]>>endobj399 0 obj[327 0 R/XYZ 0 126.059 null]endobj400 0 obj<</Rect[130.0 109.659 264.4 124.659]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_129.html#SEC182)/S/URI>>/Border[0 0 0]>>endobj401 0 obj[327 0 R/XYZ 0 107.259 null]endobj402 0 obj<</Rect[90.0 90.8587 253.702 105.859]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC183)/S/URI>>/Border[0 0 0]>>endobj403 0 obj[327 0 R/XYZ 0 88.4587 null]endobj404 0 obj<</Rect[130.0 72.0587 257.134 87.0587]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC184)/S/URI>>/Border[0 0 0]>>endobj405 0 obj[327 0 R/XYZ 0 69.6587 null]endobj406 0 obj<</Rect[90.0 53.2587 334.202 68.2587]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC185)/S/URI>>/Border[0 0 0]>>endobj407 0 obj[327 0 R/XYZ 0 50.8587 null]endobj408 0 obj<</Annots 411 0 R/Parent 2 0 R/ID 704 0 R/StructParents 5/Contents 693 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 684 0 R/T1_1 686 0 R/T1_2 687 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj409 0 obj[10 0 R]endobj410 0 obj<</Rect[130.0 749.6 155.2 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC186)/S/URI>>/Border[0 0 0]>>endobj411 0 obj[410 0 R 413 0 R 415 0 R 417 0 R 419 0 R 421 0 R 423 0 R 425 0 R 427 0 R 429 0 R 433 0 R 435 0 R 437 0 R 439 0 R 441 0 R 443 0 R 445 0 R 447 0 R 449 0 R 451 0 R 453 0 R 455 0 R 457 0 R 459 0 R 461 0 R 463 0 R 465 0 R 467 0 R 469 0 R 471 0 R 473 0 R 475 0 R 477 0 R 479 0 R 481 0 R 483 0 R 485 0 R 487 0 R]endobj412 0 obj[408 0 R/XYZ 0 747.2 null]endobj413 0 obj<</Rect[130.0 730.8 163.6 745.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC187)/S/URI>>/Border[0 0 0]>>endobj414 0 obj[408 0 R/XYZ 0 728.4 null]endobj415 0 obj<</Rect[130.0 712.0 163.6 727.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC188)/S/URI>>/Border[0 0 0]>>endobj416 0 obj[408 0 R/XYZ 0 709.6 null]endobj417 0 obj<</Rect[130.0 693.2 191.446 708.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC189)/S/URI>>/Border[0 0 0]>>endobj418 0 obj[408 0 R/XYZ 0 690.8 null]endobj419 0 obj<</Rect[90.0 674.4 191.486 689.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC190)/S/URI>>/Border[0 0 0]>>endobj420 0 obj[408 0 R/XYZ 0 672.0 null]endobj421 0 obj<</Rect[130.0 655.6 290.986 670.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC191)/S/URI>>/Border[0 0 0]>>endobj422 0 obj[408 0 R/XYZ 0 653.2 null]endobj423 0 obj<</Rect[170.0 636.8 309.202 651.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC192)/S/URI>>/Border[0 0 0]>>endobj424 0 obj[408 0 R/XYZ 0 634.4 null]endobj425 0 obj<</Rect[170.0 618.0 361.716 633.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC193)/S/URI>>/Border[0 0 0]>>endobj426 0 obj[408 0 R/XYZ 0 615.6 null]endobj427 0 obj<</Rect[170.0 599.2 374.526 614.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC194)/S/URI>>/Border[0 0 0]>>endobj428 0 obj[408 0 R/XYZ 0 596.8 null]endobj429 0 obj<</Rect[90.0 580.4 348.202 595.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC195)/S/URI>>/Border[0 0 0]>>endobj430 0 obj[408 0 R/XYZ 0 578.0 null]endobj431 0 obj<</Limits[(Ô1™+X÷¢¡‘≈êlêÑSEC157)(Ô1™+X÷¢¡‘≈êlêÑSEC185)]/Names[(Ô1™+X÷¢¡‘≈êlêÑSEC157)347 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC158)349 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC159)351 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC16)47 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC160)353 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC161)355 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC162)357 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC163)359 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC164)361 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC165)365 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC166)367 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC167)369 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC168)371 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC169)373 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC17)49 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC170)375 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC171)377 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC172)379 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC173)381 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC174)383 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC175)385 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC176)387 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC177)389 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC178)391 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC179)393 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC18)51 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC180)395 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC181)397 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC182)399 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC183)401 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC184)403 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC185)405 0 R]>>endobj433 0 obj<</Rect[130.0 561.6 297.216 576.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC196)/S/URI>>/Border[0 0 0]>>endobj434 0 obj[408 0 R/XYZ 0 559.2 null]endobj435 0 obj<</Rect[130.0 542.733 382.07 557.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC197)/S/URI>>/Border[0 0 0]>>endobj436 0 obj[408 0 R/XYZ 0 540.333 null]endobj437 0 obj<</Rect[170.0 523.865 402.148 538.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC198)/S/URI>>/Border[0 0 0]>>endobj438 0 obj[408 0 R/XYZ 0 521.465 null]endobj439 0 obj<</Rect[170.0 505.065 254.0 520.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC199)/S/URI>>/Border[0 0 0]>>endobj440 0 obj[408 0 R/XYZ 0 502.665 null]endobj441 0 obj<</Rect[170.0 486.265 296.0 501.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC200)/S/URI>>/Border[0 0 0]>>endobj442 0 obj[408 0 R/XYZ 0 483.865 null]endobj443 0 obj<</Rect[170.0 467.465 270.8 482.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC201)/S/URI>>/Border[0 0 0]>>endobj444 0 obj[408 0 R/XYZ 0 465.065 null]endobj445 0 obj<</Rect[90.0 448.665 356.336 463.665]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_131.html#SEC202)/S/URI>>/Border[0 0 0]>>endobj446 0 obj[408 0 R/XYZ 0 446.265 null]endobj447 0 obj<</Rect[90.0 429.865 308.148 444.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_132.html#SEC203)/S/URI>>/Border[0 0 0]>>endobj448 0 obj[408 0 R/XYZ 0 427.465 null]endobj449 0 obj<</Rect[50.0 411.065 227.688 426.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC204)/S/URI>>/Border[0 0 0]>>endobj450 0 obj[408 0 R/XYZ 0 408.665 null]endobj451 0 obj<</Rect[90.0 392.265 205.472 407.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC205)/S/URI>>/Border[0 0 0]>>endobj452 0 obj[408 0 R/XYZ 0 389.865 null]endobj453 0 obj<</Rect[130.0 373.465 473.728 388.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC206)/S/URI>>/Border[0 0 0]>>endobj454 0 obj[408 0 R/XYZ 0 371.065 null]endobj455 0 obj<</Rect[130.0 354.665 500.958 369.665]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC207)/S/URI>>/Border[0 0 0]>>endobj456 0 obj[408 0 R/XYZ 0 352.265 null]endobj457 0 obj<</Rect[90.0 335.865 253.324 350.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC208)/S/URI>>/Border[0 0 0]>>endobj458 0 obj[408 0 R/XYZ 0 333.465 null]endobj459 0 obj<</Rect[130.0 317.065 203.5 332.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC209)/S/URI>>/Border[0 0 0]>>endobj460 0 obj[408 0 R/XYZ 0 314.665 null]endobj461 0 obj<</Rect[130.0 298.265 359.446 313.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC210)/S/URI>>/Border[0 0 0]>>endobj462 0 obj[408 0 R/XYZ 0 295.865 null]endobj463 0 obj<</Rect[130.0 279.465 316.228 294.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC211)/S/URI>>/Border[0 0 0]>>endobj464 0 obj[408 0 R/XYZ 0 277.065 null]endobj465 0 obj<</Rect[90.0 260.665 353.998 275.665]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC212)/S/URI>>/Border[0 0 0]>>endobj466 0 obj[408 0 R/XYZ 0 258.265 null]endobj467 0 obj<</Rect[90.0 241.865 317.892 256.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC213)/S/URI>>/Border[0 0 0]>>endobj468 0 obj[408 0 R/XYZ 0 239.465 null]endobj469 0 obj<</Rect[130.0 222.998 312.854 238.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC214)/S/URI>>/Border[0 0 0]>>endobj470 0 obj[408 0 R/XYZ 0 220.598 null]endobj471 0 obj<</Rect[170.0 204.13 276.316 219.198]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC215)/S/URI>>/Border[0 0 0]>>endobj472 0 obj[408 0 R/XYZ 0 201.73 null]endobj473 0 obj<</Rect[130.0 185.263 329.654 200.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC216)/S/URI>>/Border[0 0 0]>>endobj474 0 obj[408 0 R/XYZ 0 182.863 null]endobj475 0 obj<</Rect[130.0 166.396 321.254 181.463]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC217)/S/URI>>/Border[0 0 0]>>endobj476 0 obj[408 0 R/XYZ 0 163.996 null]endobj477 0 obj<</Rect[170.0 147.596 330.202 162.596]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC218)/S/URI>>/Border[0 0 0]>>endobj478 0 obj[408 0 R/XYZ 0 145.196 null]endobj479 0 obj<</Rect[170.0 128.796 266.824 143.796]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC219)/S/URI>>/Border[0 0 0]>>endobj480 0 obj[408 0 R/XYZ 0 126.396 null]endobj481 0 obj<</Rect[130.0 109.996 192.972 124.996]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC220)/S/URI>>/Border[0 0 0]>>endobj482 0 obj[408 0 R/XYZ 0 107.596 null]endobj483 0 obj<</Rect[130.0 91.1956 374.188 106.196]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC221)/S/URI>>/Border[0 0 0]>>endobj484 0 obj[408 0 R/XYZ 0 88.7956 null]endobj485 0 obj<</Rect[130.0 72.3956 293.688 87.3956]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC222)/S/URI>>/Border[0 0 0]>>endobj486 0 obj[408 0 R/XYZ 0 69.9956 null]endobj487 0 obj<</Rect[130.0 53.5956 405.688 68.5956]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC223)/S/URI>>/Border[0 0 0]>>endobj488 0 obj[408 0 R/XYZ 0 51.1956 null]endobj489 0 obj<</Annots 492 0 R/Parent 2 0 R/ID 704 0 R/StructParents 6/Contents 694 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 684 0 R/T1_1 686 0 R/T1_2 687 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj490 0 obj[10 0 R]endobj491 0 obj<</Rect[130.0 749.6 275.376 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC224)/S/URI>>/Border[0 0 0]>>endobj492 0 obj[491 0 R 494 0 R 496 0 R 498 0 R 502 0 R 504 0 R 506 0 R 508 0 R 510 0 R 512 0 R 514 0 R 516 0 R 518 0 R 520 0 R 522 0 R 524 0 R 526 0 R 528 0 R 530 0 R 532 0 R 534 0 R 536 0 R 538 0 R 540 0 R 542 0 R 544 0 R 546 0 R 548 0 R 550 0 R 552 0 R 554 0 R 556 0 R 558 0 R 560 0 R 562 0 R 564 0 R 568 0 R 570 0 R]endobj493 0 obj[489 0 R/XYZ 0 747.2 null]endobj494 0 obj<</Rect[90.0 730.8 395.62 745.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC225)/S/URI>>/Border[0 0 0]>>endobj495 0 obj[489 0 R/XYZ 0 728.4 null]endobj496 0 obj<</Rect[130.0 712.0 236.134 727.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC226)/S/URI>>/Border[0 0 0]>>endobj497 0 obj[489 0 R/XYZ 0 709.6 null]endobj498 0 obj<</Rect[170.0 693.2 204.23 708.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC227)/S/URI>>/Border[0 0 0]>>endobj499 0 obj[489 0 R/XYZ 0 690.8 null]endobj500 0 obj<</Limits[(Ô1™+X÷¢¡‘≈êlêÑSEC186)(Ô1™+X÷¢¡‘≈êlêÑSEC213)]/Names[(Ô1™+X÷¢¡‘≈êlêÑSEC186)407 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC187)412 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC188)414 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC189)416 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC19)53 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC190)418 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC191)420 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC192)422 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC193)424 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC194)426 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC195)428 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC196)430 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC197)434 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC198)436 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC199)438 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC2)19 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC20)55 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC200)440 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC201)442 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC202)444 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC203)446 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC204)448 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC205)450 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC206)452 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC207)454 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC208)456 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC209)458 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC21)57 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC210)460 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC211)462 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC212)464 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC213)466 0 R]>>endobj502 0 obj<</Rect[170.0 674.4 249.324 689.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC228)/S/URI>>/Border[0 0 0]>>endobj503 0 obj[489 0 R/XYZ 0 672.0 null]endobj504 0 obj<</Rect[170.0 655.6 289.392 670.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC229)/S/URI>>/Border[0 0 0]>>endobj505 0 obj[489 0 R/XYZ 0 653.2 null]endobj506 0 obj<</Rect[170.0 636.8 284.702 651.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC230)/S/URI>>/Border[0 0 0]>>endobj507 0 obj[489 0 R/XYZ 0 634.4 null]endobj508 0 obj<</Rect[170.0 618.0 279.298 633.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC231)/S/URI>>/Border[0 0 0]>>endobj509 0 obj[489 0 R/XYZ 0 615.6 null]endobj510 0 obj<</Rect[170.0 599.2 317.784 614.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC232)/S/URI>>/Border[0 0 0]>>endobj511 0 obj[489 0 R/XYZ 0 596.8 null]endobj512 0 obj<</Rect[170.0 580.4 297.54 595.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC233)/S/URI>>/Border[0 0 0]>>endobj513 0 obj[489 0 R/XYZ 0 578.0 null]endobj514 0 obj<</Rect[130.0 561.6 303.04 576.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC234)/S/URI>>/Border[0 0 0]>>endobj515 0 obj[489 0 R/XYZ 0 559.2 null]endobj516 0 obj<</Rect[170.0 542.8 378.824 557.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC235)/S/URI>>/Border[0 0 0]>>endobj517 0 obj[489 0 R/XYZ 0 540.4 null]endobj518 0 obj<</Rect[170.0 524.0 335.676 539.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC236)/S/URI>>/Border[0 0 0]>>endobj519 0 obj[489 0 R/XYZ 0 521.6 null]endobj520 0 obj<</Rect[170.0 505.2 330.202 520.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC237)/S/URI>>/Border[0 0 0]>>endobj521 0 obj[489 0 R/XYZ 0 502.8 null]endobj522 0 obj<</Rect[170.0 486.4 432.5 501.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC238)/S/URI>>/Border[0 0 0]>>endobj523 0 obj[489 0 R/XYZ 0 484.0 null]endobj524 0 obj<</Rect[170.0 467.6 331.77 482.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC239)/S/URI>>/Border[0 0 0]>>endobj525 0 obj[489 0 R/XYZ 0 465.2 null]endobj526 0 obj<</Rect[170.0 448.8 368.31 463.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC240)/S/URI>>/Border[0 0 0]>>endobj527 0 obj[489 0 R/XYZ 0 446.4 null]endobj528 0 obj<</Rect[90.0 430.0 516.972 445.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC241)/S/URI>>/Border[0 0 0]>>endobj529 0 obj[489 0 R/XYZ 0 427.6 null]endobj530 0 obj<</Rect[130.0 411.2 319.77 426.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC242)/S/URI>>/Border[0 0 0]>>endobj531 0 obj[489 0 R/XYZ 0 408.8 null]endobj532 0 obj<</Rect[130.0 392.4 373.376 407.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC243)/S/URI>>/Border[0 0 0]>>endobj533 0 obj[489 0 R/XYZ 0 390.0 null]endobj534 0 obj<</Rect[130.0 373.6 424.714 388.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC244)/S/URI>>/Border[0 0 0]>>endobj535 0 obj[489 0 R/XYZ 0 371.2 null]endobj536 0 obj<</Rect[130.0 354.8 293.688 369.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC245)/S/URI>>/Border[0 0 0]>>endobj537 0 obj[489 0 R/XYZ 0 352.4 null]endobj538 0 obj<</Rect[130.0 336.0 350.066 351.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC246)/S/URI>>/Border[0 0 0]>>endobj539 0 obj[489 0 R/XYZ 0 333.6 null]endobj540 0 obj<</Rect[130.0 317.2 279.674 332.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC247)/S/URI>>/Border[0 0 0]>>endobj541 0 obj[489 0 R/XYZ 0 314.8 null]endobj542 0 obj<</Rect[130.0 298.333 349.506 313.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC248)/S/URI>>/Border[0 0 0]>>endobj543 0 obj[489 0 R/XYZ 0 295.933 null]endobj544 0 obj<</Rect[50.0 279.533 173.634 294.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_134.html#SEC249)/S/URI>>/Border[0 0 0]>>endobj545 0 obj[489 0 R/XYZ 0 277.133 null]endobj546 0 obj<</Rect[90.0 260.733 170.5 275.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_135.html#SEC250)/S/URI>>/Border[0 0 0]>>endobj547 0 obj[489 0 R/XYZ 0 258.333 null]endobj548 0 obj<</Rect[90.0 241.933 217.946 256.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_136.html#SEC251)/S/URI>>/Border[0 0 0]>>endobj549 0 obj[489 0 R/XYZ 0 239.533 null]endobj550 0 obj<</Rect[130.0 223.065 232.816 238.133]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_137.html#SEC252)/S/URI>>/Border[0 0 0]>>endobj551 0 obj[489 0 R/XYZ 0 220.665 null]endobj552 0 obj<</Rect[130.0 204.265 188.8 219.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_138.html#SEC253)/S/URI>>/Border[0 0 0]>>endobj553 0 obj[489 0 R/XYZ 0 201.865 null]endobj554 0 obj<</Rect[130.0 185.465 158.784 200.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_139.html#SEC254)/S/URI>>/Border[0 0 0]>>endobj555 0 obj[489 0 R/XYZ 0 183.065 null]endobj556 0 obj<</Rect[130.0 166.598 302.354 181.665]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html#SEC255)/S/URI>>/Border[0 0 0]>>endobj557 0 obj[489 0 R/XYZ 0 164.198 null]endobj558 0 obj<</Rect[90.0 147.798 319.39 162.798]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html#SEC256)/S/URI>>/Border[0 0 0]>>endobj559 0 obj[489 0 R/XYZ 0 145.398 null]endobj560 0 obj<</Rect[130.0 128.998 216.702 143.998]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html#SEC257)/S/URI>>/Border[0 0 0]>>endobj561 0 obj[489 0 R/XYZ 0 126.598 null]endobj562 0 obj<</Rect[170.0 110.198 305.73 125.198]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html#SEC258)/S/URI>>/Border[0 0 0]>>endobj563 0 obj[489 0 R/XYZ 0 107.798 null]endobj564 0 obj<</Rect[170.0 91.3978 327.458 106.398]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html#SEC259)/S/URI>>/Border[0 0 0]>>endobj565 0 obj[489 0 R/XYZ 0 88.9978 null]endobj566 0 obj<</Limits[(Ô1™+X÷¢¡‘≈êlêÑSEC214)(Ô1™+X÷¢¡‘≈êlêÑSEC242)]/Names[(Ô1™+X÷¢¡‘≈êlêÑSEC214)468 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC215)470 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC216)472 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC217)474 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC218)476 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC219)478 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC22)59 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC220)480 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC221)482 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC222)484 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC223)486 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC224)488 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC225)493 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC226)495 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC227)497 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC228)499 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC229)503 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC23)61 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC230)505 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC231)507 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC232)509 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC233)511 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC234)513 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC235)515 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC236)517 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC237)519 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC238)521 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC239)523 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC24)63 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC240)525 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC241)527 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC242)529 0 R]>>endobj568 0 obj<</Rect[170.0 72.5978 205.784 87.5978]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html#SEC260)/S/URI>>/Border[0 0 0]>>endobj569 0 obj[489 0 R/XYZ 0 70.1978 null]endobj570 0 obj<</Rect[170.0 53.7978 309.972 68.7978]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html#SEC261)/S/URI>>/Border[0 0 0]>>endobj571 0 obj[489 0 R/XYZ 0 51.3978 null]endobj572 0 obj<</Annots 575 0 R/Parent 2 0 R/ID 704 0 R/StructParents 7/Contents 695 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 684 0 R/T1_1 686 0 R/T1_2 687 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj573 0 obj[10 0 R]endobj574 0 obj<</Rect[130.0 749.6 173.54 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html#SEC262)/S/URI>>/Border[0 0 0]>>endobj575 0 obj[574 0 R 577 0 R 579 0 R 581 0 R 583 0 R 585 0 R 587 0 R 589 0 R 591 0 R 593 0 R 595 0 R 597 0 R 599 0 R 601 0 R 603 0 R 605 0 R 607 0 R 609 0 R 611 0 R 613 0 R 615 0 R 617 0 R 619 0 R 621 0 R 623 0 R 625 0 R 627 0 R 629 0 R 631 0 R 633 0 R 637 0 R 639 0 R 641 0 R 643 0 R 645 0 R 647 0 R 649 0 R 651 0 R]endobj576 0 obj[572 0 R/XYZ 0 747.2 null]endobj577 0 obj<</Rect[130.0 730.8 256.756 745.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html#SEC263)/S/URI>>/Border[0 0 0]>>endobj578 0 obj[572 0 R/XYZ 0 728.4 null]endobj579 0 obj<</Rect[50.0 712.0 302.0 727.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_141.html#SEC264)/S/URI>>/Border[0 0 0]>>endobj580 0 obj[572 0 R/XYZ 0 709.6 null]endobj581 0 obj<</Rect[90.0 693.2 343.526 708.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_141.html#SEC265)/S/URI>>/Border[0 0 0]>>endobj582 0 obj[572 0 R/XYZ 0 690.8 null]endobj583 0 obj<</Rect[90.0 674.4 269.256 689.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_141.html#SEC266)/S/URI>>/Border[0 0 0]>>endobj584 0 obj[572 0 R/XYZ 0 672.0 null]endobj585 0 obj<</Rect[90.0 655.6 246.702 670.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_141.html#SEC267)/S/URI>>/Border[0 0 0]>>endobj586 0 obj[572 0 R/XYZ 0 653.2 null]endobj587 0 obj<</Rect[90.0 636.8 233.5 651.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_141.html#SEC268)/S/URI>>/Border[0 0 0]>>endobj588 0 obj[572 0 R/XYZ 0 634.4 null]endobj589 0 obj<</Rect[90.0 618.0 315.554 633.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_141.html#SEC269)/S/URI>>/Border[0 0 0]>>endobj590 0 obj[572 0 R/XYZ 0 615.6 null]endobj591 0 obj<</Rect[90.0 599.133 424.432 614.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_141.html#SEC270)/S/URI>>/Border[0 0 0]>>endobj592 0 obj[572 0 R/XYZ 0 596.733 null]endobj593 0 obj<</Rect[50.0 580.333 207.5 595.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC271)/S/URI>>/Border[0 0 0]>>endobj594 0 obj[572 0 R/XYZ 0 577.933 null]endobj595 0 obj<</Rect[90.0 561.533 205.486 576.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC272)/S/URI>>/Border[0 0 0]>>endobj596 0 obj[572 0 R/XYZ 0 559.133 null]endobj597 0 obj<</Rect[130.0 542.733 258.674 557.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC273)/S/URI>>/Border[0 0 0]>>endobj598 0 obj[572 0 R/XYZ 0 540.333 null]endobj599 0 obj<</Rect[130.0 523.933 277.546 538.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC274)/S/URI>>/Border[0 0 0]>>endobj600 0 obj[572 0 R/XYZ 0 521.533 null]endobj601 0 obj<</Rect[90.0 505.133 278.944 520.133]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC275)/S/URI>>/Border[0 0 0]>>endobj602 0 obj[572 0 R/XYZ 0 502.733 null]endobj603 0 obj<</Rect[90.0 486.333 268.094 501.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC276)/S/URI>>/Border[0 0 0]>>endobj604 0 obj[572 0 R/XYZ 0 483.933 null]endobj605 0 obj<</Rect[90.0 467.533 353.256 482.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC277)/S/URI>>/Border[0 0 0]>>endobj606 0 obj[572 0 R/XYZ 0 465.133 null]endobj607 0 obj<</Rect[130.0 448.733 207.378 463.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC278)/S/URI>>/Border[0 0 0]>>endobj608 0 obj[572 0 R/XYZ 0 446.333 null]endobj609 0 obj<</Rect[130.0 429.933 393.62 444.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC279)/S/URI>>/Border[0 0 0]>>endobj610 0 obj[572 0 R/XYZ 0 427.533 null]endobj611 0 obj<</Rect[130.0 411.133 265.338 426.133]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC280)/S/URI>>/Border[0 0 0]>>endobj612 0 obj[572 0 R/XYZ 0 408.733 null]endobj613 0 obj<</Rect[130.0 392.333 208.554 407.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC281)/S/URI>>/Border[0 0 0]>>endobj614 0 obj[572 0 R/XYZ 0 389.933 null]endobj615 0 obj<</Rect[130.0 373.533 329.486 388.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC282)/S/URI>>/Border[0 0 0]>>endobj616 0 obj[572 0 R/XYZ 0 371.133 null]endobj617 0 obj<</Rect[90.0 354.733 168.568 369.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC283)/S/URI>>/Border[0 0 0]>>endobj618 0 obj[572 0 R/XYZ 0 352.333 null]endobj619 0 obj<</Rect[130.0 335.933 427.052 350.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC284)/S/URI>>/Border[0 0 0]>>endobj620 0 obj[572 0 R/XYZ 0 333.533 null]endobj621 0 obj<</Rect[130.0 317.133 245.514 332.133]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC285)/S/URI>>/Border[0 0 0]>>endobj622 0 obj[572 0 R/XYZ 0 314.733 null]endobj623 0 obj<</Rect[130.0 298.333 200.378 313.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC286)/S/URI>>/Border[0 0 0]>>endobj624 0 obj[572 0 R/XYZ 0 295.933 null]endobj625 0 obj<</Rect[130.0 279.533 277.742 294.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC287)/S/URI>>/Border[0 0 0]>>endobj626 0 obj[572 0 R/XYZ 0 277.133 null]endobj627 0 obj<</Rect[90.0 260.733 327.972 275.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC288)/S/URI>>/Border[0 0 0]>>endobj628 0 obj[572 0 R/XYZ 0 258.333 null]endobj629 0 obj<</Rect[90.0 241.933 249.054 256.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC289)/S/URI>>/Border[0 0 0]>>endobj630 0 obj[572 0 R/XYZ 0 239.533 null]endobj631 0 obj<</Rect[90.0 223.133 382.768 238.133]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC290)/S/URI>>/Border[0 0 0]>>endobj632 0 obj[572 0 R/XYZ 0 220.733 null]endobj633 0 obj<</Rect[90.0 204.333 425.174 219.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC291)/S/URI>>/Border[0 0 0]>>endobj634 0 obj[572 0 R/XYZ 0 201.933 null]endobj635 0 obj<</Limits[(Ô1™+X÷¢¡‘≈êlêÑSEC243)(Ô1™+X÷¢¡‘≈êlêÑSEC271)]/Names[(Ô1™+X÷¢¡‘≈êlêÑSEC243)531 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC244)533 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC245)535 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC246)537 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC247)539 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC248)541 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC249)543 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC25)65 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC250)545 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC251)547 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC252)549 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC253)551 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC254)553 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC255)555 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC256)557 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC257)559 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC258)561 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC259)563 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC26)67 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC260)565 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC261)569 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC262)571 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC263)576 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC264)578 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC265)580 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC266)582 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC267)584 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC268)586 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC269)588 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC27)69 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC270)590 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC271)592 0 R]>>endobj636 0 obj<</Limits[(Ô1™+X÷¢¡‘≈êlêÑSEC272)(Ô1™+X÷¢¡‘≈êlêÑSEC38)]/Names[(Ô1™+X÷¢¡‘≈êlêÑSEC272)594 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC273)596 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC274)598 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC275)600 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC276)602 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC277)604 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC278)606 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC279)608 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC28)71 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC280)610 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC281)612 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC282)614 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC283)616 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC284)618 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC285)620 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC286)622 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC287)624 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC288)626 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC289)628 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC29)73 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC290)630 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC291)632 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC292)634 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC293)638 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC294)640 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC295)642 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC296)644 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC297)646 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC298)648 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC299)650 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC3)21 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC30)75 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC300)652 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC301)657 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC302)659 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC303)661 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC304)663 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC305)665 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC306)667 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC307)669 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC308)671 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC309)673 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC31)77 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC310)675 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC311)677 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC312)679 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC313)681 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC32)79 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC33)81 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC34)83 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC35)88 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC36)90 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC37)92 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC38)94 0 R]>>endobj637 0 obj<</Rect[130.0 185.533 430.972 200.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC292)/S/URI>>/Border[0 0 0]>>endobj638 0 obj[572 0 R/XYZ 0 183.133 null]endobj639 0 obj<</Rect[130.0 166.733 244.31 181.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC293)/S/URI>>/Border[0 0 0]>>endobj640 0 obj[572 0 R/XYZ 0 164.333 null]endobj641 0 obj<</Rect[90.0 147.933 462.54 162.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC294)/S/URI>>/Border[0 0 0]>>endobj642 0 obj[572 0 R/XYZ 0 145.533 null]endobj643 0 obj<</Rect[130.0 129.133 348.54 144.133]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC295)/S/URI>>/Border[0 0 0]>>endobj644 0 obj[572 0 R/XYZ 0 126.733 null]endobj645 0 obj<</Rect[170.0 110.333 276.96 125.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC296)/S/URI>>/Border[0 0 0]>>endobj646 0 obj[572 0 R/XYZ 0 107.933 null]endobj647 0 obj<</Rect[90.0 91.5326 283.662 106.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC297)/S/URI>>/Border[0 0 0]>>endobj648 0 obj[572 0 R/XYZ 0 89.1326 null]endobj649 0 obj<</Rect[90.0 72.6652 378.386 87.7326]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC298)/S/URI>>/Border[0 0 0]>>endobj650 0 obj[572 0 R/XYZ 0 70.2652 null]endobj651 0 obj<</Rect[90.0 53.8652 274.338 68.8652]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC299)/S/URI>>/Border[0 0 0]>>endobj652 0 obj[572 0 R/XYZ 0 51.4652 null]endobj653 0 obj<</Annots 656 0 R/Parent 2 0 R/ID 704 0 R/StructParents 8/Contents 696 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 684 0 R/T1_1 686 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj654 0 obj[10 0 R]endobj655 0 obj<</Rect[90.0 749.6 282.878 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC300)/S/URI>>/Border[0 0 0]>>endobj656 0 obj[655 0 R 658 0 R 660 0 R 662 0 R 664 0 R 666 0 R 668 0 R 670 0 R 672 0 R 674 0 R 676 0 R 678 0 R 680 0 R 682 0 R 683 0 R]endobj657 0 obj[653 0 R/XYZ 0 747.2 null]endobj658 0 obj<</Rect[130.0 730.8 239.256 745.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC301)/S/URI>>/Border[0 0 0]>>endobj659 0 obj[653 0 R/XYZ 0 728.4 null]endobj660 0 obj<</Rect[170.0 712.0 233.392 727.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC302)/S/URI>>/Border[0 0 0]>>endobj661 0 obj[653 0 R/XYZ 0 709.6 null]endobj662 0 obj<</Rect[170.0 693.2 263.716 708.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC303)/S/URI>>/Border[0 0 0]>>endobj663 0 obj[653 0 R/XYZ 0 690.8 null]endobj664 0 obj<</Rect[130.0 674.4 184.432 689.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC304)/S/URI>>/Border[0 0 0]>>endobj665 0 obj[653 0 R/XYZ 0 672.0 null]endobj666 0 obj<</Rect[90.0 655.6 391.364 670.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC305)/S/URI>>/Border[0 0 0]>>endobj667 0 obj[653 0 R/XYZ 0 653.2 null]endobj668 0 obj<</Rect[130.0 636.8 276.216 651.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC306)/S/URI>>/Border[0 0 0]>>endobj669 0 obj[653 0 R/XYZ 0 634.4 null]endobj670 0 obj<</Rect[130.0 618.0 341.512 633.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC307)/S/URI>>/Border[0 0 0]>>endobj671 0 obj[653 0 R/XYZ 0 615.6 null]endobj672 0 obj<</Rect[130.0 599.2 311.566 614.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC308)/S/URI>>/Border[0 0 0]>>endobj673 0 obj[653 0 R/XYZ 0 596.8 null]endobj674 0 obj<</Rect[130.0 580.4 226.054 595.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC309)/S/URI>>/Border[0 0 0]>>endobj675 0 obj[653 0 R/XYZ 0 578.0 null]endobj676 0 obj<</Rect[130.0 561.6 387.796 576.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC310)/S/URI>>/Border[0 0 0]>>endobj677 0 obj[653 0 R/XYZ 0 559.2 null]endobj678 0 obj<</Rect[130.0 542.8 288.284 557.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC311)/S/URI>>/Border[0 0 0]>>endobj679 0 obj[653 0 R/XYZ 0 540.4 null]endobj680 0 obj<</Rect[130.0 524.0 205.04 539.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC312)/S/URI>>/Border[0 0 0]>>endobj681 0 obj[653 0 R/XYZ 0 521.6 null]endobj682 0 obj<</Rect[50.0 505.2 132.04 520.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html#SEC313)/S/URI>>/Border[0 0 0]>>endobj683 0 obj<</Rect[350.62 432.4 404.296 447.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://wwwcn.cern.ch/dci/texi2html/)/S/URI>>/Border[0 0 0]>>endobj684 0 obj<</Subtype/Type1/BaseFont/Times-Roman/Encoding/WinAnsiEncoding/Type/Font>>endobj685 0 obj<</Subtype/Type1/BaseFont/Helvetica-Bold/Encoding/WinAnsiEncoding/Type/Font>>endobj686 0 obj<</Subtype/Type1/BaseFont/ZapfDingbats/Type/Font>>endobj687 0 obj<</Subtype/Type1/BaseFont/Courier/Encoding/WinAnsiEncoding/Type/Font>>endobj688 0 obj<</Length 7961>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Table of Contents)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
24.7692 0 0 24.7692 10 725.2968 Tm
(An Introduction to Scheme and its )Tj
0 -1.2 TD
(Implementation)Tj
/T1_2 1 Tf
7 0 0 7 35.713 656.5294 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
50 654.413 m
105.202 654.413 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 656.5294 Tm
(Overview)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 75.139 637.7294 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 635.613 m
325.256 635.613 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 637.7294 Tm
(Scheme: A Small But Powerful Language)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 75.139 618.9294 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 616.813 m
217.554 616.813 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 618.9294 Tm
(Who Is this Book For?)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 75.139 600.1294 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 598.013 m
171.256 598.013 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 600.1294 Tm
(Why Scheme?)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 75.139 581.3294 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 579.213 m
201.972 579.213 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 581.3294 Tm
(Why Scheme Now?)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 75.139 562.5294 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 560.413 m
216 560.413 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 562.5294 Tm
(What this Book Is Not)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 75.139 543.7294 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 541.613 m
214.054 541.613 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 543.7294 Tm
(Structure of this Book)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 524.9294 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 522.813 m
119.216 522.813 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 524.9294 Tm
(Introduction)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 75.139 506.1294 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 504.013 m
244.742 504.013 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 506.1294 Tm
(What is Scheme? \(Hunk A\))Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 75.139 487.3294 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 485.213 m
219.864 485.213 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 487.3294 Tm
(Basic Scheme Features)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 115.923 468.5294 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 466.413 m
296.838 466.413 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 468.5294 Tm
(Code Consists of Expressions)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 155.923 449.7294 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 447.613 m
356.634 447.613 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 449.7294 Tm
(Parenthesized Prefix Expressions)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 155.923 430.9294 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 428.813 m
483.782 428.813 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 430.9294 Tm
(Expressions Return Values, But May Have Side-Effects)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 155.923 412.1294 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 410.013 m
366.336 410.013 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 412.1294 Tm
(Defining Variables and Procedures)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 155.923 393.3294 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 391.213 m
343.782 391.213 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 393.3294 Tm
(Most Operators are Procedures)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 155.923 374.5294 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 372.413 m
328.284 372.413 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 374.5294 Tm
(Definitions vs. Assignments)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 155.923 355.7294 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 353.613 m
250.5 353.613 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 355.7294 Tm
(Special Forms)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 155.923 336.9294 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 334.813 m
364.81 334.813 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 336.9294 Tm
(Control Structures are Expressions)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 115.923 318.062 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 315.945 m
247.81 315.945 l
S
0.428 w 
247.81 316.777 m
264.61 316.777 l
S
0.706 w 
264.61 315.945 m
291.826 315.945 l
S
0.428 w 
291.826 316.777 m
308.626 316.777 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 318.062 Tm
(The Boolean Values )Tj
/T1_3 1 Tf
(#t)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(#f)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
7 0 0 7 115.923 299.1946 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
130 297.078 m
347.784 297.078 l
S
0.428 w 
347.784 297.909 m
381.384 297.909 l
S
0.706 w 
381.384 297.078 m
388.384 297.078 l
S
0.428 w 
388.384 297.909 m
413.584 297.909 l
S
0.706 w 
413.584 297.078 m
444.3 297.078 l
S
0.428 w 
444.3 297.909 m
461.1 297.909 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 299.1946 Tm
(Some Other Control-Flow Constructs: )Tj
/T1_3 1 Tf
(cond)Tj
/T1_0 1 Tf
(, )Tj
/T1_3 1 Tf
(and)Tj
/T1_0 1 Tf
(, and )Tj
/T1_3 1 Tf
(or)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
7 0 0 7 155.923 280.3272 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 279.042 m
203.6 279.042 l
S
0 0 1 rg
BT
/T1_3 1 Tf
14 0 0 14 170 280.3272 Tm
(cond)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
7 0 0 7 155.923 261.5272 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 260.242 m
195.2 260.242 l
S
0.706 w 
195.2 259.41 m
222.416 259.41 l
S
0.428 w 
222.416 260.242 m
239.216 260.242 l
S
0 0 1 rg
BT
/T1_3 1 Tf
14 0 0 14 170 261.5272 Tm
(and)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(or)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
7 0 0 7 155.923 242.6598 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 241.375 m
195.2 241.375 l
S
0.706 w 
195.2 240.543 m
300.956 240.543 l
S
0 0 1 rg
BT
/T1_3 1 Tf
14 0 0 14 170 242.6598 Tm
(not)Tj
/T1_0 1 Tf
( is just a procedure)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 115.923 223.8598 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 221.743 m
247.446 221.743 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 223.8598 Tm
(Comments \(Hunk C\))Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 115.923 205.0598 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 202.943 m
355.904 202.943 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 205.0598 Tm
(A Note about Parentheses and Indenting)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 155.923 186.2598 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 184.143 m
317.756 184.143 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 186.2598 Tm
(Let Your Editor Help You)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 155.923 167.4598 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 165.343 m
492.77 165.343 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 167.4598 Tm
(Indenting Procedure Calls and Simple Control Constructs)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 155.923 148.5924 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 146.476 m
227.162 146.476 l
S
0.428 w 
227.162 147.307 m
260.762 147.307 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 148.5924 Tm
(Indenting )Tj
/T1_3 1 Tf
(cond)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
7 0 0 7 155.923 129.7924 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
170 127.676 m
350.418 127.676 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 129.7924 Tm
(Indenting Procedure Definitions)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 115.923 110.9924 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 108.876 m
320.918 108.876 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 110.9924 Tm
(All Values are Pointers to Objects)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 155.923 92.1924 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 90.076 m
300.256 90.076 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 92.1924 Tm
(All Values are Pointers)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 155.923 73.3924 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 71.276 m
474.486 71.276 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 73.3924 Tm
(Most Implementations Optimize Away Many Pointers)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 155.923 54.5924 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 52.476 m
283.918 52.476 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 54.5924 Tm
(Objects on the Heap)Tj
0 0 0 rg
( )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_toc.html \(1 of 9\)1\1/3/2006 8:45:57 PM)Tj
ET
EMC 

endstreamendobj689 0 obj<</Length 8620>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Table of Contents)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
7 0 0 7 115.923 753.9756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
130 751.859 m
365.256 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 753.9756 Tm
(Scheme Reclaims Memory Automatically)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 735.1756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 733.059 m
338.194 733.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 735.1756 Tm
(Objects Have Types, Variables Don't)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 716.3755 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 714.259 m
260.608 714.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 716.3755 Tm
(Dynamic typing)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 697.5756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 695.459 m
273.878 695.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 697.5756 Tm
(The Empty List \(Hunk E\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 678.7756 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 676.659 m
172.446 676.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 678.7756 Tm
(Pairs and Lists)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 659.9082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.428 w 
130 658.623 m
163.6 658.623 l
S
0.706 w 
163.6 657.791 m
224.668 657.791 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 659.9082 Tm
(cdr-)Tj
/T1_0 1 Tf
(linked lists)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 641.1082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 638.991 m
230.338 638.991 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 641.1082 Tm
(Lists and Quoting)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 622.3082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 620.191 m
332.202 620.191 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 622.3082 Tm
(Where the Empty List Got its Name)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 603.5082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 601.391 m
388.958 601.391 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 603.5082 Tm
(Some Handy Procedures that Operate on Lists)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 584.6408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.428 w 
130 583.356 m
180.4 583.356 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 584.6408 Tm
(length)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 565.8408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 564.556 m
203.6 564.556 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 170 565.8408 Tm
(list)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 547.0408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 545.756 m
220.4 545.756 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 170 547.0408 Tm
(append)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 528.2408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 526.956 m
228.8 526.956 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 170 528.2408 Tm
(reverse)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 509.4408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 508.156 m
220.4 508.156 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 170 509.4408 Tm
(member)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 490.7082 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
90 488.591 m
358.282 488.591 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 490.7082 Tm
(Recursion Over Lists and Other Data Structures)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 471.8408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.428 w 
130 470.556 m
180.4 470.556 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 471.8408 Tm
(length)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 453.1082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
130 450.991 m
208.96 450.991 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 453.1082 Tm
(Copying Lists)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 434.2408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.428 w 
130 432.956 m
180.4 432.956 l
S
0.706 w 
180.4 432.124 m
207.616 432.124 l
S
0.428 w 
207.616 432.956 m
266.416 432.956 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 434.2408 Tm
(append)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(reverse)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 415.3734 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 414.088 m
220.4 414.088 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 170 415.3734 Tm
(append)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 396.5734 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 395.288 m
228.8 395.288 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 170 396.5734 Tm
(reverse)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 377.8408 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
90 375.724 m
312.012 375.724 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 377.8408 Tm
(Type and Equality Predicates \(Hunk G\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 359.0408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 356.924 m
219.81 356.924 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 359.0408 Tm
(Type Predicates)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 340.2408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 338.124 m
238.486 338.124 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 340.2408 Tm
(Equality Predicates)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 321.4408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 319.324 m
347.756 319.324 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 321.4408 Tm
(Choosing Equality Predicates \(Hunk I\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 302.6408 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 300.524 m
205.878 300.524 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 302.6408 Tm
(Quoting and Literals)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 283.8408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 281.724 m
331.04 281.724 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 283.8408 Tm
(Simple Literals and Self-Evaluation)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 265.0408 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 262.924 m
285.944 262.924 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 265.0408 Tm
(Local Variables and Lexical Scope)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 246.1734 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.428 w 
130 244.888 m
155.2 244.888 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 246.1734 Tm
(let)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 227.3734 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
170 225.257 m
227.162 225.257 l
S
0.428 w 
227.162 226.088 m
252.362 226.088 l
S
0.706 w 
252.362 225.257 m
323.524 225.257 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 227.3734 Tm
(Indenting )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( Expressions)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 208.5734 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 206.457 m
209.702 206.457 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 208.5734 Tm
(Lexical Scope)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 189.7734 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 187.657 m
424.352 187.657 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 189.7734 Tm
(Binding Environments and Binding Contours)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 170.906 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 168.789 m
339.526 168.789 l
S
0.428 w 
339.526 169.621 m
364.726 169.621 l
S
0.706 w 
364.726 168.789 m
370.172 168.789 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 170.906 Tm
(Block Structure Diagrams for )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(s)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 152.0386 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.428 w 
130 150.753 m
163.6 150.753 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 152.0386 Tm
(let*)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 133.306 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
90 131.189 m
209.742 131.189 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 133.306 Tm
(Procedures \(Hunk K\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 114.506 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 112.389 m
275.81 112.389 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 114.506 Tm
(Procedures are First Class)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 95.706 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 93.589 m
271.89 93.589 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 95.706 Tm
(Higher-Order Procedures)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 76.8386 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 74.722 m
291.364 74.722 l
S
0.428 w 
291.364 75.553 m
341.764 75.553 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 76.8386 Tm
(Anonymous Procedures and )Tj
/T1_2 1 Tf
(lambda)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 57.9712 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 56.686 m
180.4 56.686 l
S
0.706 w 
180.4 55.854 m
347.196 55.854 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 57.9712 Tm
(lambda)Tj
/T1_0 1 Tf
( and Lexical Scope \(Hunk M\))Tj
0 0 0 rg
( )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_toc.html \(2 of 9\)1\1/3/2006 8:45:57 PM)Tj
ET
EMC 

endstreamendobj690 0 obj<</Length 8789>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Table of Contents)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
7 0 0 7 115.923 753.9756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
130 751.859 m
228.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 753.9756 Tm
(Local Definitions)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 735.1082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 732.991 m
314.282 732.991 l
S
0.428 w 
314.282 733.823 m
364.682 733.823 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 735.1082 Tm
(Recursive Local Procedures and )Tj
/T1_2 1 Tf
(letrec)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 716.2408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
130 714.124 m
181.73 714.124 l
S
0.428 w 
181.73 714.956 m
232.13 714.956 l
S
0.706 w 
232.13 714.124 m
295.886 714.124 l
S
0.428 w 
295.886 714.956 m
346.286 714.956 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 716.2408 Tm
(Multiple )Tj
/T1_2 1 Tf
(define)Tj
/T1_0 1 Tf
(s are like a )Tj
/T1_2 1 Tf
(letrec)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 697.4408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
130 695.324 m
528.51 695.324 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 697.4408 Tm
(Variable Arity: Procedures that Take a Variable Number of Arguments)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 678.5734 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.428 w 
130 677.288 m
172 677.288 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 678.5734 Tm
(apply)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 659.8408 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
90 657.724 m
224.54 657.724 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 659.8408 Tm
(Variable Binding Again)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 641.0408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 638.924 m
268.404 638.924 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 641.0408 Tm
(Identifiers and Variables)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 622.2408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 620.124 m
318.986 620.124 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 622.2408 Tm
(Variables vs. Bindings vs. Values)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 603.4408 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 601.324 m
230.364 601.324 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 603.4408 Tm
(Tail Recursion \(Hunk O\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 584.6408 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 582.524 m
131.986 582.524 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 584.6408 Tm
(Macros)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 565.8408 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 563.724 m
168.568 563.724 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 565.8408 Tm
(Continuations)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 547.0408 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 544.924 m
200.824 544.924 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 547.0408 Tm
(Iteration Constructs)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 528.2408 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 526.124 m
221.432 526.124 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 528.2408 Tm
(Discussion and Review)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 509.4408 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 507.324 m
202.81 507.324 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 509.4408 Tm
(Using Scheme \(A Tutorial\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 490.6408 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 488.524 m
384.35 488.524 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 490.6408 Tm
(An Interactive Programming Environment \(Hunk B\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 471.8408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 469.724 m
222.162 469.724 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 471.8408 Tm
(Starting Scheme)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 453.0408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 450.924 m
375.35 450.924 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 453.0408 Tm
(Making mistakes and recovering from them)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 434.2408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 432.124 m
266.864 432.124 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 434.2408 Tm
(Returns and Parentheses)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 415.4408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 413.324 m
244.702 413.324 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 415.4408 Tm
(Interrupting Scheme)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 396.6408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 394.524 m
278.554 394.524 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 396.6408 Tm
(Exiting \(Quitting\) Scheme)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 377.8408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 375.724 m
297.594 375.724 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 377.8408 Tm
(Trying Out More Expressions)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 359.0408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 356.924 m
280.892 356.924 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 359.0408 Tm
(Booleans and Conditionals)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 340.2408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 338.124 m
195.324 338.124 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 340.2408 Tm
(Sequencing)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 321.4408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 319.324 m
315.08 319.324 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 321.4408 Tm
(Other Flow-of-control Structures)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 302.5734 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 300.457 m
206.946 300.457 l
S
0.428 w 
206.946 301.288 m
240.546 301.288 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 302.5734 Tm
(Using )Tj
/T1_2 1 Tf
(cond)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 283.706 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
170 281.589 m
206.946 281.589 l
S
0.428 w 
206.946 282.421 m
232.146 282.421 l
S
0.706 w 
232.146 281.589 m
259.362 281.589 l
S
0.428 w 
259.362 282.421 m
276.162 282.421 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 283.706 Tm
(Using )Tj
/T1_2 1 Tf
(and)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(or)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 264.906 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
130 262.789 m
312.756 262.789 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 264.906 Tm
(Making Some Objects \(Hunk D\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 246.106 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 243.989 m
212.446 243.989 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 246.106 Tm
(Lists \(Hunk F\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 227.306 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 225.189 m
242.026 225.189 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 227.306 Tm
(Using Predicates \(Hunk H\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 208.506 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 206.389 m
256.756 206.389 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 208.506 Tm
(Using Type Predicates)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 189.706 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 187.589 m
275.432 187.589 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 189.706 Tm
(Using Equality Predicates)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 170.8386 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 168.722 m
186.026 168.722 l
S
0.428 w 
186.026 169.553 m
211.226 169.553 l
S
0.706 w 
211.226 168.722 m
374.522 168.722 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 170.8386 Tm
(Local Variables, )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(, and Lexical Scope \(Hunk J\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 152.0386 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 149.922 m
491.66 149.922 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 152.0386 Tm
(Using First-Class, Higher-Order, and Anonymous Procedures \(Hunk L\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 133.2386 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 131.122 m
256.378 131.122 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 133.2386 Tm
(First-Class Procedures)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 114.4386 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 112.322 m
379.606 112.322 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 114.4386 Tm
(Using and Writing Higher-Order Procedures)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 95.6386 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 93.522 m
337.674 93.522 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 95.6386 Tm
(Interactively Changing a Program \(Hunk N\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 76.8386 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 74.722 m
289.404 74.722 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 76.8386 Tm
(Replacing Procedure Values)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 58.0386 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 55.922 m
275.432 55.922 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 58.0386 Tm
(Loading Code from a File)Tj
0 0 0 rg
( )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_toc.html \(3 of 9\)1\1/3/2006 8:45:57 PM)Tj
ET
EMC 

endstreamendobj691 0 obj<</Length 8936>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Table of Contents)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
7 0 0 7 115.923 753.9756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
130 751.859 m
350.094 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 753.9756 Tm
(Loading and Running Whole Programs)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 735.1756 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 733.059 m
265.742 733.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 735.1756 Tm
(Some Other Useful Data Types)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 716.3755 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 714.259 m
169.676 714.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 716.3755 Tm
(Strings)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 697.5756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 695.459 m
179.014 695.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 697.5756 Tm
(Symbols)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 678.7756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 676.659 m
289.364 676.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 678.7756 Tm
(A Note on Identifiers)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 659.9756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 657.859 m
194.946 657.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 659.9756 Tm
(Lists Again)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 641.1756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 639.059 m
284.702 639.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 641.1756 Tm
(Heterogeneous Lists)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 622.3755 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 620.259 m
279.662 620.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 622.3755 Tm
(Operations on Lists)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 603.5756 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 601.459 m
315.54 601.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 603.5756 Tm
(Basic Programming Examples \(Hunk P\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 584.7756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 582.659 m
285.162 582.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 584.7756 Tm
(An Error Signaling Routine)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 565.9082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.428 w 
130 564.623 m
155.2 564.623 l
S
0.706 w 
155.2 563.791 m
182.416 563.791 l
S
0.428 w 
182.416 564.623 m
249.616 564.623 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 565.9082 Tm
(map)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(for-each)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 547.0408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 545.756 m
195.2 545.756 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 170 547.0408 Tm
(map)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 528.2408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 526.956 m
237.2 526.956 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 170 528.2408 Tm
(for-each)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 509.4408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 508.156 m
180.4 508.156 l
S
0.706 w 
180.4 507.324 m
207.616 507.324 l
S
0.428 w 
207.616 508.156 m
249.616 508.156 l
S
0.706 w 
249.616 507.324 m
319.21 507.324 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 509.4408 Tm
(member)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(assoc)Tj
/T1_0 1 Tf
(, and friends)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 490.5734 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.428 w 
170 489.288 m
220.4 489.288 l
S
0.706 w 
220.4 488.457 m
227.4 488.457 l
S
0.428 w 
227.4 489.288 m
261 489.288 l
S
0.706 w 
261 488.457 m
291.716 488.457 l
S
0.428 w 
291.716 489.288 m
325.316 489.288 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 170 490.5734 Tm
(member)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(memq)Tj
/T1_0 1 Tf
(, and )Tj
/T1_2 1 Tf
(memv)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 471.706 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 470.421 m
212 470.421 l
S
0.706 w 
212 469.589 m
219 469.589 l
S
0.428 w 
219 470.421 m
252.6 470.421 l
S
0.706 w 
252.6 469.589 m
283.316 469.589 l
S
0.428 w 
283.316 470.421 m
316.916 470.421 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 170 471.706 Tm
(assoc)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(assq)Tj
/T1_0 1 Tf
(, and )Tj
/T1_2 1 Tf
(assv)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 452.906 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
90 450.789 m
219.472 450.789 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 452.906 Tm
(Procedural Abstraction)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 434.106 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 431.989 m
269.58 431.989 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 434.106 Tm
(Procedure Specialization)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 415.306 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 413.189 m
262.608 413.189 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 415.306 Tm
(Procedure Composition)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 396.506 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 394.389 m
180.554 394.389 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 396.506 Tm
(Currying)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 377.706 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 375.589 m
221.432 375.589 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 377.706 Tm
(Discussion and Review)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 358.906 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 356.789 m
172.85 356.789 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 358.906 Tm
(Writing an Interpreter)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 340.106 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 337.989 m
263.432 337.989 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 340.106 Tm
(Interpretation and Compilation)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 321.306 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 319.189 m
284.026 319.189 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 321.306 Tm
(Implementing a Simple Interpreter)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 302.506 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 300.389 m
279.31 300.389 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 302.506 Tm
(The Read-Eval-Print Loop)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 283.706 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 281.589 m
194.918 281.589 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 283.706 Tm
(The Reader)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 264.8386 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 262.722 m
252.054 262.722 l
S
0.428 w 
252.054 263.553 m
285.654 263.553 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 264.8386 Tm
(Implementing )Tj
/T1_2 1 Tf
(read)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 245.9712 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
170 243.854 m
272.662 243.854 l
S
0.428 w 
272.662 244.686 m
306.262 244.686 l
S
0.706 w 
306.262 243.854 m
365.734 243.854 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 245.9712 Tm
(Implementing the )Tj
/T1_2 1 Tf
(read)Tj
/T1_0 1 Tf
( procedure)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 227.1712 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 225.054 m
311.932 225.054 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 227.1712 Tm
(Comments on the Reader)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 208.3712 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 206.254 m
250.148 206.254 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 208.3712 Tm
(Recursive Evaluation)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 189.5712 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 187.454 m
390.878 187.454 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 189.5712 Tm
(Comments on the Arithmetic Evaluator)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 170.7712 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 168.654 m
346.594 168.654 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 170.7712 Tm
(A Note on Snarfing and Bootstrapping)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 151.9712 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 149.854 m
218.216 149.854 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 151.9712 Tm
(Snarfing)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 133.1712 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 131.054 m
369.892 131.054 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 133.1712 Tm
(Bootstrapping and Cross-compiling)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 114.3712 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 112.254 m
315.472 112.254 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 114.3712 Tm
(Improving the Simple Interpreter)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 95.5712 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 93.454 m
402.148 93.454 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 95.5712 Tm
(Implementing top-level variable bindings)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 76.7712 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 74.654 m
357.81 74.654 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 76.7712 Tm
(Running the improved interpreter)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 57.9712 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 55.854 m
221.432 55.854 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 57.9712 Tm
(Discussion and Review)Tj
0 0 0 rg
( )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_toc.html \(4 of 9\)1\1/3/2006 8:45:57 PM)Tj
ET
EMC 

endstreamendobj692 0 obj<</Length 9723>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Table of Contents)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
7 0 0 7 35.713 753.9756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
50 751.859 m
217.972 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 753.9756 Tm
(Environments and Procedures)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 735.1082 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 732.991 m
175.932 732.991 l
S
0.428 w 
175.932 733.823 m
201.132 733.823 l
S
0.706 w 
201.132 732.991 m
228.348 732.991 l
S
0.428 w 
228.348 733.823 m
278.748 733.823 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 735.1082 Tm
(Understanding )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(lambda)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 716.2408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 714.956 m
155.2 714.956 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 716.2408 Tm
(let)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 697.4408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 696.156 m
180.4 696.156 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 697.4408 Tm
(lambda)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 678.7082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
170 676.591 m
305.296 676.591 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 678.7082 Tm
(Procedures are Closures)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 659.9082 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 657.791 m
312.012 657.791 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 659.9082 Tm
(Lambda is cheap, and Closures are Fast)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 641.0408 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 638.924 m
201.58 638.924 l
S
0.428 w 
201.58 639.756 m
226.78 639.756 l
S
0.706 w 
226.78 638.924 m
253.996 638.924 l
S
0.428 w 
253.996 639.756 m
304.396 639.756 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 641.0408 Tm
(An Interpreter with )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(lambda)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 622.2408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
130 620.124 m
398.296 620.124 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 622.2408 Tm
(Nested Environments and Recursive Evaluation)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 603.4408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 601.324 m
413.066 601.324 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 603.4408 Tm
(Integrated, Extensible Treatment of Special Forms)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 584.5734 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 582.457 m
199.594 582.457 l
S
0.428 w 
199.594 583.288 m
224.794 583.288 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 584.5734 Tm
(Interpreting )Tj
/T1_2 1 Tf
(let)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 565.706 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
130 563.589 m
271.106 563.589 l
S
0.428 w 
271.106 564.421 m
304.706 564.421 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 565.706 Tm
(Variable References and )Tj
/T1_2 1 Tf
(set!)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 546.8386 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
130 544.722 m
199.594 544.722 l
S
0.428 w 
199.594 545.553 m
249.994 545.553 l
S
0.706 w 
249.994 544.722 m
378.696 544.722 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 546.8386 Tm
(Interpreting )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
( and Procedure Calling)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 528.0386 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 525.922 m
441.012 525.922 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 528.0386 Tm
(Mutual Recursion Between Eval and Eval-apply)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 509.1712 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 507.054 m
156.094 507.054 l
S
0.428 w 
156.094 507.886 m
181.294 507.886 l
S
0.706 w 
181.294 507.054 m
188.686 507.054 l
S
0.428 w 
188.686 507.886 m
239.086 507.886 l
S
0.706 w 
239.086 507.054 m
266.302 507.054 l
S
0.428 w 
266.302 507.886 m
299.902 507.886 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 509.1712 Tm
(Variants of )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(: )Tj
/T1_2 1 Tf
(letrec)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(let*)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 490.3038 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
130 488.187 m
215.932 488.187 l
S
0.428 w 
215.932 489.019 m
266.332 489.019 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 490.3038 Tm
(Understanding )Tj
/T1_2 1 Tf
(letrec)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 471.4364 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
170 469.32 m
206.946 469.32 l
S
0.428 w 
206.946 470.151 m
257.346 470.151 l
S
0.706 w 
257.346 469.32 m
284.562 469.32 l
S
0.428 w 
284.562 470.151 m
334.962 470.151 l
S
0.706 w 
334.962 469.32 m
466.016 469.32 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 471.4364 Tm
(Using )Tj
/T1_2 1 Tf
(letrec)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
( to Implement Modules)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 452.569 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.428 w 
130 451.284 m
163.6 451.284 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 452.569 Tm
(let*)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 433.8364 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
90 431.72 m
200.824 431.72 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 433.8364 Tm
(Iteration Constructs)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 414.969 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 412.852 m
173.932 412.852 l
S
0.428 w 
173.932 413.684 m
199.132 413.684 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 414.969 Tm
(Named )Tj
/T1_2 1 Tf
(let)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 396.169 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
90 394.052 m
366.864 394.052 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 396.169 Tm
(Programming with Procedures and Environments)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 377.369 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 375.252 m
143.648 375.252 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 377.369 Tm
(Exercises)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 358.569 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 356.452 m
168.986 356.452 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 358.569 Tm
(Recursion in Scheme)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 339.769 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 337.652 m
384.756 337.652 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 339.769 Tm
(Subproblems and Reductions \(non-tail and tail calls\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 320.969 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 318.852 m
225.338 318.852 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 320.969 Tm
(The Continuation Chain)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 302.169 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 300.052 m
235.446 300.052 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 302.169 Tm
(Exploiting Tail Recursion)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 283.369 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 281.252 m
370.296 281.252 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 283.369 Tm
(Passing Intermediate Values as Arguments)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 264.569 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 262.452 m
259.46 262.452 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 264.569 Tm
(Summing a List)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 245.7016 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 243.585 m
252.054 243.585 l
S
0.428 w 
252.054 244.416 m
302.454 244.416 l
S
0.706 w 
302.454 243.585 m
390.71 243.585 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 245.7016 Tm
(Implementing )Tj
/T1_2 1 Tf
(length)Tj
/T1_0 1 Tf
( tail-recursively)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 226.8342 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.428 w 
130 225.549 m
180.4 225.549 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 226.8342 Tm
(reduce)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 208.1016 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
90 205.985 m
212.864 205.985 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 208.1016 Tm
(Iteration as Recursion)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 189.2342 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 187.117 m
170.824 187.117 l
S
0.428 w 
170.824 187.949 m
196.024 187.949 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 189.2342 Tm
(named )Tj
/T1_2 1 Tf
(let)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 170.3668 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 169.082 m
146.8 169.082 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 170.3668 Tm
(do)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 151.6342 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
50 149.517 m
204.756 149.517 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 151.6342 Tm
(Quasiquotation and Macros)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 132.7668 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
0.428 w 
90 131.482 m
174 131.482 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 90 132.7668 Tm
(quasiquote)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 113.9668 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 112.682 m
264.4 112.682 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 113.9668 Tm
(unquote-splicing)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 95.2342 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
90 93.117 m
253.702 93.117 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 95.2342 Tm
(Defining New Special Forms)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 76.4342 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 74.317 m
257.134 74.317 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 76.4342 Tm
(Macros vs. Procedures)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 57.6342 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 55.517 m
334.202 55.517 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 57.6342 Tm
(Implementing More Scheme Special Forms)Tj
0 0 0 rg
( )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_toc.html \(5 of 9\)1\1/3/2006 8:45:57 PM)Tj
ET
EMC 

endstreamendobj693 0 obj<</Length 8754>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Table of Contents)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
7 0 0 7 115.923 753.9082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0 0 1 RG
0.428 w 10 M 0 j 0 J []0 d 
130 752.623 m
155.2 752.623 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 753.9082 Tm
(let)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 735.1082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 733.823 m
163.6 733.823 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 735.1082 Tm
(let*)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 716.3082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 715.023 m
163.6 715.023 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 716.3082 Tm
(cond)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 697.5756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
130 695.459 m
191.446 695.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 697.5756 Tm
(Discussion)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 678.7756 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 676.659 m
191.486 676.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 678.7756 Tm
(Lisp-style Macros)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 659.9756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 657.859 m
290.986 657.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 659.9756 Tm
(Ultra-simple Lispish Macros)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 641.1756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 639.059 m
309.202 639.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 641.1756 Tm
(Better Lisp-style Macros)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 622.3755 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 620.259 m
361.716 620.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 622.3755 Tm
(Problems With Lisp-Style Macros)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 603.5756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 601.459 m
374.526 601.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 603.5756 Tm
(Ugly Hacks Around Name Conflicts)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 584.7756 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 582.659 m
348.202 582.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 584.7756 Tm
(Implementing Simple Macros and Quasiquote)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 565.9756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 563.859 m
297.216 563.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 565.9756 Tm
(Implementing Simple Macros)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 547.1082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 544.991 m
212.054 544.991 l
S
0.428 w 
212.054 545.823 m
296.054 545.823 l
S
0.706 w 
296.054 544.991 m
323.27 544.991 l
S
0.428 w 
323.27 545.823 m
382.07 545.823 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 547.1082 Tm
(Implementing )Tj
/T1_2 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(unquote)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 528.2408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
170 526.124 m
318.148 526.124 l
S
0.428 w 
318.148 526.956 m
402.148 526.956 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 528.2408 Tm
(Translating backquotes to )Tj
/T1_2 1 Tf
(quasiquote)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 509.3734 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 508.088 m
254 508.088 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 170 509.3734 Tm
(quasiquote)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 490.5734 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 489.288 m
296 489.288 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 170 490.5734 Tm
(define-rewriter)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 471.7734 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 470.488 m
270.8 470.488 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 170 471.7734 Tm
(define-macro)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 453.0408 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
90 450.924 m
356.336 450.924 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 453.0408 Tm
(Procedural Macros vs. Template-filling Macros)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 434.2408 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 432.124 m
308.148 432.124 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 434.2408 Tm
(Programming Examples Using Macros)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 415.4408 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 413.324 m
227.688 413.324 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 415.4408 Tm
(Records and Object Orientation)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 396.6408 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 394.524 m
205.472 394.524 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 396.6408 Tm
(Records \(Structures\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 377.8408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 375.724 m
473.728 375.724 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 377.8408 Tm
(Using Procedural Abstraction to Implement Data Abstraction)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 359.0408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 356.924 m
500.958 356.924 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 359.0408 Tm
(Automating the Construction of Abstract Data Types with Macros)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 340.2408 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 338.124 m
253.324 338.124 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 340.2408 Tm
(Simple Uses of OOP Objects)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 321.4408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 319.324 m
203.5 319.324 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 321.4408 Tm
(Late Binding)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 302.6408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 300.524 m
359.446 300.524 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 302.6408 Tm
(Class Definitions and Slot Specifications)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 283.8408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 281.724 m
316.228 281.724 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 283.8408 Tm
(Generic Procedures and Methods)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 265.0408 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 262.924 m
353.998 262.924 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 265.0408 Tm
(Generic Procedures and Classes are First-Class)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 246.2408 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 244.124 m
317.892 244.124 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 246.2408 Tm
(Implementing the Simple Object System)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 227.3734 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 225.257 m
212.054 225.257 l
S
0.428 w 
212.054 226.088 m
312.854 226.088 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 227.3734 Tm
(Implementing )Tj
/T1_2 1 Tf
(define-class)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 208.506 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
170 206.389 m
200.716 206.389 l
S
0.428 w 
200.716 207.221 m
276.316 207.221 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 208.506 Tm
(class )Tj
/T1_2 1 Tf
(<<class>>)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 189.6386 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
130 187.522 m
212.054 187.522 l
S
0.428 w 
212.054 188.353 m
329.654 188.353 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 189.6386 Tm
(Implementing )Tj
/T1_2 1 Tf
(define-generic)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 170.7712 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
130 168.654 m
212.054 168.654 l
S
0.428 w 
212.054 169.486 m
321.254 169.486 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 170.7712 Tm
(Implementing )Tj
/T1_2 1 Tf
(define-method)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 151.9712 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
170 149.854 m
330.202 149.854 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 151.9712 Tm
(Installing Accessor Methods)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 133.1712 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 131.054 m
266.824 131.054 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 133.1712 Tm
(Keyword options)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 114.3712 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 112.254 m
192.972 112.254 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 114.3712 Tm
(Inheritance)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 95.5712 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 93.454 m
374.188 93.454 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 95.5712 Tm
(Overriding and Refining Inherited Methods)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 76.7712 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 74.654 m
293.688 74.654 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 76.7712 Tm
(Late Binding and Inheritance)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 57.9712 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 55.854 m
405.688 55.854 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 57.9712 Tm
(Implementing an Object System with Inheritance)Tj
0 0 0 rg
( )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_toc.html \(6 of 9\)1\1/3/2006 8:45:57 PM)Tj
ET
EMC 

endstreamendobj694 0 obj<</Length 8380>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Table of Contents)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
7 0 0 7 115.923 753.9756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
130 751.859 m
275.376 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 753.9756 Tm
(Interfaces and Inheritance)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 735.1756 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 733.059 m
395.62 733.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 735.1756 Tm
(A More Advanced Object System and Implementation)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 716.3755 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 714.259 m
236.134 714.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 716.3755 Tm
(Language Features)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 697.5756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 695.459 m
204.23 695.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 697.5756 Tm
(Purity)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 678.7756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 676.659 m
249.324 676.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 678.7756 Tm
(Encapsulation)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 659.9756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 657.859 m
289.392 657.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 659.9756 Tm
(Multiple Dispatching)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 641.1756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 639.059 m
284.702 639.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 641.1756 Tm
(Multiple Inheritance)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 622.3755 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 620.259 m
279.298 620.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 622.3755 Tm
(Explictit Subtyping)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 603.5756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 601.459 m
317.784 601.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 603.5756 Tm
(Control Over Compilation)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 584.7756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 582.659 m
297.54 582.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 584.7756 Tm
(A Metaobject Protocol)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 565.9756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 563.859 m
303.04 563.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 565.9756 Tm
(Implementation Improvements)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 547.1756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 545.059 m
378.824 545.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 547.1756 Tm
(Factoring out Work at Compile Time)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 528.3755 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 526.259 m
335.676 526.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 528.3755 Tm
(Supporting Runtime Changes)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 509.5756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 507.459 m
330.202 507.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 509.5756 Tm
(Faster Dynamic Dispatching)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 490.7756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 488.659 m
432.5 488.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 490.7756 Tm
(Compiling Slot Accessors And Methdos Inline)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 471.9756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 469.859 m
331.77 469.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 471.9756 Tm
(Exploiting Type Information)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 453.1756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 451.059 m
368.31 451.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 453.1756 Tm
(Advanced Compilation Techniques)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 434.3755 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 432.259 m
516.972 432.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 434.3755 Tm
(Some Shortcomings of Standard Scheme for Object System Implementation)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 415.5756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 413.459 m
319.77 413.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 415.5756 Tm
(Inability to Define Disjoint Types)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 396.7756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 394.659 m
373.376 394.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 396.7756 Tm
(Lack of Type Objects for Predefined Types)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 377.9756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 375.859 m
424.714 375.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 377.9756 Tm
(Lack of Weak Tables and Extensible Closure Types.)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 359.1756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 357.059 m
293.688 357.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 359.1756 Tm
(Standard Macros are Limited)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 340.3755 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 338.259 m
350.066 338.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 340.3755 Tm
(Unspecified Time of Macro Processing)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 321.5756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 319.459 m
279.674 319.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 321.5756 Tm
(Lack of Type Declarations)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 302.7082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 300.591 m
239.634 300.591 l
S
0.428 w 
239.634 301.423 m
290.034 301.423 l
S
0.706 w 
290.034 300.591 m
349.506 300.591 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 302.7082 Tm
(Lack of a Standard )Tj
/T1_2 1 Tf
(bound?)Tj
/T1_0 1 Tf
( procedure)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 283.9082 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 281.791 m
173.634 281.791 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 283.9082 Tm
(Other Useful Features)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 265.1082 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 262.991 m
170.5 262.991 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 265.1082 Tm
(Special Forms)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 246.3082 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 244.191 m
217.946 244.191 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 246.3082 Tm
(Input-Output Facilities)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 227.4408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.428 w 
130 226.156 m
163.6 226.156 l
S
0.706 w 
163.6 225.324 m
190.816 225.324 l
S
0.428 w 
190.816 226.156 m
232.816 226.156 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 227.4408 Tm
(read)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(write)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 208.5734 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 207.288 m
188.8 207.288 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 208.5734 Tm
(display)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 189.8408 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
130 187.724 m
158.784 187.724 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 189.8408 Tm
(Ports)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 170.9734 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0.428 w 
130 169.688 m
222.4 169.688 l
S
0.706 w 
222.4 168.857 m
302.354 168.857 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 130 170.9734 Tm
(with-input-)Tj
/T1_0 1 Tf
(\\dots{} Forms)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 152.1734 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 150.057 m
319.39 150.057 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 152.1734 Tm
(Useful Types and Associated Procedures)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 133.3734 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 131.257 m
216.702 131.257 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 133.3734 Tm
(Numeric Types)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 114.5734 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 112.457 m
305.73 112.457 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 114.5734 Tm
(Floating-Point Numbers)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 95.7734 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 93.657 m
327.458 93.657 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 95.7734 Tm
(Arbitrary-Precision Integers)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 76.9734 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 74.857 m
205.784 74.857 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 76.9734 Tm
(Ratios)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 58.1734 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 56.057 m
309.972 56.057 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 58.1734 Tm
(Coercions and Exactness)Tj
0 0 0 rg
( )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_toc.html \(7 of 9\)1\1/3/2006 8:45:57 PM)Tj
ET
EMC 

endstreamendobj695 0 obj<</Length 8392>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Table of Contents)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
7 0 0 7 115.923 753.9756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
130 751.859 m
173.54 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 753.9756 Tm
(Vectors)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 735.1756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 733.059 m
256.756 733.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 735.1756 Tm
(Strings and Characters)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 716.3082 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0.428 w 
50 715.023 m
302 715.023 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 50 716.3082 Tm
(call-with-current-continuation)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 697.5756 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
90 695.459 m
343.526 695.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 697.5756 Tm
(Implementing a Better Read-Eval-Print Loop)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 678.7756 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 676.659 m
269.256 676.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 678.7756 Tm
(Implementing Catch and Throw)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 659.9756 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 657.859 m
246.702 657.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 659.9756 Tm
(Implementing Backtracking)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 641.1756 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 639.059 m
233.5 639.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 641.1756 Tm
(Implementing Coroutines)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 622.3755 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 620.259 m
315.554 620.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 622.3755 Tm
(Implementing Cooperative Multitasking)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 603.5082 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 601.391 m
172.432 601.391 l
S
0.428 w 
172.432 602.223 m
424.432 602.223 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 603.5082 Tm
(Caveats about )Tj
/T1_2 1 Tf
(call-with-current-continuation)Tj
0 0 0 rg
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 584.7082 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
50 582.591 m
207.5 582.591 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 584.7082 Tm
(A Simple Scheme Compiler)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 565.9082 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 563.791 m
205.486 563.791 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 565.9082 Tm
(What is a Compiler?)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 547.1082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 544.991 m
258.674 544.991 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 547.1082 Tm
(What is an Interpreter?)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 528.3082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 526.191 m
277.546 526.191 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 528.3082 Tm
(OK, so what's a compiler?)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 509.5082 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 507.391 m
278.944 507.391 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 509.5082 Tm
(What Does a Compiler Generate?)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 490.7082 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 488.591 m
268.094 488.591 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 490.7082 Tm
(Basic Structure of the Compiler)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 471.9082 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 469.791 m
353.256 469.791 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 471.9082 Tm
(Data Representations, Calling Convention, etc.)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 453.1082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 450.991 m
207.378 450.991 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 453.1082 Tm
(The Registers)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 434.3082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 432.191 m
393.62 432.191 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 434.3082 Tm
(The Evaluation Stack \(or Eval Stack, for short\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 415.5082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 413.391 m
265.338 413.391 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 415.5082 Tm
(The Continuation Chain)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 396.7082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 394.591 m
208.554 394.591 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 396.7082 Tm
(Environments)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 377.9082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 375.791 m
329.486 375.791 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 377.9082 Tm
(Closure Representation and Calling)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 359.1082 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 356.991 m
168.568 356.991 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 359.1082 Tm
(Continuations)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 340.3082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 338.191 m
427.052 338.191 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 340.3082 Tm
(Applying a Procedure Doesn't Save the Caller's State)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 321.5082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 319.391 m
245.514 319.391 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 321.5082 Tm
(Continuation Saving)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 302.7082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 300.591 m
200.378 300.591 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 302.7082 Tm
(An Example)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 283.9082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 281.791 m
277.742 281.791 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 283.9082 Tm
(Generating Unique Labels)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 265.1082 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 262.991 m
327.972 262.991 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 265.1082 Tm
(More on Representations of Environments)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 246.3082 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 244.191 m
249.054 244.191 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 246.3082 Tm
(Compiling Code for Literals)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 227.5082 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 225.391 m
382.768 225.391 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 227.5082 Tm
(Compiling Code for Top-Level Variable References)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 208.7082 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 206.591 m
425.174 206.591 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 208.7082 Tm
(Precomputing Local Variable Lookups using Lexical Scope)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 189.9082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 187.791 m
430.972 187.791 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 189.9082 Tm
(Lexical Addressing and Compile-Time Environments)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 171.1082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 168.991 m
244.31 168.991 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 171.1082 Tm
(A Detailed Example)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 152.3082 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 150.191 m
462.54 150.191 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 152.3082 Tm
(Preserving Tail-Recursiveness using Compile-Time Continuations)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 133.5082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 131.391 m
348.54 131.391 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 133.5082 Tm
(When Should We Save Continuations?)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 114.7082 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 112.591 m
276.96 112.591 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 114.7082 Tm
(Compiling Returns)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 95.9082 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 93.791 m
283.662 93.791 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 95.9082 Tm
(Compiling Top-Level Expressions)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 77.0408 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 74.924 m
153.406 74.924 l
S
0.428 w 
153.406 75.756 m
203.806 75.756 l
S
0.706 w 
203.806 74.924 m
378.386 74.924 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 77.0408 Tm
(Compiling )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
( Expressions Inside Procedures)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 58.2408 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 56.124 m
274.338 56.124 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 58.2408 Tm
(Compiling Top-level Definitions)Tj
0 0 0 rg
( )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_toc.html \(8 of 9\)1\1/3/2006 8:45:58 PM)Tj
ET
EMC 

endstreamendobj696 0 obj<</Length 3721>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Table of Contents)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
7 0 0 7 75.139 753.9756 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
90 751.859 m
282.878 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 753.9756 Tm
(Interfacing to the Runtime System)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 735.1756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 733.059 m
239.256 733.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 735.1756 Tm
(Garbage Collection)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 716.3755 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 714.259 m
233.392 714.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 716.3755 Tm
(Safe Points)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 155.923 697.5756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
170 695.459 m
263.716 695.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 170 697.5756 Tm
(GC at Any Time)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 678.7756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 676.659 m
184.432 676.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 678.7756 Tm
(Interrupts)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 75.139 659.9756 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
ET
90 657.859 m
391.364 657.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 90 659.9756 Tm
(Advanced Compiler and Runtime System Techniques)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 641.1756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 639.059 m
276.216 639.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 641.1756 Tm
(Inlining Small Procedures)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 622.3755 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 620.259 m
341.512 620.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 622.3755 Tm
(Type Declarations and Type Analysis)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 603.5756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 601.459 m
311.566 601.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 603.5756 Tm
(Using More Hardware Registers)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 584.7756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 582.659 m
226.054 582.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 584.7756 Tm
(Closure Analysis)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 565.9756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 563.859 m
387.796 563.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 565.9756 Tm
(Register Allocating Loop Variables for Loops)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 547.1756 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 545.059 m
288.284 545.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 547.1756 Tm
(Conventional Optimizations)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 115.923 528.3755 Tm
(n)Tj
/T1_0 1 Tf
(     )Tj
ET
130 526.259 m
205.04 526.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 130 528.3755 Tm
(Stack Caches)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 509.5756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 507.459 m
132.04 507.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 509.5756 Tm
(Concept Index)Tj
0 0 0 rg
( )Tj
ET
0.5 0.5 0.5 rg
10 474.8 m
10 476.8 l
602 476.8 l
601 475.8 l
11 475.8 l
11 475.8 l
h
f
0.875 0.875 0.875 rg
602 476.8 m
602 474.8 l
10 474.8 l
11 475.8 l
601 475.8 l
601 475.8 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 436.7756 Tm
(This document was generated on 19 Febuary 1997 using the )Tj
ET
350.62 434.659 m
404.296 434.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 350.62 436.7756 Tm
(texi2html)Tj
0 0 0 rg
( translator version 1.45.)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_toc.html \(9 of 9\)1\1/3/2006 8:45:58 PM)Tj
ET
EMC 

endstreamendobj697 0 obj(An Introduction to Scheme and its Implementation - Table of Contents)endobj698 0 obj<</C 702 0 R/V 1.25>>endobj699 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S 700 0 R>>endobj700 0 obj<</G 701 0 R>>endobj701 0 obj<</CB 0/M[10.08 10.08 26.0 36.0]/S 0/PO 0/PS[792.0 612.0]/AH 0/AL 0/SU 1/AS 1/AT 70>>endobj702 0 obj[699 0 R]endobj703 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)endobj704 0 obj(Ô1™+X÷¢¡‘≈êlêÑ)endobj705 0 obj<</TS(D:20061104044558)/ID 704 0 R/CT(text/html)/O[11 0 R 84 0 R 165 0 R 246 0 R 327 0 R 408 0 R 489 0 R 572 0 R 653 0 R]/S/SPS/T 697 0 R/TID 707 0 R/SI 706 0 R>>endobj706 0 obj<</TS(D:20061104044558)/AU 703 0 R>>endobj707 0 obj(„ä?bOˇπPbSp$)endobj708 0 obj<</Names[704 0 R 705 0 R]>>endobj709 0 obj<</Names[703 0 R 705 0 R]>>endobj710 0 obj<</First 711 0 R/Parent 5 0 R/Count 1/Last 711 0 R/Title(federated.com)>>endobj711 0 obj<</Parent 710 0 R/Dest[11 0 R/XYZ 0 792 null]/SE 10 0 R/Title(An Introduction to Scheme and its Implementation - Table of Contents)>>endobj712 0 obj<</Subtype/XML/Length 3442/Type/Metadata>>stream
<?xpacket begin="Ôªø" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:ModifyDate>2006-11-03T20:45:58-08:00</xap:ModifyDate>
         <xap:CreateDate>2006-11-03T20:45:56-08:00</xap:CreateDate>
         <xap:MetadataDate>2006-11-03T20:45:58-08:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/pdf</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">An Introduction to Scheme and its Implementation - Table of Contents</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:b0f0a018-913c-4492-8c29-a52604644b70</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:4d44ffe3-456d-4e77-b808-fe635c0e68ee</xapMM:InstanceID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Acrobat Web Capture 7.0</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
endstreamendobjxref
0 713
0000000004 65535 f
0000000016 00000 n
0000000145 00000 n
0000000259 00000 n
0000000006 00000 f
0000000459 00000 n
0000000149 00001 f
0000000527 00000 n
0000000627 00000 n
0000000671 00000 n
0000000718 00000 n
0000001032 00000 n
0000001257 00000 n
0000001371 00000 n
0000001395 00000 n
0000001453 00000 n
0000001551 00000 n
0000001594 00000 n
0000001784 00000 n
0000002032 00000 n
0000002075 00000 n
0000002265 00000 n
0000002308 00000 n
0000002498 00000 n
0000002541 00000 n
0000002731 00000 n
0000002774 00000 n
0000002964 00000 n
0000003007 00000 n
0000003195 00000 n
0000003238 00000 n
0000003428 00000 n
0000003471 00000 n
0000003661 00000 n
0000003704 00000 n
0000003894 00000 n
0000003937 00000 n
0000004129 00000 n
0000004172 00000 n
0000004365 00000 n
0000004408 00000 n
0000004601 00000 n
0000004644 00000 n
0000004837 00000 n
0000004880 00000 n
0000005073 00000 n
0000005116 00000 n
0000005309 00000 n
0000005352 00000 n
0000005545 00000 n
0000005588 00000 n
0000005779 00000 n
0000005822 00000 n
0000006014 00000 n
0000006057 00000 n
0000006250 00000 n
0000006293 00000 n
0000006484 00000 n
0000006527 00000 n
0000006718 00000 n
0000006761 00000 n
0000006954 00000 n
0000006997 00000 n
0000007190 00000 n
0000007233 00000 n
0000007426 00000 n
0000007469 00000 n
0000007662 00000 n
0000007705 00000 n
0000007898 00000 n
0000007941 00000 n
0000008133 00000 n
0000008176 00000 n
0000008369 00000 n
0000008412 00000 n
0000008605 00000 n
0000008648 00000 n
0000008841 00000 n
0000008884 00000 n
0000009077 00000 n
0000009120 00000 n
0000009313 00000 n
0000009356 00000 n
0000009549 00000 n
0000009592 00000 n
0000009804 00000 n
0000009828 00000 n
0000010017 00000 n
0000010331 00000 n
0000010372 00000 n
0000010561 00000 n
0000010602 00000 n
0000010791 00000 n
0000010832 00000 n
0000011021 00000 n
0000011062 00000 n
0000011250 00000 n
0000011291 00000 n
0000011482 00000 n
0000011525 00000 n
0000011718 00000 n
0000011762 00000 n
0000011956 00000 n
0000012000 00000 n
0000012194 00000 n
0000012238 00000 n
0000012430 00000 n
0000012474 00000 n
0000012666 00000 n
0000012710 00000 n
0000012902 00000 n
0000012946 00000 n
0000013138 00000 n
0000013182 00000 n
0000013374 00000 n
0000013418 00000 n
0000013611 00000 n
0000013655 00000 n
0000013847 00000 n
0000013891 00000 n
0000014084 00000 n
0000014128 00000 n
0000014322 00000 n
0000014366 00000 n
0000014558 00000 n
0000014602 00000 n
0000014794 00000 n
0000014838 00000 n
0000015031 00000 n
0000015075 00000 n
0000015268 00000 n
0000015312 00000 n
0000015506 00000 n
0000015550 00000 n
0000015744 00000 n
0000015788 00000 n
0000015981 00000 n
0000016025 00000 n
0000016218 00000 n
0000016262 00000 n
0000016455 00000 n
0000016499 00000 n
0000016691 00000 n
0000016735 00000 n
0000016929 00000 n
0000016973 00000 n
0000017167 00000 n
0000017211 00000 n
0000017405 00000 n
0000000150 00001 f
0000000294 00001 f
0000017449 00000 n
0000017642 00000 n
0000017685 00000 n
0000017875 00000 n
0000017918 00000 n
0000018109 00000 n
0000018152 00000 n
0000018343 00000 n
0000018386 00000 n
0000018578 00000 n
0000018622 00000 n
0000018815 00000 n
0000018858 00000 n
0000019051 00000 n
0000019095 00000 n
0000019309 00000 n
0000019334 00000 n
0000019524 00000 n
0000019846 00000 n
0000019889 00000 n
0000020081 00000 n
0000020126 00000 n
0000020320 00000 n
0000020365 00000 n
0000020558 00000 n
0000020603 00000 n
0000020795 00000 n
0000020840 00000 n
0000021032 00000 n
0000021077 00000 n
0000021271 00000 n
0000021316 00000 n
0000021510 00000 n
0000021555 00000 n
0000021748 00000 n
0000021793 00000 n
0000021986 00000 n
0000022031 00000 n
0000022224 00000 n
0000022269 00000 n
0000022462 00000 n
0000022507 00000 n
0000022700 00000 n
0000022745 00000 n
0000022937 00000 n
0000022982 00000 n
0000023174 00000 n
0000023219 00000 n
0000023413 00000 n
0000023458 00000 n
0000023651 00000 n
0000023696 00000 n
0000023890 00000 n
0000023935 00000 n
0000024129 00000 n
0000024174 00000 n
0000024368 00000 n
0000024413 00000 n
0000024607 00000 n
0000024652 00000 n
0000024846 00000 n
0000024891 00000 n
0000025085 00000 n
0000025130 00000 n
0000025323 00000 n
0000025368 00000 n
0000025562 00000 n
0000025607 00000 n
0000026643 00000 n
0000027771 00000 n
0000027964 00000 n
0000028008 00000 n
0000028200 00000 n
0000028244 00000 n
0000028436 00000 n
0000028480 00000 n
0000028672 00000 n
0000028716 00000 n
0000028909 00000 n
0000028953 00000 n
0000029146 00000 n
0000029190 00000 n
0000029383 00000 n
0000029428 00000 n
0000029621 00000 n
0000029666 00000 n
0000029861 00000 n
0000029906 00000 n
0000030101 00000 n
0000030146 00000 n
0000030340 00000 n
0000030384 00000 n
0000030578 00000 n
0000030622 00000 n
0000030816 00000 n
0000030860 00000 n
0000031074 00000 n
0000031099 00000 n
0000031291 00000 n
0000031613 00000 n
0000031656 00000 n
0000031847 00000 n
0000031890 00000 n
0000032082 00000 n
0000032125 00000 n
0000032317 00000 n
0000032360 00000 n
0000032552 00000 n
0000032595 00000 n
0000032787 00000 n
0000032830 00000 n
0000033022 00000 n
0000033065 00000 n
0000033257 00000 n
0000033300 00000 n
0000033490 00000 n
0000033533 00000 n
0000033725 00000 n
0000033768 00000 n
0000033962 00000 n
0000034007 00000 n
0000034201 00000 n
0000034246 00000 n
0000034440 00000 n
0000034485 00000 n
0000034680 00000 n
0000034725 00000 n
0000034921 00000 n
0000034966 00000 n
0000035161 00000 n
0000035205 00000 n
0000035398 00000 n
0000035442 00000 n
0000035635 00000 n
0000035679 00000 n
0000035873 00000 n
0000035917 00000 n
0000036111 00000 n
0000036155 00000 n
0000036348 00000 n
0000036392 00000 n
0000036584 00000 n
0000036628 00000 n
0000000363 00001 f
0000037695 00000 n
0000037888 00000 n
0000037932 00000 n
0000038125 00000 n
0000038169 00000 n
0000038362 00000 n
0000038406 00000 n
0000038600 00000 n
0000038644 00000 n
0000038839 00000 n
0000038884 00000 n
0000039080 00000 n
0000039125 00000 n
0000039321 00000 n
0000039366 00000 n
0000039562 00000 n
0000039607 00000 n
0000039803 00000 n
0000039848 00000 n
0000040044 00000 n
0000040089 00000 n
0000040285 00000 n
0000040330 00000 n
0000040526 00000 n
0000040571 00000 n
0000040767 00000 n
0000040812 00000 n
0000041008 00000 n
0000041053 00000 n
0000041248 00000 n
0000041293 00000 n
0000041488 00000 n
0000041533 00000 n
0000041747 00000 n
0000041772 00000 n
0000041963 00000 n
0000042285 00000 n
0000042328 00000 n
0000042521 00000 n
0000042566 00000 n
0000042760 00000 n
0000042805 00000 n
0000042999 00000 n
0000043044 00000 n
0000043240 00000 n
0000043285 00000 n
0000043480 00000 n
0000043525 00000 n
0000043720 00000 n
0000043765 00000 n
0000043961 00000 n
0000044006 00000 n
0000044202 00000 n
0000044247 00000 n
0000044443 00000 n
0000044488 00000 n
0000044683 00000 n
0000044727 00000 n
0000044922 00000 n
0000044967 00000 n
0000045163 00000 n
0000045208 00000 n
0000045403 00000 n
0000045448 00000 n
0000045644 00000 n
0000045689 00000 n
0000045885 00000 n
0000045930 00000 n
0000000432 00001 f
0000047002 00000 n
0000047196 00000 n
0000047241 00000 n
0000047436 00000 n
0000047481 00000 n
0000047677 00000 n
0000047722 00000 n
0000047917 00000 n
0000047962 00000 n
0000048157 00000 n
0000048202 00000 n
0000048397 00000 n
0000048442 00000 n
0000048637 00000 n
0000048682 00000 n
0000048877 00000 n
0000048922 00000 n
0000049117 00000 n
0000049162 00000 n
0000049358 00000 n
0000049403 00000 n
0000049598 00000 n
0000049643 00000 n
0000049838 00000 n
0000049883 00000 n
0000050077 00000 n
0000050122 00000 n
0000050317 00000 n
0000050362 00000 n
0000050558 00000 n
0000050603 00000 n
0000050797 00000 n
0000050842 00000 n
0000051037 00000 n
0000051082 00000 n
0000051275 00000 n
0000051320 00000 n
0000051514 00000 n
0000051559 00000 n
0000051754 00000 n
0000051799 00000 n
0000051995 00000 n
0000052040 00000 n
0000052235 00000 n
0000052280 00000 n
0000052494 00000 n
0000052519 00000 n
0000052709 00000 n
0000053031 00000 n
0000053074 00000 n
0000053264 00000 n
0000053307 00000 n
0000053497 00000 n
0000053540 00000 n
0000053732 00000 n
0000053775 00000 n
0000053966 00000 n
0000054009 00000 n
0000054201 00000 n
0000054244 00000 n
0000054436 00000 n
0000054479 00000 n
0000054671 00000 n
0000054714 00000 n
0000054906 00000 n
0000054949 00000 n
0000055140 00000 n
0000055183 00000 n
0000000501 00001 f
0000056255 00000 n
0000056447 00000 n
0000056490 00000 n
0000056683 00000 n
0000056728 00000 n
0000056924 00000 n
0000056969 00000 n
0000057163 00000 n
0000057208 00000 n
0000057402 00000 n
0000057447 00000 n
0000057641 00000 n
0000057686 00000 n
0000057881 00000 n
0000057926 00000 n
0000058121 00000 n
0000058166 00000 n
0000058361 00000 n
0000058406 00000 n
0000058601 00000 n
0000058646 00000 n
0000058842 00000 n
0000058887 00000 n
0000059083 00000 n
0000059128 00000 n
0000059323 00000 n
0000059368 00000 n
0000059562 00000 n
0000059607 00000 n
0000059803 00000 n
0000059848 00000 n
0000060044 00000 n
0000060089 00000 n
0000060284 00000 n
0000060329 00000 n
0000060524 00000 n
0000060569 00000 n
0000060765 00000 n
0000060810 00000 n
0000061005 00000 n
0000061049 00000 n
0000061244 00000 n
0000061289 00000 n
0000061485 00000 n
0000061530 00000 n
0000061726 00000 n
0000061771 00000 n
0000061967 00000 n
0000062012 00000 n
0000062208 00000 n
0000062253 00000 n
0000062449 00000 n
0000062494 00000 n
0000062690 00000 n
0000062735 00000 n
0000062931 00000 n
0000062976 00000 n
0000063190 00000 n
0000063215 00000 n
0000063407 00000 n
0000063729 00000 n
0000063772 00000 n
0000063962 00000 n
0000064005 00000 n
0000064197 00000 n
0000064240 00000 n
0000064431 00000 n
0000064474 00000 n
0000000567 00001 f
0000065543 00000 n
0000065735 00000 n
0000065778 00000 n
0000065970 00000 n
0000066013 00000 n
0000066205 00000 n
0000066248 00000 n
0000066440 00000 n
0000066483 00000 n
0000066675 00000 n
0000066718 00000 n
0000066909 00000 n
0000066952 00000 n
0000067143 00000 n
0000067186 00000 n
0000067378 00000 n
0000067421 00000 n
0000067613 00000 n
0000067656 00000 n
0000067848 00000 n
0000067891 00000 n
0000068081 00000 n
0000068124 00000 n
0000068315 00000 n
0000068358 00000 n
0000068549 00000 n
0000068592 00000 n
0000068783 00000 n
0000068826 00000 n
0000069017 00000 n
0000069060 00000 n
0000069252 00000 n
0000069295 00000 n
0000069487 00000 n
0000069530 00000 n
0000069722 00000 n
0000069765 00000 n
0000069957 00000 n
0000070000 00000 n
0000070192 00000 n
0000070235 00000 n
0000070429 00000 n
0000070474 00000 n
0000070669 00000 n
0000070714 00000 n
0000070907 00000 n
0000070952 00000 n
0000071147 00000 n
0000071192 00000 n
0000071388 00000 n
0000071433 00000 n
0000071627 00000 n
0000071672 00000 n
0000071868 00000 n
0000071913 00000 n
0000072109 00000 n
0000072154 00000 n
0000072348 00000 n
0000072393 00000 n
0000072589 00000 n
0000072634 00000 n
0000072829 00000 n
0000072874 00000 n
0000073070 00000 n
0000073115 00000 n
0000000000 00001 f
0000074187 00000 n
0000074383 00000 n
0000074428 00000 n
0000074624 00000 n
0000074669 00000 n
0000074883 00000 n
0000074908 00000 n
0000075099 00000 n
0000075421 00000 n
0000075464 00000 n
0000075656 00000 n
0000075699 00000 n
0000075888 00000 n
0000075931 00000 n
0000076122 00000 n
0000076165 00000 n
0000076356 00000 n
0000076399 00000 n
0000076590 00000 n
0000076633 00000 n
0000076822 00000 n
0000076865 00000 n
0000077056 00000 n
0000077099 00000 n
0000077292 00000 n
0000077337 00000 n
0000077530 00000 n
0000077575 00000 n
0000077770 00000 n
0000077815 00000 n
0000078011 00000 n
0000078056 00000 n
0000078252 00000 n
0000078297 00000 n
0000078492 00000 n
0000078537 00000 n
0000078732 00000 n
0000078777 00000 n
0000078972 00000 n
0000079017 00000 n
0000079213 00000 n
0000079258 00000 n
0000079453 00000 n
0000079498 00000 n
0000079694 00000 n
0000079739 00000 n
0000079935 00000 n
0000079980 00000 n
0000080176 00000 n
0000080221 00000 n
0000080416 00000 n
0000080461 00000 n
0000080657 00000 n
0000080702 00000 n
0000080898 00000 n
0000080943 00000 n
0000081139 00000 n
0000081184 00000 n
0000081380 00000 n
0000081425 00000 n
0000081620 00000 n
0000081665 00000 n
0000081860 00000 n
0000081905 00000 n
0000082100 00000 n
0000082145 00000 n
0000082340 00000 n
0000082385 00000 n
0000083457 00000 n
0000085191 00000 n
0000085387 00000 n
0000085432 00000 n
0000085627 00000 n
0000085672 00000 n
0000085866 00000 n
0000085911 00000 n
0000086106 00000 n
0000086151 00000 n
0000086346 00000 n
0000086391 00000 n
0000086586 00000 n
0000086631 00000 n
0000086826 00000 n
0000086871 00000 n
0000087066 00000 n
0000087111 00000 n
0000087312 00000 n
0000087337 00000 n
0000087528 00000 n
0000087666 00000 n
0000087709 00000 n
0000087901 00000 n
0000087944 00000 n
0000088136 00000 n
0000088179 00000 n
0000088371 00000 n
0000088414 00000 n
0000088606 00000 n
0000088649 00000 n
0000088840 00000 n
0000088883 00000 n
0000089075 00000 n
0000089118 00000 n
0000089310 00000 n
0000089353 00000 n
0000089545 00000 n
0000089588 00000 n
0000089780 00000 n
0000089823 00000 n
0000090015 00000 n
0000090058 00000 n
0000090250 00000 n
0000090293 00000 n
0000090484 00000 n
0000090527 00000 n
0000090717 00000 n
0000090878 00000 n
0000090969 00000 n
0000091063 00000 n
0000091130 00000 n
0000091217 00000 n
0000099230 00000 n
0000107902 00000 n
0000116743 00000 n
0000125731 00000 n
0000135506 00000 n
0000144312 00000 n
0000152744 00000 n
0000161188 00000 n
0000164961 00000 n
0000165048 00000 n
0000165086 00000 n
0000165183 00000 n
0000165214 00000 n
0000165316 00000 n
0000165342 00000 n
0000165421 00000 n
0000165456 00000 n
0000165635 00000 n
0000165688 00000 n
0000165723 00000 n
0000165767 00000 n
0000165811 00000 n
0000165901 00000 n
0000166051 00000 n
trailer
<</Size 713/Root 1 0 R/Info 3 0 R/ID[<9103C1CC6A92694F9125BDBA4A866BEA><6697B786532A2B409DE88CBAB271D41E>]>>
startxref
169571
%%EOF
1 0 obj<</Names 14 0 R/Outlines 5 0 R/Metadata 6333 0 R/Pages 2 0 R/SpiderInfo 698 0 R/StructTreeRoot 7 0 R/Type/Catalog>>endobj2 0 obj<</Count 408/Type/Pages/Kids[4701 0 R 4700 0 R 5944 0 R]>>endobj3 0 obj<</CreationDate(D:20061103204556-08'00')/Producer(Acrobat Web Capture 7.0)/ModDate(D:20061103211801-08'00')/Title(An Introduction to Scheme and its Implementation - Table of Contents)>>endobj5 0 obj<</First 710 0 R/Count 143/Last 710 0 R/Type/Outlines>>endobj7 0 obj<</K 9 0 R/ParentTree 12 0 R/ParentTreeNextKey 407/Type/StructTreeRoot/ClassMap 8 0 R>>endobj8 0 obj<</SpdrArt[<</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>><</O/WebCapture>>]>>endobj9 0 obj<</K[10 0 R 714 0 R 748 0 R 777 0 R 807 0 R 840 0 R 867 0 R 907 0 R 951 0 R 978 0 R 1013 0 R 1046 0 R 1076 0 R 1108 0 R 1145 0 R 1173 0 R 1199 0 R 1230 0 R 1269 0 R 1298 0 R 1326 0 R 1364 0 R 1397 0 R 1424 0 R 1462 0 R 1488 0 R 1514 0 R 1541 0 R 1569 0 R 1599 0 R 1631 0 R 1664 0 R 1696 0 R 1724 0 R 1760 0 R 1790 0 R 1824 0 R 1863 0 R 1895 0 R 1922 0 R 1948 0 R 1975 0 R 2002 0 R 2029 0 R 2057 0 R 2085 0 R 2161 0 R 2191 0 R 2218 0 R 2252 0 R 2280 0 R 2313 0 R 2339 0 R 2370 0 R 2408 0 R 2434 0 R 2468 0 R 2497 0 R 2524 0 R 2556 0 R 2593 0 R 2629 0 R 2660 0 R 2695 0 R 2728 0 R 2764 0 R 2805 0 R 2838 0 R 2874 0 R 2902 0 R 2937 0 R 2965 0 R 3006 0 R 3039 0 R 3066 0 R 3093 0 R 3119 0 R 3145 0 R 3182 0 R 3224 0 R 3255 0 R 3287 0 R 3313 0 R 3343 0 R 3371 0 R 3406 0 R 3436 0 R 3467 0 R 3493 0 R 3519 0 R 3546 0 R 3596 0 R 3642 0 R 3674 0 R 3706 0 R 3738 0 R 3765 0 R 3807 0 R 3842 0 R 3885 0 R 3917 0 R 3953 0 R 3988 0 R 4021 0 R 4073 0 R 4137 0 R 4163 0 R 4203 0 R 4232 0 R 4266 0 R 4292 0 R 4322 0 R 4349 0 R 4383 0 R 4457 0 R 4518 0 R 4563 0 R 4589 0 R 4615 0 R 4641 0 R 4678 0 R 4739 0 R 4795 0 R 4832 0 R 4871 0 R 4938 0 R 5063 0 R 5089 0 R 5132 0 R 5287 0 R 5313 0 R 5341 0 R 5586 0 R 5612 0 R 5639 0 R 5666 0 R 5692 0 R 5720 0 R 5746 0 R 5789 0 R 5844 0 R 6150 0 R]/P 7 0 R/S/Document>>endobj11 0 obj<</Annots 18 0 R/Parent 751 0 R/ID 704 0 R/StructParents 0/Contents 688 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 684 0 R/T1_1 685 0 R/T1_2 686 0 R/T1_3 687 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj12 0 obj<</Kids[1827 0 R 2385 0 R 2940 0 R 3560 0 R 3933 0 R 4402 0 R 4754 0 R 4977 0 R 5239 0 R 5695 0 R 5982 0 R 5983 0 R]>>endobj15 0 obj<</Kids[4711 0 R 4712 0 R 5502 0 R 5503 0 R 5354 0 R 6039 0 R 6040 0 R 5855 0 R 4471 0 R 4472 0 R 1437 0 R 362 0 R 431 0 R 500 0 R 566 0 R 635 0 R 636 0 R 218 0 R 6158 0 R 6159 0 R]>>endobj17 0 obj<</Rect[50.0 652.154 105.202 667.154]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ö°∏Hæ≠¬[ePf…ÏSEC1)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_2.html#SEC1)/S/URI>>/Border[0 0 0]>>endobj20 0 obj<</Rect[90.0 633.354 325.256 648.354]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ω˛ë}çDN[∞qo∫fSEC2)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_3.html#SEC2)/S/URI>>/Border[0 0 0]>>endobj22 0 obj<</Rect[90.0 614.554 217.554 629.554]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÉπDÒLM˙%H’^!’SEC3)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_4.html#SEC3)/S/URI>>/Border[0 0 0]>>endobj24 0 obj<</Rect[90.0 595.754 171.256 610.754]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(÷ﬂªTD_í\(\nÄ…«ìSEC4)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_5.html#SEC4)/S/URI>>/Border[0 0 0]>>endobj26 0 obj<</Rect[90.0 576.954 201.972 591.954]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(÷ﬂªTD_í\(\nÄ…«ìSEC5)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_5.html#SEC5)/S/URI>>/Border[0 0 0]>>endobj28 0 obj<</Rect[90.0 558.154 216.0 573.154]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(´∑√P£…ßúnC¥[≥ﬁöSEC6)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_6.html#SEC6)/S/URI>>/Border[0 0 0]>>endobj30 0 obj<</Rect[90.0 539.354 214.054 554.354]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(–˛<ä‰⁄D‡\r+û©‡€SEC7)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_7.html#SEC7)/S/URI>>/Border[0 0 0]>>endobj32 0 obj<</Rect[50.0 520.554 119.216 535.554]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D( ÔQ€`£<„˘tL£1ˇSEC8)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_8.html#SEC8)/S/URI>>/Border[0 0 0]>>endobj34 0 obj<</Rect[90.0 501.754 244.742 516.754]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(p±“äE∆0·Ìü≈ôV”SEC9)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_9.html#SEC9)/S/URI>>/Border[0 0 0]>>endobj36 0 obj<</Rect[90.0 482.954 219.864 497.954]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D('\\\\oÍŒ‘¢˙><«íq›SEC10)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_10.html#SEC10)/S/URI>>/Border[0 0 0]>>endobj38 0 obj<</Rect[130.0 464.154 296.838 479.154]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(#ÓŸøûÙ^Î$‚©7:≠SEC11)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_11.html#SEC11)/S/URI>>/Border[0 0 0]>>endobj40 0 obj<</Rect[170.0 445.354 356.634 460.354]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(m%!='N÷¸Xüy∏®h¯SEC12)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_12.html#SEC12)/S/URI>>/Border[0 0 0]>>endobj42 0 obj<</Rect[170.0 426.554 483.782 441.554]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∏ﬂ·&T/gs˜Ôoƒ b’SEC13)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_13.html#SEC13)/S/URI>>/Border[0 0 0]>>endobj44 0 obj<</Rect[170.0 407.754 366.336 422.754]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÕoÂtv-=»ïÚ Õ$Ø/SEC14)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_14.html#SEC14)/S/URI>>/Border[0 0 0]>>endobj46 0 obj<</Rect[170.0 388.954 343.782 403.954]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∏âó¬◊Çç¡^odÛ5ŸoESEC15)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_15.html#SEC15)/S/URI>>/Border[0 0 0]>>endobj48 0 obj<</Rect[170.0 370.154 328.284 385.154]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Dï∂J‚∆MìË∫·i SEC16)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_16.html#SEC16)/S/URI>>/Border[0 0 0]>>endobj50 0 obj<</Rect[170.0 351.354 250.5 366.354]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∑µîÄr˝2">ÓØ˙0\\\\SEC17)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_17.html#SEC17)/S/URI>>/Border[0 0 0]>>endobj52 0 obj<</Rect[170.0 332.554 364.81 347.554]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÔwÑyÃ˚|¯ä2vø|ÃSEC18)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_18.html#SEC18)/S/URI>>/Border[0 0 0]>>endobj54 0 obj<</Rect[130.0 313.686 308.626 328.754]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∂˘‚6∑\)iÒüx˜dd;ˇSEC19)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_19.html#SEC19)/S/URI>>/Border[0 0 0]>>endobj56 0 obj<</Rect[130.0 294.819 461.1 309.886]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(˘Fìhˆ?X˘;å>∏ˇSEC20)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_20.html#SEC20)/S/URI>>/Border[0 0 0]>>endobj58 0 obj<</Rect[170.0 276.019 203.6 291.019]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Åıí«’ç*LvY€ ∆7øSEC21)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_21.html#SEC21)/S/URI>>/Border[0 0 0]>>endobj60 0 obj<</Rect[170.0 257.152 239.216 272.219]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ˇ¥J%LZKa:b¸z–SEC22)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_22.html#SEC22)/S/URI>>/Border[0 0 0]>>endobj62 0 obj<</Rect[170.0 238.284 300.956 253.352]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ˇ¥J%LZKa:b¸z–SEC23)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_22.html#SEC23)/S/URI>>/Border[0 0 0]>>endobj64 0 obj<</Rect[130.0 219.484 247.446 234.484]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(4bÙµ–¨ZäŸxpñæSEC24)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_23.html#SEC24)/S/URI>>/Border[0 0 0]>>endobj66 0 obj<</Rect[130.0 200.684 355.904 215.684]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(&ià,‹Ωªæ≠PÚ0àFûSEC25)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_24.html#SEC25)/S/URI>>/Border[0 0 0]>>endobj68 0 obj<</Rect[170.0 181.884 317.756 196.884]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(inƒ#;4”Z¡–ySeèSEC26)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_25.html#SEC26)/S/URI>>/Border[0 0 0]>>endobj70 0 obj<</Rect[170.0 163.084 492.77 178.084]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∆GD†TH˙Ì˙ \(çs|\\SEC27)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_26.html#SEC27)/S/URI>>/Border[0 0 0]>>endobj72 0 obj<</Rect[170.0 144.217 260.762 159.284]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(VÜg!M…ÿZ†∆’‚ò]\\SEC28)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_27.html#SEC28)/S/URI>>/Border[0 0 0]>>endobj74 0 obj<</Rect[170.0 125.417 350.418 140.417]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÏÑØ`	ìîë@$\\0›˚˛€SEC29)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_28.html#SEC29)/S/URI>>/Border[0 0 0]>>endobj76 0 obj<</Rect[130.0 106.617 320.918 121.617]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÚQô\n!aêÅ?ña,÷ﬁSEC30)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_29.html#SEC30)/S/URI>>/Border[0 0 0]>>endobj78 0 obj<</Rect[170.0 87.8169 300.256 102.817]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Wg¬@ÉÆ'πæÓÎáøıÅSEC31)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_30.html#SEC31)/S/URI>>/Border[0 0 0]>>endobj80 0 obj<</Rect[170.0 69.0169 474.486 84.0169]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(/@é∆É^x‚ÒW5V|SEC32)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_31.html#SEC32)/S/URI>>/Border[0 0 0]>>endobj82 0 obj<</Rect[170.0 50.2169 283.918 65.2169]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Àz@ó"Mü‚~ÿ©aCSEC33)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_32.html#SEC33)/S/URI>>/Border[0 0 0]>>endobj84 0 obj<</Annots 87 0 R/Parent 751 0 R/ID 704 0 R/StructParents 1/Contents 689 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 684 0 R/T1_1 686 0 R/T1_2 687 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj86 0 obj<</Rect[130.0 749.6 365.256 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(-Lí∞[“Fn:…]f8@wSEC34)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_33.html#SEC34)/S/URI>>/Border[0 0 0]>>endobj89 0 obj<</Rect[130.0 730.8 338.194 745.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∞÷\)W◊nAÇ“¿\\¡∞Ω”SEC35)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_34.html#SEC35)/S/URI>>/Border[0 0 0]>>endobj91 0 obj<</Rect[170.0 712.0 260.608 727.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∞÷\)W◊nAÇ“¿\\¡∞Ω”SEC36)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_34.html#SEC36)/S/URI>>/Border[0 0 0]>>endobj93 0 obj<</Rect[130.0 693.2 273.878 708.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‹}ˇp`‚A‰ZÙ˘ÎÿûSEC37)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_35.html#SEC37)/S/URI>>/Border[0 0 0]>>endobj95 0 obj<</Rect[90.0 674.4 172.446 689.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(õªÖ\(ùO¯»'≈´ÍSEC38)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_36.html#SEC38)/S/URI>>/Border[0 0 0]>>endobj97 0 obj<</Rect[130.0 655.533 224.668 670.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÛI7	K_¡Dª™ÁciSEC39)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_37.html#SEC39)/S/URI>>/Border[0 0 0]>>endobj99 0 obj<</Rect[130.0 636.733 230.338 651.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(˝M	„≠rÏ“¢™ÂÃeÆÚSEC40)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_38.html#SEC40)/S/URI>>/Border[0 0 0]>>endobj101 0 obj<</Rect[130.0 617.933 332.202 632.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÎŸß%¢6•°Wª<A`ÙSEC41)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_39.html#SEC41)/S/URI>>/Border[0 0 0]>>endobj103 0 obj<</Rect[130.0 599.133 388.958 614.133]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(¯ß=÷èIWi¿M9˙QSEC42)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_40.html#SEC42)/S/URI>>/Border[0 0 0]>>endobj105 0 obj<</Rect[130.0 580.333 180.4 595.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(?TÉW\n¨ÿUΩÆ%|DUSEC43)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_41.html#SEC43)/S/URI>>/Border[0 0 0]>>endobj107 0 obj<</Rect[170.0 561.533 203.6 576.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(:ºã˚hÖIN’r\rMc6SEC44)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_42.html#SEC44)/S/URI>>/Border[0 0 0]>>endobj109 0 obj<</Rect[170.0 542.733 220.4 557.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÀU`ˆÏY+dËw¶ßSEC45)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_43.html#SEC45)/S/URI>>/Border[0 0 0]>>endobj111 0 obj<</Rect[170.0 523.933 228.8 538.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(»!ÖÙú◊yÕ*|˙#|ÏΩ±SEC46)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_44.html#SEC46)/S/URI>>/Border[0 0 0]>>endobj113 0 obj<</Rect[170.0 505.133 220.4 520.133]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ˆ≥ÉXÔä9Cd^Æb#õaÿSEC47)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_45.html#SEC47)/S/URI>>/Border[0 0 0]>>endobj115 0 obj<</Rect[90.0 486.333 358.282 501.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ì\\\\âÂ%$ñq˘‘”èaSEC48)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html#SEC48)/S/URI>>/Border[0 0 0]>>endobj117 0 obj<</Rect[130.0 467.533 180.4 482.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ì\\\\âÂ%$ñq˘‘”èaSEC49)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html#SEC49)/S/URI>>/Border[0 0 0]>>endobj119 0 obj<</Rect[130.0 448.733 208.96 463.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ì\\\\âÂ%$ñq˘‘”èaSEC50)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html#SEC50)/S/URI>>/Border[0 0 0]>>endobj121 0 obj<</Rect[130.0 429.865 266.416 444.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ì\\\\âÂ%$ñq˘‘”èaSEC51)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html#SEC51)/S/URI>>/Border[0 0 0]>>endobj123 0 obj<</Rect[170.0 411.065 220.4 426.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ì\\\\âÂ%$ñq˘‘”èaSEC52)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html#SEC52)/S/URI>>/Border[0 0 0]>>endobj125 0 obj<</Rect[170.0 392.265 228.8 407.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ì\\\\âÂ%$ñq˘‘”èaSEC53)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html#SEC53)/S/URI>>/Border[0 0 0]>>endobj127 0 obj<</Rect[90.0 373.465 312.012 388.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∆ã¸ó©0»¶M†ó$`OSEC54)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_47.html#SEC54)/S/URI>>/Border[0 0 0]>>endobj129 0 obj<</Rect[130.0 354.665 219.81 369.665]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(`•cöulå∞7˛8DCW‚SEC55)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_48.html#SEC55)/S/URI>>/Border[0 0 0]>>endobj131 0 obj<</Rect[130.0 335.865 238.486 350.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(íÅ¥çÕ◊&¥ãÚâLº‰SEC56)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_49.html#SEC56)/S/URI>>/Border[0 0 0]>>endobj133 0 obj<</Rect[130.0 317.065 347.756 332.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D([Dd˙7¸…A∂Û-rudSEC57)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_50.html#SEC57)/S/URI>>/Border[0 0 0]>>endobj135 0 obj<</Rect[90.0 298.265 205.878 313.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(?úØG’\\0À÷™ù$á ø˙SEC58)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_51.html#SEC58)/S/URI>>/Border[0 0 0]>>endobj137 0 obj<</Rect[130.0 279.465 331.04 294.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(≥æ\)~ˇz_dl-ã\)∑G˚SEC59)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_52.html#SEC59)/S/URI>>/Border[0 0 0]>>endobj139 0 obj<</Rect[90.0 260.665 285.944 275.665]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ù0Ì\(kÛ∫ØaX	◊ÔSEC60)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_53.html#SEC60)/S/URI>>/Border[0 0 0]>>endobj141 0 obj<</Rect[130.0 241.865 155.2 256.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(õß•ãæ‡rãÙ=¿c¨opBSEC61)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_54.html#SEC61)/S/URI>>/Border[0 0 0]>>endobj143 0 obj<</Rect[170.0 222.998 323.524 238.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D( \\ÀCP´jûœ2\(diòŒSEC62)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_55.html#SEC62)/S/URI>>/Border[0 0 0]>>endobj145 0 obj<</Rect[130.0 204.198 209.702 219.198]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‹…a-©¬˝°‹ÀúIúúSEC63)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_56.html#SEC63)/S/URI>>/Border[0 0 0]>>endobj147 0 obj<</Rect[170.0 185.398 424.352 200.398]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(9Qr;|…Û‘”…ﬂö‡\\\\⁄SEC64)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_57.html#SEC64)/S/URI>>/Border[0 0 0]>>endobj151 0 obj<</Rect[170.0 166.53 370.172 181.598]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(§}}©”®ê˘ü¡SEC65)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_58.html#SEC65)/S/URI>>/Border[0 0 0]>>endobj153 0 obj<</Rect[130.0 147.73 163.6 162.73]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(_∞é±≈'HÕúÑÄÊûpSEC66)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_59.html#SEC66)/S/URI>>/Border[0 0 0]>>endobj155 0 obj<</Rect[90.0 128.93 209.742 143.93]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ÿ1´‘?jµ3ÓF'‹˘èÆ¯SEC67)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_60.html#SEC67)/S/URI>>/Border[0 0 0]>>endobj157 0 obj<</Rect[130.0 110.13 275.81 125.13]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®l<¯wÊ±d≥i∞9©™µSEC68)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_61.html#SEC68)/S/URI>>/Border[0 0 0]>>endobj159 0 obj<</Rect[130.0 91.3304 271.89 106.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ˇÏ,•©Ãè˘ÿh≠˛b§÷SEC69)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_62.html#SEC69)/S/URI>>/Border[0 0 0]>>endobj161 0 obj<</Rect[130.0 72.463 341.764 87.5304]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(¯º•”ó‘°∏WM&⁄ÈZSEC70)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_63.html#SEC70)/S/URI>>/Border[0 0 0]>>endobj163 0 obj<</Rect[130.0 53.5956 347.196 68.663]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(:’Z\\pˆdê‚Òi_\r6SEC71)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_64.html#SEC71)/S/URI>>/Border[0 0 0]>>endobj165 0 obj<</Annots 168 0 R/Parent 751 0 R/ID 704 0 R/StructParents 2/Contents 690 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 684 0 R/T1_1 686 0 R/T1_2 687 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj167 0 obj<</Rect[130.0 749.6 228.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(—âø0Ê‘sﬁ”cQÂ!&SEC72)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_65.html#SEC72)/S/URI>>/Border[0 0 0]>>endobj170 0 obj<</Rect[130.0 730.733 364.682 745.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(a©¶%ùa§Zc—∫ß˜òSEC73)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_66.html#SEC73)/S/URI>>/Border[0 0 0]>>endobj172 0 obj<</Rect[130.0 711.865 346.286 726.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(K¯^¬F8%]m¯ìÕ~©∏SEC74)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_67.html#SEC74)/S/URI>>/Border[0 0 0]>>endobj174 0 obj<</Rect[130.0 693.065 528.51 708.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÖøÔWØ”3ä∆é4/{ˆ6SEC75)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_68.html#SEC75)/S/URI>>/Border[0 0 0]>>endobj176 0 obj<</Rect[130.0 674.265 172.0 689.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(5ójÜøUÄº‚≥ï¯≥c@SEC76)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_69.html#SEC76)/S/URI>>/Border[0 0 0]>>endobj178 0 obj<</Rect[90.0 655.465 224.54 670.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D('	Kπg™zRF†gn¨±ñSEC77)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_70.html#SEC77)/S/URI>>/Border[0 0 0]>>endobj180 0 obj<</Rect[130.0 636.665 268.404 651.665]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(~}9≈ø\nDÕ;Ïƒ-OSEC78)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_71.html#SEC78)/S/URI>>/Border[0 0 0]>>endobj182 0 obj<</Rect[130.0 617.865 318.986 632.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(\rmT#^_•ò—Åq∞∂tSEC79)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_72.html#SEC79)/S/URI>>/Border[0 0 0]>>endobj184 0 obj<</Rect[90.0 599.065 230.364 614.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(˛&‚!—IPÍ\\0[[‚Xè”SEC80)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_73.html#SEC80)/S/URI>>/Border[0 0 0]>>endobj186 0 obj<</Rect[90.0 580.265 131.986 595.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÅˆÜ'`{FAÜÕ©$DóSEC81)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_74.html#SEC81)/S/URI>>/Border[0 0 0]>>endobj188 0 obj<</Rect[90.0 561.465 168.568 576.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÒTíÇ®P¢Çÿ+]∏»SEC82)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_75.html#SEC82)/S/URI>>/Border[0 0 0]>>endobj190 0 obj<</Rect[90.0 542.665 200.824 557.665]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(YˆEàêŸ⁄ê\\\\^¬®\)-yıSEC83)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_76.html#SEC83)/S/URI>>/Border[0 0 0]>>endobj192 0 obj<</Rect[90.0 523.865 221.432 538.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(?'⁄\\\\Á‘?öøÈ9|π/≠SEC84)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_77.html#SEC84)/S/URI>>/Border[0 0 0]>>endobj194 0 obj<</Rect[50.0 505.065 202.81 520.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Q˚<˚‚‹df·§OÀ@;SEC85)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_79.html#SEC85)/S/URI>>/Border[0 0 0]>>endobj196 0 obj<</Rect[90.0 486.265 384.35 501.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(É2≤À∫m¶	◊v|˘çSEC86)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_80.html#SEC86)/S/URI>>/Border[0 0 0]>>endobj198 0 obj<</Rect[130.0 467.465 222.162 482.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(fo\\\\Öq0v%O›/!Í¿VÀSEC87)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_81.html#SEC87)/S/URI>>/Border[0 0 0]>>endobj200 0 obj<</Rect[130.0 448.665 375.35 463.665]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(´Îï9∞Ò‰˘^ìÃÆ±trSEC88)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_82.html#SEC88)/S/URI>>/Border[0 0 0]>>endobj202 0 obj<</Rect[130.0 429.865 266.864 444.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÑÅ'kFﬁx\\¯RáÚéwySEC89)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_83.html#SEC89)/S/URI>>/Border[0 0 0]>>endobj204 0 obj<</Rect[130.0 411.065 244.702 426.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‡ıï5Å\nz?,ê¡hgSEC90)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_84.html#SEC90)/S/URI>>/Border[0 0 0]>>endobj206 0 obj<</Rect[130.0 392.265 278.554 407.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(»ZGc0NÀá⁄YøSEC91)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_85.html#SEC91)/S/URI>>/Border[0 0 0]>>endobj208 0 obj<</Rect[130.0 373.465 297.594 388.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(3»ñBàF>E∞ΩBD^0nSEC92)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_86.html#SEC92)/S/URI>>/Border[0 0 0]>>endobj210 0 obj<</Rect[130.0 354.665 280.892 369.665]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(~'ı?5\r’{ﬂƒ≠\\=ò˜2SEC93)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_87.html#SEC93)/S/URI>>/Border[0 0 0]>>endobj212 0 obj<</Rect[130.0 335.865 195.324 350.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‹6ê¶¸mÍ©8úRùn!èSEC94)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_88.html#SEC94)/S/URI>>/Border[0 0 0]>>endobj214 0 obj<</Rect[130.0 317.065 315.08 332.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(J˝sòﬁ2›?ÂRtì]ä–SEC95)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_89.html#SEC95)/S/URI>>/Border[0 0 0]>>endobj216 0 obj<</Rect[170.0 298.198 240.546 313.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(?úG‹v#ñõI:êçÆASEC96)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_90.html#SEC96)/S/URI>>/Border[0 0 0]>>endobj219 0 obj<</Limits[(Ô1™+X÷¢¡‘≈êlêÑSEC68)(ˇÏ,•©Ãè˘ÿh≠˛b§÷SEC69)]/Names[]>>endobj220 0 obj<</Rect[170.0 279.33 276.162 294.398]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(o{ïbWc'7¥¥YÉ/SEC97)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_91.html#SEC97)/S/URI>>/Border[0 0 0]>>endobj222 0 obj<</Rect[130.0 260.53 312.756 275.53]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ºj\rﬁl¨V£¥T-%«SEC98)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_92.html#SEC98)/S/URI>>/Border[0 0 0]>>endobj224 0 obj<</Rect[130.0 241.73 212.446 256.73]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(òZè+áI⁄øWº÷i‰osëSEC99)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_93.html#SEC99)/S/URI>>/Border[0 0 0]>>endobj226 0 obj<</Rect[90.0 222.93 242.026 237.93]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(8 ˜€ÃÉ±j!¯\\\\^Y4 SEC100)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_94.html#SEC100)/S/URI>>/Border[0 0 0]>>endobj228 0 obj<</Rect[130.0 204.13 256.756 219.13]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(—I∆ÀèßEπMòÒ~n?•SEC101)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_95.html#SEC101)/S/URI>>/Border[0 0 0]>>endobj230 0 obj<</Rect[130.0 185.33 275.432 200.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(çkÓ\\0Sß∏√YÈŸm∫jSEC102)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_96.html#SEC102)/S/URI>>/Border[0 0 0]>>endobj232 0 obj<</Rect[90.0 166.463 374.522 181.53]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‚ÊzTÜ˙zIÂt%u∏SEC103)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_97.html#SEC103)/S/URI>>/Border[0 0 0]>>endobj234 0 obj<</Rect[90.0 147.663 491.66 162.663]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(≈	ÇÈ£Á¡\\C™†ƒà} SEC104)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_98.html#SEC104)/S/URI>>/Border[0 0 0]>>endobj236 0 obj<</Rect[130.0 128.863 256.378 143.863]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(≈	ÇÈ£Á¡\\C™†ƒà} SEC105)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_98.html#SEC105)/S/URI>>/Border[0 0 0]>>endobj238 0 obj<</Rect[130.0 110.063 379.606 125.063]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(,FÚf†[ö≈3àpK	;ÀÎSEC106)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_99.html#SEC106)/S/URI>>/Border[0 0 0]>>endobj240 0 obj<</Rect[90.0 91.263 337.674 106.263]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(π,ã’…6~|7´ò\r`-SEC107)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_100.html#SEC107)/S/URI>>/Border[0 0 0]>>endobj242 0 obj<</Rect[130.0 72.463 289.404 87.463]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(π,ã’…6~|7´ò\r`-SEC108)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_100.html#SEC108)/S/URI>>/Border[0 0 0]>>endobj244 0 obj<</Rect[130.0 53.663 275.432 68.663]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(π,ã’…6~|7´ò\r`-SEC109)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_100.html#SEC109)/S/URI>>/Border[0 0 0]>>endobj246 0 obj<</Annots 249 0 R/Parent 751 0 R/ID 704 0 R/StructParents 3/Contents 691 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 684 0 R/T1_1 686 0 R/T1_2 687 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj248 0 obj<</Rect[130.0 749.6 350.094 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(π,ã’…6~|7´ò\r`-SEC110)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_100.html#SEC110)/S/URI>>/Border[0 0 0]>>endobj251 0 obj<</Rect[90.0 730.8 265.742 745.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(=€∑‰[Œ‰yMèÃaMsSEC111)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_101.html#SEC111)/S/URI>>/Border[0 0 0]>>endobj253 0 obj<</Rect[130.0 712.0 169.676 727.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(\\—’ ¨$Úó7J´CR¥SEC112)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_102.html#SEC112)/S/URI>>/Border[0 0 0]>>endobj255 0 obj<</Rect[130.0 693.2 179.014 708.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(◊á¥◊ÕŸµK∫”gÈäáÄSEC113)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_103.html#SEC113)/S/URI>>/Border[0 0 0]>>endobj257 0 obj<</Rect[170.0 674.4 289.364 689.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(U*⁄|˙˝Ò∏ê‚ù‹˚“HÄSEC114)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_104.html#SEC114)/S/URI>>/Border[0 0 0]>>endobj259 0 obj<</Rect[130.0 655.6 194.946 670.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(aÇÛXíS&É∆‡˙¬≠OB€SEC115)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_105.html#SEC115)/S/URI>>/Border[0 0 0]>>endobj261 0 obj<</Rect[170.0 636.8 284.702 651.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(aÇÛXíS&É∆‡˙¬≠OB€SEC116)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_105.html#SEC116)/S/URI>>/Border[0 0 0]>>endobj263 0 obj<</Rect[170.0 618.0 279.662 633.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(aÇÛXíS&É∆‡˙¬≠OB€SEC117)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_105.html#SEC117)/S/URI>>/Border[0 0 0]>>endobj265 0 obj<</Rect[90.0 599.2 315.54 614.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(`æß\)¯Á8;∏úÆI7~SEC118)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#SEC118)/S/URI>>/Border[0 0 0]>>endobj267 0 obj<</Rect[130.0 580.4 285.162 595.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(`æß\)¯Á8;∏úÆI7~SEC119)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#SEC119)/S/URI>>/Border[0 0 0]>>endobj269 0 obj<</Rect[130.0 561.533 249.616 576.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(`æß\)¯Á8;∏úÆI7~SEC120)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#SEC120)/S/URI>>/Border[0 0 0]>>endobj271 0 obj<</Rect[170.0 542.733 195.2 557.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(`æß\)¯Á8;∏úÆI7~SEC121)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#SEC121)/S/URI>>/Border[0 0 0]>>endobj273 0 obj<</Rect[170.0 523.933 237.2 538.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(`æß\)¯Á8;∏úÆI7~SEC122)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#SEC122)/S/URI>>/Border[0 0 0]>>endobj275 0 obj<</Rect[130.0 505.065 319.21 520.133]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(`æß\)¯Á8;∏úÆI7~SEC123)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#SEC123)/S/URI>>/Border[0 0 0]>>endobj277 0 obj<</Rect[170.0 486.198 325.316 501.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(`æß\)¯Á8;∏úÆI7~SEC124)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#SEC124)/S/URI>>/Border[0 0 0]>>endobj279 0 obj<</Rect[170.0 467.33 316.916 482.398]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(`æß\)¯Á8;∏úÆI7~SEC125)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#SEC125)/S/URI>>/Border[0 0 0]>>endobj281 0 obj<</Rect[90.0 448.53 219.472 463.53]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(!†˝ì1¬Ñ®∏¡Ø‰ÅSEC126)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_107.html#SEC126)/S/URI>>/Border[0 0 0]>>endobj283 0 obj<</Rect[130.0 429.73 269.58 444.73]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(L\\0µXï—w&|dﬁÍ¨aSEC127)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_108.html#SEC127)/S/URI>>/Border[0 0 0]>>endobj285 0 obj<</Rect[130.0 410.93 262.608 425.93]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(=>Æ'´0"±B∫_˛òSEC128)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_109.html#SEC128)/S/URI>>/Border[0 0 0]>>endobj287 0 obj<</Rect[130.0 392.13 180.554 407.13]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Pc]•`\rS≠uíJVUSEC129)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_110.html#SEC129)/S/URI>>/Border[0 0 0]>>endobj289 0 obj<</Rect[90.0 373.33 221.432 388.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Pc]•`\rS≠uíJVUSEC130)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_110.html#SEC130)/S/URI>>/Border[0 0 0]>>endobj291 0 obj<</Rect[50.0 354.53 172.85 369.53]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(›Ä2ˇÈ?s√V5\(tRSEC131)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_111.html#SEC131)/S/URI>>/Border[0 0 0]>>endobj293 0 obj<</Limits[(˘Fìhˆ?X˘;å>∏ˇSEC20)(Ô1™+X÷¢¡‘≈êlêÑSEC127)]/Names[]>>endobj295 0 obj<</Rect[90.0 335.73 263.432 350.73]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÜıLjÕ3‡áwîä≤SEC132)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_112.html#SEC132)/S/URI>>/Border[0 0 0]>>endobj297 0 obj<</Rect[90.0 316.93 284.026 331.93]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÅÔrÂH˚íÓR‡ÚõI∞…SEC133)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_113.html#SEC133)/S/URI>>/Border[0 0 0]>>endobj299 0 obj<</Rect[130.0 298.13 279.31 313.13]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(E<z¯\\dÍHH6Nöà0SEC134)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_114.html#SEC134)/S/URI>>/Border[0 0 0]>>endobj301 0 obj<</Rect[130.0 279.33 194.918 294.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÖÏÿß\r\\ÛïVc˜íû∑rSEC135)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_115.html#SEC135)/S/URI>>/Border[0 0 0]>>endobj303 0 obj<</Rect[170.0 260.463 285.654 275.53]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÖÏÿß\r\\ÛïVc˜íû∑rSEC136)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_115.html#SEC136)/S/URI>>/Border[0 0 0]>>endobj305 0 obj<</Rect[170.0 241.596 365.734 256.663]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÖÏÿß\r\\ÛïVc˜íû∑rSEC137)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_115.html#SEC137)/S/URI>>/Border[0 0 0]>>endobj307 0 obj<</Rect[170.0 222.796 311.932 237.796]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÖÏÿß\r\\ÛïVc˜íû∑rSEC138)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_115.html#SEC138)/S/URI>>/Border[0 0 0]>>endobj309 0 obj<</Rect[130.0 203.996 250.148 218.996]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®≈u£ˆ˘Ln€u‹ÙœSEC139)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html#SEC139)/S/URI>>/Border[0 0 0]>>endobj311 0 obj<</Rect[170.0 185.196 390.878 200.196]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®≈u£ˆ˘Ln€u‹ÙœSEC140)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html#SEC140)/S/URI>>/Border[0 0 0]>>endobj313 0 obj<</Rect[130.0 166.396 346.594 181.396]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®≈u£ˆ˘Ln€u‹ÙœSEC141)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html#SEC141)/S/URI>>/Border[0 0 0]>>endobj315 0 obj<</Rect[170.0 147.596 218.216 162.596]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®≈u£ˆ˘Ln€u‹ÙœSEC142)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html#SEC142)/S/URI>>/Border[0 0 0]>>endobj317 0 obj<</Rect[170.0 128.796 369.892 143.796]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®≈u£ˆ˘Ln€u‹ÙœSEC143)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html#SEC143)/S/URI>>/Border[0 0 0]>>endobj319 0 obj<</Rect[130.0 109.996 315.472 124.996]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(¥´´3ŒFˇÆMÿhô_SEC144)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_117.html#SEC144)/S/URI>>/Border[0 0 0]>>endobj321 0 obj<</Rect[170.0 91.1956 402.148 106.196]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(¥´´3ŒFˇÆMÿhô_SEC145)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_117.html#SEC145)/S/URI>>/Border[0 0 0]>>endobj323 0 obj<</Rect[170.0 72.3956 357.81 87.3956]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(¥´´3ŒFˇÆMÿhô_SEC146)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_117.html#SEC146)/S/URI>>/Border[0 0 0]>>endobj325 0 obj<</Rect[90.0 53.5956 221.432 68.5956]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‘K˚ÄiA|◊´"3Bx>SEC147)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_118.html#SEC147)/S/URI>>/Border[0 0 0]>>endobj327 0 obj<</Annots 330 0 R/Parent 751 0 R/ID 704 0 R/StructParents 4/Contents 692 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 684 0 R/T1_1 686 0 R/T1_2 687 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj329 0 obj<</Rect[50.0 749.6 217.972 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(üóáÃΩø«]'\\\\òÏr‰ŒrSEC148)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_119.html#SEC148)/S/URI>>/Border[0 0 0]>>endobj332 0 obj<</Rect[90.0 730.733 278.748 745.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(áï\(0∆ËZ◊˝4¨ÂOf∂SEC149)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_120.html#SEC149)/S/URI>>/Border[0 0 0]>>endobj334 0 obj<</Rect[130.0 711.933 155.2 726.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(l˜?Òz„ås_Y“|Pc_ÊSEC150)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_121.html#SEC150)/S/URI>>/Border[0 0 0]>>endobj336 0 obj<</Rect[130.0 693.133 180.4 708.133]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(5Ñ7ëêˆ"N=>,SEC151)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_122.html#SEC151)/S/URI>>/Border[0 0 0]>>endobj338 0 obj<</Rect[170.0 674.333 305.296 689.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(5Ñ7ëêˆ"N=>,SEC152)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_122.html#SEC152)/S/URI>>/Border[0 0 0]>>endobj340 0 obj<</Rect[90.0 655.533 312.012 670.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(5Ñ7ëêˆ"N=>,SEC153)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_122.html#SEC153)/S/URI>>/Border[0 0 0]>>endobj342 0 obj<</Rect[90.0 636.665 304.396 651.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(û˘O©œ˜±‘k∏\(≤OSEC154)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_123.html#SEC154)/S/URI>>/Border[0 0 0]>>endobj344 0 obj<</Rect[130.0 617.865 398.296 632.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(û˘O©œ˜±‘k∏\(≤OSEC155)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_123.html#SEC155)/S/URI>>/Border[0 0 0]>>endobj346 0 obj<</Rect[130.0 599.065 413.066 614.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(û˘O©œ˜±‘k∏\(≤OSEC156)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_123.html#SEC156)/S/URI>>/Border[0 0 0]>>endobj348 0 obj<</Rect[130.0 580.198 224.794 595.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(æo6˘å]Ô“tnÿiASEC157)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_124.html#SEC157)/S/URI>>/Border[0 0 0]>>endobj350 0 obj<</Rect[130.0 561.33 304.706 576.398]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(æo6˘å]Ô“tnÿiASEC158)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_124.html#SEC158)/S/URI>>/Border[0 0 0]>>endobj352 0 obj<</Rect[130.0 542.463 378.696 557.53]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(§–Á+s˘QSñ}`≠NÿESEC159)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_125.html#SEC159)/S/URI>>/Border[0 0 0]>>endobj354 0 obj<</Rect[170.0 523.663 441.012 538.663]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(§–Á+s˘QSñ}`≠NÿESEC160)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_125.html#SEC160)/S/URI>>/Border[0 0 0]>>endobj356 0 obj<</Rect[90.0 504.796 299.902 519.863]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(iÏ›»Ü˙:∞—∞ˆT{T{˛SEC161)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_126.html#SEC161)/S/URI>>/Border[0 0 0]>>endobj358 0 obj<</Rect[130.0 485.928 266.332 500.996]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(iÏ›»Ü˙:∞—∞ˆT{T{˛SEC162)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_126.html#SEC162)/S/URI>>/Border[0 0 0]>>endobj360 0 obj<</Rect[170.0 467.061 466.016 482.128]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(iÏ›»Ü˙:∞—∞ˆT{T{˛SEC163)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_126.html#SEC163)/S/URI>>/Border[0 0 0]>>endobj364 0 obj<</Rect[130.0 448.261 163.6 463.261]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(iÏ›»Ü˙:∞—∞ˆT{T{˛SEC164)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_126.html#SEC164)/S/URI>>/Border[0 0 0]>>endobj366 0 obj<</Rect[90.0 429.461 200.824 444.461]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(iÏ›»Ü˙:∞—∞ˆT{T{˛SEC165)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_126.html#SEC165)/S/URI>>/Border[0 0 0]>>endobj368 0 obj<</Rect[130.0 410.593 199.132 425.661]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(iÏ›»Ü˙:∞—∞ˆT{T{˛SEC166)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_126.html#SEC166)/S/URI>>/Border[0 0 0]>>endobj370 0 obj<</Rect[90.0 391.793 366.864 406.793]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(iÏ›»Ü˙:∞—∞ˆT{T{˛SEC167)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_126.html#SEC167)/S/URI>>/Border[0 0 0]>>endobj372 0 obj<</Rect[90.0 372.993 143.648 387.993]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(iÏ›»Ü˙:∞—∞ˆT{T{˛SEC168)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_126.html#SEC168)/S/URI>>/Border[0 0 0]>>endobj374 0 obj<</Rect[50.0 354.193 168.986 369.193]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®ˆºU˙˜[Ù ’ ÷\rîSEC169)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC169)/S/URI>>/Border[0 0 0]>>endobj376 0 obj<</Rect[90.0 335.393 384.756 350.393]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®ˆºU˙˜[Ù ’ ÷\rîSEC170)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC170)/S/URI>>/Border[0 0 0]>>endobj378 0 obj<</Rect[90.0 316.593 225.338 331.593]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®ˆºU˙˜[Ù ’ ÷\rîSEC171)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC171)/S/URI>>/Border[0 0 0]>>endobj380 0 obj<</Rect[90.0 297.793 235.446 312.793]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®ˆºU˙˜[Ù ’ ÷\rîSEC172)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC172)/S/URI>>/Border[0 0 0]>>endobj382 0 obj<</Rect[130.0 278.993 370.296 293.993]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®ˆºU˙˜[Ù ’ ÷\rîSEC173)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC173)/S/URI>>/Border[0 0 0]>>endobj384 0 obj<</Rect[170.0 260.193 259.46 275.193]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®ˆºU˙˜[Ù ’ ÷\rîSEC174)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC174)/S/URI>>/Border[0 0 0]>>endobj386 0 obj<</Rect[170.0 241.326 390.71 256.393]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®ˆºU˙˜[Ù ’ ÷\rîSEC175)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC175)/S/URI>>/Border[0 0 0]>>endobj388 0 obj<</Rect[130.0 222.526 180.4 237.526]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®ˆºU˙˜[Ù ’ ÷\rîSEC176)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC176)/S/URI>>/Border[0 0 0]>>endobj390 0 obj<</Rect[90.0 203.726 212.864 218.726]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®ˆºU˙˜[Ù ’ ÷\rîSEC177)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC177)/S/URI>>/Border[0 0 0]>>endobj392 0 obj<</Rect[130.0 184.859 196.024 199.926]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®ˆºU˙˜[Ù ’ ÷\rîSEC178)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC178)/S/URI>>/Border[0 0 0]>>endobj394 0 obj<</Rect[130.0 166.059 146.8 181.059]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®ˆºU˙˜[Ù ’ ÷\rîSEC179)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC179)/S/URI>>/Border[0 0 0]>>endobj396 0 obj<</Rect[50.0 147.259 204.756 162.259]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®ÀF•ÊºTÔÂ§Ç˝vì˙SEC180)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_128.html#SEC180)/S/URI>>/Border[0 0 0]>>endobj398 0 obj<</Rect[90.0 128.459 174.0 143.459]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(é+Ï|Ÿ"géü&t<ùæSEC181)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_129.html#SEC181)/S/URI>>/Border[0 0 0]>>endobj400 0 obj<</Rect[130.0 109.659 264.4 124.659]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(é+Ï|Ÿ"géü&t<ùæSEC182)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_129.html#SEC182)/S/URI>>/Border[0 0 0]>>endobj402 0 obj<</Rect[90.0 90.8587 253.702 105.859]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC183)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC183)/S/URI>>/Border[0 0 0]>>endobj404 0 obj<</Rect[130.0 72.0587 257.134 87.0587]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC184)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC184)/S/URI>>/Border[0 0 0]>>endobj406 0 obj<</Rect[90.0 53.2587 334.202 68.2587]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC185)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC185)/S/URI>>/Border[0 0 0]>>endobj408 0 obj<</Annots 411 0 R/Parent 750 0 R/ID 704 0 R/StructParents 5/Contents 693 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 684 0 R/T1_1 686 0 R/T1_2 687 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj410 0 obj<</Rect[130.0 749.6 155.2 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC186)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC186)/S/URI>>/Border[0 0 0]>>endobj413 0 obj<</Rect[130.0 730.8 163.6 745.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC187)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC187)/S/URI>>/Border[0 0 0]>>endobj415 0 obj<</Rect[130.0 712.0 163.6 727.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC188)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC188)/S/URI>>/Border[0 0 0]>>endobj417 0 obj<</Rect[130.0 693.2 191.446 708.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC189)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC189)/S/URI>>/Border[0 0 0]>>endobj419 0 obj<</Rect[90.0 674.4 191.486 689.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC190)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC190)/S/URI>>/Border[0 0 0]>>endobj421 0 obj<</Rect[130.0 655.6 290.986 670.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC191)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC191)/S/URI>>/Border[0 0 0]>>endobj423 0 obj<</Rect[170.0 636.8 309.202 651.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC192)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC192)/S/URI>>/Border[0 0 0]>>endobj425 0 obj<</Rect[170.0 618.0 361.716 633.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC193)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC193)/S/URI>>/Border[0 0 0]>>endobj427 0 obj<</Rect[170.0 599.2 374.526 614.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC194)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC194)/S/URI>>/Border[0 0 0]>>endobj429 0 obj<</Rect[90.0 580.4 348.202 595.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC195)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC195)/S/URI>>/Border[0 0 0]>>endobj433 0 obj<</Rect[130.0 561.6 297.216 576.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC196)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC196)/S/URI>>/Border[0 0 0]>>endobj435 0 obj<</Rect[130.0 542.733 382.07 557.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC197)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC197)/S/URI>>/Border[0 0 0]>>endobj437 0 obj<</Rect[170.0 523.865 402.148 538.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC198)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC198)/S/URI>>/Border[0 0 0]>>endobj439 0 obj<</Rect[170.0 505.065 254.0 520.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC199)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC199)/S/URI>>/Border[0 0 0]>>endobj441 0 obj<</Rect[170.0 486.265 296.0 501.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC200)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC200)/S/URI>>/Border[0 0 0]>>endobj443 0 obj<</Rect[170.0 467.465 270.8 482.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC201)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html#SEC201)/S/URI>>/Border[0 0 0]>>endobj445 0 obj<</Rect[90.0 448.665 356.336 463.665]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Jú‰SFÜPÖ√Ú'SEC202)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_131.html#SEC202)/S/URI>>/Border[0 0 0]>>endobj447 0 obj<</Rect[90.0 429.865 308.148 444.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(·oƒ`æÅñó¿À»∞ì‘\\âSEC203)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_132.html#SEC203)/S/URI>>/Border[0 0 0]>>endobj449 0 obj<</Rect[50.0 411.065 227.688 426.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC204)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC204)/S/URI>>/Border[0 0 0]>>endobj451 0 obj<</Rect[90.0 392.265 205.472 407.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC205)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC205)/S/URI>>/Border[0 0 0]>>endobj453 0 obj<</Rect[130.0 373.465 473.728 388.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC206)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC206)/S/URI>>/Border[0 0 0]>>endobj455 0 obj<</Rect[130.0 354.665 500.958 369.665]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC207)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC207)/S/URI>>/Border[0 0 0]>>endobj457 0 obj<</Rect[90.0 335.865 253.324 350.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC208)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC208)/S/URI>>/Border[0 0 0]>>endobj459 0 obj<</Rect[130.0 317.065 203.5 332.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC209)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC209)/S/URI>>/Border[0 0 0]>>endobj461 0 obj<</Rect[130.0 298.265 359.446 313.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC210)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC210)/S/URI>>/Border[0 0 0]>>endobj463 0 obj<</Rect[130.0 279.465 316.228 294.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC211)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC211)/S/URI>>/Border[0 0 0]>>endobj465 0 obj<</Rect[90.0 260.665 353.998 275.665]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC212)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC212)/S/URI>>/Border[0 0 0]>>endobj467 0 obj<</Rect[90.0 241.865 317.892 256.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC213)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC213)/S/URI>>/Border[0 0 0]>>endobj469 0 obj<</Rect[130.0 222.998 312.854 238.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC214)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC214)/S/URI>>/Border[0 0 0]>>endobj471 0 obj<</Rect[170.0 204.13 276.316 219.198]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC215)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC215)/S/URI>>/Border[0 0 0]>>endobj473 0 obj<</Rect[130.0 185.263 329.654 200.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC216)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC216)/S/URI>>/Border[0 0 0]>>endobj475 0 obj<</Rect[130.0 166.396 321.254 181.463]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC217)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC217)/S/URI>>/Border[0 0 0]>>endobj477 0 obj<</Rect[170.0 147.596 330.202 162.596]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC218)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC218)/S/URI>>/Border[0 0 0]>>endobj479 0 obj<</Rect[170.0 128.796 266.824 143.796]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC219)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC219)/S/URI>>/Border[0 0 0]>>endobj481 0 obj<</Rect[130.0 109.996 192.972 124.996]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC220)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC220)/S/URI>>/Border[0 0 0]>>endobj483 0 obj<</Rect[130.0 91.1956 374.188 106.196]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC221)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC221)/S/URI>>/Border[0 0 0]>>endobj485 0 obj<</Rect[130.0 72.3956 293.688 87.3956]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC222)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC222)/S/URI>>/Border[0 0 0]>>endobj487 0 obj<</Rect[130.0 53.5956 405.688 68.5956]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC223)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC223)/S/URI>>/Border[0 0 0]>>endobj489 0 obj<</Annots 492 0 R/Parent 750 0 R/ID 704 0 R/StructParents 6/Contents 694 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 684 0 R/T1_1 686 0 R/T1_2 687 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj491 0 obj<</Rect[130.0 749.6 275.376 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC224)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC224)/S/URI>>/Border[0 0 0]>>endobj494 0 obj<</Rect[90.0 730.8 395.62 745.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC225)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC225)/S/URI>>/Border[0 0 0]>>endobj496 0 obj<</Rect[130.0 712.0 236.134 727.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC226)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC226)/S/URI>>/Border[0 0 0]>>endobj498 0 obj<</Rect[170.0 693.2 204.23 708.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC227)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC227)/S/URI>>/Border[0 0 0]>>endobj502 0 obj<</Rect[170.0 674.4 249.324 689.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC228)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC228)/S/URI>>/Border[0 0 0]>>endobj504 0 obj<</Rect[170.0 655.6 289.392 670.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC229)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC229)/S/URI>>/Border[0 0 0]>>endobj506 0 obj<</Rect[170.0 636.8 284.702 651.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC230)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC230)/S/URI>>/Border[0 0 0]>>endobj508 0 obj<</Rect[170.0 618.0 279.298 633.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC231)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC231)/S/URI>>/Border[0 0 0]>>endobj510 0 obj<</Rect[170.0 599.2 317.784 614.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC232)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC232)/S/URI>>/Border[0 0 0]>>endobj512 0 obj<</Rect[170.0 580.4 297.54 595.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC233)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC233)/S/URI>>/Border[0 0 0]>>endobj514 0 obj<</Rect[130.0 561.6 303.04 576.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC234)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC234)/S/URI>>/Border[0 0 0]>>endobj516 0 obj<</Rect[170.0 542.8 378.824 557.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC235)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC235)/S/URI>>/Border[0 0 0]>>endobj518 0 obj<</Rect[170.0 524.0 335.676 539.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC236)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC236)/S/URI>>/Border[0 0 0]>>endobj520 0 obj<</Rect[170.0 505.2 330.202 520.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC237)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC237)/S/URI>>/Border[0 0 0]>>endobj522 0 obj<</Rect[170.0 486.4 432.5 501.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC238)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC238)/S/URI>>/Border[0 0 0]>>endobj524 0 obj<</Rect[170.0 467.6 331.77 482.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC239)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC239)/S/URI>>/Border[0 0 0]>>endobj526 0 obj<</Rect[170.0 448.8 368.31 463.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC240)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC240)/S/URI>>/Border[0 0 0]>>endobj528 0 obj<</Rect[90.0 430.0 516.972 445.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC241)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC241)/S/URI>>/Border[0 0 0]>>endobj530 0 obj<</Rect[130.0 411.2 319.77 426.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC242)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC242)/S/URI>>/Border[0 0 0]>>endobj532 0 obj<</Rect[130.0 392.4 373.376 407.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC243)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC243)/S/URI>>/Border[0 0 0]>>endobj534 0 obj<</Rect[130.0 373.6 424.714 388.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC244)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC244)/S/URI>>/Border[0 0 0]>>endobj536 0 obj<</Rect[130.0 354.8 293.688 369.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC245)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC245)/S/URI>>/Border[0 0 0]>>endobj538 0 obj<</Rect[130.0 336.0 350.066 351.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC246)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC246)/S/URI>>/Border[0 0 0]>>endobj540 0 obj<</Rect[130.0 317.2 279.674 332.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC247)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC247)/S/URI>>/Border[0 0 0]>>endobj542 0 obj<</Rect[130.0 298.333 349.506 313.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC248)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC248)/S/URI>>/Border[0 0 0]>>endobj544 0 obj<</Rect[50.0 279.533 173.634 294.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÏY…ÉuuÜ˘^„Ñ=kSEC249)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_134.html#SEC249)/S/URI>>/Border[0 0 0]>>endobj546 0 obj<</Rect[90.0 260.733 170.5 275.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(cî˝ ¶#Ú÷\(ïaÙ\\0nSSEC250)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_135.html#SEC250)/S/URI>>/Border[0 0 0]>>endobj548 0 obj<</Rect[90.0 241.933 217.946 256.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(⁄˛Ù¥JÌr=jÊl$uâ«DSEC251)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_136.html#SEC251)/S/URI>>/Border[0 0 0]>>endobj550 0 obj<</Rect[130.0 223.065 232.816 238.133]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(˘ú∫≈á™Öàd	–öáSEC252)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_137.html#SEC252)/S/URI>>/Border[0 0 0]>>endobj552 0 obj<</Rect[130.0 204.265 188.8 219.265]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(⁄>Goô{—yüÆ¥lSEC253)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_138.html#SEC253)/S/URI>>/Border[0 0 0]>>endobj554 0 obj<</Rect[130.0 185.465 158.784 200.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ê“Ìƒ4üÔË–Z5ÖûSEC254)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_139.html#SEC254)/S/URI>>/Border[0 0 0]>>endobj556 0 obj<</Rect[130.0 166.598 302.354 181.665]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(–4›n˚imÈõLqSEC255)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html#SEC255)/S/URI>>/Border[0 0 0]>>endobj558 0 obj<</Rect[90.0 147.798 319.39 162.798]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(–4›n˚imÈõLqSEC256)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html#SEC256)/S/URI>>/Border[0 0 0]>>endobj560 0 obj<</Rect[130.0 128.998 216.702 143.998]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(–4›n˚imÈõLqSEC257)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html#SEC257)/S/URI>>/Border[0 0 0]>>endobj562 0 obj<</Rect[170.0 110.198 305.73 125.198]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(–4›n˚imÈõLqSEC258)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html#SEC258)/S/URI>>/Border[0 0 0]>>endobj564 0 obj<</Rect[170.0 91.3978 327.458 106.398]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(–4›n˚imÈõLqSEC259)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html#SEC259)/S/URI>>/Border[0 0 0]>>endobj568 0 obj<</Rect[170.0 72.5978 205.784 87.5978]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(–4›n˚imÈõLqSEC260)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html#SEC260)/S/URI>>/Border[0 0 0]>>endobj570 0 obj<</Rect[170.0 53.7978 309.972 68.7978]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(–4›n˚imÈõLqSEC261)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html#SEC261)/S/URI>>/Border[0 0 0]>>endobj572 0 obj<</Annots 575 0 R/Parent 750 0 R/ID 704 0 R/StructParents 7/Contents 695 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 684 0 R/T1_1 686 0 R/T1_2 687 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj574 0 obj<</Rect[130.0 749.6 173.54 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(–4›n˚imÈõLqSEC262)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html#SEC262)/S/URI>>/Border[0 0 0]>>endobj577 0 obj<</Rect[130.0 730.8 256.756 745.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(–4›n˚imÈõLqSEC263)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html#SEC263)/S/URI>>/Border[0 0 0]>>endobj579 0 obj<</Rect[50.0 712.0 302.0 727.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(dx#jÄÃ∏ÓÖ∆ËâΩ∫ SEC264)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_141.html#SEC264)/S/URI>>/Border[0 0 0]>>endobj581 0 obj<</Rect[90.0 693.2 343.526 708.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(dx#jÄÃ∏ÓÖ∆ËâΩ∫ SEC265)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_141.html#SEC265)/S/URI>>/Border[0 0 0]>>endobj583 0 obj<</Rect[90.0 674.4 269.256 689.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(dx#jÄÃ∏ÓÖ∆ËâΩ∫ SEC266)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_141.html#SEC266)/S/URI>>/Border[0 0 0]>>endobj585 0 obj<</Rect[90.0 655.6 246.702 670.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(dx#jÄÃ∏ÓÖ∆ËâΩ∫ SEC267)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_141.html#SEC267)/S/URI>>/Border[0 0 0]>>endobj587 0 obj<</Rect[90.0 636.8 233.5 651.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(dx#jÄÃ∏ÓÖ∆ËâΩ∫ SEC268)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_141.html#SEC268)/S/URI>>/Border[0 0 0]>>endobj589 0 obj<</Rect[90.0 618.0 315.554 633.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(dx#jÄÃ∏ÓÖ∆ËâΩ∫ SEC269)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_141.html#SEC269)/S/URI>>/Border[0 0 0]>>endobj591 0 obj<</Rect[90.0 599.133 424.432 614.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(dx#jÄÃ∏ÓÖ∆ËâΩ∫ SEC270)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_141.html#SEC270)/S/URI>>/Border[0 0 0]>>endobj593 0 obj<</Rect[50.0 580.333 207.5 595.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC271)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC271)/S/URI>>/Border[0 0 0]>>endobj595 0 obj<</Rect[90.0 561.533 205.486 576.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC272)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC272)/S/URI>>/Border[0 0 0]>>endobj597 0 obj<</Rect[130.0 542.733 258.674 557.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC273)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC273)/S/URI>>/Border[0 0 0]>>endobj599 0 obj<</Rect[130.0 523.933 277.546 538.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC274)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC274)/S/URI>>/Border[0 0 0]>>endobj601 0 obj<</Rect[90.0 505.133 278.944 520.133]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC275)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC275)/S/URI>>/Border[0 0 0]>>endobj603 0 obj<</Rect[90.0 486.333 268.094 501.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC276)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC276)/S/URI>>/Border[0 0 0]>>endobj605 0 obj<</Rect[90.0 467.533 353.256 482.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC277)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC277)/S/URI>>/Border[0 0 0]>>endobj607 0 obj<</Rect[130.0 448.733 207.378 463.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC278)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC278)/S/URI>>/Border[0 0 0]>>endobj609 0 obj<</Rect[130.0 429.933 393.62 444.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC279)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC279)/S/URI>>/Border[0 0 0]>>endobj611 0 obj<</Rect[130.0 411.133 265.338 426.133]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC280)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC280)/S/URI>>/Border[0 0 0]>>endobj613 0 obj<</Rect[130.0 392.333 208.554 407.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC281)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC281)/S/URI>>/Border[0 0 0]>>endobj615 0 obj<</Rect[130.0 373.533 329.486 388.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC282)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC282)/S/URI>>/Border[0 0 0]>>endobj617 0 obj<</Rect[90.0 354.733 168.568 369.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC283)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC283)/S/URI>>/Border[0 0 0]>>endobj619 0 obj<</Rect[130.0 335.933 427.052 350.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC284)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC284)/S/URI>>/Border[0 0 0]>>endobj621 0 obj<</Rect[130.0 317.133 245.514 332.133]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC285)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC285)/S/URI>>/Border[0 0 0]>>endobj623 0 obj<</Rect[130.0 298.333 200.378 313.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC286)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC286)/S/URI>>/Border[0 0 0]>>endobj625 0 obj<</Rect[130.0 279.533 277.742 294.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC287)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC287)/S/URI>>/Border[0 0 0]>>endobj627 0 obj<</Rect[90.0 260.733 327.972 275.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC288)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC288)/S/URI>>/Border[0 0 0]>>endobj629 0 obj<</Rect[90.0 241.933 249.054 256.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC289)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC289)/S/URI>>/Border[0 0 0]>>endobj631 0 obj<</Rect[90.0 223.133 382.768 238.133]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC290)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC290)/S/URI>>/Border[0 0 0]>>endobj633 0 obj<</Rect[90.0 204.333 425.174 219.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC291)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC291)/S/URI>>/Border[0 0 0]>>endobj637 0 obj<</Rect[130.0 185.533 430.972 200.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC292)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC292)/S/URI>>/Border[0 0 0]>>endobj639 0 obj<</Rect[130.0 166.733 244.31 181.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC293)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC293)/S/URI>>/Border[0 0 0]>>endobj641 0 obj<</Rect[90.0 147.933 462.54 162.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC294)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC294)/S/URI>>/Border[0 0 0]>>endobj643 0 obj<</Rect[130.0 129.133 348.54 144.133]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC295)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC295)/S/URI>>/Border[0 0 0]>>endobj645 0 obj<</Rect[170.0 110.333 276.96 125.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC296)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC296)/S/URI>>/Border[0 0 0]>>endobj647 0 obj<</Rect[90.0 91.5326 283.662 106.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC297)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC297)/S/URI>>/Border[0 0 0]>>endobj649 0 obj<</Rect[90.0 72.6652 378.386 87.7326]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC298)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC298)/S/URI>>/Border[0 0 0]>>endobj651 0 obj<</Rect[90.0 53.8652 274.338 68.8652]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC299)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC299)/S/URI>>/Border[0 0 0]>>endobj653 0 obj<</Annots 656 0 R/Parent 750 0 R/ID 704 0 R/StructParents 8/Contents 696 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 684 0 R/T1_1 686 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj655 0 obj<</Rect[90.0 749.6 282.878 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC300)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC300)/S/URI>>/Border[0 0 0]>>endobj658 0 obj<</Rect[130.0 730.8 239.256 745.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC301)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC301)/S/URI>>/Border[0 0 0]>>endobj660 0 obj<</Rect[170.0 712.0 233.392 727.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC302)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC302)/S/URI>>/Border[0 0 0]>>endobj662 0 obj<</Rect[170.0 693.2 263.716 708.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC303)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC303)/S/URI>>/Border[0 0 0]>>endobj664 0 obj<</Rect[130.0 674.4 184.432 689.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC304)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC304)/S/URI>>/Border[0 0 0]>>endobj666 0 obj<</Rect[90.0 655.6 391.364 670.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC305)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC305)/S/URI>>/Border[0 0 0]>>endobj668 0 obj<</Rect[130.0 636.8 276.216 651.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC306)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC306)/S/URI>>/Border[0 0 0]>>endobj670 0 obj<</Rect[130.0 618.0 341.512 633.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC307)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC307)/S/URI>>/Border[0 0 0]>>endobj672 0 obj<</Rect[130.0 599.2 311.566 614.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC308)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC308)/S/URI>>/Border[0 0 0]>>endobj674 0 obj<</Rect[130.0 580.4 226.054 595.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC309)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC309)/S/URI>>/Border[0 0 0]>>endobj676 0 obj<</Rect[130.0 561.6 387.796 576.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC310)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC310)/S/URI>>/Border[0 0 0]>>endobj678 0 obj<</Rect[130.0 542.8 288.284 557.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC311)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC311)/S/URI>>/Border[0 0 0]>>endobj680 0 obj<</Rect[130.0 524.0 205.04 539.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC312)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC312)/S/URI>>/Border[0 0 0]>>endobj682 0 obj<</Rect[50.0 505.2 132.04 520.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(˙\\0`…ºÎzºL~Jù…ä∆SEC313)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html#SEC313)/S/URI>>/Border[0 0 0]>>endobj702 0 obj[699 0 R 740 0 R 769 0 R 799 0 R 832 0 R 859 0 R 899 0 R 943 0 R 970 0 R 1005 0 R 1038 0 R 1068 0 R 1100 0 R 1137 0 R 1165 0 R 1191 0 R 1222 0 R 1261 0 R 1290 0 R 1318 0 R 1356 0 R 1389 0 R 1416 0 R 1454 0 R 1480 0 R 1506 0 R 1533 0 R 1561 0 R 1591 0 R 1623 0 R 1656 0 R 1688 0 R 1716 0 R 1752 0 R 1782 0 R 1816 0 R 1855 0 R 1887 0 R 1914 0 R 1940 0 R 1967 0 R 1994 0 R 2021 0 R 2049 0 R 2077 0 R 2153 0 R 2183 0 R 2210 0 R 2244 0 R 2272 0 R 2305 0 R 2331 0 R 2362 0 R 2400 0 R 2426 0 R 2460 0 R 2489 0 R 2516 0 R 2548 0 R 2585 0 R 2621 0 R 2652 0 R 2687 0 R 2720 0 R 2752 0 R 2797 0 R 2830 0 R 2866 0 R 2894 0 R 2929 0 R 2957 0 R 2998 0 R 3031 0 R 3058 0 R 3085 0 R 3111 0 R 3137 0 R 3174 0 R 3216 0 R 3247 0 R 3279 0 R 3305 0 R 3335 0 R 3363 0 R 3398 0 R 3428 0 R 3459 0 R 3485 0 R 3511 0 R 3538 0 R 3588 0 R 3634 0 R 3666 0 R 3698 0 R 3730 0 R 3757 0 R 3797 0 R 3834 0 R 3877 0 R 3909 0 R 3945 0 R 3980 0 R 4013 0 R 4065 0 R 4129 0 R 4155 0 R 4193 0 R 4224 0 R 4258 0 R 4284 0 R 4314 0 R 4341 0 R 4375 0 R 4449 0 R 4510 0 R 4555 0 R 4581 0 R 4607 0 R 4633 0 R 4670 0 R 4731 0 R 4787 0 R 4824 0 R 4863 0 R 4930 0 R 5055 0 R 5081 0 R 5124 0 R 5279 0 R 5305 0 R 5331 0 R 5578 0 R 5604 0 R 5631 0 R 5658 0 R 5684 0 R 5712 0 R 5738 0 R 5781 0 R 5836 0 R 6142 0 R 6326 0 R]endobj708 0 obj<</Kids[4199 0 R 4200 0 R 2759 0 R]>>endobj709 0 obj<</Kids[5337 0 R 5338 0 R 3803 0 R 3804 0 R]>>endobj710 0 obj<</First 711 0 R/Parent 5 0 R/Count 142/Last 6332 0 R/Title(federated.com)>>endobj711 0 obj<</Parent 710 0 R/Next 746 0 R/Dest[11 0 R/XYZ 0 792 null]/SE 10 0 R/Title(An Introduction to Scheme and its Implementation - Table of Contents)>>endobj713 0 obj<</TextDecorationType/Underline/O/Layout>>endobj714 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 715 0 R>>endobj715 0 obj<</Annots 718 0 R/Parent 750 0 R/ID 742 0 R/StructParents 9/Contents 738 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj716 0 obj[714 0 R]endobj717 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj718 0 obj[717 0 R 719 0 R 720 0 R 721 0 R 722 0 R 724 0 R 725 0 R 726 0 R 727 0 R 728 0 R 729 0 R 730 0 R 731 0 R 732 0 R 733 0 R 734 0 R]endobj719 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj720 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[749 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_3.html)/S/URI>>/Border[0 0 0]>>endobj721 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj722 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj723 0 obj[715 0 R/XYZ 0 731.2 null]endobj724 0 obj<</Rect[10.0 683.954 120.149 709.723]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC1)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC1)/S/URI>>/Border[0 0 0]>>endobj725 0 obj<</Rect[50.0 592.477 94.324 607.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ω˛ë}çDN[∞qo∫fSEC2)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_3.html#SEC2)/S/URI>>/Border[0 0 0]>>endobj726 0 obj<</Rect[50.0 573.677 176.784 588.677]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÉπDÒLM˙%H’^!’SEC3)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_4.html#SEC3)/S/URI>>/Border[0 0 0]>>endobj727 0 obj<</Rect[50.0 554.877 131.256 569.877]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(÷ﬂªTD_í\(\nÄ…«ìSEC4)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_5.html#SEC4)/S/URI>>/Border[0 0 0]>>endobj728 0 obj<</Rect[50.0 536.077 176.0 551.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(´∑√P£…ßúnC¥[≥ﬁöSEC6)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_6.html#SEC6)/S/URI>>/Border[0 0 0]>>endobj729 0 obj<</Rect[50.0 517.277 174.054 532.277]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(–˛<ä‰⁄D‡\r+û©‡€SEC7)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_7.html#SEC7)/S/URI>>/Border[0 0 0]>>endobj730 0 obj<</Rect[65.608 463.477 88.162 478.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj731 0 obj<</Rect[95.162 463.477 143.378 478.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj732 0 obj<</Rect[150.378 463.477 174.486 478.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[749 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_3.html)/S/URI>>/Border[0 0 0]>>endobj733 0 obj<</Rect[181.486 463.477 200.932 478.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj734 0 obj<</Rect[251.094 463.477 343.634 478.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj735 0 obj<</Subtype/Type1/BaseFont/Times-Roman/Encoding/WinAnsiEncoding/Type/Font>>endobj736 0 obj<</Subtype/Type1/BaseFont/Helvetica-Bold/Encoding/WinAnsiEncoding/Type/Font>>endobj737 0 obj<</Subtype/Type1/BaseFont/ZapfDingbats/Type/Font>>endobj738 0 obj<</Length 3711>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Overview)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
2.081 w 
10 684.255 m
120.149 684.255 l
S
0 0 1 rg
BT
/T1_1 1 Tf
24.7692 0 0 24.7692 10 690.4968 Tm
(Overview)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 649.4525 Tm
(This book provides an introduction to Scheme for programmers--it is not \for first-time programmers, but )Tj
0 -1.2 TD
(for people who already know how to program \(at least a little\) and are\ interested in learning Scheme. )Tj
/T1_2 1 Tf
7 0 0 7 35.713 596.8525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
50 594.736 m
94.324 594.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 596.8525 Tm
(Scheme)Tj
0 0 0 rg
(: Scheme: A Small But Powerful Language )Tj
/T1_2 1 Tf
7 0 0 7 35.713 578.0525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 575.936 m
176.784 575.936 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 578.0525 Tm
(Who is this Book For?)Tj
0 0 0 rg
(: Who is this Book For? )Tj
/T1_2 1 Tf
7 0 0 7 35.713 559.2525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 557.136 m
131.256 557.136 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 559.2525 Tm
(Why Scheme?)Tj
0 0 0 rg
(: Why Scheme? )Tj
/T1_2 1 Tf
7 0 0 7 35.713 540.4525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 538.336 m
176 538.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 540.4525 Tm
(What this Book Is Not)Tj
0 0 0 rg
(: What this Book Is Not )Tj
/T1_2 1 Tf
7 0 0 7 35.713 521.6525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 519.536 m
174.054 519.536 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 521.6525 Tm
(Structure of this Book)Tj
0 0 0 rg
(: Structure of this Book )Tj
ET
0.5 0.5 0.5 rg
10 486.877 m
10 488.877 l
602 488.877 l
601 487.877 l
11 487.877 l
11 487.877 l
h
f
0.875 0.875 0.875 rg
602 488.877 m
602 486.877 l
10 486.877 l
11 487.877 l
601 487.877 l
601 487.877 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 467.8525 Tm
(Go to the )Tj
ET
65.608 465.736 m
88.162 465.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 467.8525 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 465.736 m
143.378 465.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 467.8525 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 465.736 m
174.486 465.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 467.8525 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 465.736 m
200.932 465.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 467.8525 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 465.736 m
343.634 465.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 467.8525 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_2.html11/3/2006 8:52\:55 PM)Tj
ET
EMC 

endstreamendobj739 0 obj(An Introduction to Scheme and its Implementation - Overview)endobj740 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_2.html)/S 700 0 R>>endobj741 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_2.html)endobj742 0 obj(ö°∏Hæ≠¬[ePf…Ï)endobj743 0 obj<</TS(D:20061104045255)/ID 742 0 R/CT(text/html)/O[715 0 R]/S/SPS/T 739 0 R/TID 745 0 R/SI 744 0 R>>endobj744 0 obj<</TS(D:20061104045255)/AU 741 0 R>>endobj745 0 obj(¡Àï®Õµ®û9M}5Cny0)endobj746 0 obj<</Parent 710 0 R/Next 775 0 R/Dest[715 0 R/XYZ 0 792 null]/Prev 711 0 R/SE 714 0 R/Title(An Introduction to Scheme and its Implementation - Overview)>>endobj747 0 obj<</TextDecorationType/Underline/O/Layout>>endobj748 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 749 0 R>>endobj749 0 obj<</Annots 754 0 R/Parent 842 0 R/ID 771 0 R/StructParents 10/Contents 767 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj750 0 obj<</Parent 1544 0 R/Count 5/Type/Pages/Kids[408 0 R 489 0 R 572 0 R 653 0 R 715 0 R]>>endobj751 0 obj<</Parent 1544 0 R/Count 5/Type/Pages/Kids[11 0 R 84 0 R 165 0 R 246 0 R 327 0 R]>>endobj752 0 obj[748 0 R]endobj753 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj754 0 obj[753 0 R 755 0 R 756 0 R 757 0 R 758 0 R 760 0 R 761 0 R 762 0 R 763 0 R 764 0 R 765 0 R]endobj755 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[715 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_2.html)/S/URI>>/Border[0 0 0]>>endobj756 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[778 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_4.html)/S/URI>>/Border[0 0 0]>>endobj757 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj758 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj759 0 obj[749 0 R/XYZ 0 731.2 null]endobj760 0 obj<</Rect[10.0 689.877 389.163 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC2)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC2)/S/URI>>/Border[0 0 0]>>endobj761 0 obj<</Rect[65.608 219.138 88.162 234.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj762 0 obj<</Rect[95.162 219.138 143.378 234.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[715 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_2.html)/S/URI>>/Border[0 0 0]>>endobj763 0 obj<</Rect[150.378 219.138 174.486 234.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[778 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_4.html)/S/URI>>/Border[0 0 0]>>endobj764 0 obj<</Rect[181.486 219.138 200.932 234.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj765 0 obj<</Rect[251.094 219.138 343.634 234.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj766 0 obj<</Subtype/Type1/BaseFont/Times-Italic/Encoding/WinAnsiEncoding/Type/Font>>endobj767 0 obj<</Length 4182>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
389.163 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Scheme: A Small But Powerful Language)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 655.914 Tm
([ need to improve this introductory blather...] )Tj
0 -2.557 TD
(Scheme is a clean and fairly small but powerful language, suitable for u\se as a general-purpose )Tj
0 -1.2 TD
(programming language, a scripting language, an extension language embedd\ed within applications, or )Tj
T*
(just about anything else. )Tj
0 -2.557 TD
(Scheme was designed to lend itself to a variety of implementation strate\gies, and many implementations )Tj
0 -1.2 TD
(exist--most of them free software. There are straightforward interpreter\s \(like BASIC or Tcl\), compilers )Tj
T*
(to fast machine code \(like C or Pascal\), and compilers to portable int\erpretive virtual machine code \(like )Tj
T*
(Java\). )Tj
0 -2.557 TD
(Several extended implementations of Scheme exist, including our own RSch\eme system, an extremely )Tj
0 -1.2 TD
(portable implementation of Scheme with an integrated object system and p\owerful extensibility features. )Tj
0 -2.557 TD
(This is the first of three planned documents on Scheme, Scheme implement\ation, and the RScheme )Tj
0 -1.2 TD
(language and its implementation. When they're all finished, I may combin\e them into a big book. All )Tj
T*
(three will be in Texinfo format, so that they can be printed out as hard\copy manuals, browsed online as )Tj
T*
(info documents \(with the Info browser, or the Info system for the Emacs\ editor\), or converted )Tj
T*
(automatically to HTML format for browsing with a web browser. Whichever \way you're reading this, )Tj
T*
(welcome to Scheme. )Tj
/T1_2 1 Tf
0 -2.557 TD
([ note: the current draft is only available in postScript form, because \I haven't done all of the )Tj
0 -1.2 TD
(hyperlinking for the Info and HTML versions. ])Tj
/T1_0 1 Tf
( )Tj
ET
0.5 0.5 0.5 rg
10 242.538 m
10 244.538 l
602 244.538 l
601 243.538 l
11 243.538 l
11 243.538 l
h
f
0.875 0.875 0.875 rg
602 244.538 m
602 242.538 l
10 242.538 l
11 243.538 l
601 243.538 l
601 243.538 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 223.514 Tm
(Go to the )Tj
ET
0.706 w 
65.608 221.397 m
88.162 221.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 223.514 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 221.397 m
143.378 221.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 223.514 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 221.397 m
174.486 221.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 223.514 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 221.397 m
200.932 221.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 223.514 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 221.397 m
343.634 221.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 223.514 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_3.html11/3/2006 8:53\:06 PM)Tj
ET
EMC 

endstreamendobj768 0 obj(An Introduction to Scheme and its Implementation - Scheme)endobj769 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_3.html)/S 700 0 R>>endobj770 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_3.html)endobj771 0 obj(Ω˛ë}çDN[∞qo∫f)endobj772 0 obj<</TS(D:20061104045306)/ID 771 0 R/CT(text/html)/O[749 0 R]/S/SPS/T 768 0 R/TID 774 0 R/SI 773 0 R>>endobj773 0 obj<</TS(D:20061104045306)/AU 770 0 R>>endobj774 0 obj(–ÈRúîãÏ¢ÇA9å^Â)endobj775 0 obj<</Parent 710 0 R/Next 805 0 R/Dest[749 0 R/XYZ 0 792 null]/Prev 746 0 R/SE 748 0 R/Title(An Introduction to Scheme and its Implementation - Scheme)>>endobj776 0 obj<</TextDecorationType/Underline/O/Layout>>endobj777 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 788 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 778 0 R>>endobj778 0 obj<</Annots 781 0 R/Parent 842 0 R/ID 801 0 R/StructParents 11/Contents 796 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj779 0 obj[777 0 R]endobj780 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj781 0 obj[780 0 R 782 0 R 783 0 R 784 0 R 785 0 R 787 0 R]endobj782 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[749 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_3.html)/S/URI>>/Border[0 0 0]>>endobj783 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[808 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_5.html)/S/URI>>/Border[0 0 0]>>endobj784 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj785 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj786 0 obj[778 0 R/XYZ 0 731.2 null]endobj787 0 obj<</Rect[10.0 689.877 215.71 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC3)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC3)/S/URI>>/Border[0 0 0]>>endobj788 0 obj<</Annots 791 0 R/Parent 842 0 R/ID 801 0 R/StructParents 12/Contents 797 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj789 0 obj[777 0 R]endobj790 0 obj<</Rect[65.608 134.6 88.162 149.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj791 0 obj[790 0 R 792 0 R 793 0 R 794 0 R 795 0 R]endobj792 0 obj<</Rect[95.162 134.6 143.378 149.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[749 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_3.html)/S/URI>>/Border[0 0 0]>>endobj793 0 obj<</Rect[150.378 134.6 174.486 149.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[808 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_5.html)/S/URI>>/Border[0 0 0]>>endobj794 0 obj<</Rect[181.486 134.6 200.932 149.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj795 0 obj<</Rect[251.094 134.6 343.634 149.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj796 0 obj<</Length 4703>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Who is this Book For?\)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
215.71 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Who Is this Book For?)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 655.914 Tm
(This book is for people who are interested in how Scheme works, or peopl\e who are interested in )Tj
0 -1.2 TD
(Scheme in terms of programming language design--as well as people who ar\e just interested in using )Tj
T*
(Scheme. )Tj
0 -2.557 TD
(There's not much conflict between these goals, since one of the best way\s to learn Scheme--and )Tj
0 -1.2 TD
(important principles of language design--is to see how to implement Sche\me, in Scheme. I'll illustrate )Tj
T*
(the power of Scheme by showing a couple of simple interpreters for subse\ts of Scheme, and a simple )Tj
T*
(compiler. A compiler for Scheme can be surprisingly simple and understan\dable. )Tj
0 -2.557 TD
(This is a fairly traditional approach, pioneered by Abelson and Sussman \in )Tj
/T1_2 1 Tf
(Structure and Interpretation )Tj
0 -1.2 TD
(of Computer Programs)Tj
/T1_0 1 Tf
(, which is a widely used and excellent introductory programming text. Th\is )Tj
T*
(approach has been followed, more or less, in several other introductory \books on Scheme programming. )Tj
T*
(Most of those books, though, are for beginning programmers. While I thin\k Scheme is a great first )Tj
T*
(language, there are many people out there who've had to suffer through C\ or Pascal or whatever, and )Tj
T*
(don't want to wade through an introductory programming book just to lear\n Scheme. )Tj
0 -2.557 TD
(My approach is different from most of the current books on Scheme, in se\veral ways. )Tj
/T1_2 1 Tf
([When it's )Tj
0 -1.2 TD
(finished, this book will be hypertext, and can be kept online in online \for handy reference in any of )Tj
T*
(several cross-indexed formats...])Tj
/T1_0 1 Tf
( )Tj
0 -2.557 TD
(I will breeze through basic programming ideas--for example, I assume you\ have some idea what a )Tj
0 -1.2 TD
(variable is, and what recursion is. )Tj
0 -2.557 TD
(I take a more concrete approach than many Scheme writers do, because I'v\e found many students find it )Tj
0 -1.2 TD
(easier to understand. Every now and then I'll dip below the language lev\el, and tell you how most actual )Tj
T*
(implementations of the language work. I find that this concreteness help\s disambiguate things in many )Tj
T*
(students' minds--as well as in my own. )Tj
0 -2.557 TD
(I do not start from a functional programming perspective that pretends t\hat Scheme executes by )Tj
0 -1.2 TD
(rewriting expressions. \(If that doesn't mean anything to you, definitel\y don't worry about it!\) )Tj
0 -2.557 TD
(I take Scheme to be a special case of a )Tj
/T1_2 1 Tf
(weakly object-oriented)Tj
/T1_0 1 Tf
( procedural language. By weakly object )Tj
0 -1.2 TD
(oriented, I don't mean that it's object-oriented in the sense of having \inheritance and so on--though )Tj
T*
(several extended versions of Scheme do. I just mean that the values in t\he language are data objects )Tj
T*
(\(records, etc.\) whose )Tj
/T1_2 1 Tf
(identities)Tj
/T1_0 1 Tf
( may be significant--that is, you can compare pointers to two objects to\ )Tj
T*
(see whether they are the )Tj
/T1_2 1 Tf
(very same)Tj
/T1_0 1 Tf
( object, not just and whether they have the same state--and objects )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_4.html \(1 of 2\)11/\3/2006 8:53:10 PM)Tj
ET
EMC 

endstreamendobj797 0 obj<</Length 4808>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Who is this Book For?\)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(may have mutable \(changable\) state. \(This view is developed further i\n RScheme, which is a fully object-)Tj
0 -1.2 TD
(oriented language that happens also to be Scheme. But that's a different\ book, not yet written.\) )Tj
0 -2.557 TD
(Some people may not like this approach, since I start talking about stat\e and assignment very early. It is )Tj
0 -1.2 TD
(generally considered bad style in Scheme to use assignments freely, and \good style to write mostly )Tj
T*
("functional" or "applicative" programs. While I agree that mostly-functi\onal programming is usually the )Tj
T*
(right thing for Scheme, my intent is to make the semantics of the langua\ge clear early on, and to make it )Tj
T*
(clear to new Schemers that Scheme is a fairly normal programming languag\e, even if it is unusually )Tj
T*
(clean and expressive. My experience in teaching Scheme has convinced me \that many people benefit )Tj
T*
(from an early exposure to the use of assignment; it clarifies fundamenta\l issues about variables and )Tj
T*
(variable binding. Style is discussed later, when alternatives are cleare\r. )Tj
0 -2.557 TD
(If you've ever tried to learn Lisp or Scheme before, but not gotten very\ far, this book may be for you. )Tj
0 -1.2 TD
(Many people take to Lisp or Scheme like ducks to water. Some people don'\t, however, and I think that's )Tj
T*
(often because of the way that the material is presented--there's nothing\ hard about learning Lisp or )Tj
T*
(Scheme. In this book, I try to explain things a little differently than \they're usually explained, to avoid )Tj
T*
(the problems that some people have learning from most of the existing bo\oks. The concreteness of the )Tj
T*
(explanations here may help overcome the unfamiliarity of these languages\. Scheme is really just a )Tj
T*
(normal programming language, but one with powerful features that can be \used in special ways, too. )Tj
0 -2.557 TD
(If you're a programming language designer, but not fluent in Scheme or L\isp, this book may help clarify )Tj
0 -1.2 TD
(what these languages are all about. It's my belief that there has been a\ damaging split between the Lisp )Tj
T*
(world and the "conventional" imperative programming language world, larg\ely due to the different )Tj
T*
(vocabularies of the different communities. Recent developments in Scheme\ have not been widely )Tj
T*
(appreciated by designers of other languages. \(This theme will be develo\ped further in the other )Tj
T*
(documents in this series.\) Even old features of Lisp, such as macros, h\ave not been properly understood )Tj
T*
(by language designers in general, and their problems have been substanti\ally solved in Scheme. )Tj
0 -2.557 TD
(If you're a programming language implementor, or teaching programming la\nguage implementation, this )Tj
0 -1.2 TD
(book may be of use. \(I use it in a course on languages and implementati\on.\) I'll present interpreters and a )Tj
T*
(compiler for Scheme. Scheme an excellent vehicle for teaching principles\ of language implementation, )Tj
T*
(because its syntax is simple, and there is a straightforward evolution f\rom simple interpreters to more )Tj
T*
(complex ones, and another straightforward move from a simple interpreter\ to a compiler. This supports )Tj
T*
(teaching the principles of language implementation with a minimum of irr\elevant detail. )Tj
ET
0.5 0.5 0.5 rg
10 158 m
10 160 l
602 160 l
601 159 l
11 159 l
11 159 l
h
f
0.875 0.875 0.875 rg
602 160 m
602 158 l
10 158 l
11 159 l
601 159 l
601 159 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 138.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 136.859 m
88.162 136.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 138.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 136.859 m
143.378 136.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 138.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 136.859 m
174.486 136.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 138.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 136.859 m
200.932 136.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 138.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 136.859 m
343.634 136.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 138.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_4.html \(2 of 2\)11/\3/2006 8:53:10 PM)Tj
ET
EMC 

endstreamendobj798 0 obj(An Introduction to Scheme and its Implementation - Who is this Book For?)endobj799 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_4.html)/S 700 0 R>>endobj800 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_4.html)endobj801 0 obj(ÉπDÒLM˙%H’^!’)endobj802 0 obj<</TS(D:20061104045310)/ID 801 0 R/CT(text/html)/O[778 0 R 788 0 R]/S/SPS/T 798 0 R/TID 804 0 R/SI 803 0 R>>endobj803 0 obj<</TS(D:20061104045310)/AU 800 0 R>>endobj804 0 obj(~b<h⁄âF\\ë~K§˛’)endobj805 0 obj<</Parent 710 0 R/Next 838 0 R/Dest[778 0 R/XYZ 0 792 null]/Prev 775 0 R/SE 777 0 R/Title(An Introduction to Scheme and its Implementation - Who is this Book For?)>>endobj806 0 obj<</TextDecorationType/Underline/O/Layout>>endobj807 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 818 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 808 0 R>>endobj808 0 obj<</Annots 811 0 R/Parent 842 0 R/ID 834 0 R/StructParents 13/Contents 829 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj809 0 obj[807 0 R]endobj810 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj811 0 obj[810 0 R 812 0 R 813 0 R 814 0 R 815 0 R 817 0 R]endobj812 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[778 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_4.html)/S/URI>>/Border[0 0 0]>>endobj813 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[841 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_6.html)/S/URI>>/Border[0 0 0]>>endobj814 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj815 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj816 0 obj[808 0 R/XYZ 0 731.2 null]endobj817 0 obj<</Rect[10.0 689.877 142.494 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC4)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC4)/S/URI>>/Border[0 0 0]>>endobj818 0 obj<</Annots 822 0 R/Parent 842 0 R/ID 834 0 R/StructParents 14/Contents 830 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj819 0 obj[807 0 R]endobj820 0 obj[818 0 R/XYZ 0 644.0 null]endobj821 0 obj<</Rect[10.0 621.677 188.804 642.062]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC5)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC5)/S/URI>>/Border[0 0 0]>>endobj822 0 obj[821 0 R 823 0 R 824 0 R 825 0 R 826 0 R 827 0 R]endobj823 0 obj<</Rect[65.608 289.738 88.162 304.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj824 0 obj<</Rect[95.162 289.738 143.378 304.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[778 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_4.html)/S/URI>>/Border[0 0 0]>>endobj825 0 obj<</Rect[150.378 289.738 174.486 304.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[841 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_6.html)/S/URI>>/Border[0 0 0]>>endobj826 0 obj<</Rect[181.486 289.738 200.932 304.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj827 0 obj<</Rect[251.094 289.738 343.634 304.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj828 0 obj<</Subtype/Type1/BaseFont/Courier/Encoding/WinAnsiEncoding/Type/Font>>endobj829 0 obj<</Length 4560>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Why Scheme?)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
142.494 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Why Scheme?)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 655.914 Tm
([ Warn people that this is partisan propaganda... ] )Tj
0 -2.557 TD
(Scheme is a very nice language for implementing languages, or for transf\ormational programming in )Tj
0 -1.2 TD
(general--that is, writing programs that write programs--or for writing p\rograms that can easily be )Tj
T*
(extended or customized. The features that make Scheme attractive for imp\lementing Scheme also make )Tj
T*
(it good for all kinds of things, including scripting, the construction o\f new languages and application-)Tj
T*
(specific programming environments, and so on. )Tj
0 -2.557 TD
([ As you learn Scheme, you'll probably realize that all interesting prog\rams end up being, in effect, )Tj
0 -1.2 TD
(application-specific programming environments...] )Tj
0 -2.557 TD
(Most Scheme systems are interactive, allowing you to incrementally devel\op and test parts of your )Tj
0 -1.2 TD
(program. In this respect, it is much like BASIC or Tcl--but a far cleane\r and more expressive language. )Tj
T*
(Scheme can also be compiled, to make programs run fast. This makes it ea\sy to develop in, like BASIC )Tj
T*
(or Tcl, but still fast, like C. \(Scheme isn't usually quite as fast as \C, but it's usually not too much slower, )Tj
T*
(if you get a good Scheme compiler.\) So if you're a Tcl or BASIC program\mer looking for a less crufty )Tj
T*
(and/or fossilized language, Scheme may be for you. )Tj
0 -2.557 TD
(Unlike most interactive languages, Scheme is well-designed: it's not a k\ludge cobbled up by some )Tj
0 -1.2 TD
(people with very limited applications in mind, and later extended past i\ts reasonable scope of )Tj
T*
(application. It was designed from the outset as a general-purpose langua\ge, combining the best features )Tj
T*
(of two earlier languages. It is fairly radical revision of Lisp, incorpo\rating the best features of both Lisp )Tj
T*
(and Algol \(the ancestor of C, Pascal, et al.\). )Tj
0 -2.557 TD
(\(This is why Scheme has been adopted by several groups as an alternativ\e to kludgey languages like Tcl )Tj
0 -1.2 TD
(and Perl. The Free Software Foundation's Guile extension language is bas\ed on Scheme. So is the )Tj
0 -1.205 TD
(Scheme Shell \()Tj
/T1_2 1 Tf
(scsh)Tj
/T1_0 1 Tf
(\), which is a scripting language for UNIX. The CAD Framework Initiative\ has )Tj
0 -1.2 TD
(adopted Scheme as the glue for controlling Computer-Aided Design tools. \The Dylan language is also )Tj
T*
(based on Scheme, though with a different syntax and many extensions.\) )Tj
0 -2.557 TD
(If you want to learn Lisp, Scheme is a good place to start. Common Lisp \is a big, somewhat messy )Tj
0 -1.2 TD
(language, which is probably easiest to learn by starting with Scheme. Th\en you can understand Common )Tj
T*
(Lisp as a series of extensions \(and significant obfuscations\) of Schem\e. Some of the best features of )Tj
T*
(Common Lisp were copied from Scheme. )Tj
0 -2.557 TD
(If you want to get something of the flavor of functional programming, yo\u can do that in Scheme--most )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_5.html \(1 of 2\)11/\3/2006 8:53:13 PM)Tj
ET
EMC 

endstreamendobj830 0 obj<</Length 3315>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Why Scheme?)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(well-written Scheme programs are largely functional, because that's simp\ly the easiest way to do many )Tj
0 -1.2 TD
(interesting things. )Tj
0 -2.557 TD
(And if you just want to learn to program better, Scheme may open your ey\es to new ways of thinking )Tj
0 -1.2 TD
(about programs. Many people prototype programs in Scheme, because it's s\o easy, even if they )Tj
T*
(eventually have to recode them in other languages to satisfy their emplo\yers. )Tj
ET
0 0 1 RG
1.628 w 10 M 0 j 0 J []0 d 
10 622.13 m
188.804 622.13 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 627.0149 Tm
(Why Scheme Now?)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 587.714 Tm
(Scheme is not a new language--it's been around and evolving slowly for 2\0 years. )Tj
0 -2.557 TD
(The evolution of Scheme has been slow, because the people who standardiz\e Scheme have been very )Tj
0 -1.2 TD
(conservative--features are only standardized when there is a near-univer\sal consensus on how they )Tj
T*
(should work. The focus has been on quality, not industrial usability. )Tj
0 -2.557 TD
(This policy has had two consequences. The first is that Scheme is a beau\tiful, extremely well-designed )Tj
0 -1.2 TD
(language. The second is that Scheme has been "behind the curve," lacking\ several features that are )Tj
T*
(useful in general-purpose languages. Gradually, though, Scheme has grown\ from a very small language, )Tj
T*
(suitable only for teaching concepts, to a very useful language. )Tj
0 -2.557 TD
(The most important new feature of Scheme \(in my view\) is lexically-sco\ped \("hygeinic"\) macros, which )Tj
0 -1.2 TD
(allow the implementation of many language features in a portable and fai\rly efficient way. This allows )Tj
T*
(Scheme to remain small, but also allows useful extensions to the base la\nguage to be written as libraries, )Tj
T*
(without a significant performance penalty. )Tj
ET
0.5 0.5 0.5 rg
10 313.138 m
10 315.138 l
602 315.138 l
601 314.138 l
11 314.138 l
11 314.138 l
h
f
0.875 0.875 0.875 rg
602 315.138 m
602 313.138 l
10 313.138 l
11 314.138 l
601 314.138 l
601 314.138 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 294.114 Tm
(Go to the )Tj
ET
0.706 w 
65.608 291.997 m
88.162 291.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 294.114 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 291.997 m
143.378 291.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 294.114 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 291.997 m
174.486 291.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 294.114 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 291.997 m
200.932 291.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 294.114 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 291.997 m
343.634 291.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 294.114 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_5.html \(2 of 2\)11/\3/2006 8:53:13 PM)Tj
ET
EMC 

endstreamendobj831 0 obj(An Introduction to Scheme and its Implementation - Why Scheme?)endobj832 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_5.html)/S 700 0 R>>endobj833 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_5.html)endobj834 0 obj(÷ﬂªTD_í\(\nÄ…«ì)endobj835 0 obj<</TS(D:20061104045313)/ID 834 0 R/CT(text/html)/O[808 0 R 818 0 R]/S/SPS/T 831 0 R/TID 837 0 R/SI 836 0 R>>endobj836 0 obj<</TS(D:20061104045313)/AU 833 0 R>>endobj837 0 obj(#Ä;∞x$◊†ë\\ã¥…Î)endobj838 0 obj<</Parent 710 0 R/Next 865 0 R/Dest[808 0 R/XYZ 0 792 null]/Prev 805 0 R/SE 807 0 R/Title(An Introduction to Scheme and its Implementation - Why Scheme?)>>endobj839 0 obj<</TextDecorationType/Underline/O/Layout>>endobj840 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 841 0 R>>endobj841 0 obj<</Annots 845 0 R/Parent 953 0 R/ID 861 0 R/StructParents 15/Contents 857 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj842 0 obj<</Parent 1544 0 R/Count 5/Type/Pages/Kids[749 0 R 778 0 R 788 0 R 808 0 R 818 0 R]>>endobj843 0 obj[840 0 R]endobj844 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj845 0 obj[844 0 R 846 0 R 847 0 R 848 0 R 849 0 R 851 0 R 852 0 R 853 0 R 854 0 R 855 0 R 856 0 R]endobj846 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[808 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_5.html)/S/URI>>/Border[0 0 0]>>endobj847 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[868 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_7.html)/S/URI>>/Border[0 0 0]>>endobj848 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj849 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj850 0 obj[841 0 R/XYZ 0 731.2 null]endobj851 0 obj<</Rect[10.0 689.877 210.321 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC6)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC6)/S/URI>>/Border[0 0 0]>>endobj852 0 obj<</Rect[65.608 258.934 88.162 273.934]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj853 0 obj<</Rect[95.162 258.934 143.378 273.934]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[808 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_5.html)/S/URI>>/Border[0 0 0]>>endobj854 0 obj<</Rect[150.378 258.934 174.486 273.934]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[868 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_7.html)/S/URI>>/Border[0 0 0]>>endobj855 0 obj<</Rect[181.486 258.934 200.932 273.934]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj856 0 obj<</Rect[251.094 258.934 343.634 273.934]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj857 0 obj<</Length 4602>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - What this Book Is Not\)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
210.321 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(What this Book Is Not)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 655.914 Tm
(This book isn't a language definition for Scheme, or a manual for using \any particular Scheme )Tj
0 -1.2 TD
(implementation. There is a free language definition document for Scheme,\ easily available via the )Tj
T*
(internet, called the Revised Scheme Report. \(There's also an IEEE stand\ard.\) I recommend getting the )Tj
0 -1.205 TD
(Scheme report and printing it out, or browsing the html version with a w\eb browser. \()Tj
/T1_2 1 Tf
(http://www.)Tj
0 -1.205 TD
(cs.indiana.edu/scheme-repository/doc.standards.html)Tj
/T1_0 1 Tf
( It's not very big, because )Tj
0 -1.2 TD
(Scheme is a pretty small language. I also recommend having a look at the\ documentation for the )Tj
T*
(particular implementation of Scheme you're using. )Tj
0 -2.557 TD
(On the other hand, this book may serve as a passable approximation of a \language manual most of the )Tj
0 -1.2 TD
(time. \(It may work better for this purpose once it's fleshed out more a\nd I've devised more online )Tj
T*
(indexing.\) It describes all of the important features of standard Schem\e, clearly enough that you can use )Tj
T*
(them for most purposes. This is possible because Scheme is very clean an\d "orthogonal"---most of its )Tj
T*
(features don't interact in surprising ways, so if you understand Scheme,\ and do the "Scheme-ish" thing, )Tj
T*
(Scheme will generally do what you expect. )Tj
0 -2.557 TD
(For more information on Scheme, particular Scheme implementations, and s\o on, see the FAQ )Tj
0 -1.205 TD
(\(Frequently Asked Questions\) List on the usenet newsgroup )Tj
/T1_2 1 Tf
(comp.lang.scheme)Tj
/T1_0 1 Tf
(. It's available from )Tj
0 -1.205 TD
(the Scheme Repository via anonymous internet ftp from )Tj
/T1_2 1 Tf
(ftp.cs.indiana.edu)Tj
/T1_0 1 Tf
( in the directory )Tj
/T1_2 1 Tf
0 -1.205 TD
(pub/scheme-repository)Tj
/T1_0 1 Tf
(. Or if you're a World Wide Web user, visit the Scheme repository at )Tj
/T1_2 1 Tf
0 -1.205 TD
(http://www.cs.indiana.edu/scheme-repository)Tj
/T1_0 1 Tf
(. The Scheme repository contains )Tj
0 -1.2 TD
(several free implementations of Scheme, as well as a variety of useful p\rograms, libraries, and papers. )Tj
ET
0.5 0.5 0.5 rg
10 282.334 m
10 284.334 l
602 284.334 l
601 283.334 l
11 283.334 l
11 283.334 l
h
f
0.875 0.875 0.875 rg
602 284.334 m
602 282.334 l
10 282.334 l
11 283.334 l
601 283.334 l
601 283.334 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 263.3096 Tm
(Go to the )Tj
ET
0.706 w 
65.608 261.193 m
88.162 261.193 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 263.3096 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 261.193 m
143.378 261.193 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 263.3096 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 261.193 m
174.486 261.193 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 263.3096 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 261.193 m
200.932 261.193 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 263.3096 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 261.193 m
343.634 261.193 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 263.3096 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_6.html11/3/2006 8:53\:19 PM)Tj
ET
EMC 

endstreamendobj858 0 obj(An Introduction to Scheme and its Implementation - What this Book Is Not)endobj859 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_6.html)/S 700 0 R>>endobj860 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_6.html)endobj861 0 obj(´∑√P£…ßúnC¥[≥ﬁö)endobj862 0 obj<</TS(D:20061104045319)/ID 861 0 R/CT(text/html)/O[841 0 R]/S/SPS/T 858 0 R/TID 864 0 R/SI 863 0 R>>endobj863 0 obj<</TS(D:20061104045319)/AU 860 0 R>>endobj864 0 obj(4K\(T˘Í}ü\rV6¶ú´Rñ)endobj865 0 obj<</Parent 710 0 R/Next 905 0 R/Dest[841 0 R/XYZ 0 792 null]/Prev 838 0 R/SE 840 0 R/Title(An Introduction to Scheme and its Implementation - What this Book Is Not)>>endobj866 0 obj<</TextDecorationType/Underline/O/Layout>>endobj867 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 885 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 868 0 R>>endobj868 0 obj<</Annots 871 0 R/Parent 953 0 R/ID 901 0 R/StructParents 16/Contents 896 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj869 0 obj[867 0 R]endobj870 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj871 0 obj[870 0 R 872 0 R 873 0 R 874 0 R 875 0 R 877 0 R 878 0 R 879 0 R 880 0 R 881 0 R 882 0 R 883 0 R 884 0 R]endobj872 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[841 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_6.html)/S/URI>>/Border[0 0 0]>>endobj873 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[908 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_8.html)/S/URI>>/Border[0 0 0]>>endobj874 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj875 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj876 0 obj[868 0 R/XYZ 0 731.2 null]endobj877 0 obj<</Rect[10.0 689.877 213.558 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC7)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC7)/S/URI>>/Border[0 0 0]>>endobj878 0 obj<</Rect[53.162 512.738 122.378 527.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D( ÔQ€`£<„˘tL£1ˇSEC8)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_8.html#SEC8)/S/URI>>/Border[0 0 0]>>endobj879 0 obj<</Rect[53.162 441.338 205.972 456.338]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Q˚<˚‚‹df·§OÀ@;SEC85)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_79.html#SEC85)/S/URI>>/Border[0 0 0]>>endobj880 0 obj<</Rect[53.162 386.738 176.012 401.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(›Ä2ˇÈ?s√V5\(tRSEC131)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_111.html#SEC131)/S/URI>>/Border[0 0 0]>>endobj881 0 obj<</Rect[53.162 348.938 221.134 363.938]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(üóáÃΩø«]'\\\\òÏr‰ŒrSEC148)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_119.html#SEC148)/S/URI>>/Border[0 0 0]>>endobj882 0 obj<</Rect[53.162 243.938 172.148 258.938]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®ˆºU˙˜[Ù ’ ÷\rîSEC169)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html#SEC169)/S/URI>>/Border[0 0 0]>>endobj883 0 obj<</Rect[53.162 206.138 207.918 221.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®ÀF•ÊºTÔÂ§Ç˝vì˙SEC180)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_128.html#SEC180)/S/URI>>/Border[0 0 0]>>endobj884 0 obj<</Rect[53.162 50.7385 176.796 65.7385]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÏY…ÉuuÜ˘^„Ñ=kSEC249)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_134.html#SEC249)/S/URI>>/Border[0 0 0]>>endobj885 0 obj<</Annots 888 0 R/Parent 953 0 R/ID 901 0 R/StructParents 17/Contents 897 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj886 0 obj[867 0 R]endobj887 0 obj<</Rect[53.162 697.0 230.85 712.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(A=˛`ÓG14ü‹ìùÖ:ùSEC204)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html#SEC204)/S/URI>>/Border[0 0 0]>>endobj888 0 obj[887 0 R 889 0 R 890 0 R 891 0 R 892 0 R 893 0 R 894 0 R 895 0 R]endobj889 0 obj<</Rect[53.162 659.2 305.162 674.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(dx#jÄÃ∏ÓÖ∆ËâΩ∫ SEC264)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_141.html#SEC264)/S/URI>>/Border[0 0 0]>>endobj890 0 obj<</Rect[53.162 554.2 210.662 569.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(lç≤°◊0*ÆVÅåN∏wŒSEC271)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html#SEC271)/S/URI>>/Border[0 0 0]>>endobj891 0 obj<</Rect[65.608 450.0 88.162 465.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj892 0 obj<</Rect[95.162 450.0 143.378 465.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[841 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_6.html)/S/URI>>/Border[0 0 0]>>endobj893 0 obj<</Rect[150.378 450.0 174.486 465.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[908 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_8.html)/S/URI>>/Border[0 0 0]>>endobj894 0 obj<</Rect[181.486 450.0 200.932 465.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj895 0 obj<</Rect[251.094 450.0 343.634 465.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj896 0 obj<</Length 5262>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Structure of this Boo\k)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
213.558 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Structure of this Book)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 655.914 Tm
(This book's structure reflects its tutorial intent, rather than any stro\ng grouping of concepts. In the next )Tj
0 -1.2 TD
(three chapters, ideas are introduced in the order that I think they're e\asiest to learn. Each chapter )Tj
T*
(introduces a few more or less related ideas, with small code examples, a\nd ends with more examples of )Tj
T*
(Scheme programs to show why the ideas are useful. The later chapters int\roduce relatively independent )Tj
T*
(topics. )Tj
0 -2.557 TD
([ The following needs to be reworked a little, after the actual document\ structure settles down. ] )Tj
0 -2.557 TD
(section )Tj
ET
0.706 w 
53.162 514.997 m
122.378 514.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 53.162 517.114 Tm
(Introduction)Tj
0 0 0 rg
( describes some basic features of Scheme, including a little syntax, and\ gives code )Tj
-3.083 -1.343 Td
(examples to show that Scheme can be used like most programming languages\--you don't give up much )Tj
0 -1.2 TD
(when using Scheme, and it's not hard to switch. )Tj
0 -2.557 TD
(section )Tj
ET
53.162 443.597 m
205.972 443.597 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 53.162 445.714 Tm
(Using Scheme \(A Tutorial\))Tj
0 0 0 rg
( gives a tutorial on Scheme programming, intended to be used while )Tj
-3.083 -1.343 Td
(sitting at a running Scheme system and trying examples interactively. )Tj
T*
(section )Tj
ET
53.162 388.997 m
176.012 388.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 53.162 391.114 Tm
(Writing an Interpreter)Tj
0 0 0 rg
( presents an simple interpreter for a subset of Scheme. )Tj
-3.083 -2.7 Td
(section )Tj
ET
53.162 351.197 m
221.134 351.197 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 53.162 353.314 Tm
(Environments and Procedures)Tj
0 0 0 rg
( describes Scheme's binding environments and procedures, and )Tj
-3.083 -1.343 Td
(shows how procedural abstraction can be very powerful in a language with\ first-class procedures, block )Tj
0 -1.2 TD
(structure indefinite extent \(garbage collection\). It then shows an imp\lementation of binding )Tj
T*
(environements and procedures for the interpreter from the previous chapt\er, and shows how to use )Tj
T*
(Scheme's binding and procedure-defining constructs in fairly sophisticat\ed ways. )Tj
0 -2.557 TD
(section )Tj
ET
53.162 246.197 m
172.148 246.197 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 53.162 248.314 Tm
(Recursion in Scheme)Tj
0 0 0 rg
( discusses recursion, and especially )Tj
/T1_2 1 Tf
(tail recursion)Tj
/T1_0 1 Tf
(. )Tj
-3.083 -2.7 Td
(section )Tj
ET
53.162 208.397 m
207.918 208.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 53.162 210.514 Tm
(Quasiquotation and Macros)Tj
0 0 0 rg
( presents quasiquotation, a means of constructing complex data )Tj
-3.083 -1.343 Td
(structures and variants of stereotyped data structures, and then present\s macros, a facility for defining )Tj
0 -1.2 TD
(your own "special forms" in Scheme. Macros let you define your own contr\ol constructs, data-)Tj
T*
(structuring systems such as object systems, etc. \(If you've ever been d\aunted by problems with C or Lisp )Tj
T*
(macros, don't worry--Scheme macros fix the major problems with older mac\ro systems.\) Macros are also )Tj
T*
(interesting because they're often used in the implementation of Scheme i\tself. They allow the language )Tj
T*
(implementation to be structured in a layers, with most of the language w\ritten in the language itself, by )Tj
T*
(bootstrapping up from a very small core language understood by the compi\ler. )Tj
0 -2.557 TD
(section )Tj
ET
53.162 52.997 m
176.796 52.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 53.162 55.114 Tm
(Other Useful Features)Tj
0 0 0 rg
( presents a variety of miscellaneous features of Scheme that are useful \in )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_7.html \(1 of 2\)11/\3/2006 8:53:22 PM)Tj
ET
EMC 

endstreamendobj897 0 obj<</Length 2901>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Structure of this Boo\k)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(writing real programs. They're not part of the conceptual core of Scheme\, but any useful language )Tj
0 -1.2 TD
(should have them. )Tj
0 -2.557 TD
(section )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
53.162 699.259 m
230.85 699.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 53.162 701.3755 Tm
(Records and Object Orientation)Tj
0 0 0 rg
( ... )Tj
-3.083 -2.705 Td
(section )Tj
ET
0.428 w 
53.162 662.223 m
305.162 662.223 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 53.162 663.5082 Tm
(call-with-current-continuation)Tj
0 0 0 rg
/T1_0 1 Tf
( discusses first-class continuations, the most )Tj
-3.083 -1.338 Td
(powerful control construct in Scheme. Continuations allow you to capture\ the state of the activation )Tj
0 -1.2 TD
(stack \(sort of\), and return to that state to resume at a given point i\n a program's execution. Continuations )Tj
T*
(are conceptually weird, and are not to be used casually, but tremendousl\y expressive for things like )Tj
T*
(backtracking, threads, etc. )Tj
0 -2.557 TD
(section )Tj
ET
0.706 w 
53.162 556.459 m
210.662 556.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 53.162 558.5756 Tm
(A Simple Scheme Compiler)Tj
0 0 0 rg
( presents an example Scheme program that happens to be a simple )Tj
-3.083 -1.343 Td
(compiler for Scheme. It's a "toy" compiler, but a real compiler nonethel\ess, with all of the basic features )Tj
0 -1.2 TD
(of any Scheme compiler, but minimal boring "support" hacks to perform to\kenization, storage )Tj
T*
(management, etc. )Tj
ET
0.5 0.5 0.5 rg
10 473.4 m
10 475.4 l
602 475.4 l
601 474.4 l
11 474.4 l
11 474.4 l
h
f
0.875 0.875 0.875 rg
602 475.4 m
602 473.4 l
10 473.4 l
11 474.4 l
601 474.4 l
601 474.4 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 454.3755 Tm
(Go to the )Tj
ET
65.608 452.259 m
88.162 452.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 454.3755 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 452.259 m
143.378 452.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 454.3755 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 452.259 m
174.486 452.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 454.3755 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 452.259 m
200.932 452.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 454.3755 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 452.259 m
343.634 452.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 454.3755 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_7.html \(2 of 2\)11/\3/2006 8:53:22 PM)Tj
ET
EMC 

endstreamendobj898 0 obj(An Introduction to Scheme and its Implementation - Structure of this Book)endobj899 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_7.html)/S 700 0 R>>endobj900 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_7.html)endobj901 0 obj(–˛<ä‰⁄D‡\r+û©‡€)endobj902 0 obj<</TS(D:20061104045322)/ID 901 0 R/CT(text/html)/O[868 0 R 885 0 R]/S/SPS/T 898 0 R/TID 904 0 R/SI 903 0 R>>endobj903 0 obj<</TS(D:20061104045322)/AU 900 0 R>>endobj904 0 obj(ÛµÉBã.\)®ªH~àå)endobj905 0 obj<</Parent 710 0 R/Next 949 0 R/Dest[868 0 R/XYZ 0 792 null]/Prev 865 0 R/SE 867 0 R/Title(An Introduction to Scheme and its Implementation - Structure of this Book)>>endobj906 0 obj<</TextDecorationType/Underline/O/Layout>>endobj907 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 931 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 908 0 R>>endobj908 0 obj<</Annots 911 0 R/Parent 953 0 R/ID 945 0 R/StructParents 18/Contents 940 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj909 0 obj[907 0 R]endobj910 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj911 0 obj[910 0 R 912 0 R 913 0 R 914 0 R 915 0 R 917 0 R 918 0 R 919 0 R 920 0 R 921 0 R 922 0 R 923 0 R 924 0 R 925 0 R 926 0 R 927 0 R 928 0 R 929 0 R 930 0 R]endobj912 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[868 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_7.html)/S/URI>>/Border[0 0 0]>>endobj913 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[952 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_9.html)/S/URI>>/Border[0 0 0]>>endobj914 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj915 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj916 0 obj[908 0 R/XYZ 0 731.2 null]endobj917 0 obj<</Rect[10.0 683.954 154.479 709.723]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC8)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC8)/S/URI>>/Border[0 0 0]>>endobj918 0 obj<</Rect[50.0 279.077 147.202 294.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(p±“äE∆0·Ìü≈ôV”SEC9)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_9.html#SEC9)/S/URI>>/Border[0 0 0]>>endobj919 0 obj<</Rect[50.0 260.277 134.378 275.277]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D('\\\\oÍŒ‘¢˙><«íq›SEC10)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_10.html#SEC10)/S/URI>>/Border[0 0 0]>>endobj920 0 obj<</Rect[50.0 241.477 132.446 256.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(õªÖ\(ùO¯»'≈´ÍSEC38)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_36.html#SEC38)/S/URI>>/Border[0 0 0]>>endobj921 0 obj<</Rect[50.0 222.677 228.458 237.677]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ì\\\\âÂ%$ñq˘‘”èaSEC48)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html#SEC48)/S/URI>>/Border[0 0 0]>>endobj922 0 obj<</Rect[50.0 203.877 214.472 218.877]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∆ã¸ó©0»¶M†ó$`OSEC54)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_47.html#SEC54)/S/URI>>/Border[0 0 0]>>endobj923 0 obj<</Rect[50.0 185.077 165.878 200.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(?úØG’\\0À÷™ù$á ø˙SEC58)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_51.html#SEC58)/S/URI>>/Border[0 0 0]>>endobj924 0 obj<</Rect[50.0 166.277 245.944 181.277]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ù0Ì\(kÛ∫ØaX	◊ÔSEC60)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_53.html#SEC60)/S/URI>>/Border[0 0 0]>>endobj925 0 obj<</Rect[50.0 147.477 112.202 162.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ÿ1´‘?jµ3ÓF'‹˘èÆ¯SEC67)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_60.html#SEC67)/S/URI>>/Border[0 0 0]>>endobj926 0 obj<</Rect[50.0 128.677 184.54 143.677]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D('	Kπg™zRF†gn¨±ñSEC77)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_70.html#SEC77)/S/URI>>/Border[0 0 0]>>endobj927 0 obj<</Rect[50.0 109.877 132.824 124.877]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(˛&‚!—IPÍ\\0[[‚Xè”SEC80)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_73.html#SEC80)/S/URI>>/Border[0 0 0]>>endobj928 0 obj<</Rect[50.0 91.0769 91.986 106.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÅˆÜ'`{FAÜÕ©$DóSEC81)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_74.html#SEC81)/S/URI>>/Border[0 0 0]>>endobj929 0 obj<</Rect[50.0 72.2769 128.568 87.2769]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÒTíÇ®P¢Çÿ+]∏»SEC82)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_75.html#SEC82)/S/URI>>/Border[0 0 0]>>endobj930 0 obj<</Rect[50.0 53.4769 160.824 68.4769]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(YˆEàêŸ⁄ê\\\\^¬®\)-yıSEC83)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_76.html#SEC83)/S/URI>>/Border[0 0 0]>>endobj931 0 obj<</Annots 934 0 R/Parent 953 0 R/ID 945 0 R/StructParents 19/Contents 941 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj932 0 obj[907 0 R]endobj933 0 obj<</Rect[50.0 749.6 184.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(?'⁄\\\\Á‘?öøÈ9|π/≠SEC84)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_77.html#SEC84)/S/URI>>/Border[0 0 0]>>endobj934 0 obj[933 0 R 935 0 R 936 0 R 937 0 R 938 0 R 939 0 R]endobj935 0 obj<</Rect[65.608 695.8 88.162 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj936 0 obj<</Rect[95.162 695.8 143.378 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[868 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_7.html)/S/URI>>/Border[0 0 0]>>endobj937 0 obj<</Rect[150.378 695.8 174.486 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[952 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_9.html)/S/URI>>/Border[0 0 0]>>endobj938 0 obj<</Rect[181.486 695.8 200.932 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj939 0 obj<</Rect[251.094 695.8 343.634 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj940 0 obj<</Length 5895>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Introduction)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
2.081 w 
10 684.255 m
154.479 684.255 l
S
0 0 1 rg
BT
/T1_1 1 Tf
24.7692 0 0 24.7692 10 690.4968 Tm
(Introduction)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 649.4525 Tm
(In this chapter, I'll give a quick overview of some basic features of Sc\heme, enough to get started )Tj
0 -1.2 TD
(writing some programs. )Tj
0 -2.557 TD
(This chapter moves fairly quickly, briefly introducing about half of the\ ideas in Scheme. In later )Tj
0 -1.2 TD
(chapters, I'll explain and demonstrate these features more fully, and in\troduce other advanced features. )Tj
0 -2.557 TD
(This chapter is meant to be read concurrently with the first half of the\ next one, which includes a tutorial )Tj
0 -1.2 TD
(on using Scheme interactively. I've put in directives saying when you sh\ould work through parts of the )Tj
T*
(next chapter. After becoming familiar with Scheme, it will serve as a ba\sic reference; you can consult )Tj
T*
(the next chapter for basic examples, and later chapters for advanced tec\hniques. )Tj
0 -2.557 TD
(If you're fluent in concepts of programming languages, and especially if\ you've programmed in Lisp, )Tj
0 -1.2 TD
(you may be able to breeze through this chapter to get a sense of what Sc\heme is about. If you're fluent in )Tj
T*
(programming language concepts, you may be able to read straight through \this section. )Tj
/T1_2 1 Tf
0 -2.557 TD
(\(NOTE TO MY CS345 and CS386l STUDENTS: don't try to breeze through this\. Do the tutorial hunks )Tj
0 -1.2 TD
(after each hunk of this chapter.---PRW\))Tj
/T1_0 1 Tf
( )Tj
0 -2.557 TD
(If you intend to actually program in Scheme, you should definitely follo\w the directives and read parts )Tj
0 -1.2 TD
(of the next chapter, rather than trying to plow straight through this on\e. )Tj
/T1_3 1 Tf
7 0 0 7 35.713 283.4525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
50 281.336 m
147.202 281.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 283.4525 Tm
(What is Scheme?)Tj
0 0 0 rg
(: What is Scheme? )Tj
/T1_3 1 Tf
7 0 0 7 35.713 264.6525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 262.536 m
134.378 262.536 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 264.6525 Tm
(Scheme Basics)Tj
0 0 0 rg
(: Basic Features of Scheme )Tj
/T1_3 1 Tf
7 0 0 7 35.713 245.8525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 243.736 m
132.446 243.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 245.8525 Tm
(Pairs and Lists)Tj
0 0 0 rg
(: Pairs and Lists )Tj
/T1_3 1 Tf
7 0 0 7 35.713 227.0525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 224.936 m
228.458 224.936 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 227.0525 Tm
(Recursion Over Data Structures)Tj
0 0 0 rg
(: Recursion Over Lists and Other Data Structures )Tj
/T1_3 1 Tf
7 0 0 7 35.713 208.2525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 206.136 m
214.472 206.136 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 208.2525 Tm
(Type and Equality Predicates)Tj
0 0 0 rg
(: Type and Equality Predicates )Tj
/T1_3 1 Tf
7 0 0 7 35.713 189.4525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 187.336 m
165.878 187.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 189.4525 Tm
(Quoting and Literals)Tj
0 0 0 rg
(: Quoting and Literals )Tj
/T1_3 1 Tf
7 0 0 7 35.713 170.6525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 168.536 m
245.944 168.536 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 170.6525 Tm
(Local Variables and Lexical Scope)Tj
0 0 0 rg
(: Local Variables and Lexical Scope )Tj
/T1_3 1 Tf
7 0 0 7 35.713 151.8525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 149.736 m
112.202 149.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 151.8525 Tm
(Procedures)Tj
0 0 0 rg
(: Procedures )Tj
/T1_3 1 Tf
7 0 0 7 35.713 133.0525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 130.936 m
184.54 130.936 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 133.0525 Tm
(Variable Binding Again)Tj
0 0 0 rg
(: Variables, Bindings, and Values )Tj
/T1_3 1 Tf
7 0 0 7 35.713 114.2525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 112.136 m
132.824 112.136 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 114.2525 Tm
(Tail Recursion)Tj
0 0 0 rg
(: Tail Recursion )Tj
/T1_3 1 Tf
7 0 0 7 35.713 95.4525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 93.336 m
91.986 93.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 95.4525 Tm
(Macros)Tj
0 0 0 rg
(: Extending the Language )Tj
/T1_3 1 Tf
7 0 0 7 35.713 76.6525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 74.536 m
128.568 74.536 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 76.6525 Tm
(Continuations)Tj
0 0 0 rg
(: Continuations )Tj
/T1_3 1 Tf
7 0 0 7 35.713 57.8525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 55.736 m
160.824 55.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 57.8525 Tm
(Iteration Constructs)Tj
0 0 0 rg
(: Iteration Constructs )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_8.html \(1 of 2\)11/\3/2006 8:53:28 PM)Tj
ET
EMC 

endstreamendobj941 0 obj<</Length 1612>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Introduction)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
7 0 0 7 35.713 753.9756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
50 751.859 m
184.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 753.9756 Tm
(Introduction Discussion)Tj
0 0 0 rg
(: Discussion )Tj
ET
0.5 0.5 0.5 rg
10 719.2 m
10 721.2 l
602 721.2 l
601 720.2 l
11 720.2 l
11 720.2 l
h
f
0.875 0.875 0.875 rg
602 721.2 m
602 719.2 l
10 719.2 l
11 720.2 l
601 720.2 l
601 720.2 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 700.1756 Tm
(Go to the )Tj
ET
65.608 698.059 m
88.162 698.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 700.1756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 698.059 m
143.378 698.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 700.1756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 698.059 m
174.486 698.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 700.1756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 698.059 m
200.932 698.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 700.1756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 698.059 m
343.634 698.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 700.1756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_8.html \(2 of 2\)11/\3/2006 8:53:28 PM)Tj
ET
EMC 

endstreamendobj942 0 obj(An Introduction to Scheme and its Implementation - Introduction)endobj943 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_8.html)/S 700 0 R>>endobj944 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_8.html)endobj945 0 obj( ÔQ€`£<„˘tL£1ˇ)endobj946 0 obj<</TS(D:20061104045328)/ID 945 0 R/CT(text/html)/O[908 0 R 931 0 R]/S/SPS/T 942 0 R/TID 948 0 R/SI 947 0 R>>endobj947 0 obj<</TS(D:20061104045328)/AU 944 0 R>>endobj948 0 obj(Ôh†/Œ:û[:@?Æ∞)endobj949 0 obj<</Parent 710 0 R/Next 976 0 R/Dest[908 0 R/XYZ 0 792 null]/Prev 905 0 R/SE 907 0 R/Title(An Introduction to Scheme and its Implementation - Introduction)>>endobj950 0 obj<</TextDecorationType/Underline/O/Layout>>endobj951 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 952 0 R>>endobj952 0 obj<</Annots 956 0 R/Parent 1078 0 R/ID 972 0 R/StructParents 20/Contents 968 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj953 0 obj<</Parent 1544 0 R/Count 5/Type/Pages/Kids[841 0 R 868 0 R 885 0 R 908 0 R 931 0 R]>>endobj954 0 obj[951 0 R]endobj955 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj956 0 obj[955 0 R 957 0 R 958 0 R 959 0 R 960 0 R 962 0 R 963 0 R 964 0 R 965 0 R 966 0 R 967 0 R]endobj957 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[908 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_8.html)/S/URI>>/Border[0 0 0]>>endobj958 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[979 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_10.html)/S/URI>>/Border[0 0 0]>>endobj959 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj960 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj961 0 obj[952 0 R/XYZ 0 731.2 null]endobj962 0 obj<</Rect[10.0 689.877 256.65 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC9)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC9)/S/URI>>/Border[0 0 0]>>endobj963 0 obj<</Rect[65.608 219.138 88.162 234.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj964 0 obj<</Rect[95.162 219.138 143.378 234.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[908 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_8.html)/S/URI>>/Border[0 0 0]>>endobj965 0 obj<</Rect[150.378 219.138 174.486 234.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[979 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_10.html)/S/URI>>/Border[0 0 0]>>endobj966 0 obj<</Rect[181.486 219.138 200.932 234.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj967 0 obj<</Rect[251.094 219.138 343.634 234.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj968 0 obj<</Length 4363>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - What is Scheme?)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
256.65 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(What is Scheme? \(Hunk A\))Tj
0 0 0 rg
/T1_2 1 Tf
14 0 0 14 10 655.8466 Tm
(==================================================================)Tj
0 -1.2 TD
(     Hunk A starts here:)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
(First, a bunch of jargon--ignore it if you want to: )Tj
0 -2.557 TD
(Scheme is a lexically-scoped, block structured, dynamically typed, mostl\y functional language. It is a )Tj
0 -1.2 TD
(variant of Lisp. It has first-class procedures with block structure and \indefinite extent. Parameter passing )Tj
T*
(is by value, but the values are references. It has first-class continuat\ions to allow the construction of new )Tj
T*
(control abstractions. It has lexically-scoped \("hygeinic"\) macros to a\llow definition of of new syntactic )Tj
T*
(forms, or redefinition of old ones. )Tj
0 -2.557 TD
(If none of that means anything to you right now, don't worry. Keep readi\ng. )Tj
0 -2.557 TD
(Scheme is designed to be an )Tj
/T1_3 1 Tf
(interactive)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(safe)Tj
/T1_0 1 Tf
( language. A normal Scheme system is really an )Tj
0 -1.2 TD
(interactive program that you can use to run )Tj
/T1_3 1 Tf
(parts)Tj
/T1_0 1 Tf
( of your Scheme program in the order you want. When )Tj
T*
(one has run, your program doesn't just terminate, and your data don't di\sappear--Scheme asks you what )Tj
T*
(to do next, and you can examine the data or tell Scheme to run another p\art of the program. )Tj
0 -2.557 TD
(Scheme is )Tj
/T1_3 1 Tf
(safe)Tj
/T1_0 1 Tf
( in that the interactive system generally won't crash. If you make a mis\take that would )Tj
0 -1.2 TD
(crash the system, Scheme detects that, and asks you what to do about it.\ It lets you examine and change )Tj
T*
(the system's state, and go on. This is a very different style of program\ming and debugging from the )Tj
T*
(normal edit-compile-link-run-crash cycle of "batch" programming language\s like C and C++. )Tj
ET
0.5 0.5 0.5 rg
10 242.538 m
10 244.538 l
602 244.538 l
601 243.538 l
11 243.538 l
11 243.538 l
h
f
0.875 0.875 0.875 rg
602 244.538 m
602 242.538 l
10 242.538 l
11 243.538 l
601 243.538 l
601 243.538 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 223.514 Tm
(Go to the )Tj
ET
0.706 w 
65.608 221.397 m
88.162 221.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 223.514 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 221.397 m
143.378 221.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 223.514 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 221.397 m
174.486 221.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 223.514 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 221.397 m
200.932 221.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 223.514 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 221.397 m
343.634 221.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 223.514 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_9.html11/3/2006 8:53\:31 PM)Tj
ET
EMC 

endstreamendobj969 0 obj(An Introduction to Scheme and its Implementation - What is Scheme?)endobj970 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_9.html)/S 700 0 R>>endobj971 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_9.html)endobj972 0 obj(p±“äE∆0·Ìü≈ôV”)endobj973 0 obj<</TS(D:20061104045331)/ID 972 0 R/CT(text/html)/O[952 0 R]/S/SPS/T 969 0 R/TID 975 0 R/SI 974 0 R>>endobj974 0 obj<</TS(D:20061104045331)/AU 971 0 R>>endobj975 0 obj(£e"Ûﬁë+d†ºb~ØÑΩl)endobj976 0 obj<</Parent 710 0 R/Next 1011 0 R/Dest[952 0 R/XYZ 0 792 null]/Prev 949 0 R/SE 951 0 R/Title(An Introduction to Scheme and its Implementation - What is Scheme?)>>endobj977 0 obj<</TextDecorationType/Underline/O/Layout>>endobj978 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 979 0 R>>endobj979 0 obj<</Annots 982 0 R/Parent 1078 0 R/ID 1007 0 R/StructParents 21/Contents 1003 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj980 0 obj[978 0 R]endobj981 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj982 0 obj[981 0 R 983 0 R 984 0 R 985 0 R 986 0 R 988 0 R 989 0 R 990 0 R 991 0 R 992 0 R 993 0 R 994 0 R 995 0 R 996 0 R 997 0 R 998 0 R 999 0 R 1000 0 R 1001 0 R 1002 0 R]endobj983 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[952 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_9.html)/S/URI>>/Border[0 0 0]>>endobj984 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1014 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_11.html)/S/URI>>/Border[0 0 0]>>endobj985 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj986 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj987 0 obj[979 0 R/XYZ 0 731.2 null]endobj988 0 obj<</Rect[10.0 689.877 227.631 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC10)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC10)/S/URI>>/Border[0 0 0]>>endobj989 0 obj<</Rect[50.0 615.738 117.662 630.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(#ÓŸøûÙ^Î$‚©7:≠SEC11)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_11.html#SEC11)/S/URI>>/Border[0 0 0]>>endobj990 0 obj<</Rect[50.0 596.938 102.108 611.938]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∂˘‚6∑\)iÒüx˜dd;ˇSEC19)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_19.html#SEC19)/S/URI>>/Border[0 0 0]>>endobj991 0 obj<</Rect[50.0 578.138 225.0 593.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(˘Fìhˆ?X˘;å>∏ˇSEC20)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_20.html#SEC20)/S/URI>>/Border[0 0 0]>>endobj992 0 obj<</Rect[50.0 559.338 110.676 574.338]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(4bÙµ–¨ZäŸxpñæSEC24)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_23.html#SEC24)/S/URI>>/Border[0 0 0]>>endobj993 0 obj<</Rect[50.0 540.538 196.972 555.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(&ià,‹Ωªæ≠PÚ0àFûSEC25)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_24.html#SEC25)/S/URI>>/Border[0 0 0]>>endobj994 0 obj<</Rect[50.0 521.738 180.256 536.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Wg¬@ÉÆ'πæÓÎáøıÅSEC31)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_30.html#SEC31)/S/URI>>/Border[0 0 0]>>endobj995 0 obj<</Rect[50.0 502.938 237.418 517.938]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(-Lí∞[“Fn:…]f8@wSEC34)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_33.html#SEC34)/S/URI>>/Border[0 0 0]>>endobj996 0 obj<</Rect[50.0 484.138 145.27 499.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∞÷\)W◊nAÇ“¿\\¡∞Ω”SEC35)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_34.html#SEC35)/S/URI>>/Border[0 0 0]>>endobj997 0 obj<</Rect[50.0 465.338 137.892 480.338]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‹}ˇp`‚A‰ZÙ˘ÎÿûSEC37)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_35.html#SEC37)/S/URI>>/Border[0 0 0]>>endobj998 0 obj<</Rect[65.608 411.538 88.162 426.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj999 0 obj<</Rect[95.162 411.538 143.378 426.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[952 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_9.html)/S/URI>>/Border[0 0 0]>>endobj1000 0 obj<</Rect[150.378 411.538 174.486 426.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1014 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_11.html)/S/URI>>/Border[0 0 0]>>endobj1001 0 obj<</Rect[181.486 411.538 200.932 426.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1002 0 obj<</Rect[251.094 411.538 343.634 426.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1003 0 obj<</Length 4550>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Scheme Basics)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
227.631 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Basic Scheme Features)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 655.914 Tm
(I'll go briefly through some of the basic features of Scheme, giving lit\tle code examples for clarity. )Tj
/T1_2 1 Tf
7 0 0 7 35.713 620.114 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
50 617.997 m
117.662 617.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 620.114 Tm
(Expressions)Tj
0 0 0 rg
(: Code consists of expressions )Tj
/T1_2 1 Tf
7 0 0 7 35.713 601.314 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 599.197 m
102.108 599.197 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 601.314 Tm
(Booleans)Tj
0 0 0 rg
(: The boolean values #t and #f )Tj
/T1_2 1 Tf
7 0 0 7 35.713 582.514 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 580.397 m
225 580.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 582.514 Tm
(Other Control-Flow Constructs)Tj
0 0 0 rg
(: cond, and, and or )Tj
/T1_2 1 Tf
7 0 0 7 35.713 563.714 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 561.597 m
110.676 561.597 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 563.714 Tm
(Comments)Tj
0 0 0 rg
(: Comments run from a semicolon to the end of a line )Tj
/T1_2 1 Tf
7 0 0 7 35.713 544.914 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 542.797 m
196.972 542.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 544.914 Tm
(Parentheses and Indenting)Tj
0 0 0 rg
(: A note about parentheses and indenting )Tj
/T1_2 1 Tf
7 0 0 7 35.713 526.114 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 523.997 m
180.256 523.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 526.114 Tm
(All Values are Pointers)Tj
0 0 0 rg
(: All values are conceptually pointers )Tj
/T1_2 1 Tf
7 0 0 7 35.713 507.314 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 505.197 m
237.418 505.197 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 507.314 Tm
(Automatic Memory Management)Tj
0 0 0 rg
(: Scheme reclaims memory automatically )Tj
/T1_2 1 Tf
7 0 0 7 35.713 488.514 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 486.397 m
145.27 486.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 488.514 Tm
(Dynamic Typing)Tj
0 0 0 rg
(: Objects have types, variables don't )Tj
/T1_2 1 Tf
7 0 0 7 35.713 469.714 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 467.597 m
137.892 467.597 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 469.714 Tm
(The Empty List)Tj
0 0 0 rg
(: The empty list object \(\), a.k.a. the null pointer )Tj
ET
0.5 0.5 0.5 rg
10 434.938 m
10 436.938 l
602 436.938 l
601 435.938 l
11 435.938 l
11 435.938 l
h
f
0.875 0.875 0.875 rg
602 436.938 m
602 434.938 l
10 434.938 l
11 435.938 l
601 435.938 l
601 435.938 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 415.914 Tm
(Go to the )Tj
ET
65.608 413.797 m
88.162 413.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 415.914 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 413.797 m
143.378 413.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 415.914 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 413.797 m
174.486 413.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 415.914 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 413.797 m
200.932 413.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 415.914 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 413.797 m
343.634 413.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 415.914 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_10.html11/3/2006 8:5\3:36 PM)Tj
ET
EMC 

endstreamendobj1004 0 obj(An Introduction to Scheme and its Implementation - Scheme Basics)endobj1005 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_10.html)/S 700 0 R>>endobj1006 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_10.html)endobj1007 0 obj('\\oÍŒ‘¢˙><«íq›)endobj1008 0 obj<</TS(D:20061104045336)/ID 1007 0 R/CT(text/html)/O[979 0 R]/S/SPS/T 1004 0 R/TID 1010 0 R/SI 1009 0 R>>endobj1009 0 obj<</TS(D:20061104045336)/AU 1006 0 R>>endobj1010 0 obj(!êº·wk⁄X∑á4~≤y…)endobj1011 0 obj<</Parent 710 0 R/Next 1044 0 R/Dest[979 0 R/XYZ 0 792 null]/Prev 976 0 R/SE 978 0 R/Title(An Introduction to Scheme and its Implementation - Scheme Basics)>>endobj1012 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1013 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 1014 0 R>>endobj1014 0 obj<</Annots 1017 0 R/Parent 1078 0 R/ID 1040 0 R/StructParents 22/Contents 1036 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1015 0 obj[1013 0 R]endobj1016 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1017 0 obj[1016 0 R 1018 0 R 1019 0 R 1020 0 R 1021 0 R 1023 0 R 1024 0 R 1025 0 R 1026 0 R 1027 0 R 1028 0 R 1029 0 R 1030 0 R 1031 0 R 1032 0 R 1033 0 R 1034 0 R 1035 0 R]endobj1018 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[979 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_10.html)/S/URI>>/Border[0 0 0]>>endobj1019 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1047 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_12.html)/S/URI>>/Border[0 0 0]>>endobj1020 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1021 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1022 0 obj[1014 0 R/XYZ 0 731.2 null]endobj1023 0 obj<</Rect[10.0 693.431 243.391 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC11)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC11)/S/URI>>/Border[0 0 0]>>endobj1024 0 obj<</Rect[50.0 550.148 155.378 565.148]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(m%!='N÷¸Xüy∏®h¯SEC12)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_12.html#SEC12)/S/URI>>/Border[0 0 0]>>endobj1025 0 obj<</Rect[50.0 531.348 184.134 546.348]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∏ﬂ·&T/gs˜Ôoƒ b’SEC13)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_13.html#SEC13)/S/URI>>/Border[0 0 0]>>endobj1026 0 obj<</Rect[50.0 512.548 246.336 527.548]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÕoÂtv-=»ïÚ Õ$Ø/SEC14)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_14.html#SEC14)/S/URI>>/Border[0 0 0]>>endobj1027 0 obj<</Rect[50.0 493.748 208.284 508.748]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Dï∂J‚∆MìË∫·i SEC16)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_16.html#SEC16)/S/URI>>/Border[0 0 0]>>endobj1028 0 obj<</Rect[50.0 474.948 223.782 489.948]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∏âó¬◊Çç¡^odÛ5ŸoESEC15)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_15.html#SEC15)/S/URI>>/Border[0 0 0]>>endobj1029 0 obj<</Rect[50.0 456.148 130.5 471.148]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∑µîÄr˝2">ÓØ˙0\\\\SEC17)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_17.html#SEC17)/S/URI>>/Border[0 0 0]>>endobj1030 0 obj<</Rect[50.0 437.348 244.81 452.348]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÔwÑyÃ˚|¯ä2vø|ÃSEC18)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_18.html#SEC18)/S/URI>>/Border[0 0 0]>>endobj1031 0 obj<</Rect[65.608 383.548 88.162 398.548]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1032 0 obj<</Rect[95.162 383.548 143.378 398.548]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[979 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_10.html)/S/URI>>/Border[0 0 0]>>endobj1033 0 obj<</Rect[150.378 383.548 174.486 398.548]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1047 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_12.html)/S/URI>>/Border[0 0 0]>>endobj1034 0 obj<</Rect[181.486 383.548 200.932 398.548]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1035 0 obj<</Rect[251.094 383.548 343.634 398.548]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1036 0 obj<</Length 4601>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Expressions)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
243.391 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Code Consists of Expressions)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(Like Lisp, Scheme is written as prefix expressions, with parentheses for\ grouping. Prefix means that the )Tj
0 -1.2 TD
(name of an operation comes first, before its operands \(the things it op\erates on\). )Tj
0 -2.557 TD
(In Scheme, there's no distinction between expressions \(like arithmetic \operations\) and statements \(like )Tj
0 -1.205 TD
(an )Tj
/T1_2 1 Tf
(if)Tj
/T1_0 1 Tf
( or a loop or a declaration\). They're all "expressions"---it's a very g\eneral term. )Tj
/T1_3 1 Tf
7 0 0 7 35.713 554.5235 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
50 552.407 m
155.378 552.407 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 554.5235 Tm
(Prefix Expressions)Tj
0 0 0 rg
(: Parenthesized prefix expressions )Tj
/T1_3 1 Tf
7 0 0 7 35.713 535.7235 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 533.607 m
184.134 533.607 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 535.7235 Tm
(Values and Side Effects)Tj
0 0 0 rg
(: Expressions return values, but may have side effects )Tj
/T1_3 1 Tf
7 0 0 7 35.713 516.9235 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 514.807 m
246.336 514.807 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 516.9235 Tm
(Defining Variables and Procedures)Tj
0 0 0 rg
(: Defining variables and procedures )Tj
/T1_3 1 Tf
7 0 0 7 35.713 498.1236 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 496.007 m
208.284 496.007 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 498.1236 Tm
(Definitions vs. Assignments)Tj
0 0 0 rg
(: Definitions name storage, assignment changes stored values )Tj
/T1_3 1 Tf
7 0 0 7 35.713 479.3235 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 477.207 m
223.782 477.207 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 479.3235 Tm
(Most Operators are Procedures)Tj
0 0 0 rg
(: Most operators are procedures )Tj
/T1_3 1 Tf
7 0 0 7 35.713 460.5235 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 458.407 m
130.5 458.407 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 460.5235 Tm
(Special Forms)Tj
0 0 0 rg
(: Special forms are not procedures )Tj
/T1_3 1 Tf
7 0 0 7 35.713 441.7235 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 439.607 m
244.81 439.607 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 441.7235 Tm
(Control Structures are Expressions)Tj
0 0 0 rg
(: Control structures are expressions that return values )Tj
ET
0.5 0.5 0.5 rg
10 406.948 m
10 408.948 l
602 408.948 l
601 407.948 l
11 407.948 l
11 407.948 l
h
f
0.875 0.875 0.875 rg
602 408.948 m
602 406.948 l
10 406.948 l
11 407.948 l
601 407.948 l
601 407.948 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 387.9235 Tm
(Go to the )Tj
ET
65.608 385.807 m
88.162 385.807 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 387.9235 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 385.807 m
143.378 385.807 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 387.9235 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 385.807 m
174.486 385.807 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 387.9235 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 385.807 m
200.932 385.807 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 387.9235 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 385.807 m
343.634 385.807 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 387.9235 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_11.html11/3/2006 8:5\3:39 PM)Tj
ET
EMC 

endstreamendobj1037 0 obj(An Introduction to Scheme and its Implementation - Expressions)endobj1038 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_11.html)/S 700 0 R>>endobj1039 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_11.html)endobj1040 0 obj(#ÓŸøûÙ^Î$‚©7:≠)endobj1041 0 obj<</TS(D:20061104045339)/ID 1040 0 R/CT(text/html)/O[1014 0 R]/S/SPS/T 1037 0 R/TID 1043 0 R/SI 1042 0 R>>endobj1042 0 obj<</TS(D:20061104045339)/AU 1039 0 R>>endobj1043 0 obj(“ã%ÁêÚ◊n¡ÆÔ8O)endobj1044 0 obj<</Parent 710 0 R/Next 1074 0 R/Dest[1014 0 R/XYZ 0 792 null]/Prev 1011 0 R/SE 1013 0 R/Title(An Introduction to Scheme and its Implementation - Expressions)>>endobj1045 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1046 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 1057 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 1047 0 R>>endobj1047 0 obj<</Annots 1050 0 R/Parent 1078 0 R/ID 1070 0 R/StructParents 23/Contents 1065 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1048 0 obj[1046 0 R]endobj1049 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1050 0 obj[1049 0 R 1051 0 R 1052 0 R 1053 0 R 1054 0 R 1056 0 R]endobj1051 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1014 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_11.html)/S/URI>>/Border[0 0 0]>>endobj1052 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1077 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_13.html)/S/URI>>/Border[0 0 0]>>endobj1053 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1054 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1055 0 obj[1047 0 R/XYZ 0 731.2 null]endobj1056 0 obj<</Rect[10.0 695.8 234.868 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC12)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC12)/S/URI>>/Border[0 0 0]>>endobj1057 0 obj<</Annots 1060 0 R/Parent 1078 0 R/ID 1070 0 R/StructParents 24/Contents 1066 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1058 0 obj[1046 0 R]endobj1059 0 obj<</Rect[65.608 680.933 88.162 695.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1060 0 obj[1059 0 R 1061 0 R 1062 0 R 1063 0 R 1064 0 R]endobj1061 0 obj<</Rect[95.162 680.933 143.378 695.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1014 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_11.html)/S/URI>>/Border[0 0 0]>>endobj1062 0 obj<</Rect[150.378 680.933 174.486 695.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1077 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_13.html)/S/URI>>/Border[0 0 0]>>endobj1063 0 obj<</Rect[181.486 680.933 200.932 695.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1064 0 obj<</Rect[251.094 680.933 343.634 695.933]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1065 0 obj<</Length 4625>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Prefix Expressions)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.176 w 
10 696.405 m
234.868 696.405 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 699.933 Tm
(Parenthesized Prefix Expressions)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.687 TD
(In C or Pascal, a call to procedure )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
( with arguments )Tj
/T1_2 1 Tf
(bar)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(baz)Tj
/T1_0 1 Tf
( is written )Tj
/T1_2 1 Tf
0 -2.562 TD
(foo\(bar,baz\);)Tj
/T1_0 1 Tf
0 -2.552 TD
(but in Scheme it's written )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(foo bar baz\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Note that the procedure name goes )Tj
/T1_3 1 Tf
(inside)Tj
/T1_0 1 Tf
( the parentheses, along with the arguments. Get used to it. It )Tj
0 -1.205 TD
(may seem less odd if you think of it as being like a operating system sh\ell command--e.g., )Tj
/T1_2 1 Tf
(rm foo)Tj
/T1_0 1 Tf
(, or )Tj
/T1_2 1 Tf
0 -1.205 TD
(dir bar)Tj
/T1_0 1 Tf
(---but delimited by parentheses. )Tj
0 -2.562 TD
(Just as in C, expressions can be nested. Here's a call to a procedure )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
(, with nested procedure call )Tj
0 -1.2 TD
(expressions to compute the arguments. )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(foo \(bar x\) \(baz y\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(This is pretty much equivalent to C's )Tj
/T1_2 1 Tf
0 -2.562 TD
(foo\(bar\(x\),baz\(y\)\);)Tj
/T1_0 1 Tf
0 -2.552 TD
(As in C or Pascal, the argument expressions in a procedure call are eval\uated )Tj
/T1_3 1 Tf
(before)Tj
/T1_0 1 Tf
( actually calling the )Tj
0 -1.2 TD
(procedure; the resulting values are what's passed to the procedure. In S\cheme terminology, we say that )Tj
T*
(the procedure is )Tj
/T1_3 1 Tf
(applied)Tj
/T1_0 1 Tf
( to the actual argument values. )Tj
0 -2.557 TD
(You'll notice soon that Scheme has very few special characters, and that\ expressions are generally )Tj
0 -1.205 TD
(delimited by parentheses or spaces. For example, )Tj
/T1_2 1 Tf
(a-variable)Tj
/T1_0 1 Tf
( is a single identifier, not a subtraction )Tj
0 -1.2 TD
(expression. Identifiers in Scheme can include not only alphabetic charac\ters and digits, but several other )Tj
0 -1.205 TD
(characters, such as )Tj
/T1_2 1 Tf
(!)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(?)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(-)Tj
/T1_0 1 Tf
(, and )Tj
/T1_2 1 Tf
(_)Tj
/T1_0 1 Tf
(. Long identifiers are often constructed from phrases, to make it clear \)Tj
0 -1.205 TD
(what they mean, using hyphens to separate words; for example, you can ha\ve a variable named )Tj
/T1_2 1 Tf
(list-)Tj
0 -1.205 TD
(of-first-ten-lists)Tj
/T1_0 1 Tf
(. You can use characters like )Tj
/T1_2 1 Tf
(+)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(-)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(*)Tj
/T1_0 1 Tf
(, and )Tj
/T1_2 1 Tf
(/)Tj
/T1_0 1 Tf
( within an identifier, as in )Tj
/T1_2 1 Tf
0 -1.205 TD
(before-tax-total+tax)Tj
/T1_0 1 Tf
(, or )Tj
/T1_2 1 Tf
(estimate+epsilon)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(One consequence of Scheme's liberal rules for constructing identifiers i\s that )Tj
/T1_3 1 Tf
(spaces are important)Tj
/T1_0 1 Tf
(. You )Tj
0 -1.2 TD
(must put one or more spaces \(or carriage returns\) between identifiers \except where special characters )Tj
0 -1.205 TD
(\(usually parentheses\) make the divisions obvious. For example, the add\ition expression )Tj
/T1_2 1 Tf
(\(+ 1 a\))Tj
/T1_0 1 Tf
( can't )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_12.html \(1 of 2\)11\/3/2006 8:53:43 PM)Tj
ET
EMC 

endstreamendobj1066 0 obj<</Length 1786>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Prefix Expressions)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9082 Tm
(be written )Tj
/T1_1 1 Tf
(\(+1 a\))Tj
/T1_0 1 Tf
( or )Tj
/T1_1 1 Tf
(\(+1a\))Tj
/T1_0 1 Tf
( or )Tj
/T1_1 1 Tf
(\(+ 1a\))Tj
/T1_0 1 Tf
(. \(It )Tj
/T1_2 1 Tf
(can)Tj
/T1_0 1 Tf
( be written )Tj
/T1_1 1 Tf
(\( + 1 a \))Tj
/T1_0 1 Tf
(, because extra whitespace )Tj
0 -1.2 TD
(between tokens is ignored.\) )Tj
ET
0.5 0.5 0.5 rg
10 704.333 m
10 706.333 l
602 706.333 l
601 705.333 l
11 705.333 l
11 705.333 l
h
f
0.875 0.875 0.875 rg
602 706.333 m
602 704.333 l
10 704.333 l
11 705.333 l
601 705.333 l
601 705.333 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 685.3082 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 683.191 m
88.162 683.191 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 685.3082 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 683.191 m
143.378 683.191 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 685.3082 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 683.191 m
174.486 683.191 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 685.3082 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 683.191 m
200.932 683.191 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 685.3082 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 683.191 m
343.634 683.191 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 685.3082 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_12.html \(2 of 2\)11\/3/2006 8:53:43 PM)Tj
ET
EMC 

endstreamendobj1067 0 obj(An Introduction to Scheme and its Implementation - Prefix Expressions)endobj1068 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_12.html)/S 700 0 R>>endobj1069 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_12.html)endobj1070 0 obj(m%!='N÷¸Xüy∏®h¯)endobj1071 0 obj<</TS(D:20061104045343)/ID 1070 0 R/CT(text/html)/O[1047 0 R 1057 0 R]/S/SPS/T 1067 0 R/TID 1073 0 R/SI 1072 0 R>>endobj1072 0 obj<</TS(D:20061104045343)/AU 1069 0 R>>endobj1073 0 obj(‰0I<´;ØZ—ºœ±ãP·Í)endobj1074 0 obj<</Parent 710 0 R/Next 1106 0 R/Dest[1047 0 R/XYZ 0 792 null]/Prev 1044 0 R/SE 1046 0 R/Title(An Introduction to Scheme and its Implementation - Prefix Expressions)>>endobj1075 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1076 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 1089 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 1077 0 R>>endobj1077 0 obj<</Annots 1081 0 R/Parent 1147 0 R/ID 1102 0 R/StructParents 25/Contents 1097 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1078 0 obj<</Parent 1544 0 R/Count 5/Type/Pages/Kids[952 0 R 979 0 R 1014 0 R 1047 0 R 1057 0 R]>>endobj1079 0 obj[1076 0 R]endobj1080 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1081 0 obj[1080 0 R 1082 0 R 1083 0 R 1084 0 R 1085 0 R 1087 0 R]endobj1082 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1047 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_12.html)/S/URI>>/Border[0 0 0]>>endobj1083 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1109 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_14.html)/S/URI>>/Border[0 0 0]>>endobj1084 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1085 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1086 0 obj[1077 0 R/XYZ 0 731.2 null]endobj1087 0 obj<</Rect[10.0 695.8 375.666 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC13)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC13)/S/URI>>/Border[0 0 0]>>endobj1088 0 obj[1077 0 R/XYZ 0 674.4 null]endobj1089 0 obj<</Annots 1092 0 R/Parent 1147 0 R/ID 1102 0 R/StructParents 26/Contents 1098 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1090 0 obj[1076 0 R]endobj1091 0 obj<</Rect[65.608 225.859 88.162 240.859]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1092 0 obj[1091 0 R 1093 0 R 1094 0 R 1095 0 R 1096 0 R]endobj1093 0 obj<</Rect[95.162 225.859 143.378 240.859]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1047 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_12.html)/S/URI>>/Border[0 0 0]>>endobj1094 0 obj<</Rect[150.378 225.859 174.486 240.859]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1109 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_14.html)/S/URI>>/Border[0 0 0]>>endobj1095 0 obj<</Rect[181.486 225.859 200.932 240.859]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1096 0 obj<</Rect[251.094 225.859 343.634 240.859]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1097 0 obj<</Length 4462>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Values and Side Effec\ts)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.176 w 
10 696.405 m
375.666 696.405 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 699.933 Tm
(Expressions Return Values, But May Have Side-Effects)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(Scheme expressions combine the features of expressions and statements. T\hey return values, but they )Tj
0 -1.2 TD
(can also have )Tj
/T1_2 1 Tf
(side effects)Tj
/T1_0 1 Tf
(---i.e., they can change the state of variables or objects by assignment\. )Tj
0 -2.562 TD
(The variable assignment operation in Scheme is )Tj
/T1_3 1 Tf
(set!)Tj
/T1_0 1 Tf
(, pronounced "set-bang." If we want to assign the )Tj
0 -1.205 TD
(value 3 to the variable )Tj
/T1_3 1 Tf
(foo)Tj
/T1_0 1 Tf
(, we write )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(set! foo 3\))Tj
/T1_0 1 Tf
0 -2.552 TD
(which is pretty much equivalent to C's )Tj
/T1_3 1 Tf
0 -2.562 TD
(foo = 3;)Tj
/T1_0 1 Tf
0 -2.557 TD
(Note that )Tj
/T1_3 1 Tf
(\(set! foo 3\))Tj
/T1_0 1 Tf
( looks like a function call, because everything uses prefix notation, bu\t it's )Tj
0 -1.2 TD
(not really a call; it's a different kind of expression. )Tj
0 -2.557 TD
(You should not use assignments a lot in Scheme programs. It's usually a \sign of bad style, as I'll explain )Tj
0 -1.2 TD
(later. I'll also show how to program in a style that doesn't need side e\ffects much. They're there if you )Tj
T*
(need them, though. )Tj
0 -2.557 TD
(When you write a procedure that modifies its arguments, rather than just\ just returning a value, it's good )Tj
0 -1.2 TD
(style to give it a name that ends with an exclamation mark. This reminds\ you and anybody reading your )Tj
T*
(code that the procedure changes something that already exists, rather th\an just returning a value such as )Tj
T*
(a new data structure. Most of the standard Scheme procedures that change\ state are named this way. )Tj
0 -2.557 TD
(Most Scheme procedures don't modify anything, however. For example, the \standard procedure )Tj
/T1_3 1 Tf
0 -1.205 TD
(reverse)Tj
/T1_0 1 Tf
( takes a list as its argument and returns a list of the same elements in\ the opposite order. That )Tj
0 -1.2 TD
(is it returns a kind of reversed )Tj
/T1_2 1 Tf
(copy)Tj
/T1_0 1 Tf
( of the original list, without modifying the original at all. If you wro\te )Tj
T*
(a procedure that returned the )Tj
/T1_2 1 Tf
(same)Tj
/T1_0 1 Tf
( list, but modified so that its elements were in the opposite order, )Tj
0 -1.205 TD
(you'd probably call it )Tj
/T1_3 1 Tf
(reverse!)Tj
/T1_0 1 Tf
(. This warns people that a list that is passed to )Tj
/T1_3 1 Tf
(reverse!)Tj
/T1_0 1 Tf
( may be )Tj
0 -1.2 TD
(changed. )Tj
0 -2.562 TD
(One side-effecting procedure we'll use in examples is )Tj
/T1_3 1 Tf
(display)Tj
/T1_0 1 Tf
(. )Tj
/T1_3 1 Tf
(display)Tj
/T1_0 1 Tf
( takes a value and writes a )Tj
0 -1.2 TD
(printed representation to the screen or a file. If you give it one argum\ent, it writes to the "standard )Tj
T*
(output"; by default, that's the terminal or other display. )Tj
0 -2.557 TD
(For example, if you want to show the user the printed representation of \the number 1022, you can use )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_13.html \(1 of 2\)11\/3/2006 8:53:46 PM)Tj
ET
EMC 

endstreamendobj1098 0 obj<</Length 3911>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Values and Side Effec\ts)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(the expression )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(display 1022\))Tj
/T1_0 1 Tf
0 -2.557 TD
(The side effect of executing this expression is to write the )Tj
/T1_1 1 Tf
(1022)Tj
/T1_0 1 Tf
( on the user's screen. \()Tj
/T1_1 1 Tf
(display)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(automatically converts the number to a string of characters so that you \can read it.\) )Tj
0 -2.562 TD
(Note that )Tj
/T1_1 1 Tf
(display)Tj
/T1_0 1 Tf
( doesn't have an exclamation point at the end of its name, because it do\esn't side-)Tj
0 -1.2 TD
(effect the argument you give it to print. You can give it a data structu\re and be sure that it won't modify )Tj
T*
(it; display )Tj
/T1_2 1 Tf
(does)Tj
/T1_0 1 Tf
( have a side-effect, though--it changes the state of the screen \(or fil\e\) that it writes to. )Tj
/T1_1 1 Tf
0 -2.562 TD
(display)Tj
/T1_0 1 Tf
( is fairly flexible, and can write the printed representations of many c\ommon Scheme objects, )Tj
0 -1.2 TD
(and even fairly complex data structures. )Tj
0 -2.557 TD
(Among many other things, display can print character strings. \(Strings \are another kind of Scheme )Tj
0 -1.205 TD
(object. You can write a literal string in double quotes, )Tj
/T1_1 1 Tf
("like this")Tj
/T1_0 1 Tf
(, and Scheme constructs a string )Tj
0 -1.2 TD
(object to hold that character sequence. )Tj
0 -2.562 TD
(The expression )Tj
/T1_1 1 Tf
(\(display "Hello, world!\))Tj
/T1_0 1 Tf
( has the side effect of writing )Tj
/T1_1 1 Tf
(Hello, world!)Tj
/T1_0 1 Tf
( to )Tj
0 -1.2 TD
(the standard output, which is usually the user's screen. )Tj
0 -2.562 TD
(This makes )Tj
/T1_1 1 Tf
(display)Tj
/T1_0 1 Tf
( very useful for debugging, and for little examples, as well as for writ\ing )Tj
0 -1.205 TD
(interactive programs. A similar procedure, )Tj
/T1_1 1 Tf
(write)Tj
/T1_0 1 Tf
( is used for saving data structures to files; they can )Tj
0 -1.205 TD
(then be copied back into memory using )Tj
/T1_1 1 Tf
(read)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(In a later chapter, I'll show how to write to files by passing a second \argument to )Tj
/T1_1 1 Tf
(display)Tj
/T1_0 1 Tf
( that tells it )Tj
0 -1.205 TD
(where to send the output. For now, you should just use )Tj
/T1_1 1 Tf
(display)Tj
/T1_0 1 Tf
( with )Tj
/T1_2 1 Tf
(exactly one)Tj
/T1_0 1 Tf
( argument. )Tj
/T1_2 1 Tf
(Don't)Tj
/T1_0 1 Tf
( try )Tj
0 -1.205 TD
(to pass )Tj
/T1_1 1 Tf
(display)Tj
/T1_0 1 Tf
( several things and expect it to print them all. )Tj
ET
0.5 0.5 0.5 rg
10 249.259 m
10 251.259 l
602 251.259 l
601 250.259 l
11 250.259 l
11 250.259 l
h
f
0.875 0.875 0.875 rg
602 251.259 m
602 249.259 l
10 249.259 l
11 250.259 l
601 250.259 l
601 250.259 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 230.2342 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 228.117 m
88.162 228.117 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 230.2342 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 228.117 m
143.378 228.117 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 230.2342 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 228.117 m
174.486 228.117 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 230.2342 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 228.117 m
200.932 228.117 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 230.2342 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 228.117 m
343.634 228.117 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 230.2342 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_13.html \(2 of 2\)11\/3/2006 8:53:46 PM)Tj
ET
EMC 

endstreamendobj1099 0 obj(An Introduction to Scheme and its Implementation - Values and Side Effects)endobj1100 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_13.html)/S 700 0 R>>endobj1101 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_13.html)endobj1102 0 obj(∏ﬂ·&T/gs˜Ôoƒ b’)endobj1103 0 obj<</TS(D:20061104045346)/ID 1102 0 R/CT(text/html)/O[1077 0 R 1089 0 R]/S/SPS/T 1099 0 R/TID 1105 0 R/SI 1104 0 R>>endobj1104 0 obj<</TS(D:20061104045346)/AU 1101 0 R>>endobj1105 0 obj(’‘ 6u-#Œu˝∆Y)endobj1106 0 obj<</Parent 710 0 R/Next 1143 0 R/Dest[1077 0 R/XYZ 0 792 null]/Prev 1074 0 R/SE 1076 0 R/Title(An Introduction to Scheme and its Implementation - Values and Side Effects)>>endobj1107 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1108 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 1119 0 R/Type/MCR>><</MCID 0/Pg 1125 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 1109 0 R>>endobj1109 0 obj<</Annots 1112 0 R/Parent 1147 0 R/ID 1139 0 R/StructParents 27/Contents 1133 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R/T1_4 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1110 0 obj[1108 0 R]endobj1111 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1112 0 obj[1111 0 R 1113 0 R 1114 0 R 1115 0 R 1116 0 R 1118 0 R]endobj1113 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1077 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_13.html)/S/URI>>/Border[0 0 0]>>endobj1114 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1146 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_15.html)/S/URI>>/Border[0 0 0]>>endobj1115 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1116 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1117 0 obj[1109 0 R/XYZ 0 731.2 null]endobj1118 0 obj<</Rect[10.0 695.8 241.854 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC14)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC14)/S/URI>>/Border[0 0 0]>>endobj1119 0 obj<</Parent 1147 0 R/ID 1139 0 R/StructParents 28/Contents 1134 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1120 0 obj[1108 0 R]endobj1121 0 obj[1119 0 R/XYZ 0 477.722 null]endobj1122 0 obj[1119 0 R/XYZ 0 477.722 null]endobj1123 0 obj[1119 0 R/XYZ 0 477.722 null]endobj1124 0 obj[1119 0 R/XYZ 0 477.722 null]endobj1125 0 obj<</Annots 1128 0 R/Parent 1147 0 R/ID 1139 0 R/StructParents 29/Contents 1135 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1126 0 obj[1108 0 R]endobj1127 0 obj<</Rect[65.608 523.065 88.162 538.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1128 0 obj[1127 0 R 1129 0 R 1130 0 R 1131 0 R 1132 0 R]endobj1129 0 obj<</Rect[95.162 523.065 143.378 538.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1077 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_13.html)/S/URI>>/Border[0 0 0]>>endobj1130 0 obj<</Rect[150.378 523.065 174.486 538.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1146 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_15.html)/S/URI>>/Border[0 0 0]>>endobj1131 0 obj<</Rect[181.486 523.065 200.932 538.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1132 0 obj<</Rect[251.094 523.065 343.634 538.065]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1133 0 obj<</Length 4517>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Defining Variables an\d Procedures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.176 w 
10 696.405 m
241.854 696.405 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 699.933 Tm
(Defining Variables and Procedures)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.687 TD
(You can define a variable in Scheme using a )Tj
/T1_2 1 Tf
(define)Tj
/T1_0 1 Tf
(: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define my-variable 5\))Tj
/T1_0 1 Tf
0 -2.557 TD
(This tells Scheme to allocate space for )Tj
/T1_2 1 Tf
(my-variable)Tj
/T1_0 1 Tf
(, and initialize that storage with the value )Tj
/T1_2 1 Tf
(5)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(In Scheme, you always give a variable an initial value, so there's no su\ch thing as an uninitialized )Tj
0 -1.2 TD
(variable or an unininitialized variable error. )Tj
0 -2.562 TD
(Scheme values are always pointers to objects, so when we use the literal\ )Tj
/T1_2 1 Tf
(5)Tj
/T1_0 1 Tf
(, Scheme interprets that as )Tj
0 -1.205 TD
(meaning )Tj
/T1_3 1 Tf
(a pointer to the object)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(5)Tj
/T1_0 1 Tf
(. Numbers are objects you can have pointers to, just like any other kind\ )Tj
0 -1.2 TD
(of data structure. \(Actually, most Scheme implementations use a couple \of tricks to avoid pointer )Tj
T*
(overheads on numbers, but that doesn't show up at the language level. Yo\u don't have to be aware of it.\) )Tj
0 -2.557 TD
(After the above definition, we can draw the resulting situation like thi\s: )Tj
/T1_2 1 Tf
0 -2.562 TD
(       +-------+)Tj
0 -1.2 TD
(   foo |   *---+--->5)Tj
T*
(       +-------+)Tj
/T1_0 1 Tf
0 -2.557 TD
(The )Tj
/T1_2 1 Tf
(define)Tj
/T1_0 1 Tf
( expression does three things: )Tj
/T1_4 1 Tf
7 0 0 7 35.713 274.7712 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 274.7712 Tm
(It )Tj
/T1_3 1 Tf
(declares)Tj
/T1_0 1 Tf
( to Scheme that we're going to have a variable named )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
( in the current scope. \(I'll )Tj
0 -1.2 TD
(talk about scoping a lot, later.\) )Tj
/T1_4 1 Tf
7 0 0 7 35.713 241.1712 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 241.1712 Tm
(It tells Scheme to actually allocate storage for the variable. The stora\ge is called a )Tj
/T1_3 1 Tf
(binding)Tj
/T1_0 1 Tf
(---we )Tj
0 -1.205 TD
("bind" the variable )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
( to a particular piece of memory, so that we can refer to that storage b\y )Tj
0 -1.205 TD
(the name )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
(. )Tj
/T1_4 1 Tf
7 0 0 7 35.713 190.6364 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 190.6364 Tm
(It tells Scheme what initial value to put in the storage. )Tj
-2.857 -2.557 Td
(These three things happen when you define variables in other languages, \too. In Scheme we have names )Tj
0 -1.2 TD
(for all three. )Tj
0 -2.557 TD
(In the picture, the box represents the fact that Scheme has allocated st\orage for a variable. The name )Tj
/T1_2 1 Tf
0 -1.205 TD
(foo)Tj
/T1_0 1 Tf
( beside the box means that we've given that storage the name )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
(. The arrow says that the value in )Tj
T*
(the box is a pointer to the integer object )Tj
/T1_2 1 Tf
(5)Tj
/T1_0 1 Tf
(. \(Don't worry about how the integer object is actually )Tj
0 -1.2 TD
(represented. It doesn't really matter.\) )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_14.html \(1 of 3\)11\/3/2006 8:53:50 PM)Tj
ET
EMC 

endstreamendobj1134 0 obj<</Length 3562>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Defining Variables an\d Procedures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 745.8342 Tm
(You can define new procedures with )Tj
/T1_1 1 Tf
(define)Tj
/T1_0 1 Tf
(, too: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(two-times x\))Tj
0 -1.2 TD
(   \(+ x x\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Here we've defined a procedure named )Tj
/T1_1 1 Tf
(two-times)Tj
/T1_0 1 Tf
(, which takes one argument, )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
(. It then calls the )Tj
0 -1.205 TD
(addition procedure )Tj
/T1_1 1 Tf
(+)Tj
/T1_0 1 Tf
( to add the argument value to itself, and returns the result of the addi\tion. )Tj
0 -2.557 TD
(Notice the sytnactic difference between the variable definition and the \procedure definition: for a )Tj
0 -1.2 TD
(procedure definition, there are parentheses around the name, and the arg\ument name\(s\) follow that )Tj
T*
(inside the parentheses. )Tj
0 -2.562 TD
(This resembles the way the procedure is called. Consider the procedure c\all expression )Tj
/T1_1 1 Tf
(\(two-times )Tj
0 -1.205 TD
(5\))Tj
/T1_0 1 Tf
(, which returns )Tj
/T1_1 1 Tf
(10)Tj
/T1_0 1 Tf
(; it looks like the definition's )Tj
/T1_1 1 Tf
(\(two-times x\))Tj
/T1_0 1 Tf
(, except that we've put the )Tj
/T1_2 1 Tf
(actual)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(argument 5 in place of the )Tj
/T1_2 1 Tf
(formal parameter)Tj
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Here's a bit of programming language terminology you should know: the ar\guments you pass to a )Tj
0 -1.2 TD
(procedure are sometimes called )Tj
/T1_2 1 Tf
(actual parameters)Tj
/T1_0 1 Tf
(. The argument variables )Tj
/T1_2 1 Tf
(inside)Tj
/T1_0 1 Tf
( the procedure are )Tj
T*
(called )Tj
/T1_2 1 Tf
(formal parameters)Tj
/T1_0 1 Tf
(---they stand for whatever is actually passed to the procedure at run ti\me. )Tj
T*
("Actual" means what you actually pass to the procedure, and "formal" mea\ns what you call that on the )Tj
T*
(inside of the procedure. Usually, I'll just talk about "arguments," but \that's the same thing as "actual )Tj
T*
(parameters." Sometimes I'll talk about "argument variables," and that's \the same thing as "formal )Tj
T*
(parameters." )Tj
0 -2.557 TD
(You can define a procedure of zero arguments, but you still have to put \parentheses around the )Tj
0 -1.2 TD
(procedure name, to make it clear that you're defining a procedure. You p\ut parentheses around its name )Tj
T*
(when you call it, too, to make it clear that it's a procedure call. )Tj
0 -2.562 TD
(For example, this is a definition of a variable whose initial value is )Tj
/T1_1 1 Tf
(15)Tj
/T1_0 1 Tf
(: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define foo 15\))Tj
/T1_0 1 Tf
0 -2.557 TD
(but this is a definition of a procedure )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( which returns )Tj
/T1_1 1 Tf
(15)Tj
/T1_0 1 Tf
( when called. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(foo\) 15\))Tj
0 -2.557 TD
(       +-------+)Tj
0 -1.2 TD
(   foo |   *---+--->#<procedure>)Tj
T*
(       +-------+)Tj
/T1_0 1 Tf
0 -2.552 TD
(This picture shows that when you define a procedure, you're really defin\ing a variable )Tj
/T1_2 1 Tf
(whose value )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_14.html \(2 of 3\)11\/3/2006 8:53:50 PM)Tj
ET
EMC 

endstreamendobj1135 0 obj<</Length 2286>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Defining Variables an\d Procedures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9756 Tm
(happens to be a \(pointer to a\) procedure)Tj
/T1_0 1 Tf
(. For now, you don't really have to worry about that. The main )Tj
0 -1.205 TD
(thing to know is that now you can call the procedure by the name )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
(. For example, the procedure call )Tj
0 -1.205 TD
(expression )Tj
/T1_2 1 Tf
(\(foo\))Tj
/T1_0 1 Tf
( will return )Tj
/T1_2 1 Tf
(15)Tj
/T1_0 1 Tf
(, because all the body of the procedure does is return the value )Tj
/T1_2 1 Tf
(15)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Usually, we indent procedure definitions like this, with the body starti\ng a new line, and indented a few )Tj
0 -1.2 TD
(characters: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(foo\))Tj
0 -1.2 TD
(   15\))Tj
/T1_0 1 Tf
0 -2.552 TD
(This makes it clearer that it's a procedure definition. )Tj
ET
0.5 0.5 0.5 rg
10 546.465 m
10 548.465 l
602 548.465 l
601 547.465 l
11 547.465 l
11 547.465 l
h
f
0.875 0.875 0.875 rg
602 548.465 m
602 546.465 l
10 546.465 l
11 547.465 l
601 547.465 l
601 547.465 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 527.4408 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 525.324 m
88.162 525.324 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 527.4408 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 525.324 m
143.378 525.324 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 527.4408 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 525.324 m
174.486 525.324 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 527.4408 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 525.324 m
200.932 525.324 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 527.4408 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 525.324 m
343.634 525.324 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 527.4408 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_14.html \(3 of 3\)11\/3/2006 8:53:50 PM)Tj
ET
EMC 

endstreamendobj1136 0 obj(An Introduction to Scheme and its Implementation - Defining Variables and Procedures)endobj1137 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_14.html)/S 700 0 R>>endobj1138 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_14.html)endobj1139 0 obj(ÕoÂtv-=»ïÚ Õ$Ø/)endobj1140 0 obj<</TS(D:20061104045350)/ID 1139 0 R/CT(text/html)/O[1109 0 R 1119 0 R 1125 0 R]/S/SPS/T 1136 0 R/TID 1142 0 R/SI 1141 0 R>>endobj1141 0 obj<</TS(D:20061104045350)/AU 1138 0 R>>endobj1142 0 obj(ï~úg≠ñ;8.;œ™)endobj1143 0 obj<</Parent 710 0 R/Next 1171 0 R/Dest[1109 0 R/XYZ 0 792 null]/Prev 1106 0 R/SE 1108 0 R/Title(An Introduction to Scheme and its Implementation - Defining Variables and Procedures)>>endobj1144 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1145 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 1146 0 R>>endobj1146 0 obj<</Annots 1150 0 R/Parent 1247 0 R/ID 1167 0 R/StructParents 30/Contents 1163 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1147 0 obj<</Parent 1543 0 R/Count 5/Type/Pages/Kids[1077 0 R 1089 0 R 1109 0 R 1119 0 R 1125 0 R]>>endobj1148 0 obj[1145 0 R]endobj1149 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1150 0 obj[1149 0 R 1151 0 R 1152 0 R 1153 0 R 1154 0 R 1156 0 R 1158 0 R 1159 0 R 1160 0 R 1161 0 R 1162 0 R]endobj1151 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1109 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_14.html)/S/URI>>/Border[0 0 0]>>endobj1152 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1174 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_16.html)/S/URI>>/Border[0 0 0]>>endobj1153 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1154 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1155 0 obj[1146 0 R/XYZ 0 731.2 null]endobj1156 0 obj<</Rect[10.0 695.8 219.286 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC15)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC15)/S/URI>>/Border[0 0 0]>>endobj1157 0 obj[1146 0 R/XYZ 0 674.4 null]endobj1158 0 obj<</Rect[65.608 399.93 88.162 414.93]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1159 0 obj<</Rect[95.162 399.93 143.378 414.93]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1109 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_14.html)/S/URI>>/Border[0 0 0]>>endobj1160 0 obj<</Rect[150.378 399.93 174.486 414.93]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1174 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_16.html)/S/URI>>/Border[0 0 0]>>endobj1161 0 obj<</Rect[181.486 399.93 200.932 414.93]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1162 0 obj<</Rect[251.094 399.93 343.634 414.93]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1163 0 obj<</Length 3813>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Most Operators are Pr\ocedures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.176 w 
10 696.405 m
219.286 696.405 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 699.933 Tm
(Most Operators are Procedures)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(In conventional programming languages like C and Pascal, there's an awkw\ard distinction between )Tj
0 -1.205 TD
(procedure calls and other kinds of expressions. In C, for example, )Tj
/T1_2 1 Tf
(\(a + b\))Tj
/T1_0 1 Tf
( is an expression, but )Tj
/T1_2 1 Tf
(foo)Tj
0 -1.205 TD
(\(a,b\))Tj
/T1_0 1 Tf
( is a procedure call. In C, you can't do the same things with an operato\r like )Tj
/T1_2 1 Tf
(+)Tj
/T1_0 1 Tf
( that you can do )Tj
0 -1.2 TD
(with a procedure. )Tj
0 -2.557 TD
(In Scheme, things are much more uniform, both semantically and syntactic\ally. Most basic operations )Tj
0 -1.2 TD
(such as addition are procedures, and there is a unified syntax for writi\ng expressions--parenthesized )Tj
0 -1.205 TD
(prefix notation. So rather than writing )Tj
/T1_2 1 Tf
(\(a + b\))Tj
/T1_0 1 Tf
( in Scheme, you write )Tj
/T1_2 1 Tf
(\(+ a b\))Tj
/T1_0 1 Tf
(. And rather than )Tj
0 -1.205 TD
(writing )Tj
/T1_2 1 Tf
(foo\(a,b\))Tj
/T1_0 1 Tf
(, you write )Tj
/T1_2 1 Tf
(\(foo a b\))Tj
/T1_0 1 Tf
(. Either way, it's just an operation followed by its operands, )Tj
0 -1.2 TD
(all inside parentheses. )Tj
0 -2.557 TD
(For any procedure call expression \(also called a )Tj
/T1_3 1 Tf
(combination)Tj
/T1_0 1 Tf
(\), all of the values to be passed are )Tj
0 -1.2 TD
(computed before the actual call to the procedure. \(This is no different\ from C or Pascal.\) )Tj
ET
0.5 0.5 0.5 rg
10 423.33 m
10 425.33 l
602 425.33 l
601 424.33 l
11 424.33 l
11 424.33 l
h
f
0.875 0.875 0.875 rg
602 425.33 m
602 423.33 l
10 423.33 l
11 424.33 l
601 424.33 l
601 424.33 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 404.306 Tm
(Go to the )Tj
ET
0.706 w 
65.608 402.189 m
88.162 402.189 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 404.306 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 402.189 m
143.378 402.189 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 404.306 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 402.189 m
174.486 402.189 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 404.306 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 402.189 m
200.932 402.189 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 404.306 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 402.189 m
343.634 402.189 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 404.306 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_15.html11/3/2006 8:5\3:54 PM)Tj
ET
EMC 

endstreamendobj1164 0 obj(An Introduction to Scheme and its Implementation - Most Operators are Procedures)endobj1165 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_15.html)/S 700 0 R>>endobj1166 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_15.html)endobj1167 0 obj(∏âó¬◊Çç¡^odÛ5ŸoE)endobj1168 0 obj<</TS(D:20061104045354)/ID 1167 0 R/CT(text/html)/O[1146 0 R]/S/SPS/T 1164 0 R/TID 1170 0 R/SI 1169 0 R>>endobj1169 0 obj<</TS(D:20061104045354)/AU 1166 0 R>>endobj1170 0 obj(p˚käwUØπìF˚æ:)endobj1171 0 obj<</Parent 710 0 R/Next 1197 0 R/Dest[1146 0 R/XYZ 0 792 null]/Prev 1143 0 R/SE 1145 0 R/Title(An Introduction to Scheme and its Implementation - Most Operators are Procedures)>>endobj1172 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1173 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 1174 0 R>>endobj1174 0 obj<</Annots 1177 0 R/Parent 1247 0 R/ID 1193 0 R/StructParents 31/Contents 1189 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1175 0 obj[1173 0 R]endobj1176 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1177 0 obj[1176 0 R 1178 0 R 1179 0 R 1180 0 R 1181 0 R 1183 0 R 1184 0 R 1185 0 R 1186 0 R 1187 0 R 1188 0 R]endobj1178 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1146 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_15.html)/S/URI>>/Border[0 0 0]>>endobj1179 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1200 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_17.html)/S/URI>>/Border[0 0 0]>>endobj1180 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1181 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1182 0 obj[1174 0 R/XYZ 0 731.2 null]endobj1183 0 obj<</Rect[10.0 695.8 197.488 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC16)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC16)/S/URI>>/Border[0 0 0]>>endobj1184 0 obj<</Rect[65.608 363.928 88.162 378.928]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1185 0 obj<</Rect[95.162 363.928 143.378 378.928]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1146 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_15.html)/S/URI>>/Border[0 0 0]>>endobj1186 0 obj<</Rect[150.378 363.928 174.486 378.928]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1200 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_17.html)/S/URI>>/Border[0 0 0]>>endobj1187 0 obj<</Rect[181.486 363.928 200.932 378.928]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1188 0 obj<</Rect[251.094 363.928 343.634 378.928]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1189 0 obj<</Length 4044>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Definitions vs. Assig\nments)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.176 w 
10 696.405 m
197.488 696.405 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 699.933 Tm
(Definitions vs. Assignments)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(Notice that we can give a variable a value in two ways: we can define it\, specifying an initial value, or )Tj
0 -1.205 TD
(we can use )Tj
/T1_2 1 Tf
(set!)Tj
/T1_0 1 Tf
( to change its value. )Tj
0 -2.562 TD
(The difference between these two is that )Tj
/T1_2 1 Tf
(define)Tj
/T1_0 1 Tf
( allocates storage for a variable, and gives that storage )Tj
0 -1.205 TD
(a name. )Tj
/T1_2 1 Tf
(set!)Tj
/T1_0 1 Tf
( does not. You must always )Tj
/T1_2 1 Tf
(define)Tj
/T1_0 1 Tf
( a variable before )Tj
/T1_2 1 Tf
(set!)Tj
/T1_0 1 Tf
( will work on it. )Tj
0 -2.562 TD
(For example, if there's not already a definition of )Tj
/T1_2 1 Tf
(quux)Tj
/T1_0 1 Tf
(, the expression )Tj
/T1_2 1 Tf
(\(set! quux 15\))Tj
/T1_0 1 Tf
( is an error, )Tj
0 -1.2 TD
(and Scheme will complain. You're asking Scheme to put \(a pointer to\) 1\5 in the storage named by )Tj
/T1_2 1 Tf
0 -1.205 TD
(quux)Tj
/T1_0 1 Tf
(---but )Tj
/T1_2 1 Tf
(quux)Tj
/T1_0 1 Tf
( doesn't name any storage yet, so it makes no sense. )Tj
0 -2.557 TD
(It's rather like I'd told you, "give this to Philboyd" and handed you so\me object, \(say, a pencil\). If you )Tj
0 -1.205 TD
(don't know anybody named Philboyd, you're probably going to complain. )Tj
/T1_2 1 Tf
(set!)Tj
/T1_0 1 Tf
( is like that. We have to )Tj
0 -1.2 TD
(agree on what the word "Philboyd" means to before it makes sense to ask \you to do something to )Tj
0 -1.205 TD
(Philboyd. )Tj
/T1_2 1 Tf
(define)Tj
/T1_0 1 Tf
( is a way of giving meaning to an identifier--making it refer to a piece\ of storage--as )Tj
0 -1.2 TD
(well as giving a value to put there. )Tj
ET
0.5 0.5 0.5 rg
10 387.328 m
10 389.328 l
602 389.328 l
601 388.328 l
11 388.328 l
11 388.328 l
h
f
0.875 0.875 0.875 rg
602 389.328 m
602 387.328 l
10 387.328 l
11 388.328 l
601 388.328 l
601 388.328 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 368.3038 Tm
(Go to the )Tj
ET
0.706 w 
65.608 366.187 m
88.162 366.187 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 368.3038 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 366.187 m
143.378 366.187 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 368.3038 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 366.187 m
174.486 366.187 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 368.3038 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 366.187 m
200.932 366.187 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 368.3038 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 366.187 m
343.634 366.187 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 368.3038 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_16.html11/3/2006 8:5\3:58 PM)Tj
ET
EMC 

endstreamendobj1190 0 obj(An Introduction to Scheme and its Implementation - Definitions vs. Assignments)endobj1191 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_16.html)/S 700 0 R>>endobj1192 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_16.html)endobj1193 0 obj(Dï∂J‚∆MìË∫·i )endobj1194 0 obj<</TS(D:20061104045358)/ID 1193 0 R/CT(text/html)/O[1174 0 R]/S/SPS/T 1190 0 R/TID 1196 0 R/SI 1195 0 R>>endobj1195 0 obj<</TS(D:20061104045358)/AU 1192 0 R>>endobj1196 0 obj(ÕOòÆÌÀœ∫c;QWï)endobj1197 0 obj<</Parent 710 0 R/Next 1228 0 R/Dest[1174 0 R/XYZ 0 792 null]/Prev 1171 0 R/SE 1173 0 R/Title(An Introduction to Scheme and its Implementation - Definitions vs. Assignments)>>endobj1198 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1199 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 1211 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 1200 0 R>>endobj1200 0 obj<</Annots 1203 0 R/Parent 1247 0 R/ID 1224 0 R/StructParents 32/Contents 1219 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R/T1_4 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1201 0 obj[1199 0 R]endobj1202 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1203 0 obj[1202 0 R 1204 0 R 1205 0 R 1206 0 R 1207 0 R 1209 0 R]endobj1204 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1174 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_16.html)/S/URI>>/Border[0 0 0]>>endobj1205 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1231 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_18.html)/S/URI>>/Border[0 0 0]>>endobj1206 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1207 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1208 0 obj[1200 0 R/XYZ 0 731.2 null]endobj1209 0 obj<</Rect[10.0 695.8 105.704 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC17)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC17)/S/URI>>/Border[0 0 0]>>endobj1210 0 obj[1200 0 R/XYZ 0 674.4 null]endobj1211 0 obj<</Annots 1214 0 R/Parent 1247 0 R/ID 1224 0 R/StructParents 33/Contents 1220 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1212 0 obj[1199 0 R]endobj1213 0 obj<</Rect[65.608 727.456 88.162 742.456]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1214 0 obj[1213 0 R 1215 0 R 1216 0 R 1217 0 R 1218 0 R]endobj1215 0 obj<</Rect[95.162 727.456 143.378 742.456]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1174 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_16.html)/S/URI>>/Border[0 0 0]>>endobj1216 0 obj<</Rect[150.378 727.456 174.486 742.456]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1231 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_18.html)/S/URI>>/Border[0 0 0]>>endobj1217 0 obj<</Rect[181.486 727.456 200.932 742.456]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1218 0 obj<</Rect[251.094 727.456 343.634 742.456]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1219 0 obj<</Length 5405>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Special Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.176 w 
10 696.405 m
105.704 696.405 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 699.933 Tm
(Special Forms)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(While most operations in Scheme are procedure calls, there are a few oth\er kinds of expressions you )Tj
0 -1.2 TD
(need to know about, which behave differently. They are called )Tj
/T1_2 1 Tf
(special forms)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Procedure calls and special forms are syntactically similar--both are a \sequence of syntactic units )Tj
0 -1.205 TD
(between parentheses, e.g., )Tj
/T1_3 1 Tf
(\(foo bar baz\))Tj
/T1_0 1 Tf
(. They are semantically very different, however, which is )Tj
0 -1.2 TD
(why you need to know the special forms, and not mistake them for procedu\res. )Tj
0 -2.562 TD
(If the first thing after the left parentheses is a keyword that names a \special form, like )Tj
/T1_3 1 Tf
(define)Tj
/T1_0 1 Tf
( or )Tj
/T1_3 1 Tf
(set!)Tj
/T1_0 1 Tf
(, )Tj
0 -1.2 TD
(Scheme does something special for that kind of expression. If it's not, \Scheme recognizes the expression )Tj
T*
(in parentheses as a procedure call, and evaluates it in the usual way fo\r procedure calls. )Tj
0 -2.557 TD
(\(This is why special forms are called "special forms"---Scheme recogniz\es some kinds of compound )Tj
0 -1.2 TD
(expressions as needing special treatment, rather than just being procedu\re calls.\) )Tj
0 -2.562 TD
(You've already seen two of the five or six important special forms, )Tj
/T1_3 1 Tf
(define)Tj
/T1_0 1 Tf
( and the assignment operator )Tj
/T1_3 1 Tf
0 -1.205 TD
(set!)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Notice that )Tj
/T1_3 1 Tf
(set!)Tj
/T1_0 1 Tf
( isn't a procedure, because its first argument is not really an expressi\on to be evaluated )Tj
0 -1.2 TD
(in the normal way, to get a value to pass as an argument. It's the name \of a place to )Tj
/T1_2 1 Tf
(put)Tj
/T1_0 1 Tf
( a value. \(e.g., if )Tj
0 -1.205 TD
(we say )Tj
/T1_3 1 Tf
(\(set! a b\))Tj
/T1_0 1 Tf
(, we get the value of )Tj
/T1_3 1 Tf
(b)Tj
/T1_0 1 Tf
(, and put it into the )Tj
/T1_2 1 Tf
(storage named by)Tj
/T1_0 1 Tf
( )Tj
/T1_3 1 Tf
(a)Tj
/T1_0 1 Tf
(.\) )Tj
0 -2.562 TD
(Likewise, )Tj
/T1_3 1 Tf
(define)Tj
/T1_0 1 Tf
( treats its first argument specially--the name of a variable or procedur\e isn't an )Tj
0 -1.205 TD
(expression that is evaluated and passed to )Tj
/T1_3 1 Tf
(define)Tj
/T1_0 1 Tf
(---it's just a name, and you're telling )Tj
/T1_3 1 Tf
(define)Tj
/T1_0 1 Tf
( to )Tj
0 -1.2 TD
(allocate some storage and use that name for it. )Tj
0 -2.557 TD
(Other special forms we'll see include )Tj
/T1_4 1 Tf
7 0 0 7 35.713 190.569 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 190.569 Tm
(control constructs: )Tj
/T1_3 1 Tf
(if)Tj
/T1_0 1 Tf
(, )Tj
/T1_3 1 Tf
(cond)Tj
/T1_0 1 Tf
(, and )Tj
/T1_3 1 Tf
(case)Tj
/T1_0 1 Tf
( and the sort-circuiting logical operators )Tj
/T1_3 1 Tf
(and)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(or)Tj
/T1_0 1 Tf
(; )Tj
/T1_4 1 Tf
7 0 0 7 35.713 173.7016 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 173.7016 Tm
(forms for defining local variables: )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
( and its variants )Tj
/T1_3 1 Tf
(letrec)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(let*)Tj
/T1_0 1 Tf
(; )Tj
/T1_4 1 Tf
7 0 0 7 35.713 156.8342 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 156.8342 Tm
(looping constructs: named )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(do)Tj
/T1_0 1 Tf
(; )Tj
/T1_4 1 Tf
7 0 0 7 35.713 139.9668 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_3 1 Tf
14 0 0 14 50 139.9668 Tm
(quote)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
(, which let you write complex data structures as textual literals in you\r )Tj
0 -1.2 TD
(code, and )Tj
/T1_4 1 Tf
7 0 0 7 35.713 106.2994 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_3 1 Tf
14 0 0 14 50 106.2994 Tm
(lambda)Tj
/T1_0 1 Tf
(, which creates new procedures in a very useful way. )Tj
-2.857 -2.562 Td
(There is also a few very special special forms, )Tj
/T1_3 1 Tf
(define-syntax)Tj
/T1_0 1 Tf
(, which let you define your own )Tj
T*
(special forms as "macros." )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_17.html \(1 of 2\)11\/3/2006 8:54:02 PM)Tj
ET
EMC 

endstreamendobj1220 0 obj<</Length 1422>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Special Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0.5 0.5 0.5 rg
10 750.856 m
10 752.856 l
602 752.856 l
601 751.856 l
11 751.856 l
11 751.856 l
h
f
0.875 0.875 0.875 rg
602 752.856 m
602 750.856 l
10 750.856 l
11 751.856 l
601 751.856 l
601 751.856 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 731.832 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 729.715 m
88.162 729.715 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 731.832 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 729.715 m
143.378 729.715 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 731.832 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 729.715 m
174.486 729.715 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 731.832 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 729.715 m
200.932 729.715 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 731.832 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 729.715 m
343.634 729.715 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 731.832 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_17.html \(2 of 2\)11\/3/2006 8:54:02 PM)Tj
ET
EMC 

endstreamendobj1221 0 obj(An Introduction to Scheme and its Implementation - Special Forms)endobj1222 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_17.html)/S 700 0 R>>endobj1223 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_17.html)endobj1224 0 obj(∑µîÄr˝2">ÓØ˙0\\)endobj1225 0 obj<</TS(D:20061104045402)/ID 1224 0 R/CT(text/html)/O[1200 0 R 1211 0 R]/S/SPS/T 1221 0 R/TID 1227 0 R/SI 1226 0 R>>endobj1226 0 obj<</TS(D:20061104045402)/AU 1223 0 R>>endobj1227 0 obj(ËjÉÁ5è ndƒÏÙùã)endobj1228 0 obj<</Parent 710 0 R/Next 1267 0 R/Dest[1200 0 R/XYZ 0 792 null]/Prev 1197 0 R/SE 1199 0 R/Title(An Introduction to Scheme and its Implementation - Special Forms)>>endobj1229 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1230 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 1246 0 R/Type/MCR>><</MCID 0/Pg 1249 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 1231 0 R>>endobj1231 0 obj<</Annots 1234 0 R/Parent 1247 0 R/ID 1263 0 R/StructParents 34/Contents 1257 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1232 0 obj[1230 0 R]endobj1233 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1234 0 obj[1233 0 R 1235 0 R 1236 0 R 1237 0 R 1238 0 R 1240 0 R 1245 0 R]endobj1235 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1200 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_17.html)/S/URI>>/Border[0 0 0]>>endobj1236 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1270 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_19.html)/S/URI>>/Border[0 0 0]>>endobj1237 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1238 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1239 0 obj[1231 0 R/XYZ 0 731.2 null]endobj1240 0 obj<</Rect[10.0 695.8 245.732 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC18)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC18)/S/URI>>/Border[0 0 0]>>endobj1241 0 obj[1231 0 R/XYZ 0 674.4 null]endobj1242 0 obj[1231 0 R/XYZ 0 674.4 null]endobj1243 0 obj[1231 0 R/XYZ 0 674.4 null]endobj1244 0 obj[1231 0 R/XYZ 0 470.706 null]endobj1245 0 obj<</Rect[218.572 466.33 234.896 481.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_foot.html#FOOT1)/S/URI>>/Border[0 0 0]>>endobj1246 0 obj<</Parent 1338 0 R/ID 1263 0 R/StructParents 35/Contents 1258 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1247 0 obj<</Parent 1543 0 R/Count 5/Type/Pages/Kids[1146 0 R 1174 0 R 1200 0 R 1211 0 R 1231 0 R]>>endobj1248 0 obj[1230 0 R]endobj1249 0 obj<</Annots 1252 0 R/Parent 1338 0 R/ID 1263 0 R/StructParents 36/Contents 1259 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1250 0 obj[1230 0 R]endobj1251 0 obj<</Rect[65.608 697.8 88.162 712.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1252 0 obj[1251 0 R 1253 0 R 1254 0 R 1255 0 R 1256 0 R]endobj1253 0 obj<</Rect[95.162 697.8 143.378 712.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1200 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_17.html)/S/URI>>/Border[0 0 0]>>endobj1254 0 obj<</Rect[150.378 697.8 174.486 712.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1270 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_19.html)/S/URI>>/Border[0 0 0]>>endobj1255 0 obj<</Rect[181.486 697.8 200.932 712.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1256 0 obj<</Rect[251.094 697.8 343.634 712.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1257 0 obj<</Length 3783>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Control Structures ar\e Expressions)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.176 w 
10 696.405 m
245.732 696.405 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 699.933 Tm
(Control Structures are Expressions)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.687 TD
(Scheme control structures are expressions, and return values. An )Tj
/T1_2 1 Tf
(if)Tj
/T1_0 1 Tf
( expression is a lot like a C if-then )Tj
0 -1.205 TD
(statement, but the "then" branch and the "else" branch are also expressi\ons that return values; the )Tj
/T1_2 1 Tf
(if)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(expression returns the value of whichever subexpression it evaluates. )Tj
0 -2.557 TD
(For example, )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(if \(< a b\))Tj
0 -1.2 TD
(    a)Tj
T*
(    b\))Tj
/T1_0 1 Tf
0 -2.557 TD
(returns the value of either the variable )Tj
/T1_2 1 Tf
(a)Tj
/T1_0 1 Tf
(, or the variable )Tj
/T1_2 1 Tf
(b)Tj
/T1_0 1 Tf
(, whichever is less \(or the value of )Tj
/T1_2 1 Tf
(b)Tj
/T1_0 1 Tf
( if they're )Tj
0 -1.205 TD
(equal\). If you're familiar with ternary)Tj
ET
0.706 w 
218.572 468.589 m
234.896 468.589 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 218.572 470.706 Tm
(\(1\))Tj
0 0 0 rg
( expressions in C, this is like )Tj
/T1_2 1 Tf
(\(a < b\) ? a : b)Tj
/T1_0 1 Tf
(. In Scheme, )Tj
-14.898 -1.348 Td
(there's no need for both an )Tj
/T1_2 1 Tf
(if)Tj
/T1_0 1 Tf
( statement and an if-like ternary expression operator, because )Tj
/T1_2 1 Tf
(if)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
("statements" are expressions. )Tj
0 -2.557 TD
(Note that even though every expression returns a value, not all values a\re used--you can ignore the )Tj
0 -1.205 TD
(return value of an if expression. The )Tj
/T1_2 1 Tf
(if)Tj
/T1_0 1 Tf
( special form can therefore be used to control what gets )Tj
0 -1.2 TD
(executed, or to return a value, or both. It's up to you. )Tj
0 -2.557 TD
(The uniformity of value returning means that we never have to explicitly\ use a return statement, so )Tj
0 -1.205 TD
(Scheme doesn't have them. Suppose we wanted to write a function )Tj
/T1_2 1 Tf
(min)Tj
/T1_0 1 Tf
( to return the minimum of two )Tj
0 -1.2 TD
(numbers. In C, we might do it this way: )Tj
/T1_2 1 Tf
0 -2.562 TD
(int min\(int a, int b\))Tj
0 -1.2 TD
({)Tj
T*
(   if \(a < b\))Tj
T*
(      return a;)Tj
T*
(   else)Tj
T*
(      return b;)Tj
T*
(})Tj
/T1_0 1 Tf
0 -2.552 TD
(In Scheme, we can just do this: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(min a b\))Tj
0 -1.2 TD
(   \(if \(< a b\))Tj
T*
(       a)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_18.html \(1 of 3\)11\/3/2006 8:54:06 PM)Tj
ET
EMC 

endstreamendobj1258 0 obj<</Length 3772>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Control Structures ar\e Expressions)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(       b\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Whichever branch is taken, the value of the appropriate variable \()Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( or )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
(\) will be returned as the value of )Tj
0 -1.205 TD
(that branch of the )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(, which is returned as the value of the whole )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( expression, and that is returned as )Tj
0 -1.2 TD
(the return value of the procedure call. )Tj
0 -2.557 TD
(Of course, you can also write a one-branch if, with no "else" clause. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(if \(some-test\))Tj
0 -1.2 TD
(    \(some-action\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(The return value of a one-branch )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( is unspecified in the case the condition is false, so if you're )Tj
0 -1.205 TD
(interested in the return value, you should use a two-branch )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(, and explicitly specify what should be )Tj
0 -1.2 TD
(returned in both cases. )Tj
0 -2.562 TD
(Notice that the flow of control is top-down, through the nesting of expr\essions---)Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( controls which of its )Tj
0 -1.2 TD
(subexpressions is evaluated, which is like the nesting of control statem\ents in most languages. Values )Tj
T*
(flow back up from expressions to their callers, which is like the nestin\g of expressions in most )Tj
T*
(languages. )Tj
0 -2.562 TD
(You can write an expression that is an ordered sequence of other express\ions, using )Tj
/T1_1 1 Tf
(begin)Tj
/T1_0 1 Tf
(. For )Tj
0 -1.2 TD
(example, )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(begin \(foo\))Tj
0 -1.2 TD
(       \(bar\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(calls )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( and then calls )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
(. In terms of control flow, a )Tj
/T1_1 1 Tf
(\(begin)Tj
/T1_2 1 Tf
( ... )Tj
/T1_1 1 Tf
(\))Tj
/T1_0 1 Tf
( expression is rather like a )Tj
/T1_1 1 Tf
0 -1.205 TD
(begin)Tj
/T1_2 1 Tf
( ... )Tj
/T1_1 1 Tf
(end)Tj
/T1_0 1 Tf
( block in Pascal, or a )Tj
/T1_1 1 Tf
({)Tj
/T1_2 1 Tf
( ... )Tj
/T1_1 1 Tf
(})Tj
/T1_0 1 Tf
( block in C. \(We don't need an )Tj
/T1_1 1 Tf
(end)Tj
/T1_0 1 Tf
( keyword, because the )Tj
0 -1.2 TD
(closing parenthesis does the job.\) )Tj
0 -2.562 TD
(Scheme )Tj
/T1_1 1 Tf
(begin)Tj
/T1_0 1 Tf
( expressions aren't just code blocks, though, because they are expressio\ns that return a )Tj
0 -1.205 TD
(value. A )Tj
/T1_1 1 Tf
(begin)Tj
/T1_0 1 Tf
( returns the value of the last expression in the sequence. For example, \the )Tj
/T1_1 1 Tf
(begin)Tj
/T1_0 1 Tf
( )Tj
T*
(expression above returns the value returned by the call to )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(The bodies of procedures work like )Tj
/T1_1 1 Tf
(begin)Tj
/T1_0 1 Tf
(s as well. If the body contains several expressions, they are )Tj
0 -1.2 TD
(evaluated in order, and the last value is returned as the value of the p\rocedure call. )Tj
0 -2.562 TD
(Here's a procedure )Tj
/T1_1 1 Tf
(baz)Tj
/T1_0 1 Tf
( that calls )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( and then calls )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
( and returns the result from the call to )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
T*
(\(define \(baz\))Tj
0 -1.2 TD
(   \(foo\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_18.html \(2 of 3\)11\/3/2006 8:54:06 PM)Tj
ET
EMC 

endstreamendobj1259 0 obj<</Length 1486>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Control Structures ar\e Expressions)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(   \(bar\)\))Tj
ET
0.5 0.5 0.5 rg
10 721.2 m
10 723.2 l
602 723.2 l
601 722.2 l
11 722.2 l
11 722.2 l
h
f
0.875 0.875 0.875 rg
602 723.2 m
602 721.2 l
10 721.2 l
11 722.2 l
601 722.2 l
601 722.2 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 702.1756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 700.059 m
88.162 700.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 702.1756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 700.059 m
143.378 700.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 702.1756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 700.059 m
174.486 700.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 702.1756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 700.059 m
200.932 700.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 702.1756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 700.059 m
343.634 700.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 702.1756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_18.html \(3 of 3\)11\/3/2006 8:54:06 PM)Tj
ET
EMC 

endstreamendobj1260 0 obj(An Introduction to Scheme and its Implementation - Control Structures are Expressions)endobj1261 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_18.html)/S 700 0 R>>endobj1262 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_18.html)endobj1263 0 obj(ÔwÑyÃ˚|¯ä2vø|Ã)endobj1264 0 obj<</TS(D:20061104045406)/ID 1263 0 R/CT(text/html)/O[1231 0 R 1246 0 R 1249 0 R]/S/SPS/T 1260 0 R/TID 1266 0 R/SI 1265 0 R>>endobj1265 0 obj<</TS(D:20061104045406)/AU 1262 0 R>>endobj1266 0 obj(Í‹Ü\([>ÿ®IXº\\ßˇ-)endobj1267 0 obj<</Parent 710 0 R/Next 1296 0 R/Dest[1231 0 R/XYZ 0 792 null]/Prev 1228 0 R/SE 1230 0 R/Title(An Introduction to Scheme and its Implementation - Control Structures are Expressions)>>endobj1268 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1269 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 1270 0 R>>endobj1270 0 obj<</Annots 1273 0 R/Parent 1338 0 R/ID 1292 0 R/StructParents 37/Contents 1288 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 1287 0 R/T1_3 828 0 R/T1_4 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1271 0 obj[1269 0 R]endobj1272 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1273 0 obj[1272 0 R 1274 0 R 1275 0 R 1276 0 R 1277 0 R 1279 0 R 1282 0 R 1283 0 R 1284 0 R 1285 0 R 1286 0 R]endobj1274 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1231 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_18.html)/S/URI>>/Border[0 0 0]>>endobj1275 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1299 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_20.html)/S/URI>>/Border[0 0 0]>>endobj1276 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1277 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1278 0 obj[1270 0 R/XYZ 0 731.2 null]endobj1279 0 obj<</Rect[10.0 693.229 244.473 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC19)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC19)/S/URI>>/Border[0 0 0]>>endobj1280 0 obj[1270 0 R/XYZ 0 671.613 null]endobj1281 0 obj[1270 0 R/XYZ 0 671.613 null]endobj1282 0 obj<</Rect[65.608 291.674 88.162 306.674]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1283 0 obj<</Rect[95.162 291.674 143.378 306.674]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1231 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_18.html)/S/URI>>/Border[0 0 0]>>endobj1284 0 obj<</Rect[150.378 291.674 174.486 306.674]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1299 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_20.html)/S/URI>>/Border[0 0 0]>>endobj1285 0 obj<</Rect[181.486 291.674 200.932 306.674]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1286 0 obj<</Rect[251.094 291.674 343.634 306.674]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1287 0 obj<</Subtype/Type1/BaseFont/Courier-Bold/Encoding/WinAnsiEncoding/Type/Font>>endobj1288 0 obj<</Length 4822>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Booleans)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
168.001 693.975 l
S
0.814 w 
168.001 695.603 m
187.385 695.603 l
S
1.357 w 
187.385 693.975 m
225.088 693.975 l
S
0.814 w 
225.088 695.603 m
244.473 695.603 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(The Boolean Values )Tj
/T1_2 1 Tf
(#t)Tj
/T1_1 1 Tf
( and )Tj
/T1_2 1 Tf
(#f)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.5214 Tm
(Scheme provides a special unique object, whose written representation is\ )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
(, called )Tj
/T1_4 1 Tf
(false)Tj
/T1_0 1 Tf
(. This object )Tj
0 -1.205 TD
(counts as false if it's the result of a condition expression in an )Tj
/T1_3 1 Tf
(if)Tj
/T1_0 1 Tf
( \(or )Tj
/T1_3 1 Tf
(cond)Tj
/T1_0 1 Tf
(\) expression. In most )Tj
0 -1.2 TD
(Schemes, this is the )Tj
/T1_4 1 Tf
(only)Tj
/T1_0 1 Tf
( value that counts as false, and all others count as true. )Tj
0 -2.557 TD
(The false object is )Tj
/T1_4 1 Tf
(not)Tj
/T1_0 1 Tf
( the same thing as the integer zero \(as it is in C\), and it's not the \same thing as a )Tj
0 -1.2 TD
(null pointer \(as it is in Lisp\). The false object is a unique object. \)Tj
0 -2.562 TD
(For convenience and clarity, Scheme also provides another boolean value,\ written )Tj
/T1_3 1 Tf
(#t)Tj
/T1_0 1 Tf
(, which can be )Tj
0 -1.2 TD
(used as a true value. Note that in general, any value other than false i\s true, but the special boolean )Tj
0 -1.205 TD
(object )Tj
/T1_3 1 Tf
(#t)Tj
/T1_0 1 Tf
( is a good one to use when all you want to say is that something is true\--returning the true )Tj
0 -1.2 TD
(boolean makes it clear that all you're returning is a true value, not so\me other value that conveys more )Tj
T*
(information. )Tj
0 -2.562 TD
(Like other objects, Booleans are conceptually objects on the heap, and w\hen you write )Tj
/T1_3 1 Tf
(#t)Tj
/T1_0 1 Tf
( or )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
(, it )Tj
0 -1.2 TD
(means "a pointer to the canonical true object" or "a pointer to the fals\e object." )Tj
0 -2.562 TD
(Scheme provides a few procedures and special forms for operation on bool\eans. The procedure )Tj
/T1_3 1 Tf
(not)Tj
/T1_0 1 Tf
( acts )Tj
0 -1.205 TD
(as a )Tj
/T1_3 1 Tf
(not)Tj
/T1_0 1 Tf
( operator, and always returns true or false \()Tj
/T1_3 1 Tf
(#t)Tj
/T1_0 1 Tf
( or )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
(\). If applied to )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
(, it returns )Tj
/T1_3 1 Tf
(#t)Tj
/T1_0 1 Tf
(. Since all )Tj
0 -1.205 TD
(other values count as true, applying )Tj
/T1_3 1 Tf
(not)Tj
/T1_0 1 Tf
( to anything else returns )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
(. )Tj
ET
0.5 0.5 0.5 rg
10 315.074 m
10 317.074 l
602 317.074 l
601 316.074 l
11 316.074 l
11 316.074 l
h
f
0.875 0.875 0.875 rg
602 317.074 m
602 315.074 l
10 315.074 l
11 316.074 l
601 316.074 l
601 316.074 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 296.0496 Tm
(Go to the )Tj
ET
0.706 w 
65.608 293.933 m
88.162 293.933 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 296.0496 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 293.933 m
143.378 293.933 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 296.0496 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 293.933 m
174.486 293.933 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 296.0496 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 293.933 m
200.932 293.933 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 296.0496 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 293.933 m
343.634 293.933 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 296.0496 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_19.html11/3/2006 8:5\4:10 PM)Tj
ET
EMC 

endstreamendobj1289 0 obj(An Introduction to Scheme and its Implementation - Booleans)endobj1290 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_19.html)/S 700 0 R>>endobj1291 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_19.html)endobj1292 0 obj(∂˘‚6∑\)iÒüx˜dd;ˇ)endobj1293 0 obj<</TS(D:20061104045410)/ID 1292 0 R/CT(text/html)/O[1270 0 R]/S/SPS/T 1289 0 R/TID 1295 0 R/SI 1294 0 R>>endobj1294 0 obj<</TS(D:20061104045410)/AU 1291 0 R>>endobj1295 0 obj(¡ùÙ“%VM\nºØF)endobj1296 0 obj<</Parent 710 0 R/Next 1324 0 R/Dest[1270 0 R/XYZ 0 792 null]/Prev 1267 0 R/SE 1269 0 R/Title(An Introduction to Scheme and its Implementation - Booleans)>>endobj1297 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1298 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 1299 0 R>>endobj1299 0 obj<</Annots 1302 0 R/Parent 1338 0 R/ID 1320 0 R/StructParents 38/Contents 1316 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 1287 0 R/T1_3 828 0 R/T1_4 766 0 R/T1_5 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1300 0 obj[1298 0 R]endobj1301 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1302 0 obj[1301 0 R 1303 0 R 1304 0 R 1305 0 R 1306 0 R 1308 0 R 1309 0 R 1310 0 R 1311 0 R 1312 0 R 1313 0 R 1314 0 R 1315 0 R]endobj1303 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1270 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_19.html)/S/URI>>/Border[0 0 0]>>endobj1304 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1327 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_21.html)/S/URI>>/Border[0 0 0]>>endobj1305 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1306 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1307 0 obj[1299 0 R/XYZ 0 731.2 null]endobj1308 0 obj<</Rect[10.0 693.229 443.682 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC20)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC20)/S/URI>>/Border[0 0 0]>>endobj1309 0 obj<</Rect[50.0 552.011 77.216 567.011]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Åıí«’ç*LvY€ ∆7øSEC21)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_21.html#SEC21)/S/URI>>/Border[0 0 0]>>endobj1310 0 obj<</Rect[50.0 533.211 109.094 548.211]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ˇ¥J%LZKa:b¸z–SEC22)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_22.html#SEC22)/S/URI>>/Border[0 0 0]>>endobj1311 0 obj<</Rect[65.608 479.411 88.162 494.411]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1312 0 obj<</Rect[95.162 479.411 143.378 494.411]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1270 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_19.html)/S/URI>>/Border[0 0 0]>>endobj1313 0 obj<</Rect[150.378 479.411 174.486 494.411]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1327 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_21.html)/S/URI>>/Border[0 0 0]>>endobj1314 0 obj<</Rect[181.486 479.411 200.932 494.411]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1315 0 obj<</Rect[251.094 479.411 343.634 494.411]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1316 0 obj<</Length 3886>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Other Control-Flow Co\nstructs)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
305.276 693.975 l
S
0.814 w 
305.276 695.603 m
344.045 695.603 l
S
1.357 w 
344.045 693.975 m
353.027 693.975 l
S
0.814 w 
353.027 695.603 m
382.104 695.603 l
S
1.357 w 
382.104 693.975 m
424.298 693.975 l
S
0.814 w 
424.298 695.603 m
443.682 695.603 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Some Other Control-Flow Constructs: )Tj
/T1_2 1 Tf
(cond)Tj
/T1_1 1 Tf
(, )Tj
/T1_2 1 Tf
(and)Tj
/T1_1 1 Tf
(, and )Tj
/T1_2 1 Tf
(or)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.5214 Tm
(We've already seen that the special form )Tj
/T1_3 1 Tf
(if)Tj
/T1_0 1 Tf
( is a kind of expression, which returns a value as well as )Tj
0 -1.205 TD
(affecting control flow. Scheme also has )Tj
/T1_3 1 Tf
(cond)Tj
/T1_0 1 Tf
(, a more general conditional construct, and the extended )Tj
0 -1.205 TD
(logical operators )Tj
/T1_3 1 Tf
(and)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(or)Tj
/T1_0 1 Tf
(. These are all value-returning expressions; they're also special forms,\ not )Tj
0 -1.2 TD
(procedures: they control )Tj
/T1_4 1 Tf
(whether)Tj
/T1_0 1 Tf
( expressions get evaluated, depending on the values returned by other )Tj
T*
(expressions. )Tj
/T1_5 1 Tf
7 0 0 7 35.713 556.3866 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
50 554.27 m
77.216 554.27 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 556.3866 Tm
(cond)Tj
0 0 0 rg
(: cond is like if...elseif...else if... else... )Tj
/T1_5 1 Tf
7 0 0 7 35.713 537.5866 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 535.47 m
109.094 535.47 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 537.5866 Tm
(and and or)Tj
0 0 0 rg
(: and and or are "short-circuiting" )Tj
ET
0.5 0.5 0.5 rg
10 502.811 m
10 504.811 l
602 504.811 l
601 503.811 l
11 503.811 l
11 503.811 l
h
f
0.875 0.875 0.875 rg
602 504.811 m
602 502.811 l
10 502.811 l
11 503.811 l
601 503.811 l
601 503.811 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 483.7866 Tm
(Go to the )Tj
ET
65.608 481.67 m
88.162 481.67 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 483.7866 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 481.67 m
143.378 481.67 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 483.7866 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 481.67 m
174.486 481.67 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 483.7866 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 481.67 m
200.932 481.67 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 483.7866 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 481.67 m
343.634 481.67 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 483.7866 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_20.html11/3/2006 8:5\4:13 PM)Tj
ET
EMC 

endstreamendobj1317 0 obj(An Introduction to Scheme and its Implementation - Other Control-Flow Constructs)endobj1318 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_20.html)/S 700 0 R>>endobj1319 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_20.html)endobj1320 0 obj(˘Fìhˆ?X˘;å>∏ˇ)endobj1321 0 obj<</TS(D:20061104045413)/ID 1320 0 R/CT(text/html)/O[1299 0 R]/S/SPS/T 1317 0 R/TID 1323 0 R/SI 1322 0 R>>endobj1322 0 obj<</TS(D:20061104045413)/AU 1319 0 R>>endobj1323 0 obj(	»Õ£>G!\nT¡π–9R)endobj1324 0 obj<</Parent 710 0 R/Next 1362 0 R/Dest[1299 0 R/XYZ 0 792 null]/Prev 1296 0 R/SE 1298 0 R/Title(An Introduction to Scheme and its Implementation - Other Control-Flow Constructs)>>endobj1325 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1326 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 1337 0 R/Type/MCR>><</MCID 0/Pg 1340 0 R/Type/MCR>><</MCID 0/Pg 1342 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 1327 0 R>>endobj1327 0 obj<</Annots 1330 0 R/Parent 1338 0 R/ID 1358 0 R/StructParents 39/Contents 1351 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1328 0 obj[1326 0 R]endobj1329 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1330 0 obj[1329 0 R 1331 0 R 1332 0 R 1333 0 R 1334 0 R 1336 0 R]endobj1331 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1299 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_20.html)/S/URI>>/Border[0 0 0]>>endobj1332 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1365 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_22.html)/S/URI>>/Border[0 0 0]>>endobj1333 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1334 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1335 0 obj[1327 0 R/XYZ 0 731.2 null]endobj1336 0 obj<</Rect[10.0 695.8 43.6 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC21)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC21)/S/URI>>/Border[0 0 0]>>endobj1337 0 obj<</Parent 1399 0 R/ID 1358 0 R/StructParents 40/Contents 1352 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1338 0 obj<</Parent 1543 0 R/Count 5/Type/Pages/Kids[1246 0 R 1249 0 R 1270 0 R 1299 0 R 1327 0 R]>>endobj1339 0 obj[1326 0 R]endobj1340 0 obj<</Parent 1399 0 R/ID 1358 0 R/StructParents 41/Contents 1353 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1341 0 obj[1326 0 R]endobj1342 0 obj<</Annots 1346 0 R/Parent 1399 0 R/ID 1358 0 R/StructParents 42/Contents 1354 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1343 0 obj[1326 0 R]endobj1344 0 obj[1342 0 R/XYZ 0 521.798 null]endobj1345 0 obj<</Rect[65.608 350.463 88.162 365.463]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1346 0 obj[1345 0 R 1347 0 R 1348 0 R 1349 0 R 1350 0 R]endobj1347 0 obj<</Rect[95.162 350.463 143.378 365.463]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1299 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_20.html)/S/URI>>/Border[0 0 0]>>endobj1348 0 obj<</Rect[150.378 350.463 174.486 365.463]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1365 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_22.html)/S/URI>>/Border[0 0 0]>>endobj1349 0 obj<</Rect[181.486 350.463 200.932 365.463]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1350 0 obj<</Rect[251.094 350.463 343.634 365.463]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1351 0 obj<</Length 3715>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - cond)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
10 697.991 m
43.6 697.991 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 700.1082 Tm
(cond)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.7 TD
(In most procedural programming languages, you can write a sequence of )Tj
/T1_2 1 Tf
(if)Tj
/T1_0 1 Tf
( tests using an extended )Tj
0 -1.205 TD
(version of )Tj
/T1_2 1 Tf
(if)Tj
/T1_0 1 Tf
(, something like this: )Tj
/T1_2 1 Tf
0 -2.562 TD
(if test1 then)Tj
0 -1.2 TD
(   action1\(\);)Tj
T*
(else if test2 then)Tj
T*
(   action2\(\);)Tj
T*
(else if test3 then)Tj
T*
(   action3\(\);)Tj
T*
(else)Tj
T*
(   action4\(\);)Tj
/T1_0 1 Tf
0 -2.557 TD
(Scheme has a similar construct, a special form called )Tj
/T1_2 1 Tf
(cond)Tj
/T1_0 1 Tf
(. The above example might be written in )Tj
0 -1.2 TD
(Scheme as )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(cond \(test1)Tj
0 -1.2 TD
(       \(action1\)\))Tj
T*
(      \(test2)Tj
T*
(       \(action2\)\))Tj
T*
(      \(test3)Tj
T*
(       \(action3\)\))Tj
T*
(      \(else)Tj
T*
(       \(action4\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that each test-and-action pair is enclosed in parentheses. In thi\s example, )Tj
/T1_2 1 Tf
(test1)Tj
/T1_0 1 Tf
( is just a )Tj
0 -1.205 TD
(variable reference, not a procedure call, i.e., we're testing to see if \the value of the variable )Tj
/T1_2 1 Tf
(test1)Tj
/T1_0 1 Tf
( is )Tj
/T1_2 1 Tf
0 -1.205 TD
(#f)Tj
/T1_0 1 Tf
(; if not, we'll execute )Tj
/T1_2 1 Tf
(\(action1\))Tj
/T1_0 1 Tf
(, i.e., call the procedure )Tj
/T1_2 1 Tf
(action1)Tj
/T1_0 1 Tf
(. If it is false, control "falls )Tj
0 -1.2 TD
(through" to the next test, and keeps going until one of the tests evalua\tes to a true value \(anything but )Tj
/T1_2 1 Tf
0 -1.205 TD
(#f)Tj
/T1_0 1 Tf
(\). )Tj
0 -2.557 TD
(Notice that we indent the actions corresponding to a test by one charact\er. This lines the actions up )Tj
0 -1.2 TD
(directly under the tests, rather than under the opening parenthesis that\ groups them together. )Tj
0 -2.562 TD
(The )Tj
/T1_2 1 Tf
(else)Tj
/T1_0 1 Tf
( clause of a )Tj
/T1_2 1 Tf
(cond)Tj
/T1_0 1 Tf
( is optional; if present, that branch will be taken "by default"---if no\ne of the )Tj
0 -1.205 TD
(other conditions evaluates to a true value, the )Tj
/T1_2 1 Tf
(else)Tj
/T1_0 1 Tf
( branch will be taken. )Tj
0 -2.557 TD
(We don't really need the else clause, because we could get the same effe\ct by using a test expression that )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_21.html \(1 of 4\)11\/3/2006 8:54:18 PM)Tj
ET
EMC 

endstreamendobj1352 0 obj<</Length 2951>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - cond)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9082 Tm
(always evaluates to a true value. One way of doing this is to use the li\teral )Tj
/T1_1 1 Tf
(#t)Tj
/T1_0 1 Tf
(, the true boolean, because )Tj
0 -1.2 TD
(it's always true. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(cond \(test1)Tj
0 -1.2 TD
(       \(action1\)\))Tj
T*
(      \(test2)Tj
T*
(       \(action2\)\))Tj
T*
(      \(test3)Tj
T*
(       \(action3\)\))Tj
T*
(      \(#t            ; literal #t is always true, so)Tj
T*
(       \(action4\)\)\)   ; this branch is taken if we get this far)Tj
/T1_0 1 Tf
0 -2.557 TD
(The code above is equivalent to a nested set of )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( expressions: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(if test1)Tj
0 -1.2 TD
(    \(action1\))Tj
T*
(    \(if test2)Tj
T*
(        \(action2\))Tj
T*
(        \(if test3)Tj
T*
(            \(action3\))Tj
T*
(            \(if #t)Tj
T*
(                \(action4\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Like an )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(, a )Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
( returns the value of whatever "branch" it executes. If )Tj
/T1_1 1 Tf
(test1)Tj
/T1_0 1 Tf
( is true, for example, )Tj
0 -1.205 TD
(the above )Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
( will return the value returned from the procedure call )Tj
/T1_1 1 Tf
(\(action1\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Remember that each branch of an )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( is a )Tj
/T1_2 1 Tf
(single)Tj
/T1_0 1 Tf
( expression; if you want to execute more than one )Tj
0 -1.205 TD
(expression in a branch, you have to wrap the expressions in a )Tj
/T1_1 1 Tf
(begin)Tj
/T1_0 1 Tf
(. With )Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
(, you don't have to do )Tj
0 -1.2 TD
(this. You can follow a test expression with more than one action express\ion, and Scheme will evaluate )Tj
0 -1.205 TD
(all of them, in order, and return the value of the last one, just like a\ )Tj
/T1_1 1 Tf
(begin)Tj
/T1_0 1 Tf
( or a procedure body. )Tj
0 -2.562 TD
(Suppose we want to modify the above )Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
( example so that it prints out the branch it's taking, as well )Tj
0 -1.2 TD
(as evaluating the action expression and returning its value. We can do t\his: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(cond \(test1)Tj
0 -1.2 TD
(       \(display "taking first branch"\))Tj
T*
(       \(action1\)\))Tj
T*
(      \(test2)Tj
T*
(       \(display "taking second branch"\))Tj
T*
(       \(action2\)\))Tj
T*
(      \(test3)Tj
T*
(       \(display "taking third branch"\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_21.html \(2 of 4\)11\/3/2006 8:54:18 PM)Tj
ET
EMC 

endstreamendobj1353 0 obj<</Length 3136>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - cond)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(       \(action3\)\))Tj
0 -1.2 TD
(      \(else)Tj
T*
(       \(display "taking fourth \(default\) branch"\))Tj
T*
(       \(action4\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(This )Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
( will return the same value as the original, because it always returns t\he value of the last )Tj
0 -1.205 TD
(expression in a branch. As it executes, however, it also displays what i\t's doing. We can use the )Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(both for )Tj
/T1_2 1 Tf
(value)Tj
/T1_0 1 Tf
( and for )Tj
/T1_2 1 Tf
(effect)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Be particularly careful about parentheses with )Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
(. You )Tj
/T1_2 1 Tf
(must)Tj
/T1_0 1 Tf
( enclose each branch with a pair of )Tj
0 -1.2 TD
(parentheses around the test expression and the corresponding sequence of\ action expressions. If you )Tj
T*
(want to call a procedure in any of those expressions, you must )Tj
/T1_2 1 Tf
(also)Tj
/T1_0 1 Tf
( put parentheses around the procedure )Tj
0 -1.205 TD
(call. In the above example, if we wanted the first test to be a call to \a procedure )Tj
/T1_1 1 Tf
(test1)Tj
/T1_0 1 Tf
(---rather than just )Tj
0 -1.205 TD
(fetching the value of the variable )Tj
/T1_1 1 Tf
(test1)Tj
/T1_0 1 Tf
(---we'd write )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(cond \(\(test1\))Tj
0 -1.2 TD
(       \(display "taking first branch"\))Tj
T*
(       \(action1\)\))Tj
T*
(      ...\))Tj
/T1_0 1 Tf
0 -2.552 TD
(instead of )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(cond \(test1)Tj
0 -1.2 TD
(       \(display "taking first branch"\))Tj
T*
(       \(action1\)\))Tj
T*
(      ...\))Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Note the indenting here. We usually line up a test and the correspondi\ng sequence of actions vertically, )Tj
0 -1.2 TD
(whether or not the expression starts with a parentheses. That is, we ind\ent one space past the opening )Tj
T*
(parenthesis of the pair of parentheses that goes around them all.\) )Tj
0 -2.562 TD
(The "extra" parentheses are necessary so that )Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
( can tell which action sequences are grouped with )Tj
0 -1.2 TD
(which tests. )Tj
0 -2.562 TD
(Don't be afraid to use )Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
( for conditionals with only one or two branches. )Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
( is often more )Tj
0 -1.205 TD
(convenient than )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( because it can execute a sequence of expressions, instead of just one. \It's not )Tj
0 -1.2 TD
(uncommon to see things like this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(...)Tj
0 -1.2 TD
(\(cond \(\(foo\))Tj
T*
(       \(bar\))Tj
T*
(       \(baz\)\)\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_21.html \(3 of 4\)11\/3/2006 8:54:18 PM)Tj
ET
EMC 

endstreamendobj1354 0 obj<</Length 3085>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - cond)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(...)Tj
/T1_0 1 Tf
0 -2.557 TD
(Don't be confused by this--there's only one branch to this )Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
(, like a one-branch )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(. We could have )Tj
0 -1.2 TD
(written it )Tj
/T1_1 1 Tf
0 -2.562 TD
(...)Tj
0 -1.2 TD
(\(if \(foo\))Tj
T*
(    \(begin \(bar\))Tj
T*
(           \(baz\)\)\))Tj
T*
(...)Tj
/T1_0 1 Tf
0 -2.557 TD
(It's just more convenient to use )Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
( so that we can call )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
( before calling )Tj
/T1_1 1 Tf
(baz)Tj
/T1_0 1 Tf
( and returning its )Tj
0 -1.205 TD
(result, without explicitly writing a )Tj
/T1_1 1 Tf
(begin)Tj
/T1_0 1 Tf
( expression to sequence them. )Tj
0 -2.562 TD
(We say that )Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
( is )Tj
/T1_2 1 Tf
(syntactic sugar)Tj
/T1_0 1 Tf
( for nested )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(s with )Tj
/T1_1 1 Tf
(begin)Tj
/T1_0 1 Tf
(s around the branches. There's nothing )Tj
0 -1.205 TD
(we can do with )Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
( that we can't do straightforwardly with )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(begin)Tj
/T1_0 1 Tf
(---)Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
( just gives us a )Tj
0 -1.2 TD
("sweetened" syntax, i.e., one that's more convenient. )Tj
0 -2.557 TD
(Most of the special forms in Scheme are like this--they're just a conven\ient way of writing things that )Tj
0 -1.2 TD
(you )Tj
/T1_2 1 Tf
(could)Tj
/T1_0 1 Tf
( write using more basic special forms. \(There are only five "core" spec\ial forms that are really )Tj
T*
(necessary, and the others are equivalent to combinations of those specia\l forms.\) )Tj
ET
0.5 0.5 0.5 rg
10 373.863 m
10 375.863 l
602 375.863 l
601 374.863 l
11 374.863 l
11 374.863 l
h
f
0.875 0.875 0.875 rg
602 375.863 m
602 373.863 l
10 373.863 l
11 374.863 l
601 374.863 l
601 374.863 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 354.8386 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 352.722 m
88.162 352.722 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 354.8386 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 352.722 m
143.378 352.722 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 354.8386 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 352.722 m
174.486 352.722 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 354.8386 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 352.722 m
200.932 352.722 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 354.8386 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 352.722 m
343.634 352.722 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 354.8386 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_21.html \(4 of 4\)11\/3/2006 8:54:18 PM)Tj
ET
EMC 

endstreamendobj1355 0 obj(An Introduction to Scheme and its Implementation - cond)endobj1356 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_21.html)/S 700 0 R>>endobj1357 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_21.html)endobj1358 0 obj(Åıí«’ç*LvY€ ∆7ø)endobj1359 0 obj<</TS(D:20061104045418)/ID 1358 0 R/CT(text/html)/O[1327 0 R 1337 0 R 1340 0 R 1342 0 R]/S/SPS/T 1355 0 R/TID 1361 0 R/SI 1360 0 R>>endobj1360 0 obj<</TS(D:20061104045418)/AU 1357 0 R>>endobj1361 0 obj(9ö•Z¶ÅÑ∏gn$q)endobj1362 0 obj<</Parent 710 0 R/Next 1395 0 R/Dest[1327 0 R/XYZ 0 792 null]/Prev 1324 0 R/SE 1326 0 R/Title(An Introduction to Scheme and its Implementation - cond)>>endobj1363 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1364 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 1377 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 1365 0 R>>endobj1365 0 obj<</Annots 1368 0 R/Parent 1399 0 R/ID 1391 0 R/StructParents 43/Contents 1386 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R/T1_2 736 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1366 0 obj[1364 0 R]endobj1367 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1368 0 obj[1367 0 R 1369 0 R 1370 0 R 1371 0 R 1372 0 R 1374 0 R 1376 0 R]endobj1369 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1327 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_21.html)/S/URI>>/Border[0 0 0]>>endobj1370 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1398 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_23.html)/S/URI>>/Border[0 0 0]>>endobj1371 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1372 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1373 0 obj[1365 0 R/XYZ 0 731.2 null]endobj1374 0 obj<</Rect[10.0 695.625 84.676 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC22)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC22)/S/URI>>/Border[0 0 0]>>endobj1375 0 obj[1365 0 R/XYZ 0 132.883 null]endobj1376 0 obj<</Rect[10.0 116.308 163.58 131.483]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC23)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC23)/S/URI>>/Border[0 0 0]>>endobj1377 0 obj<</Annots 1380 0 R/Parent 1399 0 R/ID 1391 0 R/StructParents 44/Contents 1387 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1378 0 obj[1364 0 R]endobj1379 0 obj<</Rect[228.148 335.13 522.498 350.13]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(É2≤À∫m¶	◊v|˘çSEC86)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_80.html#SEC86)/S/URI>>/Border[0 0 0]>>endobj1380 0 obj[1379 0 R 1381 0 R 1382 0 R 1383 0 R 1384 0 R 1385 0 R]endobj1381 0 obj<</Rect[65.608 281.33 88.162 296.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1382 0 obj<</Rect[95.162 281.33 143.378 296.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1327 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_21.html)/S/URI>>/Border[0 0 0]>>endobj1383 0 obj<</Rect[150.378 281.33 174.486 296.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1398 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_23.html)/S/URI>>/Border[0 0 0]>>endobj1384 0 obj<</Rect[181.486 281.33 200.932 296.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1385 0 obj<</Rect[251.094 281.33 343.634 296.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1386 0 obj<</Length 4837>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - and and or)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
10 697.816 m
35.2 697.816 l
S
1.176 w 
35.2 696.405 m
67.876 696.405 l
S
0.706 w 
67.876 697.816 m
84.676 697.816 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 699.933 Tm
(and)Tj
/T1_2 1 Tf
( and )Tj
/T1_1 1 Tf
(or)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.7 TD
(The special forms )Tj
/T1_3 1 Tf
(and)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(or)Tj
/T1_0 1 Tf
( can be used as logical operators, but they can also be used as control \)Tj
0 -1.2 TD
(structures, which is why they are special forms. )Tj
/T1_3 1 Tf
0 -2.562 TD
(and)Tj
/T1_0 1 Tf
( takes any number of expressions, and evaluates them in sequence, until \one of them returns )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
( or )Tj
0 -1.205 TD
(all of them have been evaluated. At the point where one returns )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
(, )Tj
/T1_3 1 Tf
(and)Tj
/T1_0 1 Tf
( returns that value as the value )Tj
T*
(of the )Tj
/T1_3 1 Tf
(and)Tj
/T1_0 1 Tf
( expression. If none of them returns )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
(, it returns the value of the last subexpression. )Tj
0 -2.557 TD
(This is really a control construct, not just a logical operator, because\ whether subexpressions get )Tj
0 -1.2 TD
(evaluated depends on the reults of the previous subexpressions. )Tj
/T1_3 1 Tf
0 -2.562 TD
(and)Tj
/T1_0 1 Tf
( is often used to express both control flow and value returning, like a \sequence of )Tj
/T1_3 1 Tf
(if)Tj
/T1_0 1 Tf
( tests. You can )Tj
0 -1.2 TD
(write something like )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(and \(try-first-thing\))Tj
0 -1.2 TD
(     \(try-second-thing\))Tj
T*
(     \(try-third-thing\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(If the three calls all return true values, )Tj
/T1_3 1 Tf
(and)Tj
/T1_0 1 Tf
( returns the value of the last one. If any of them returns )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
(, )Tj
0 -1.205 TD
(however, none of the rest are evaluated, and )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
( is returned as the value of the overall expression. )Tj
0 -2.562 TD
(Likewise, )Tj
/T1_3 1 Tf
(or)Tj
/T1_0 1 Tf
( takes any number of arguments, and returns the value of the first one t\hat returns a true )Tj
0 -1.205 TD
(value \(i.e., anything but )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
(\). It stops when it gets a true value, and returns it without evaluatin\g the )Tj
0 -1.2 TD
(remaining subexpressions. )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(or \(try-first-thing\))Tj
0 -1.2 TD
(    \(try-second-thing\))Tj
0 -1.2 TD
(    \(try-third-thing\)\))Tj
0 -2.557 TD
(or)Tj
/T1_0 1 Tf
( keeps trying subexpressions until one of them does return a true value;\ if that happens, )Tj
/T1_3 1 Tf
(or)Tj
/T1_0 1 Tf
( stops and )Tj
0 -1.205 TD
(returns that value. If none of them returns anything but )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
(, it returns )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
(. )Tj
ET
10 118.5 m
35.2 118.5 l
S
1.176 w 
35.2 117.088 m
163.58 117.088 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 120.6164 Tm
(not)Tj
/T1_2 1 Tf
( is just a procedure)Tj
0 0 0 rg
/T1_3 1 Tf
0 -2.7 TD
(not)Tj
/T1_0 1 Tf
( is a procedure that takes one argument, which may be any kind of Scheme\ value, and returns )Tj
/T1_3 1 Tf
(#t)Tj
/T1_0 1 Tf
( or )Tj
/T1_3 1 Tf
0 -1.205 TD
(#f)Tj
/T1_0 1 Tf
(. If the argument value is #f \(the unique false object\), it returns )Tj
/T1_3 1 Tf
(#t)Tj
/T1_0 1 Tf
(, and otherwise returns )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
(. That is, )Tj
0 -1.205 TD
(all values count as true except for the false object--just as in a condi\tional. For example, )Tj
/T1_3 1 Tf
(\(not 0\))Tj
/T1_0 1 Tf
( )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_22.html \(1 of 2\)11\/3/2006 8:54:21 PM)Tj
ET
EMC 

endstreamendobj1387 0 obj<</Length 3259>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - and and or)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9082 Tm
(returns )Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Given that )Tj
/T1_1 1 Tf
(and)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( are special forms, you might think that the logical )Tj
/T1_1 1 Tf
(not)Tj
/T1_0 1 Tf
( operator is a special form )Tj
0 -1.2 TD
(as well. It isn't. It's just a procedure--in particular, a predicate. )Tj
0 -2.562 TD
(This makes sense because )Tj
/T1_1 1 Tf
(not)Tj
/T1_0 1 Tf
( always evaluates its \(one\) argument, and returns a value. It doesn't \treat )Tj
0 -1.2 TD
(any arguments specially--it's just a normal first-class procedure, whose\ argument is evaluated in the )Tj
T*
(usual way before the procedure is actually called. )Tj
0 -2.557 TD
(In general, operations that can be procedures )Tj
/T1_2 1 Tf
(are)Tj
/T1_0 1 Tf
( procedures. Scheme only has special forms for things )Tj
0 -1.2 TD
(that are actually special, and need their arguments treated differently \from arguments to procedure calls. )Tj
0 -1.205 TD
(\(Even Scheme's most powerful control construct, )Tj
/T1_1 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
(, is just a )Tj
0 -1.2 TD
(first-class procedure.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(==================================================================)Tj
0 -1.2 TD
(This is the end of Hunk A.)Tj
0 -2.4 TD
(TIME TO TRY IT OUT)Tj
T*
(At this point, you should go read Hunk B of the next chapter)Tj
0 -1.2 TD
(and work through the examples using a running Scheme system.)Tj
T*
(Then return here and resume this chapter.)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Go to Hunk B, which starts at section )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
228.148 337.389 m
522.498 337.389 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 228.148 339.506 Tm
(An Interactive Programming Environment \(Hunk B\))Tj
0 0 0 rg
(.\) )Tj
ET
0.5 0.5 0.5 rg
10 304.73 m
10 306.73 l
602 306.73 l
601 305.73 l
11 305.73 l
11 305.73 l
h
f
0.875 0.875 0.875 rg
602 306.73 m
602 304.73 l
10 304.73 l
11 305.73 l
601 305.73 l
601 305.73 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 285.706 Tm
(Go to the )Tj
ET
65.608 283.589 m
88.162 283.589 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 285.706 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 283.589 m
143.378 283.589 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 285.706 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 283.589 m
174.486 283.589 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 285.706 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 283.589 m
200.932 283.589 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 285.706 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 283.589 m
343.634 283.589 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 285.706 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_22.html \(2 of 2\)11\/3/2006 8:54:21 PM)Tj
ET
EMC 

endstreamendobj1388 0 obj(An Introduction to Scheme and its Implementation - and and or)endobj1389 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_22.html)/S 700 0 R>>endobj1390 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_22.html)endobj1391 0 obj(ˇ¥J%LZKa:b¸z–)endobj1392 0 obj<</TS(D:20061104045421)/ID 1391 0 R/CT(text/html)/O[1365 0 R 1377 0 R]/S/SPS/T 1388 0 R/TID 1394 0 R/SI 1393 0 R>>endobj1393 0 obj<</TS(D:20061104045421)/AU 1390 0 R>>endobj1394 0 obj(;ä¥Œ˛7Wé,*ó_8÷j◊)endobj1395 0 obj<</Parent 710 0 R/Next 1422 0 R/Dest[1365 0 R/XYZ 0 792 null]/Prev 1362 0 R/SE 1364 0 R/Title(An Introduction to Scheme and its Implementation - and and or)>>endobj1396 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1397 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 1398 0 R>>endobj1398 0 obj<</Annots 1402 0 R/Parent 1516 0 R/ID 1418 0 R/StructParents 45/Contents 1414 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1399 0 obj<</Parent 1543 0 R/Count 5/Type/Pages/Kids[1337 0 R 1340 0 R 1342 0 R 1365 0 R 1377 0 R]>>endobj1400 0 obj[1397 0 R]endobj1401 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1402 0 obj[1401 0 R 1403 0 R 1404 0 R 1405 0 R 1406 0 R 1408 0 R 1409 0 R 1410 0 R 1411 0 R 1412 0 R 1413 0 R]endobj1403 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1365 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_22.html)/S/URI>>/Border[0 0 0]>>endobj1404 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1425 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_24.html)/S/URI>>/Border[0 0 0]>>endobj1405 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1406 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1407 0 obj[1398 0 R/XYZ 0 731.2 null]endobj1408 0 obj<</Rect[10.0 693.431 165.255 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC24)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC24)/S/URI>>/Border[0 0 0]>>endobj1409 0 obj<</Rect[65.608 216.281 88.162 231.281]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1410 0 obj<</Rect[95.162 216.281 143.378 231.281]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1365 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_22.html)/S/URI>>/Border[0 0 0]>>endobj1411 0 obj<</Rect[150.378 216.281 174.486 231.281]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1425 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_24.html)/S/URI>>/Border[0 0 0]>>endobj1412 0 obj<</Rect[181.486 216.281 200.932 231.281]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1413 0 obj<</Rect[251.094 216.281 343.634 231.281]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1414 0 obj<</Length 3956>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Comments)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
165.255 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Comments \(Hunk C\))Tj
0 0 0 rg
/T1_2 1 Tf
14 0 0 14 10 659.7235 Tm
(==================================================================)Tj
0 -1.2 TD
(Hunk C starts here:)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
([ Should I say this earlier, and use comments in examples earlier? ] )Tj
0 -2.557 TD
(You can and should put comments in your Scheme programs. Start a comment\ with a semicolon. )Tj
0 -1.205 TD
(Scheme will ignore any characters after that on a line. \(This is like t\he )Tj
/T1_2 1 Tf
(//)Tj
/T1_0 1 Tf
( comments in C++.\) )Tj
0 -2.557 TD
(For example, here's a variable definition with a comment after it: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define foo 22\) ; define foo with an initial value of 22)Tj
/T1_0 1 Tf
0 -2.552 TD
(Of course, most comments should tell you things that )Tj
/T1_3 1 Tf
(aren't)Tj
/T1_0 1 Tf
( patently obvious from looking at the code. )Tj
0 -2.562 TD
(Standard Scheme does not have block comments like C's )Tj
/T1_2 1 Tf
(/*)Tj
/T1_0 1 Tf
(...)Tj
/T1_2 1 Tf
(*/)Tj
/T1_0 1 Tf
( comments. )Tj
0 -2.557 TD
(It is common to use two or three semicolons to start a comment, rather t\han just one. This makes the )Tj
0 -1.2 TD
(beginning of the comment stand out more than a single semicolon. The ext\ra semicolons are ignored, )Tj
T*
(along with all other characters up to the end of the line. )Tj
0 -2.557 TD
(A common style is to use two semicolons for most comments, and three for\ comments that take up a )Tj
0 -1.2 TD
(whole line, or which describe the contents of a file. )Tj
ET
0.5 0.5 0.5 rg
10 239.681 m
10 241.681 l
602 241.681 l
601 240.681 l
11 240.681 l
11 240.681 l
h
f
0.875 0.875 0.875 rg
602 241.681 m
602 239.681 l
10 239.681 l
11 240.681 l
601 240.681 l
601 240.681 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 220.6561 Tm
(Go to the )Tj
ET
0.706 w 
65.608 218.539 m
88.162 218.539 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 220.6561 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 218.539 m
143.378 218.539 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 220.6561 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 218.539 m
174.486 218.539 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 220.6561 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 218.539 m
200.932 218.539 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 220.6561 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 218.539 m
343.634 218.539 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 220.6561 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_23.html11/3/2006 8:5\4:30 PM)Tj
ET
EMC 

endstreamendobj1415 0 obj(An Introduction to Scheme and its Implementation - Comments)endobj1416 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_23.html)/S 700 0 R>>endobj1417 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_23.html)endobj1418 0 obj(4bÙµ–¨ZäŸxpñæ)endobj1419 0 obj<</TS(D:20061104045430)/ID 1418 0 R/CT(text/html)/O[1398 0 R]/S/SPS/T 1415 0 R/TID 1421 0 R/SI 1420 0 R>>endobj1420 0 obj<</TS(D:20061104045430)/AU 1417 0 R>>endobj1421 0 obj(“-JèNs°m∆ñ‹Én∫)endobj1422 0 obj<</Parent 710 0 R/Next 1460 0 R/Dest[1398 0 R/XYZ 0 792 null]/Prev 1395 0 R/SE 1397 0 R/Title(An Introduction to Scheme and its Implementation - Comments)>>endobj1423 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1424 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 1439 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 1425 0 R>>endobj1425 0 obj<</Annots 1428 0 R/Parent 1516 0 R/ID 1456 0 R/StructParents 46/Contents 1451 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1426 0 obj[1424 0 R]endobj1427 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1428 0 obj[1427 0 R 1429 0 R 1430 0 R 1431 0 R 1432 0 R 1434 0 R]endobj1429 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1398 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_23.html)/S/URI>>/Border[0 0 0]>>endobj1430 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1463 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_25.html)/S/URI>>/Border[0 0 0]>>endobj1431 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1432 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1433 0 obj[1425 0 R/XYZ 0 731.2 null]endobj1434 0 obj<</Rect[10.0 693.431 321.462 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC25)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC25)/S/URI>>/Border[0 0 0]>>endobj1435 0 obj[1425 0 R/XYZ 0 671.815 null]endobj1436 0 obj<</Limits[(ÎŸß%¢6•°Wª<A`ÙSEC41)(÷ﬂªTD_í\(\nÄ…«ìSEC4)]/Names[]>>endobj1437 0 obj<</Limits[(÷ﬂªTD_í\(\nÄ…«ìSEC5)(Ô1™+X÷¢¡‘≈êlêÑSEC127)]/Names[(÷ﬂªTD_í\(\nÄ…«ìSEC5)820 0 R(◊á¥◊ÕŸµK∫”gÈäáÄIDX104)3964 0 R(◊á¥◊ÕŸµK∫”gÈäáÄSEC113)3962 0 R(Ÿ1´‘?jµ3ÓF'‹˘èÆ¯IDX63)2568 0 R(Ÿ1´‘?jµ3ÓF'‹˘èÆ¯SEC67)2566 0 R(⁄˛Ù¥JÌr=jÊl$uâ«DSEC251)5649 0 R(‹6ê¶¸mÍ©8úRùn!èSEC94)3446 0 R(‹}ˇp`‚A‰ZÙ˘ÎÿûIDX24)1771 0 R(‹}ˇp`‚A‰ZÙ˘ÎÿûIDX25)1772 0 R(‹}ˇp`‚A‰ZÙ˘ÎÿûIDX26)1773 0 R(‹}ˇp`‚A‰ZÙ˘ÎÿûIDX27)1774 0 R(‹}ˇp`‚A‰ZÙ˘ÎÿûSEC37)1769 0 R(‹…a-©¬˝°‹ÀúIúúIDX58)2445 0 R(‹…a-©¬˝°‹ÀúIúúSEC63)2443 0 R(›Ä2ˇÈ?s√V5\(tRSEC131)4275 0 R(·oƒ`æÅñó¿À»∞ì‘\\âSEC203)5322 0 R(ÏY…ÉuuÜ˘^„Ñ=kSEC249)5595 0 R(ÏÑØ`	ìîë@$\\0›˚˛€SEC29)1552 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC1)16 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC10)35 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC100)225 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC101)227 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC102)229 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC103)231 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC104)233 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC105)235 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC106)237 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC107)239 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC108)241 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC109)243 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC11)37 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC110)245 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC111)250 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC112)252 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC113)254 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC114)256 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC115)258 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC116)260 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC117)262 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC118)264 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC119)266 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC12)39 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC120)268 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC121)270 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC122)272 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC123)274 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC124)276 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC125)278 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC126)280 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC127)282 0 R]>>endobj1438 0 obj[1425 0 R/XYZ 0 671.815 null]endobj1439 0 obj<</Annots 1442 0 R/Parent 1516 0 R/ID 1456 0 R/StructParents 47/Contents 1452 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R/T1_3 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1440 0 obj[1424 0 R]endobj1441 0 obj<</Rect[50.0 332.93 170.148 347.93]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(inƒ#;4”Z¡–ySeèSEC26)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_25.html#SEC26)/S/URI>>/Border[0 0 0]>>endobj1442 0 obj[1441 0 R 1443 0 R 1444 0 R 1445 0 R 1446 0 R 1447 0 R 1448 0 R 1449 0 R 1450 0 R]endobj1443 0 obj<</Rect[50.0 314.13 189.23 329.13]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∆GD†TH˙Ì˙ \(çs|\\SEC27)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_26.html#SEC27)/S/URI>>/Border[0 0 0]>>endobj1444 0 obj<</Rect[50.0 295.33 134.378 310.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(VÜg!M…ÿZ†∆’‚ò]\\SEC28)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_27.html#SEC28)/S/URI>>/Border[0 0 0]>>endobj1445 0 obj<</Rect[50.0 276.53 230.418 291.53]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÏÑØ`	ìîë@$\\0›˚˛€SEC29)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_28.html#SEC29)/S/URI>>/Border[0 0 0]>>endobj1446 0 obj<</Rect[65.608 222.73 88.162 237.73]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1447 0 obj<</Rect[95.162 222.73 143.378 237.73]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1398 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_23.html)/S/URI>>/Border[0 0 0]>>endobj1448 0 obj<</Rect[150.378 222.73 174.486 237.73]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1463 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_25.html)/S/URI>>/Border[0 0 0]>>endobj1449 0 obj<</Rect[181.486 222.73 200.932 237.73]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1450 0 obj<</Rect[251.094 222.73 343.634 237.73]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1451 0 obj<</Length 3636>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Parentheses and Inden\ting)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
321.462 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(A Note about Parentheses and Indenting)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(The two biggest barriers to learning Scheme are probably parentheses and\ indenting. In Scheme, )Tj
0 -1.2 TD
(parentheses are used a little differently than in most programming langu\ages. Indenting is also very )Tj
T*
(important, because the surface syntax of the language is so regular. Whe\n reading Scheme code, )Tj
T*
(experienced programmers read the indenting structure as much as the toke\ns. If you don't parenthesize )Tj
T*
(correctly, your programs won't run correctly. And if you don't indent th\em correctly, they'll be hard to )Tj
T*
(understand. )Tj
0 -2.557 TD
(The syntax of Scheme is more similar to that of C or Pascal than it may \appear at first glance. After all, )Tj
0 -1.2 TD
(almost all programming languages are based on nested \(statements or\) e\xpressions. Like C or Pascal, )Tj
T*
(Scheme is free-form, and you can indent it any way you want. )Tj
0 -2.557 TD
(Some people write Scheme code indented like C, with closing parentheses \lined up under opening )Tj
0 -1.2 TD
(parentheses to show nesting. \(People who do this are usually beginners \who haven't learned to use an )Tj
T*
(editor properly, as I'll explain later.\) They might write )Tj
/T1_2 1 Tf
0 -2.562 TD
(;; A poorly indented if expression)Tj
0 -1.2 TD
(\(if a)Tj
T*
(    \(if b)Tj
T*
(        c)Tj
T*
(        d)Tj
T*
(    \))Tj
T*
(    e)Tj
T*
(\))Tj
/T1_0 1 Tf
0 -2.552 TD
(rather than )Tj
/T1_2 1 Tf
0 -2.562 TD
(;; a nicely-indented if expression)Tj
0 -1.2 TD
(\(if a)Tj
T*
(    \(if b)Tj
T*
(        c)Tj
T*
(        d\))Tj
T*
(    e\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(The first version looks a little more like C, but it's not really easier\ to read. The second example shows )Tj
0 -1.2 TD
(its structure just as clearly if you know how to read Scheme, and is in \fact easier to read because it's not )Tj
T*
(all stretched out. The second example takes up less space on the page or\ a computer screen. \(This is )Tj
T*
(important when editing code in a window and doing other things in anothe\r window--you can see more )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_24.html \(1 of 2\)11\/3/2006 8:54:35 PM)Tj
ET
EMC 

endstreamendobj1452 0 obj<</Length 4419>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Parentheses and Inden\ting)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(of your program at a time.\) )Tj
0 -2.557 TD
(There are a couple of things to keep in mind about parentheses in Scheme\. The first thing is that )Tj
/T1_1 1 Tf
0 -1.2 TD
(parentheses are significant)Tj
/T1_0 1 Tf
(. In C or Pascal, you can often leave parentheses out, because of "opera\tor )Tj
T*
(precedence parsing," where the compiler figures out the grouping. More i\mportantly, you can often add )Tj
T*
(extra parentheses around expressions without affecting their meanings. )Tj
0 -2.557 TD
(This is not true in Scheme! In Scheme, the parentheses are not just ther\e to clarify the association of )Tj
0 -1.2 TD
(operators. In Scheme, parentheses are not optional, and )Tj
/T1_1 1 Tf
(putting extra parentheses around things changes )Tj
0 -1.205 TD
(their meaning)Tj
/T1_0 1 Tf
(. For example, the expression )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
( is a variable reference, whose effect is to fetch the )Tj
T*
(value of the variable )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
(. On the other hand, the expression )Tj
/T1_2 1 Tf
(\(foo\))Tj
/T1_0 1 Tf
( is a call to the procedure named )Tj
/T1_2 1 Tf
0 -1.205 TD
(foo)Tj
/T1_0 1 Tf
( with zero arguments. )Tj
0 -2.557 TD
(\(Notice that even in C, it's not generally acceptable to write a proced\ure call with too few parentheses or )Tj
0 -1.205 TD
(too many: a call )Tj
/T1_2 1 Tf
(foo\(a, b\))Tj
/T1_0 1 Tf
( can't be written just )Tj
/T1_2 1 Tf
(foo a, b)Tj
/T1_0 1 Tf
( or as )Tj
/T1_2 1 Tf
(foo\(\(a, b\)\))Tj
/T1_0 1 Tf
(.\) )Tj
0 -2.557 TD
(In general, you have to know where parentheses are needed and where they\ are not, which requires )Tj
0 -1.2 TD
(understanding Scheme's rules. Some parentheses indicate procedure calls,\ while others are just )Tj
T*
(delimiters of special forms. Luckily, the rules are simple; they should \become very clear in the next )Tj
T*
(chapter or two. )Tj
0 -2.557 TD
(The other thing to know about parentheses is that they have to match. Fo\r every opening parenthesis )Tj
0 -1.2 TD
(there has to be a closing parenthesis, and of course it must be in the r\ight place. )Tj
/T1_3 1 Tf
7 0 0 7 35.713 337.306 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
50 335.189 m
170.148 335.189 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 337.306 Tm
(Let Your Editor Help)Tj
0 0 0 rg
(: Editors Make Parenthesis Matching Easy )Tj
/T1_3 1 Tf
7 0 0 7 35.713 318.506 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 316.389 m
189.23 316.389 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 318.506 Tm
(Indenting Simple Things)Tj
0 0 0 rg
(: Procedure calls and simple control constructs )Tj
/T1_3 1 Tf
7 0 0 7 35.713 299.706 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 297.589 m
134.378 297.589 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 299.706 Tm
(Indenting cond)Tj
0 0 0 rg
(: Cond is unreadable without proper indenting )Tj
/T1_3 1 Tf
7 0 0 7 35.713 280.906 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 278.789 m
230.418 278.789 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 280.906 Tm
(Indenting Procedure Definitions)Tj
0 0 0 rg
( )Tj
ET
0.5 0.5 0.5 rg
10 246.13 m
10 248.13 l
602 248.13 l
601 247.13 l
11 247.13 l
11 247.13 l
h
f
0.875 0.875 0.875 rg
602 248.13 m
602 246.13 l
10 246.13 l
11 247.13 l
601 247.13 l
601 247.13 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 227.106 Tm
(Go to the )Tj
ET
65.608 224.989 m
88.162 224.989 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 227.106 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 224.989 m
143.378 224.989 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 227.106 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 224.989 m
174.486 224.989 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 227.106 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 224.989 m
200.932 224.989 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 227.106 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 224.989 m
343.634 224.989 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 227.106 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_24.html \(2 of 2\)11\/3/2006 8:54:35 PM)Tj
ET
EMC 

endstreamendobj1453 0 obj(An Introduction to Scheme and its Implementation - Parentheses and Indenting)endobj1454 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_24.html)/S 700 0 R>>endobj1455 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_24.html)endobj1456 0 obj(&ià,‹Ωªæ≠PÚ0àFû)endobj1457 0 obj<</TS(D:20061104045435)/ID 1456 0 R/CT(text/html)/O[1425 0 R 1439 0 R]/S/SPS/T 1453 0 R/TID 1459 0 R/SI 1458 0 R>>endobj1458 0 obj<</TS(D:20061104045435)/AU 1455 0 R>>endobj1459 0 obj(Ï„√˜ËˆY,z§¸eÇ„)endobj1460 0 obj<</Parent 710 0 R/Next 1486 0 R/Dest[1425 0 R/XYZ 0 792 null]/Prev 1422 0 R/SE 1424 0 R/Title(An Introduction to Scheme and its Implementation - Parentheses and Indenting)>>endobj1461 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1462 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 1463 0 R>>endobj1463 0 obj<</Annots 1466 0 R/Parent 1516 0 R/ID 1482 0 R/StructParents 48/Contents 1478 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1464 0 obj[1462 0 R]endobj1465 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1466 0 obj[1465 0 R 1467 0 R 1468 0 R 1469 0 R 1470 0 R 1472 0 R 1473 0 R 1474 0 R 1475 0 R 1476 0 R 1477 0 R]endobj1467 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1425 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_24.html)/S/URI>>/Border[0 0 0]>>endobj1468 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1489 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_26.html)/S/URI>>/Border[0 0 0]>>endobj1469 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1470 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1471 0 obj[1463 0 R/XYZ 0 731.2 null]endobj1472 0 obj<</Rect[10.0 695.8 175.69 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC26)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC26)/S/URI>>/Border[0 0 0]>>endobj1473 0 obj<</Rect[65.608 210.73 88.162 225.73]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1474 0 obj<</Rect[95.162 210.73 143.378 225.73]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1425 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_24.html)/S/URI>>/Border[0 0 0]>>endobj1475 0 obj<</Rect[150.378 210.73 174.486 225.73]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1489 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_26.html)/S/URI>>/Border[0 0 0]>>endobj1476 0 obj<</Rect[181.486 210.73 200.932 225.73]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1477 0 obj<</Rect[251.094 210.73 343.634 225.73]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1478 0 obj<</Length 4539>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Let Your Editor Help)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.176 w 
10 696.405 m
175.69 696.405 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 699.933 Tm
(Let Your Editor Help You)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.687 TD
(Matching parentheses is easy if you have a decent text editor. For examp\le, in )Tj
/T1_2 1 Tf
(vi)Tj
/T1_0 1 Tf
(, you can position the )Tj
0 -1.205 TD
(cursor over a parenthesis and hit )Tj
/T1_2 1 Tf
(%)Tj
/T1_0 1 Tf
(, and it will scan forward or backward \(from an opening or closing )Tj
0 -1.2 TD
(parenthesis, respectively\) to find the matching parenthesis and highlig\ht it, skipping over any matched )Tj
T*
(parenthesis pairs; it will warn you if no match is found. )Tj
0 -2.557 TD
(Most editors have a feature like this. Learn to use it. It's usually eas\y to get the opening parentheses )Tj
0 -1.2 TD
(right, and then if you're in doubt, use the editor to make sure you get \the closing parentheses in the right )Tj
T*
(place. )Tj
0 -2.557 TD
(Some editors, like Emacs, have special modes for editing Lisp and Scheme\. This can be helpful, but just )Tj
0 -1.2 TD
(helping match parentheses is the crucial thing for an editor for Scheme.\ One of the nice things about the )Tj
T*
(Emacs Scheme mode is that it will indent your code automatically if you \like, which will show you )Tj
T*
(whether your expressions nest the way they think you do--if you don't ge\t the parentheses right, the text )Tj
T*
(will look funny and tip you off to your error. )Tj
0 -2.562 TD
(\(One Emacs mode for Scheme is )Tj
/T1_2 1 Tf
(cmuscheme)Tj
/T1_0 1 Tf
(, which is available from the usual sources of Emacs )Tj
0 -1.2 TD
(mode code. It's just a set of Emacs Lisp routines that customizes Emacs \to "understand" Scheme syntax )Tj
0 -1.205 TD
(and help you format it. You use the Emacs Lisp package )Tj
/T1_2 1 Tf
(cmuscheme.el)Tj
/T1_0 1 Tf
(, and it gives you a handy )Tj
0 -1.2 TD
(Scheme editing mode. It's available from the Scheme Repository.\) )Tj
0 -2.557 TD
(Even without a special package, an editor can help you a lot. For exampl\e, most modes in Emacs )Tj
0 -1.2 TD
(automatically match parentheses, flashing an opening parentheses when yo\u type the corresponding )Tj
T*
(closing parenthesis. A few minutes figuring out how your editor matches \parentheses will save you a lot )Tj
T*
(of time. )Tj
ET
0.5 0.5 0.5 rg
10 234.13 m
10 236.13 l
602 236.13 l
601 235.13 l
11 235.13 l
11 235.13 l
h
f
0.875 0.875 0.875 rg
602 236.13 m
602 234.13 l
10 234.13 l
11 235.13 l
601 235.13 l
601 235.13 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 215.106 Tm
(Go to the )Tj
ET
0.706 w 
65.608 212.989 m
88.162 212.989 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 215.106 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 212.989 m
143.378 212.989 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 215.106 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 212.989 m
174.486 212.989 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 215.106 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 212.989 m
200.932 212.989 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 215.106 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 212.989 m
343.634 212.989 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 215.106 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_25.html11/3/2006 8:5\4:40 PM)Tj
ET
EMC 

endstreamendobj1479 0 obj(An Introduction to Scheme and its Implementation - Let Your Editor Help)endobj1480 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_25.html)/S 700 0 R>>endobj1481 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_25.html)endobj1482 0 obj(inƒ#;4”Z¡–ySeè)endobj1483 0 obj<</TS(D:20061104045440)/ID 1482 0 R/CT(text/html)/O[1463 0 R]/S/SPS/T 1479 0 R/TID 1485 0 R/SI 1484 0 R>>endobj1484 0 obj<</TS(D:20061104045440)/AU 1481 0 R>>endobj1485 0 obj(åZ⁄‰\\Cé˘B·UÀ s)endobj1486 0 obj<</Parent 710 0 R/Next 1512 0 R/Dest[1463 0 R/XYZ 0 792 null]/Prev 1460 0 R/SE 1462 0 R/Title(An Introduction to Scheme and its Implementation - Let Your Editor Help)>>endobj1487 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1488 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 1489 0 R>>endobj1489 0 obj<</Annots 1492 0 R/Parent 1516 0 R/ID 1508 0 R/StructParents 49/Contents 1504 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1490 0 obj[1488 0 R]endobj1491 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1492 0 obj[1491 0 R 1493 0 R 1494 0 R 1495 0 R 1496 0 R 1498 0 R 1499 0 R 1500 0 R 1501 0 R 1502 0 R 1503 0 R]endobj1493 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1463 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_25.html)/S/URI>>/Border[0 0 0]>>endobj1494 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1515 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_27.html)/S/URI>>/Border[0 0 0]>>endobj1495 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1496 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1497 0 obj[1489 0 R/XYZ 0 731.2 null]endobj1498 0 obj<</Rect[10.0 695.8 393.516 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC27)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC27)/S/URI>>/Border[0 0 0]>>endobj1499 0 obj<</Rect[65.608 642.0 88.162 657.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1500 0 obj<</Rect[95.162 642.0 143.378 657.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1463 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_25.html)/S/URI>>/Border[0 0 0]>>endobj1501 0 obj<</Rect[150.378 642.0 174.486 657.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1515 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_27.html)/S/URI>>/Border[0 0 0]>>endobj1502 0 obj<</Rect[181.486 642.0 200.932 657.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1503 0 obj<</Rect[251.094 642.0 343.634 657.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1504 0 obj<</Length 2421>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Indenting Simple Thin\gs)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.176 w 
10 696.405 m
393.516 696.405 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 699.933 Tm
(Indenting Procedure Calls and Simple Control Constructs)Tj
ET
0.5 0.5 0.5 rg
10 665.4 m
10 667.4 l
602 667.4 l
601 666.4 l
11 666.4 l
11 666.4 l
h
f
0.875 0.875 0.875 rg
602 667.4 m
602 665.4 l
10 665.4 l
11 666.4 l
601 666.4 l
601 666.4 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 646.3755 Tm
(Go to the )Tj
ET
0.706 w 
65.608 644.259 m
88.162 644.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 646.3755 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 644.259 m
143.378 644.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 646.3755 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 644.259 m
174.486 644.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 646.3755 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 644.259 m
200.932 644.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 646.3755 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 644.259 m
343.634 644.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 646.3755 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_26.html11/3/2006 8:5\4:45 PM)Tj
ET
EMC 

endstreamendobj1505 0 obj(An Introduction to Scheme and its Implementation - Indenting Simple Things)endobj1506 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_26.html)/S 700 0 R>>endobj1507 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_26.html)endobj1508 0 obj(∆GD†TH˙Ì˙ \(çs|.)endobj1509 0 obj<</TS(D:20061104045445)/ID 1508 0 R/CT(text/html)/O[1489 0 R]/S/SPS/T 1505 0 R/TID 1511 0 R/SI 1510 0 R>>endobj1510 0 obj<</TS(D:20061104045445)/AU 1507 0 R>>endobj1511 0 obj(å÷ õ	Ç|mU•V@F)endobj1512 0 obj<</Parent 710 0 R/Next 1539 0 R/Dest[1489 0 R/XYZ 0 792 null]/Prev 1486 0 R/SE 1488 0 R/Title(An Introduction to Scheme and its Implementation - Indenting Simple Things)>>endobj1513 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1514 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 1515 0 R>>endobj1515 0 obj<</Annots 1519 0 R/Parent 1633 0 R/ID 1535 0 R/StructParents 50/Contents 1531 0 R/PZ 1.03464/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 1287 0 R/T1_3 828 0 R/T1_4 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1516 0 obj<</Parent 1543 0 R/Count 5/Type/Pages/Kids[1398 0 R 1425 0 R 1439 0 R 1463 0 R 1489 0 R]>>endobj1517 0 obj[1514 0 R]endobj1518 0 obj<</Rect[63.4114 750.417 85.2103 764.915]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1519 0 obj[1518 0 R 1520 0 R 1521 0 R 1522 0 R 1523 0 R 1525 0 R 1526 0 R 1527 0 R 1528 0 R 1529 0 R 1530 0 R]endobj1520 0 obj<</Rect[91.9759 750.417 138.578 764.915]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1489 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_26.html)/S/URI>>/Border[0 0 0]>>endobj1521 0 obj<</Rect[145.343 750.417 168.644 764.915]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1542 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_28.html)/S/URI>>/Border[0 0 0]>>endobj1522 0 obj<</Rect[175.41 750.417 194.205 764.915]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1523 0 obj<</Rect[242.687 750.417 332.129 764.915]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1524 0 obj[1515 0 R/XYZ 0 732.633 null]endobj1525 0 obj<</Rect[9.66519 698.249 106.793 712.916]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC28)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC28)/S/URI>>/Border[0 0 0]>>endobj1526 0 obj<</Rect[63.4114 76.7728 85.2103 91.2706]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1527 0 obj<</Rect[91.9759 76.7728 138.578 91.2706]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1489 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_26.html)/S/URI>>/Border[0 0 0]>>endobj1528 0 obj<</Rect[145.343 76.7728 168.644 91.2706]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1542 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_28.html)/S/URI>>/Border[0 0 0]>>endobj1529 0 obj<</Rect[175.41 76.7728 194.205 91.2706]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1530 0 obj<</Rect[242.687 76.7728 332.129 91.2706]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1531 0 obj<</Length 4613>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.3013 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.6987 0 0 8.6987 18 780.3987 Tm
(An Introduction to Scheme and its Implementation - Indenting cond)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 9.6652 754.646 Tm
(Go to the )Tj
ET
0 0 1 RG
0.682 w 10 M 0 j 0 J []0 d 
63.411 752.6 m
85.21 752.6 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 63.4114 754.646 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
91.976 752.6 m
138.578 752.6 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 91.9759 754.646 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
145.343 752.6 m
168.644 752.6 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 145.3432 754.646 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
175.41 752.6 m
194.205 752.6 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 175.4097 754.646 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
242.687 752.6 m
332.129 752.6 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 242.6872 754.646 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
9.665 739.399 m
9.665 741.332 l
602.335 741.332 l
601.368 740.365 l
10.632 740.365 l
10.632 740.365 l
h
f
0.875 0.875 0.875 rg
602.335 741.332 m
602.335 739.399 l
9.665 739.399 l
10.632 740.365 l
601.368 740.365 l
601.368 740.365 l
h
f
1.137 w 
9.665 699.003 m
74.318 699.003 l
S
0.682 w 
74.318 700.367 m
106.793 700.367 l
S
0 0 1 rg
BT
/T1_1 1 Tf
13.5313 0 0 13.5313 9.6652 702.4128 Tm
(Indenting )Tj
/T1_2 1 Tf
(cond)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.7 TD
(Be careful about parentheses and indenting with )Tj
/T1_3 1 Tf
(cond)Tj
/T1_0 1 Tf
(. Notice that the expressions within a test-action )Tj
0 -1.205 TD
(clause are indented by only one character, but that's very significant. \Without that indenting, a )Tj
/T1_3 1 Tf
(cond)Tj
/T1_0 1 Tf
( is very )Tj
0 -1.2 TD
(hard to read. )Tj
0 -2.557 TD
(Suppose we replace the following awkward if expression with a )Tj
/T1_4 1 Tf
(cond)Tj
/T1_0 1 Tf
(. )Tj
/T1_3 1 Tf
0 -2.562 TD
(;; awkward if expression requiring begins to sequence actions in branche\s)Tj
0 -1.2 TD
(\(if \(a\))Tj
T*
(    \(begin \(b\))Tj
T*
(           \(c\)\))Tj
T*
(    \(begin \(e\))Tj
T*
(           \(f\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(We could write it like this: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(cond \(\(a\))Tj
0 -1.2 TD
(       \(b\))Tj
T*
(       \(c\)\))Tj
T*
(      \(else)Tj
T*
(       \(e\))Tj
T*
(       \(f\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Sometimes, when the clauses of a cond are small, a whole clause will be \written out horizontally. The above )Tj
0 -1.2 TD
(example is likely to be written like this: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(cond \(\(a\) \(b\) \(c\)\))Tj
0 -1.2 TD
(      \(else \(d\) \(e\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Also be careful about the parentheses around condition expressions. Noti\ce that the parentheses around )Tj
/T1_3 1 Tf
(\(a\))Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(are there because the condition is call to )Tj
/T1_3 1 Tf
(a)Tj
/T1_0 1 Tf
( with zero arguments, not because you always put parentheses )Tj
0 -1.205 TD
(around the condition expression. \(Notice that there are no parentheses \around )Tj
/T1_3 1 Tf
(#t)Tj
/T1_0 1 Tf
(, and there wouldn't be )Tj
0 -1.205 TD
(parentheses around )Tj
/T1_3 1 Tf
(a)Tj
/T1_0 1 Tf
( if we just wanted to test the value of the variable )Tj
/T1_3 1 Tf
(a)Tj
/T1_0 1 Tf
(, rather than call it and test the )Tj
0 -1.2 TD
(result.\) )Tj
ET
0.5 0.5 0.5 rg
9.665 99.389 m
9.665 101.322 l
602.335 101.322 l
601.368 100.356 l
10.632 100.356 l
10.632 100.356 l
h
f
0.875 0.875 0.875 rg
602.335 101.322 m
602.335 99.389 l
9.665 99.389 l
10.632 100.356 l
601.368 100.356 l
601.368 100.356 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 9.6652 81.0018 Tm
(Go to the )Tj
ET
63.411 78.956 m
85.21 78.956 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 63.4114 81.0018 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
91.976 78.956 m
138.578 78.956 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 91.9759 81.0018 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
145.343 78.956 m
168.644 78.956 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 145.3432 81.0018 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
175.41 78.956 m
194.205 78.956 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 175.4097 81.0018 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
242.687 78.956 m
332.129 78.956 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 242.6872 81.0018 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.3013 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.6987 0 0 8.6987 18 7.3987 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_27.html11/3/2006 8:5\4:59 PM)Tj
ET
EMC 

endstreamendobj1532 0 obj(An Introduction to Scheme and its Implementation - Indenting cond)endobj1533 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_27.html)/S 700 0 R>>endobj1534 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_27.html)endobj1535 0 obj(VÜg!M…ÿZ†∆’‚ò].)endobj1536 0 obj<</TS(D:20061104045459)/ID 1535 0 R/CT(text/html)/O[1515 0 R]/S/SPS/T 1532 0 R/TID 1538 0 R/SI 1537 0 R>>endobj1537 0 obj<</TS(D:20061104045459)/AU 1534 0 R>>endobj1538 0 obj(ûÜ&éT¶æù™•êe§\nn)endobj1539 0 obj<</Parent 710 0 R/Next 1567 0 R/Dest[1515 0 R/XYZ 0 792 null]/Prev 1512 0 R/SE 1514 0 R/Title(An Introduction to Scheme and its Implementation - Indenting cond)>>endobj1540 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1541 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 1542 0 R>>endobj1542 0 obj<</Annots 1547 0 R/Parent 1633 0 R/ID 1563 0 R/StructParents 51/Contents 1559 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1543 0 obj<</Parent 4701 0 R/Count 25/Type/Pages/Kids[1147 0 R 1247 0 R 1338 0 R 1399 0 R 1516 0 R]>>endobj1544 0 obj<</Parent 4701 0 R/Count 25/Type/Pages/Kids[751 0 R 750 0 R 842 0 R 953 0 R 1078 0 R]>>endobj1545 0 obj[1541 0 R]endobj1546 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1547 0 obj[1546 0 R 1548 0 R 1549 0 R 1550 0 R 1551 0 R 1553 0 R 1554 0 R 1555 0 R 1556 0 R 1557 0 R 1558 0 R]endobj1548 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1515 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_27.html)/S/URI>>/Border[0 0 0]>>endobj1549 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1570 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_29.html)/S/URI>>/Border[0 0 0]>>endobj1550 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1551 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1552 0 obj[1542 0 R/XYZ 0 731.2 null]endobj1553 0 obj<</Rect[10.0 695.8 222.366 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC29)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC29)/S/URI>>/Border[0 0 0]>>endobj1554 0 obj<</Rect[65.608 326.333 88.162 341.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1555 0 obj<</Rect[95.162 326.333 143.378 341.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1515 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_27.html)/S/URI>>/Border[0 0 0]>>endobj1556 0 obj<</Rect[150.378 326.333 174.486 341.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1570 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_29.html)/S/URI>>/Border[0 0 0]>>endobj1557 0 obj<</Rect[181.486 326.333 200.932 341.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1558 0 obj<</Rect[251.094 326.333 343.634 341.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1559 0 obj<</Length 3447>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Indenting Procedure D\efinitions)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.176 w 
10 696.405 m
222.366 696.405 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 699.933 Tm
(Indenting Procedure Definitions)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(As I hinted earlier, there's a special rule for indenting procedure defi\nitions. You generally indent the )Tj
0 -1.2 TD
(body of a procedure a few characters \(I use 3\), but you )Tj
/T1_2 1 Tf
(don't)Tj
/T1_0 1 Tf
( line the body expressions up directly under )Tj
T*
(the list of variable names. )Tj
0 -2.557 TD
(Don't do this: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define \(double x\))Tj
0 -1.2 TD
(        \(+ x x\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(If you do this, a procedure definition looks like a procedure call, or a\ normal variable definition. To )Tj
0 -1.2 TD
(make it clearer you're defining a procedure, do this: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define \(double x\))Tj
0 -1.2 TD
(   \(+ x x\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(This makes it clear that the )Tj
/T1_3 1 Tf
(\(double x\))Tj
/T1_0 1 Tf
( is a different kind of thing from )Tj
/T1_3 1 Tf
(\(+ x x\))Tj
/T1_0 1 Tf
(. The former )Tj
0 -1.2 TD
(declares how the procedure can be called, and the latter says what it wi\ll do. )Tj
ET
0.5 0.5 0.5 rg
10 349.733 m
10 351.733 l
602 351.733 l
601 350.733 l
11 350.733 l
11 350.733 l
h
f
0.875 0.875 0.875 rg
602 351.733 m
602 349.733 l
10 349.733 l
11 350.733 l
601 350.733 l
601 350.733 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 330.7082 Tm
(Go to the )Tj
ET
0.706 w 
65.608 328.591 m
88.162 328.591 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 330.7082 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 328.591 m
143.378 328.591 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 330.7082 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 328.591 m
174.486 328.591 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 330.7082 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 328.591 m
200.932 328.591 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 330.7082 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 328.591 m
343.634 328.591 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 330.7082 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_28.html11/3/2006 8:5\5:04 PM)Tj
ET
EMC 

endstreamendobj1560 0 obj(An Introduction to Scheme and its Implementation - Indenting Procedure Definitions)endobj1561 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_28.html)/S 700 0 R>>endobj1562 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_28.html)endobj1563 0 obj(ÏÑØ`	ìîë@$ ›˚˛€)endobj1564 0 obj<</TS(D:20061104045504)/ID 1563 0 R/CT(text/html)/O[1542 0 R]/S/SPS/T 1560 0 R/TID 1566 0 R/SI 1565 0 R>>endobj1565 0 obj<</TS(D:20061104045504)/AU 1562 0 R>>endobj1566 0 obj(ê¯–y5‰o`oÑPMyÕ√)endobj1567 0 obj<</Parent 710 0 R/Next 1597 0 R/Dest[1542 0 R/XYZ 0 792 null]/Prev 1539 0 R/SE 1541 0 R/Title(An Introduction to Scheme and its Implementation - Indenting Procedure Definitions)>>endobj1568 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1569 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 1570 0 R>>endobj1570 0 obj<</Annots 1573 0 R/Parent 1633 0 R/ID 1593 0 R/StructParents 52/Contents 1589 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1571 0 obj[1569 0 R]endobj1572 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1573 0 obj[1572 0 R 1574 0 R 1575 0 R 1576 0 R 1577 0 R 1579 0 R 1582 0 R 1583 0 R 1584 0 R 1585 0 R 1586 0 R 1587 0 R 1588 0 R]endobj1574 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1542 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_28.html)/S/URI>>/Border[0 0 0]>>endobj1575 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1600 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_30.html)/S/URI>>/Border[0 0 0]>>endobj1576 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1577 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1578 0 obj[1570 0 R/XYZ 0 731.2 null]endobj1579 0 obj<</Rect[10.0 693.431 268.558 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC30)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC30)/S/URI>>/Border[0 0 0]>>endobj1580 0 obj[1570 0 R/XYZ 0 671.815 null]endobj1581 0 obj[1570 0 R/XYZ 0 671.815 null]endobj1582 0 obj<</Rect[50.0 447.215 180.256 462.215]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Wg¬@ÉÆ'πæÓÎáøıÅSEC31)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_30.html#SEC31)/S/URI>>/Border[0 0 0]>>endobj1583 0 obj<</Rect[50.0 428.415 163.918 443.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Àz@ó"Mü‚~ÿ©aCSEC33)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_32.html#SEC33)/S/URI>>/Border[0 0 0]>>endobj1584 0 obj<</Rect[65.608 374.615 88.162 389.615]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1585 0 obj<</Rect[95.162 374.615 143.378 389.615]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1542 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_28.html)/S/URI>>/Border[0 0 0]>>endobj1586 0 obj<</Rect[150.378 374.615 174.486 389.615]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1600 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_30.html)/S/URI>>/Border[0 0 0]>>endobj1587 0 obj<</Rect[181.486 374.615 200.932 389.615]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1588 0 obj<</Rect[251.094 374.615 343.634 389.615]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1589 0 obj<</Length 3768>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Values are Pointers)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
268.558 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(All Values are Pointers to Objects)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(As I said earlier, all values are conceptually pointers to )Tj
/T1_2 1 Tf
(objects)Tj
/T1_0 1 Tf
( on a heap, and you don't ever have to )Tj
0 -1.2 TD
(explicitly free memory. )Tj
0 -2.557 TD
(By "object," I don't necessarily mean object in the object-oriented sens\e. I just mean )Tj
/T1_2 1 Tf
(data objects)Tj
/T1_0 1 Tf
( like )Tj
0 -1.2 TD
(Pascal records or C structs, which can be referenced via pointers and ma\y \(or may not\) hold state )Tj
T*
(information. )Tj
/T1_2 1 Tf
0 -2.557 TD
(Some)Tj
/T1_0 1 Tf
( versions of Scheme do have object systems for object-oriented programmi\ng. \(This includes our )Tj
0 -1.2 TD
(own RScheme system, where standard Scheme types are all classes in a uni\fied object system.\) In this )Tj
T*
(book, however, we use the word "object" in a broader sense, meaning an e\ntity that you can have a )Tj
T*
(pointer to. )Tj
/T1_3 1 Tf
7 0 0 7 35.713 451.5909 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
50 449.474 m
180.256 449.474 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 451.5909 Tm
(All Values are Pointers)Tj
0 0 0 rg
(: All Values are Pointers )Tj
/T1_3 1 Tf
7 0 0 7 35.713 432.7909 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 430.674 m
163.918 430.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 432.7909 Tm
(Objects on the Heap)Tj
0 0 0 rg
(: Objects on the Heap )Tj
ET
0.5 0.5 0.5 rg
10 398.015 m
10 400.015 l
602 400.015 l
601 399.015 l
11 399.015 l
11 399.015 l
h
f
0.875 0.875 0.875 rg
602 400.015 m
602 398.015 l
10 398.015 l
11 399.015 l
601 399.015 l
601 399.015 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 378.9909 Tm
(Go to the )Tj
ET
65.608 376.874 m
88.162 376.874 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 378.9909 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 376.874 m
143.378 376.874 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 378.9909 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 376.874 m
174.486 376.874 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 378.9909 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 376.874 m
200.932 376.874 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 378.9909 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 376.874 m
343.634 376.874 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 378.9909 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_29.html11/3/2006 8:5\5:17 PM)Tj
ET
EMC 

endstreamendobj1590 0 obj(An Introduction to Scheme and its Implementation - Values are Pointers)endobj1591 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_29.html)/S 700 0 R>>endobj1592 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_29.html)endobj1593 0 obj(ÚQô\n!aêÅ?ña,÷ﬁ)endobj1594 0 obj<</TS(D:20061104045517)/ID 1593 0 R/CT(text/html)/O[1570 0 R]/S/SPS/T 1590 0 R/TID 1596 0 R/SI 1595 0 R>>endobj1595 0 obj<</TS(D:20061104045517)/AU 1592 0 R>>endobj1596 0 obj(4Ó˚“3é¢™ö{éM&)endobj1597 0 obj<</Parent 710 0 R/Next 1629 0 R/Dest[1570 0 R/XYZ 0 792 null]/Prev 1567 0 R/SE 1569 0 R/Title(An Introduction to Scheme and its Implementation - Values are Pointers)>>endobj1598 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1599 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 1610 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 1600 0 R>>endobj1600 0 obj<</Annots 1603 0 R/Parent 1633 0 R/ID 1625 0 R/StructParents 53/Contents 1620 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1601 0 obj[1599 0 R]endobj1602 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1603 0 obj[1602 0 R 1604 0 R 1605 0 R 1606 0 R 1607 0 R 1609 0 R]endobj1604 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1570 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_29.html)/S/URI>>/Border[0 0 0]>>endobj1605 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1632 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_31.html)/S/URI>>/Border[0 0 0]>>endobj1606 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1607 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1608 0 obj[1600 0 R/XYZ 0 731.2 null]endobj1609 0 obj<</Rect[10.0 695.8 161.732 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC31)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC31)/S/URI>>/Border[0 0 0]>>endobj1610 0 obj<</Annots 1614 0 R/Parent 1633 0 R/ID 1625 0 R/StructParents 54/Contents 1621 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1611 0 obj[1599 0 R]endobj1612 0 obj[1610 0 R/XYZ 0 425.706 null]endobj1613 0 obj<</Rect[512.964 421.33 529.288 436.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_foot.html#FOOT2)/S/URI>>/Border[0 0 0]>>endobj1614 0 obj[1613 0 R 1615 0 R 1616 0 R 1617 0 R 1618 0 R 1619 0 R]endobj1615 0 obj<</Rect[65.608 367.53 88.162 382.53]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1616 0 obj<</Rect[95.162 367.53 143.378 382.53]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1570 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_29.html)/S/URI>>/Border[0 0 0]>>endobj1617 0 obj<</Rect[150.378 367.53 174.486 382.53]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1632 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_31.html)/S/URI>>/Border[0 0 0]>>endobj1618 0 obj<</Rect[181.486 367.53 200.932 382.53]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1619 0 obj<</Rect[251.094 367.53 343.634 382.53]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1620 0 obj<</Length 5108>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - All Values are Pointe\rs)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.176 w 
10 696.405 m
161.732 696.405 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 699.933 Tm
(All Values are Pointers)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
([ some of this needs to be moved up: ] )Tj
0 -2.557 TD
(Conceptually, all Scheme objects are allocated on the heap, and referred\ to via pointers. This actually )Tj
0 -1.2 TD
(makes life simple, because you don't have to worry about whether you sho\uld dereference a pointer )Tj
0 -1.2 TD
(when you want to use a value--you always do. Since pointer dereferencing\ is uniform, procedures )Tj
/T1_2 1 Tf
0 -1.2 TD
(always)Tj
/T1_0 1 Tf
( dereference a pointer to a value when they really use the value, and yo\u never have to explicitly )Tj
T*
(force the dereferencing. )Tj
0 -2.562 TD
(For example, the predefined Scheme procedure )Tj
/T1_3 1 Tf
(+)Tj
/T1_0 1 Tf
( takes two pointers to numbers, and automatically )Tj
0 -1.2 TD
(dereferences both pointers before doing the addition. It returns a point\er to the number that's the result of )Tj
T*
(the addition. )Tj
0 -2.562 TD
(So when we evaluate the expression )Tj
/T1_3 1 Tf
(\(+ 2 3\))Tj
/T1_0 1 Tf
( to add two to three, we are taking a pointer to the integer )Tj
/T1_3 1 Tf
0 -1.205 TD
(2)Tj
/T1_0 1 Tf
( and a pointer to integer )Tj
/T1_3 1 Tf
(3)Tj
/T1_0 1 Tf
(, and passing those as arguments to the procedure )Tj
/T1_3 1 Tf
(+)Tj
/T1_0 1 Tf
(. )Tj
/T1_3 1 Tf
(+)Tj
/T1_0 1 Tf
( returns a pointer to the )Tj
0 -1.205 TD
(integer )Tj
/T1_3 1 Tf
(5)Tj
/T1_0 1 Tf
(. We can nest expressions, e.g., )Tj
/T1_3 1 Tf
(\(* \(+ 2 3\) 6\))Tj
/T1_0 1 Tf
(, so that the pointer to five is passed, in turn, )Tj
0 -1.205 TD
(to the procedure )Tj
/T1_3 1 Tf
(*)Tj
/T1_0 1 Tf
(. Since these functions all accept pointers as arguments and return poin\ters as values, )Tj
0 -1.2 TD
(you can just ignore the pointers, and write arithmetic expressions the w\ay you would in any other )Tj
T*
(language. )Tj
0 -2.557 TD
(When you think about it, it doesn't make any sense to change the value o\f an integer, in a mathematical )Tj
0 -1.205 TD
(sense. For example, what would it mean to change the integer )Tj
/T1_3 1 Tf
(6)Tj
/T1_0 1 Tf
('s value to be )Tj
/T1_3 1 Tf
(7)Tj
/T1_0 1 Tf
(? It wouldn't mean )Tj
0 -1.205 TD
(anything sensible, for sure. )Tj
/T1_3 1 Tf
(6)Tj
/T1_0 1 Tf
( is a unique, abstract mathematical object that doesn't have any state t\hat )Tj
T*
(can be changed---)Tj
/T1_3 1 Tf
(6)Tj
/T1_0 1 Tf
( is )Tj
/T1_3 1 Tf
(6)Tj
/T1_0 1 Tf
(, and behaves like )Tj
/T1_3 1 Tf
(6)Tj
/T1_0 1 Tf
(, forever. )Tj
0 -2.557 TD
(What's going on in conventional programming languages is )Tj
/T1_2 1 Tf
(not)Tj
/T1_0 1 Tf
( really changing the value of an integer--)Tj
0 -1.2 TD
(it's replacing one \(copy of an\) integer value with \(a copy of\) anoth\er. That's because most programming )Tj
T*
(languages have both pointer semantics \(for pointer variables\) and )Tj
/T1_2 1 Tf
(value)Tj
/T1_0 1 Tf
( semantics \(for nonpointer )Tj
T*
(variables, like integers\). You make multiple copies of values, and then\ clobber the copies when you )Tj
T*
(perform an assignment. )Tj
0 -2.557 TD
(In Scheme, we don't need to clobber the value of an integer, because we \get the effect we want by )Tj
0 -1.2 TD
(replacing pointers with other pointers. An integer in Scheme is a unique\ entity, just as it is in )Tj
T*
(mathematics. We don't have multiple copies of a particular number, just \multiple references to it. )Tj
T*
(\(Actually, Scheme's treatment of numbers is not quite this simple and p\retty, for efficiency reasons I'll )Tj
T*
(explain later, but it's close.\) )Tj
0 -2.557 TD
(As we'll see later, an implementation is free to optimize away these poi\nters if it doesn't affect the )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_30.html \(1 of 2\)11\/3/2006 8:55:22 PM)Tj
ET
EMC 

endstreamendobj1621 0 obj<</Length 3461>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - All Values are Pointe\rs)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(programmer's view of things--but when you're trying to understand a prog\ram, you should always think )Tj
0 -1.2 TD
(of values as pointers to objects. )Tj
0 -2.557 TD
(The uniform use of pointers makes lots of things simpler. In C or Pascal\, you have to be careful whether )Tj
0 -1.2 TD
(you're dealing with a raw value or a pointer. If you have a pointer and \you need the actual value, you )Tj
0 -1.205 TD
(have to explictly dereference the pointer \(e.g., with C's prefix operat\or )Tj
/T1_1 1 Tf
(*)Tj
/T1_0 1 Tf
(, or Pascal's postfix operator )Tj
/T1_1 1 Tf
(^)Tj
/T1_0 1 Tf
(\). )Tj
0 -1.205 TD
(If you have a value and you need a pointer to it, you have to take its a\ddress \(e.g., with C's prefix )Tj
/T1_1 1 Tf
(&)Tj
/T1_0 1 Tf
( )Tj
T*
(operator, or Pascal's prefix operator )Tj
/T1_1 1 Tf
(^)Tj
/T1_0 1 Tf
(\). )Tj
0 -2.557 TD
(In Scheme, none of that mess is necessary. User-defined routines pass po\inters around, consistently, and )Tj
0 -1.205 TD
(when they bottom out into predefined routines \(like the built-in )Tj
/T1_1 1 Tf
(+)Tj
/T1_0 1 Tf
( procedure or )Tj
/T1_1 1 Tf
(set!)Tj
/T1_0 1 Tf
( special form\) )Tj
0 -1.2 TD
(those low-level built-in operations do any dereferencing that's necessar\y. )Tj
0 -2.557 TD
(\(Of course, when traversing lists and the like, the programmer has to a\sk for pointers to be dereferenced, )Tj
0 -1.2 TD
(but from the programmer's point of view, that just means grabbing anothe\r pointer value out of a field of )Tj
T*
(an object you already have a pointer to.\) )Tj
0 -2.557 TD
(It is sometimes said that languages like Scheme \(and Lisp, Smalltalk, E\iffel, and Java\) "don't have )Tj
0 -1.2 TD
(pointers." It's at least as reasonable to say that the opposite is true-\-everything's a pointer. What they )Tj
T*
(don't have is a distinction between pointers and nonpointers that you ha\ve to worry about.)Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
512.964 423.589 m
529.288 423.589 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 512.964 425.706 Tm
(\(2\))Tj
0 0 0 rg
( )Tj
ET
0.5 0.5 0.5 rg
10 390.93 m
10 392.93 l
602 392.93 l
601 391.93 l
11 391.93 l
11 391.93 l
h
f
0.875 0.875 0.875 rg
602 392.93 m
602 390.93 l
10 390.93 l
11 391.93 l
601 391.93 l
601 391.93 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 371.906 Tm
(Go to the )Tj
ET
65.608 369.789 m
88.162 369.789 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 371.906 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 369.789 m
143.378 369.789 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 371.906 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 369.789 m
174.486 369.789 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 371.906 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 369.789 m
200.932 369.789 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 371.906 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 369.789 m
343.634 369.789 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 371.906 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_30.html \(2 of 2\)11\/3/2006 8:55:22 PM)Tj
ET
EMC 

endstreamendobj1622 0 obj(An Introduction to Scheme and its Implementation - All Values are Pointers)endobj1623 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_30.html)/S 700 0 R>>endobj1624 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_30.html)endobj1625 0 obj(Wg¬@ÉÆ'πæÓÎáøıÅ)endobj1626 0 obj<</TS(D:20061104045522)/ID 1625 0 R/CT(text/html)/O[1600 0 R 1610 0 R]/S/SPS/T 1622 0 R/TID 1628 0 R/SI 1627 0 R>>endobj1627 0 obj<</TS(D:20061104045522)/AU 1624 0 R>>endobj1628 0 obj(GÎ·Ñ¬g@‚˝~ø5Qπ)endobj1629 0 obj<</Parent 710 0 R/Next 1662 0 R/Dest[1600 0 R/XYZ 0 792 null]/Prev 1597 0 R/SE 1599 0 R/Title(An Introduction to Scheme and its Implementation - All Values are Pointers)>>endobj1630 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1631 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 1645 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 1632 0 R>>endobj1632 0 obj<</Annots 1636 0 R/Parent 1726 0 R/ID 1658 0 R/StructParents 55/Contents 1653 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1633 0 obj<</Parent 2059 0 R/Count 5/Type/Pages/Kids[1515 0 R 1542 0 R 1570 0 R 1600 0 R 1610 0 R]>>endobj1634 0 obj[1631 0 R]endobj1635 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1636 0 obj[1635 0 R 1637 0 R 1638 0 R 1639 0 R 1640 0 R 1642 0 R]endobj1637 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1600 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_30.html)/S/URI>>/Border[0 0 0]>>endobj1638 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1665 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_32.html)/S/URI>>/Border[0 0 0]>>endobj1639 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1640 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1641 0 obj[1632 0 R/XYZ 0 731.2 null]endobj1642 0 obj<</Rect[10.0 695.8 360.854 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC32)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC32)/S/URI>>/Border[0 0 0]>>endobj1643 0 obj[1632 0 R/XYZ 0 674.4 null]endobj1644 0 obj[1632 0 R/XYZ 0 119.2 null]endobj1645 0 obj<</Annots 1648 0 R/Parent 1726 0 R/ID 1658 0 R/StructParents 56/Contents 1654 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1646 0 obj[1631 0 R]endobj1647 0 obj<</Rect[65.608 611.6 88.162 626.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1648 0 obj[1647 0 R 1649 0 R 1650 0 R 1651 0 R 1652 0 R]endobj1649 0 obj<</Rect[95.162 611.6 143.378 626.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1600 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_30.html)/S/URI>>/Border[0 0 0]>>endobj1650 0 obj<</Rect[150.378 611.6 174.486 626.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1665 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_32.html)/S/URI>>/Border[0 0 0]>>endobj1651 0 obj<</Rect[181.486 611.6 200.932 626.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1652 0 obj<</Rect[251.094 611.6 343.634 626.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1653 0 obj<</Length 4547>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Immediate Values)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.176 w 
10 696.405 m
360.854 696.405 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 699.933 Tm
(Most Implementations Optimize Away Many Pointers)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(You might think that making every value a pointer to an object would be \expensive, because you'd have )Tj
0 -1.2 TD
(to have space for all of the pointers as well as the things they point t\o, and you'd have to use extra )Tj
T*
(instructions to access things via pointers. )Tj
0 -2.557 TD
(Everything's a pointer at the language level--i.e., from the programmer'\s point of view--but a Scheme )Tj
0 -1.2 TD
(system doesn't actually have to represent things the way they appear at \the languages level. )Tj
0 -2.557 TD
(Most Scheme implementations optimize away a lot of pointers. For example\, it's inefficient to actually )Tj
0 -1.2 TD
(represent integer values as pointers to integer objects on the heap. Sch\eme implementations therefore )Tj
T*
(use tricks to represent integers without really using pointers. \(Again,\ keep in mind that this is just an )Tj
T*
(implementation trick that's hidden from the programmer. Integer values h\ave the semantics of pointers, )Tj
T*
(even if they're represented differently from other things.\) )Tj
0 -2.557 TD
(Rather than putting integer values on the heap, and then passing around \pointers to them, most )Tj
0 -1.2 TD
(implementations put the actual integer bit pattern directly into variabl\es--after all, a reasonable-sized )Tj
T*
(integer will fit in a machine word. )Tj
0 -2.557 TD
(A short value \(like a normal integer\) stored directly into a variable \is called an )Tj
/T1_2 1 Tf
(immediate value)Tj
/T1_0 1 Tf
(, in )Tj
0 -1.2 TD
(contrast to pointers which are used to refer to objects indirectly. )Tj
0 -2.557 TD
(The problem with putting integers or other short values into variables i\s that Scheme has to tell them )Tj
0 -1.2 TD
(apart from each other, and from pointers which might have the same bit p\atterns. )Tj
0 -2.557 TD
(The solution to this is )Tj
/T1_2 1 Tf
(tagging)Tj
/T1_0 1 Tf
(. The value in each variable actually has a few bits devoted to a )Tj
/T1_2 1 Tf
(type tag)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(which says what kind of thing it is--e.g., whether it's a pointer or not\. The use of a few bits for a tag )Tj
T*
(slightly reduces the amount of storage available for the actual value, b\ut as we'll see next, that usually )Tj
T*
(isn't a problem. )Tj
0 -2.557 TD
(It might seem that storing integer bit patterns directly in variables wo\uld break the abstraction that )Tj
0 -1.2 TD
(Scheme is supposed to present--the illusion that all values are pointers\ to objects on the heap. That's not )Tj
T*
(so, though, because the language enforces restrictions that keep program\mers from seeing the difference. )Tj
0 -2.557 TD
(In the case of numbers and a few other types, you can't change the state\ of the object itself. There's no )Tj
0 -1.2 TD
(way to side-effect an integer object and make it behave differently. We \say that integers are )Tj
/T1_2 1 Tf
(immutable)Tj
/T1_0 1 Tf
(, i.)Tj
0 -1.2 TD
(e., you can't )Tj
/T1_2 1 Tf
(mutate)Tj
/T1_0 1 Tf
( \(change\) them. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_31.html \(1 of 2\)11\/3/2006 8:55:27 PM)Tj
ET
EMC 

endstreamendobj1654 0 obj<</Length 2008>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Immediate Values)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(If integers were actually allocated on the heap and referred to via poin\ters, and if you )Tj
/T1_1 1 Tf
(could)Tj
/T1_0 1 Tf
( change the )Tj
0 -1.2 TD
(integer's value, then that change would be visible through other pointer\s to the integer. )Tj
0 -2.557 TD
(\(That doesn't mean that a variable's value can't be one integer at one \time, and another integer at )Tj
0 -1.2 TD
(another--the variable's value is really a pointer to an integer, not the\ integer itself, and you're really just )Tj
T*
(replacing a pointer to one integer with a pointer to another integer.\) \)Tj
ET
0.5 0.5 0.5 rg
10 635 m
10 637 l
602 637 l
601 636 l
11 636 l
11 636 l
h
f
0.875 0.875 0.875 rg
602 637 m
602 635 l
10 635 l
11 636 l
601 636 l
601 636 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 615.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 613.859 m
88.162 613.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 615.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 613.859 m
143.378 613.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 615.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 613.859 m
174.486 613.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 615.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 613.859 m
200.932 613.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 615.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 613.859 m
343.634 613.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 615.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_31.html \(2 of 2\)11\/3/2006 8:55:27 PM)Tj
ET
EMC 

endstreamendobj1655 0 obj(An Introduction to Scheme and its Implementation - Immediate Values)endobj1656 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_31.html)/S 700 0 R>>endobj1657 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_31.html)endobj1658 0 obj(/@é∆É^x‚ÒW5V|)endobj1659 0 obj<</TS(D:20061104045527)/ID 1658 0 R/CT(text/html)/O[1632 0 R 1645 0 R]/S/SPS/T 1655 0 R/TID 1661 0 R/SI 1660 0 R>>endobj1660 0 obj<</TS(D:20061104045527)/AU 1657 0 R>>endobj1661 0 obj(Ω{Ÿ˙ÔG\(V/\rî‘ˇpt◊)endobj1662 0 obj<</Parent 710 0 R/Next 1694 0 R/Dest[1632 0 R/XYZ 0 792 null]/Prev 1629 0 R/SE 1631 0 R/Title(An Introduction to Scheme and its Implementation - Immediate Values)>>endobj1663 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1664 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 1677 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 1665 0 R>>endobj1665 0 obj<</Annots 1668 0 R/Parent 1726 0 R/ID 1690 0 R/StructParents 57/Contents 1685 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1666 0 obj[1664 0 R]endobj1667 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1668 0 obj[1667 0 R 1669 0 R 1670 0 R 1671 0 R 1672 0 R 1674 0 R]endobj1669 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1632 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_31.html)/S/URI>>/Border[0 0 0]>>endobj1670 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1697 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_33.html)/S/URI>>/Border[0 0 0]>>endobj1671 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1672 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1673 0 obj[1665 0 R/XYZ 0 731.2 null]endobj1674 0 obj<</Rect[10.0 695.8 145.366 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC33)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC33)/S/URI>>/Border[0 0 0]>>endobj1675 0 obj[1665 0 R/XYZ 0 674.4 null]endobj1676 0 obj[1665 0 R/XYZ 0 396.53 null]endobj1677 0 obj<</Annots 1680 0 R/Parent 1726 0 R/ID 1690 0 R/StructParents 58/Contents 1686 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1678 0 obj[1664 0 R]endobj1679 0 obj<</Rect[65.608 313.593 88.162 328.593]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1680 0 obj[1679 0 R 1681 0 R 1682 0 R 1683 0 R 1684 0 R]endobj1681 0 obj<</Rect[95.162 313.593 143.378 328.593]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1632 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_31.html)/S/URI>>/Border[0 0 0]>>endobj1682 0 obj<</Rect[150.378 313.593 174.486 328.593]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1697 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_33.html)/S/URI>>/Border[0 0 0]>>endobj1683 0 obj<</Rect[181.486 313.593 200.932 328.593]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1684 0 obj<</Rect[251.094 313.593 343.634 328.593]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1685 0 obj<</Length 4284>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Objects on the Heap)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.176 w 
10 696.405 m
145.366 696.405 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 699.933 Tm
(Objects on the Heap)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(Most Scheme objects only have fields that are general-purpose )Tj
/T1_2 1 Tf
(value cells)Tj
/T1_0 1 Tf
(---any field can hold any )Tj
0 -1.2 TD
(Scheme value, whether it's a tagged immediate value or a tagged pointer \to another heap-allocated )Tj
T*
(object. \(Of course, conceptually they're all pointers, so the type of a\ field is just "pointer to anything."\) )Tj
0 -2.557 TD
(So, for example, a )Tj
/T1_2 1 Tf
(pair)Tj
/T1_0 1 Tf
( \(also known in Lisp terminology as a "cons cell"\) is a heap-allocated\ object with )Tj
0 -1.2 TD
(two fields. Either field can hold any kind of value, such as a number, a\ text character, a boolean, or a )Tj
T*
(pointer to another heap object. )Tj
0 -2.562 TD
(The first field of a pair is called the )Tj
/T1_3 1 Tf
(car)Tj
/T1_0 1 Tf
( field, and the second field is called the )Tj
/T1_3 1 Tf
(cdr)Tj
/T1_0 1 Tf
( field. These are )Tj
0 -1.2 TD
(among the dumbest names for anything in all of computer science. \(They \are just a historical artifact of )Tj
T*
(the first Lisp implementation and the machine it ran on.\) )Tj
0 -2.562 TD
(Pairs can be created using the procedure )Tj
/T1_3 1 Tf
(cons)Tj
/T1_0 1 Tf
(. For example, to create a pair with the number 22 as the )Tj
0 -1.205 TD
(value of its )Tj
/T1_3 1 Tf
(car)Tj
/T1_0 1 Tf
( field, and the number 15 as the value of its )Tj
/T1_3 1 Tf
(cdr)Tj
/T1_0 1 Tf
( field, you can write the procedure call )Tj
/T1_3 1 Tf
0 -1.205 TD
(\(cons 22 15\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(The fields of a pair are like variable bindings, in that they can hold a\ny kind of Scheme value. Both )Tj
0 -1.2 TD
(bindings and fields are called )Tj
/T1_2 1 Tf
(value cells)Tj
/T1_0 1 Tf
(---i.e., they're places you can put any kind of value. )Tj
0 -2.557 TD
(In most implementations, each heap-allocated object has a hidden "header\" field that you, as a Scheme )Tj
0 -1.2 TD
(programmer, are not supposed to know about. This extra field holds type \information, saying exactly )Tj
T*
(what kind of heap allocated object it is. So, laid out in memory, the pa\ir looks something like this: )Tj
/T1_3 1 Tf
0 -2.562 TD
(        +-----------+)Tj
0 -1.2 TD
(  header| <PAIR-ID> |)Tj
T*
(        +===========+)Tj
T*
(     car|     +-----+----->22)Tj
T*
(        +-----------+)Tj
T*
(     cdr|     +-----+----->15)Tj
T*
(        +-----------+)Tj
/T1_0 1 Tf
0 -2.557 TD
(In this case, the )Tj
/T1_3 1 Tf
(car)Tj
/T1_0 1 Tf
( field of the pair \(cons cell\) holds the integer )Tj
/T1_3 1 Tf
(22)Tj
/T1_0 1 Tf
(, and the cdr field holds the integer )Tj
/T1_3 1 Tf
0 -1.205 TD
(15)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(The values stored in the fields of the pair are drawn as arrows, because\ they are pointers to the numbers )Tj
0 -1.2 TD
(22 and 15. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_32.html \(1 of 2\)11\/3/2006 8:55:32 PM)Tj
ET
EMC 

endstreamendobj1686 0 obj<</Length 3249>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Objects on the Heap)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 750.5712 Tm
(\(The actual representation of these values might be a 30-bit binary num\ber with a two-bit tag field used )Tj
0 -1.2 TD
(to distinguish integers from real pointers, but you don't have to worry \about that.\) )Tj
0 -2.562 TD
(Scheme provides a built-in procedure )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( to get the value of the car field of a pair, and )Tj
/T1_1 1 Tf
(set-car!)Tj
/T1_0 1 Tf
( to )Tj
0 -1.205 TD
(set that field's value. Likewise there are functions )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(set-cdr!)Tj
/T1_0 1 Tf
( to get and set the )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
( field's )Tj
0 -1.2 TD
(values. )Tj
0 -2.562 TD
(Suppose we have a top-level variable binding for the variable )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(, and its value is a pointer to the above )Tj
0 -1.2 TD
(pair. We would draw that situation something like this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(                                       +---------+ )Tj
0 -1.2 TD
(              +---------+        header| <PAIR>  |)Tj
T*
(          foo |    *----+------------->+=========+)Tj
T*
(              +---------+           car|    *----+---->22)Tj
T*
(                                       +---------+)Tj
T*
(                                    cdr|    *----+---->15)Tj
T*
(                                       +---------+)Tj
/T1_0 1 Tf
0 -2.552 TD
(Most other objects in Scheme are represented similarly. For example, a v\ector \(one-dimensional array\) )Tj
0 -1.2 TD
(is typically represented as a linear array of value cells, which can hol\d any kind of value. )Tj
0 -2.557 TD
(Even objects that aren't actually represented like this can be )Tj
/T1_2 1 Tf
(thought of)Tj
/T1_0 1 Tf
( this way, since conceptually, )Tj
0 -1.2 TD
(everything's on the heap and referred to via a pointer. )Tj
ET
0.5 0.5 0.5 rg
10 336.993 m
10 338.993 l
602 338.993 l
601 337.993 l
11 337.993 l
11 337.993 l
h
f
0.875 0.875 0.875 rg
602 338.993 m
602 336.993 l
10 336.993 l
11 337.993 l
601 337.993 l
601 337.993 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 317.969 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 315.852 m
88.162 315.852 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 317.969 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 315.852 m
143.378 315.852 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 317.969 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 315.852 m
174.486 315.852 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 317.969 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 315.852 m
200.932 315.852 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 317.969 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 315.852 m
343.634 315.852 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 317.969 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_32.html \(2 of 2\)11\/3/2006 8:55:32 PM)Tj
ET
EMC 

endstreamendobj1687 0 obj(An Introduction to Scheme and its Implementation - Objects on the Heap)endobj1688 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_32.html)/S 700 0 R>>endobj1689 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_32.html)endobj1690 0 obj(Àz@ó"Mü‚~ÿ©aC)endobj1691 0 obj<</TS(D:20061104045532)/ID 1690 0 R/CT(text/html)/O[1665 0 R 1677 0 R]/S/SPS/T 1687 0 R/TID 1693 0 R/SI 1692 0 R>>endobj1692 0 obj<</TS(D:20061104045532)/AU 1689 0 R>>endobj1693 0 obj(˝Û‡ ñŸÓt\)OÙä™cO‹)endobj1694 0 obj<</Parent 710 0 R/Next 1722 0 R/Dest[1665 0 R/XYZ 0 792 null]/Prev 1662 0 R/SE 1664 0 R/Title(An Introduction to Scheme and its Implementation - Objects on the Heap)>>endobj1695 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1696 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 1697 0 R>>endobj1697 0 obj<</Annots 1700 0 R/Parent 1726 0 R/ID 1718 0 R/StructParents 59/Contents 1714 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1698 0 obj[1696 0 R]endobj1699 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1700 0 obj[1699 0 R 1701 0 R 1702 0 R 1703 0 R 1704 0 R 1706 0 R 1709 0 R 1710 0 R 1711 0 R 1712 0 R 1713 0 R]endobj1701 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1665 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_32.html)/S/URI>>/Border[0 0 0]>>endobj1702 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1725 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_34.html)/S/URI>>/Border[0 0 0]>>endobj1703 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1704 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1705 0 obj[1697 0 R/XYZ 0 731.2 null]endobj1706 0 obj<</Rect[10.0 693.431 324.208 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC34)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC34)/S/URI>>/Border[0 0 0]>>endobj1707 0 obj[1697 0 R/XYZ 0 671.815 null]endobj1708 0 obj[1697 0 R/XYZ 0 465.748 null]endobj1709 0 obj<</Rect[65.608 157.813 88.162 172.813]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1710 0 obj<</Rect[95.162 157.813 143.378 172.813]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1665 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_32.html)/S/URI>>/Border[0 0 0]>>endobj1711 0 obj<</Rect[150.378 157.813 174.486 172.813]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1725 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_34.html)/S/URI>>/Border[0 0 0]>>endobj1712 0 obj<</Rect[181.486 157.813 200.932 172.813]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1713 0 obj<</Rect[251.094 157.813 343.634 172.813]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1714 0 obj<</Length 5176>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Automatic Memory Mana\gement)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
324.208 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Scheme Reclaims Memory Automatically)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(In languages like C or Pascal, data objects may be allocated in several \ways. \(Recall that by "objects" I )Tj
0 -1.2 TD
(just mean data objects like records.\) They may be allocated statically \\(as in the case of global variables\), )Tj
T*
(or on an activation stack as part of a procedure activation record \(as \in the case of local variables\), or )Tj
0 -1.205 TD
(dynamically allocated on the heap at run time using an alloction routine\ like )Tj
/T1_2 1 Tf
(malloc)Tj
/T1_0 1 Tf
( or )Tj
/T1_2 1 Tf
(new)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Scheme is simpler--all objects are allocated on the heap, and referred t\o via pointers. The Scheme heap )Tj
0 -1.2 TD
(is )Tj
/T1_3 1 Tf
(garbage collected)Tj
/T1_0 1 Tf
(, meaning that the Scheme system automatically cleans up after you. Ever\y now and )Tj
T*
(then, the system figures out which objects aren't in use anymore, and re\claims their storage. \(This )Tj
T*
(determination is very conservative and safe--the collector will never ta\ke back any object that your )Tj
T*
(program holds a pointer to, or might reach via any path of pointer trave\rsals. Don't be afraid that the )Tj
T*
(collector will eat objects you still care about while you're not looking\!\) )Tj
0 -2.557 TD
(The use of garbage collection supports the abstraction of )Tj
/T1_3 1 Tf
(indefinite extent)Tj
/T1_0 1 Tf
(. That means that all objects )Tj
0 -1.2 TD
(conceptually live forever, or at least as long as they might matter to t\he program--there's no concept \(at )Tj
T*
(the language level\) of reusing memory. From the point of view of a runn\ing program, memory is )Tj
T*
(infinite--it can keep allocating objects indefinitely, without ever reus\ing their space. )Tj
0 -2.557 TD
(Of course, this abstraction breaks down if there really isn't enough mem\ory for what you're trying to do. )Tj
0 -1.2 TD
(If you really try to create data structures that are bigger than the ava\ilable memory, you'll run out. )Tj
T*
(Garbage collection can't give you memory you don't have. )Tj
0 -2.557 TD
(Some people think that garbage collection is expensive in time and/or sp\ace. While garbage collection is )Tj
0 -1.2 TD
(not free, it is much cheaper than is generally believed. Some people hav\e also had bad experiences with )Tj
0 -1.2 TD
(systems that stop for significant periods to collect garbage, but modern\ GC's can solve this problem, too. )Tj
T*
(\(If you're interested in how efficient and nondisruptive garbage collec\tors are implemented, a good place )Tj
0 -1.205 TD
(to start is my GC survey paper, available from my research group's web s\ite at )Tj
/T1_2 1 Tf
(http://www.cs.)Tj
T*
(utexas.edu/users/oops)Tj
/T1_0 1 Tf
(.\) )Tj
ET
0.5 0.5 0.5 rg
10 181.213 m
10 183.213 l
602 183.213 l
601 182.213 l
11 182.213 l
11 182.213 l
h
f
0.875 0.875 0.875 rg
602 183.213 m
602 181.213 l
10 181.213 l
11 182.213 l
601 182.213 l
601 182.213 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 162.1888 Tm
(Go to the )Tj
ET
0.706 w 
65.608 160.072 m
88.162 160.072 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 162.1888 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 160.072 m
143.378 160.072 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 162.1888 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 160.072 m
174.486 160.072 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 162.1888 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 160.072 m
200.932 160.072 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 162.1888 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 160.072 m
343.634 160.072 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 162.1888 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_33.html11/3/2006 8:5\6:42 PM)Tj
ET
EMC 

endstreamendobj1715 0 obj(An Introduction to Scheme and its Implementation - Automatic Memory Management)endobj1716 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_33.html)/S 700 0 R>>endobj1717 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_33.html)endobj1718 0 obj(-Lí∞[“Fn:…]f8@w)endobj1719 0 obj<</TS(D:20061104045642)/ID 1718 0 R/CT(text/html)/O[1697 0 R]/S/SPS/T 1715 0 R/TID 1721 0 R/SI 1720 0 R>>endobj1720 0 obj<</TS(D:20061104045642)/AU 1717 0 R>>endobj1721 0 obj(™‘ƒLî˝©LBØ÷™)endobj1722 0 obj<</Parent 710 0 R/Next 1758 0 R/Dest[1697 0 R/XYZ 0 792 null]/Prev 1694 0 R/SE 1696 0 R/Title(An Introduction to Scheme and its Implementation - Automatic Memory Management)>>endobj1723 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1724 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 1740 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 1725 0 R>>endobj1725 0 obj<</Annots 1729 0 R/Parent 1838 0 R/ID 1754 0 R/StructParents 60/Contents 1749 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1726 0 obj<</Parent 2059 0 R/Count 5/Type/Pages/Kids[1632 0 R 1645 0 R 1665 0 R 1677 0 R 1697 0 R]>>endobj1727 0 obj[1724 0 R]endobj1728 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1729 0 obj[1728 0 R 1730 0 R 1731 0 R 1732 0 R 1733 0 R 1735 0 R 1737 0 R 1739 0 R]endobj1730 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1697 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_33.html)/S/URI>>/Border[0 0 0]>>endobj1731 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1761 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_35.html)/S/URI>>/Border[0 0 0]>>endobj1732 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1733 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1734 0 obj[1725 0 R/XYZ 0 731.2 null]endobj1735 0 obj<</Rect[10.0 693.431 289.462 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC35)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC35)/S/URI>>/Border[0 0 0]>>endobj1736 0 obj[1725 0 R/XYZ 0 619.215 null]endobj1737 0 obj<</Rect[10.0 602.815 114.244 617.815]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC36)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC36)/S/URI>>/Border[0 0 0]>>endobj1738 0 obj[1725 0 R/XYZ 0 380.191 null]endobj1739 0 obj<</Rect[318.742 375.815 335.066 390.815]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_foot.html#FOOT3)/S/URI>>/Border[0 0 0]>>endobj1740 0 obj<</Annots 1743 0 R/Parent 1838 0 R/ID 1754 0 R/StructParents 61/Contents 1750 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1741 0 obj[1724 0 R]endobj1742 0 obj<</Rect[228.918 663.4 411.674 678.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ºj\rﬁl¨V£¥T-%«SEC98)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_92.html#SEC98)/S/URI>>/Border[0 0 0]>>endobj1743 0 obj[1742 0 R 1744 0 R 1745 0 R 1746 0 R 1747 0 R 1748 0 R]endobj1744 0 obj<</Rect[65.608 609.6 88.162 624.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1745 0 obj<</Rect[95.162 609.6 143.378 624.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1697 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_33.html)/S/URI>>/Border[0 0 0]>>endobj1746 0 obj<</Rect[150.378 609.6 174.486 624.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1761 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_35.html)/S/URI>>/Border[0 0 0]>>endobj1747 0 obj<</Rect[181.486 609.6 200.932 624.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1748 0 obj<</Rect[251.094 609.6 343.634 624.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1749 0 obj<</Length 4419>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Dynamic Typing)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
289.462 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Objects Have Types, Variables Don't)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(If I use my finger as a pointer, I can use it to point to all kinds of t\hings--a computer, a painting, a )Tj
0 -1.2 TD
(motorcycle, or any number of things. Variables in Scheme are like this, \too. )Tj
ET
1.176 w 
10 603.42 m
114.244 603.42 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 606.9484 Tm
(Dynamic typing)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(In Scheme, all variables have the same type: "pointer to anything." )Tj
0 -2.557 TD
(Scheme is )Tj
/T1_2 1 Tf
(dynamically typed)Tj
/T1_0 1 Tf
(, meaning that variables don't have fixed types, )Tj
/T1_2 1 Tf
(but objects do)Tj
/T1_0 1 Tf
(. An object )Tj
0 -1.2 TD
(carries its type around with it--an integer is an integer forever, but a\ variable may refer to an integer at )Tj
T*
(some times, and a string \(or something else\) at other times. The langu\age provides type-checking at run )Tj
T*
(time to ensure that you don't perform the wrong operations on objects--i\f you attempt to add two strings, )Tj
T*
(for example, the system will detect the error and notify you. )Tj
0 -2.557 TD
(Sometimes, people refer to languages like Scheme \(and Lisp and Smalltal\k\) as )Tj
/T1_2 1 Tf
(untyped)Tj
/T1_0 1 Tf
(. This is very )Tj
0 -1.2 TD
(misleading. In a truly untyped language \(like FORTH and most assembly l\anguages\), you can interpret a )Tj
T*
(value any way you want--as an integer, a pointer, or whatever. \(You can\ also do this in C, using unsafe )Tj
T*
(casts, which is a source of many time-consuming bugs.)Tj
ET
0.706 w 
318.742 378.074 m
335.066 378.074 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 318.742 380.1909 Tm
(\(3\))Tj
0 0 0 rg
( \) )Tj
-22.053 -2.7 Td
(In dynamically typed systems, types are enforced at runtime. If you try \to use the numeric procedure )Tj
/T1_2 1 Tf
(+)Tj
/T1_0 1 Tf
( )Tj
T*
(to add two lists together, for example, the system will detect the error\ and halt gracefully--it won't )Tj
T*
(blithely assume you know what you're doing and corrupt your data. You al\so can't misinterpret a )Tj
T*
(nonpointer value as a pointer, and generate fatal segmentation violation\s that kill your program. )Tj
0 -2.557 TD
(You might think that dynamic typing is expensive, and it can be. But goo\d Scheme compilers can )Tj
0 -1.2 TD
(remove most of the overhead by inference at compile time, and most advan\ced implementations also let )Tj
T*
(you declare types in performance-critical places so that the compiler ca\n generate code similar to that for )Tj
T*
(C or Pascal. )Tj
/T1_2 1 Tf
0 -2.557 TD
([ I've left out some text from my course notes about tagging and immedia\te values \(more detailed\)... put )Tj
0 -1.2 TD
(back in, maybe in an appendix ])Tj
/T1_0 1 Tf
( )Tj
/T1_3 1 Tf
0 -2.562 TD
(==================================================================)Tj
0 -1.2 TD
(This is the end of Hunk C)Tj
0 -2.4 TD
(TIME TO TRY IT OUT)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_34.html \(1 of 2\)11\/3/2006 8:56:49 PM)Tj
ET
EMC 

endstreamendobj1750 0 obj<</Length 1901>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Dynamic Typing)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(At this point, you should go read Hunk D of the next chapter)Tj
0 -1.2 TD
(and work through the examples using a running Scheme system.)Tj
T*
(Then return here and resume this chapter.)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Go to Hunk D, which starts at section )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
228.918 665.659 m
411.674 665.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 228.918 667.7756 Tm
(Making Some Objects \(Hunk D\))Tj
0 0 0 rg
(.\) )Tj
ET
0.5 0.5 0.5 rg
10 633 m
10 635 l
602 635 l
601 634 l
11 634 l
11 634 l
h
f
0.875 0.875 0.875 rg
602 635 m
602 633 l
10 633 l
11 634 l
601 634 l
601 634 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 613.9756 Tm
(Go to the )Tj
ET
65.608 611.859 m
88.162 611.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 613.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 611.859 m
143.378 611.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 613.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 611.859 m
174.486 611.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 613.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 611.859 m
200.932 611.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 613.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 611.859 m
343.634 611.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 613.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_34.html \(2 of 2\)11\/3/2006 8:56:49 PM)Tj
ET
EMC 

endstreamendobj1751 0 obj(An Introduction to Scheme and its Implementation - Dynamic Typing)endobj1752 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_34.html)/S 700 0 R>>endobj1753 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_34.html)endobj1754 0 obj(∞÷\)W◊nAÇ“¿.¡∞Ω”)endobj1755 0 obj<</TS(D:20061104045649)/ID 1754 0 R/CT(text/html)/O[1725 0 R 1740 0 R]/S/SPS/T 1751 0 R/TID 1757 0 R/SI 1756 0 R>>endobj1756 0 obj<</TS(D:20061104045649)/AU 1753 0 R>>endobj1757 0 obj(aW©•ˆpßÒ£ÃÅå)endobj1758 0 obj<</Parent 710 0 R/Next 1788 0 R/Dest[1725 0 R/XYZ 0 792 null]/Prev 1722 0 R/SE 1724 0 R/Title(An Introduction to Scheme and its Implementation - Dynamic Typing)>>endobj1759 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1760 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 1761 0 R>>endobj1761 0 obj<</Annots 1764 0 R/Parent 1838 0 R/ID 1784 0 R/StructParents 62/Contents 1780 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1762 0 obj[1760 0 R]endobj1763 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1764 0 obj[1763 0 R 1765 0 R 1766 0 R 1767 0 R 1768 0 R 1770 0 R 1775 0 R 1776 0 R 1777 0 R 1778 0 R 1779 0 R]endobj1765 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1725 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_34.html)/S/URI>>/Border[0 0 0]>>endobj1766 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1791 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_36.html)/S/URI>>/Border[0 0 0]>>endobj1767 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1768 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1769 0 obj[1761 0 R/XYZ 0 731.2 null]endobj1770 0 obj<</Rect[10.0 693.431 196.69 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC37)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC37)/S/URI>>/Border[0 0 0]>>endobj1771 0 obj[1761 0 R/XYZ 0 602.415 null]endobj1772 0 obj[1761 0 R/XYZ 0 602.415 null]endobj1773 0 obj[1761 0 R/XYZ 0 602.415 null]endobj1774 0 obj[1761 0 R/XYZ 0 602.415 null]endobj1775 0 obj<</Rect[65.608 100.544 88.162 115.544]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1776 0 obj<</Rect[95.162 100.544 143.378 115.544]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1725 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_34.html)/S/URI>>/Border[0 0 0]>>endobj1777 0 obj<</Rect[150.378 100.544 174.486 115.544]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1791 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_36.html)/S/URI>>/Border[0 0 0]>>endobj1778 0 obj<</Rect[181.486 100.544 200.932 115.544]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1779 0 obj<</Rect[251.094 100.544 343.634 115.544]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1780 0 obj<</Length 5076>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - The Empty List)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
196.69 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(The Empty List \(Hunk E\))Tj
0 0 0 rg
/T1_2 1 Tf
14 0 0 14 10 659.7235 Tm
(==================================================================)Tj
0 -1.2 TD
(Hunk E starts here:)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.557 TD
(In Scheme, there is one null pointer value, called "the empty list," whi\ch prints as )Tj
/T1_2 1 Tf
(\(\))Tj
/T1_0 1 Tf
(. \(Later, we'll see )Tj
0 -1.2 TD
(why it's written that way, and why it's called "the empty list."\) )Tj
0 -2.557 TD
(Conceptually, the empty list is a special object, and a "null" pointer i\s a pointer to this special end-of-list )Tj
0 -1.2 TD
(object. You can ignore that fact and think of it as just a null pointer,\ because there's nothing interesting )Tj
T*
(you can do with the object it points to. )Tj
0 -2.562 TD
(\(In some implementations, the empty list object )Tj
/T1_2 1 Tf
('\(\))Tj
/T1_0 1 Tf
( is actually an object referred to via a pointer, and )Tj
0 -1.2 TD
(null pointers are really pointers to it. In others, an empty list is an \immediate value, a specially tagged )Tj
T*
(null pointer. At the level of the Scheme language, it doesn't matter whi\ch way it's implemented in a )Tj
T*
(particular Scheme system. All you can really do with the null pointer is\ compare it against other )Tj
T*
(pointers, to see if they're null pointers, too.\) )Tj
0 -2.557 TD
(The empty list object acts as a null pointer for any purpose--there's on\ly one kind of pointer \(pointer to )Tj
0 -1.2 TD
(anything\), so there's only one kind of null pointer \(pointer to nothin\g\). )Tj
0 -2.562 TD
(Scheme provides a procedure, )Tj
/T1_2 1 Tf
(null?)Tj
/T1_0 1 Tf
( to check whether a value is \(a pointer to\) the empty list, i.e., a )Tj
0 -1.205 TD
(null pointer. For example, )Tj
/T1_2 1 Tf
(\(null? foo\))Tj
/T1_0 1 Tf
( returns )Tj
/T1_2 1 Tf
(#t)Tj
/T1_0 1 Tf
( if the value of the variable )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
( is the empty list, )Tj
0 -1.205 TD
(and )Tj
/T1_2 1 Tf
(#f)Tj
/T1_0 1 Tf
( otherwise. )Tj
0 -2.557 TD
(You might be wondering why the null pointer object is called "the empty \list"; I'll explain that later. )Tj
0 -1.2 TD
(Given the way lists are usually used in Scheme, it turns out to make per\fect sense. )Tj
0 -2.562 TD
(You can write the empty list as a literal in your programs as )Tj
/T1_2 1 Tf
('\(\))Tj
/T1_0 1 Tf
(. That is, the expression )Tj
/T1_2 1 Tf
('\(\))Tj
/T1_0 1 Tf
( returns )Tj
0 -1.205 TD
(the empty list \(null pointer\), )Tj
/T1_2 1 Tf
(\(\))Tj
/T1_0 1 Tf
(. Later I'll explain why you have to put the single quote mark in front \of )Tj
0 -1.2 TD
(the empty set of parentheses when writing the empty list as a literal. )Tj
ET
0.5 0.5 0.5 rg
10 123.944 m
10 125.944 l
602 125.944 l
601 124.944 l
11 124.944 l
11 124.944 l
h
f
0.875 0.875 0.875 rg
602 125.944 m
602 123.944 l
10 123.944 l
11 124.944 l
601 124.944 l
601 124.944 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 104.9192 Tm
(Go to the )Tj
ET
0.706 w 
65.608 102.802 m
88.162 102.802 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 104.9192 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 102.802 m
143.378 102.802 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 104.9192 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 102.802 m
174.486 102.802 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 104.9192 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 102.802 m
200.932 102.802 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 104.9192 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 102.802 m
343.634 102.802 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 104.9192 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_35.html11/3/2006 8:5\6:57 PM)Tj
ET
EMC 

endstreamendobj1781 0 obj(An Introduction to Scheme and its Implementation - The Empty List)endobj1782 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_35.html)/S 700 0 R>>endobj1783 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_35.html)endobj1784 0 obj(‹}ˇp`‚A‰ZÙ˘Îÿû)endobj1785 0 obj<</TS(D:20061104045657)/ID 1784 0 R/CT(text/html)/O[1761 0 R]/S/SPS/T 1781 0 R/TID 1787 0 R/SI 1786 0 R>>endobj1786 0 obj<</TS(D:20061104045657)/AU 1783 0 R>>endobj1787 0 obj(D^j_ˇ`*VÅ—t»´)endobj1788 0 obj<</Parent 710 0 R/Next 1822 0 R/Dest[1761 0 R/XYZ 0 792 null]/Prev 1758 0 R/SE 1760 0 R/Title(An Introduction to Scheme and its Implementation - The Empty List)>>endobj1789 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1790 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 1791 0 R>>endobj1791 0 obj<</Annots 1794 0 R/Parent 1838 0 R/ID 1818 0 R/StructParents 63/Contents 1814 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1792 0 obj[1790 0 R]endobj1793 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1794 0 obj[1793 0 R 1795 0 R 1796 0 R 1797 0 R 1798 0 R 1800 0 R 1805 0 R 1806 0 R 1807 0 R 1808 0 R 1809 0 R 1810 0 R 1811 0 R 1812 0 R 1813 0 R]endobj1795 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1761 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_35.html)/S/URI>>/Border[0 0 0]>>endobj1796 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1825 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_37.html)/S/URI>>/Border[0 0 0]>>endobj1797 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1798 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1799 0 obj[1791 0 R/XYZ 0 731.2 null]endobj1800 0 obj<</Rect[10.0 689.877 147.902 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC38)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC38)/S/URI>>/Border[0 0 0]>>endobj1801 0 obj[1791 0 R/XYZ 0 667.938 null]endobj1802 0 obj[1791 0 R/XYZ 0 667.938 null]endobj1803 0 obj[1791 0 R/XYZ 0 667.938 null]endobj1804 0 obj[1791 0 R/XYZ 0 667.938 null]endobj1805 0 obj<</Rect[50.0 582.004 133.608 597.004]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÛI7	K_¡Dª™ÁciSEC39)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_37.html#SEC39)/S/URI>>/Border[0 0 0]>>endobj1806 0 obj<</Rect[50.0 563.204 150.338 578.204]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(˝M	„≠rÏ“¢™ÂÃeÆÚSEC40)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_38.html#SEC40)/S/URI>>/Border[0 0 0]>>endobj1807 0 obj<</Rect[50.0 544.404 252.202 559.404]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÎŸß%¢6•°Wª<A`ÙSEC41)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_39.html#SEC41)/S/URI>>/Border[0 0 0]>>endobj1808 0 obj<</Rect[50.0 525.604 308.958 540.604]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(¯ß=÷èIWi¿M9˙QSEC42)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_40.html#SEC42)/S/URI>>/Border[0 0 0]>>endobj1809 0 obj<</Rect[65.608 471.804 88.162 486.804]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1810 0 obj<</Rect[95.162 471.804 143.378 486.804]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1761 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_35.html)/S/URI>>/Border[0 0 0]>>endobj1811 0 obj<</Rect[150.378 471.804 174.486 486.804]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1825 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_37.html)/S/URI>>/Border[0 0 0]>>endobj1812 0 obj<</Rect[181.486 471.804 200.932 486.804]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1813 0 obj<</Rect[251.094 471.804 343.634 486.804]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1814 0 obj<</Length 3884>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Pairs and Lists)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
147.902 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Pairs and Lists)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 655.914 Tm
(Scheme, like Lisp, has built-in procedures for dealing with a particular\ly flexible kind of list--a list of )Tj
0 -1.205 TD
(pairs, whose )Tj
/T1_2 1 Tf
(cdr)Tj
/T1_0 1 Tf
( fields hold pointers that string them together, and whose )Tj
/T1_2 1 Tf
(car)Tj
/T1_0 1 Tf
( fields hold the values. )Tj
0 -1.205 TD
(\(That is, the )Tj
/T1_2 1 Tf
(cdr)Tj
/T1_0 1 Tf
( fields act as "next" pointers, linking the pairs into a linear list.\) \)Tj
/T1_3 1 Tf
7 0 0 7 35.713 586.3792 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
50 584.262 m
133.608 584.262 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 586.3792 Tm
(cdr-linked lists)Tj
0 0 0 rg
(: Null-terminated lists of pairs linked by cdrs, whose cars hold referen\ces to items. )Tj
/T1_3 1 Tf
7 0 0 7 35.713 567.5792 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 565.462 m
150.338 565.462 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 567.5792 Tm
(Lists and Quoting)Tj
0 0 0 rg
(: Literal lists )Tj
/T1_3 1 Tf
7 0 0 7 35.713 548.7792 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 546.662 m
252.202 546.662 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 548.7792 Tm
(Where the Empty List Got its Name)Tj
0 0 0 rg
(: Why it's called that, and printed \(\), and written '\(\) as a literal\ )Tj
/T1_3 1 Tf
7 0 0 7 35.713 529.9792 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 527.862 m
308.958 527.862 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 529.9792 Tm
(Some Handy Procedures that Operate on Lists)Tj
0 0 0 rg
(: length, list, append, and reverse )Tj
ET
0.5 0.5 0.5 rg
10 495.204 m
10 497.204 l
602 497.204 l
601 496.204 l
11 496.204 l
11 496.204 l
h
f
0.875 0.875 0.875 rg
602 497.204 m
602 495.204 l
10 495.204 l
11 496.204 l
601 496.204 l
601 496.204 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 476.1792 Tm
(Go to the )Tj
ET
65.608 474.062 m
88.162 474.062 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 476.1792 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 474.062 m
143.378 474.062 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 476.1792 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 474.062 m
174.486 474.062 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 476.1792 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 474.062 m
200.932 474.062 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 476.1792 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 474.062 m
343.634 474.062 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 476.1792 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_36.html11/3/2006 8:5\7:07 PM)Tj
ET
EMC 

endstreamendobj1815 0 obj(An Introduction to Scheme and its Implementation - Pairs and Lists)endobj1816 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_36.html)/S 700 0 R>>endobj1817 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_36.html)endobj1818 0 obj(õªÖ\(ùO¯»'≈´Í)endobj1819 0 obj<</TS(D:20061104045707)/ID 1818 0 R/CT(text/html)/O[1791 0 R]/S/SPS/T 1815 0 R/TID 1821 0 R/SI 1820 0 R>>endobj1820 0 obj<</TS(D:20061104045707)/AU 1817 0 R>>endobj1821 0 obj(*\r€¢f»À¸…„pÇwöo)endobj1822 0 obj<</Parent 710 0 R/Next 1861 0 R/Dest[1791 0 R/XYZ 0 792 null]/Prev 1788 0 R/SE 1790 0 R/Title(An Introduction to Scheme and its Implementation - Pairs and Lists)>>endobj1823 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1824 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 1837 0 R/Type/MCR>><</MCID 0/Pg 1840 0 R/Type/MCR>><</MCID 0/Pg 1842 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 1825 0 R>>endobj1825 0 obj<</Annots 1830 0 R/Parent 1838 0 R/ID 1857 0 R/StructParents 64/Contents 1850 0 R/PZ 1.00719/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R/T1_2 736 0 R/T1_3 828 0 R/T1_4 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1826 0 obj[1824 0 R]endobj1827 0 obj<</Limits[0 31]/Nums[0 13 0 R 1 85 0 R 2 166 0 R 3 247 0 R 4 328 0 R 5 409 0 R 6 490 0 R 7 573 0 R 8 654 0 R 9 716 0 R 10 752 0 R 11 779 0 R 12 789 0 R 13 809 0 R 14 819 0 R 15 843 0 R 16 869 0 R 17 886 0 R 18 909 0 R 19 932 0 R 20 954 0 R 21 980 0 R 22 1015 0 R 23 1048 0 R 24 1058 0 R 25 1079 0 R 26 1090 0 R 27 1110 0 R 28 1120 0 R 29 1126 0 R 30 1148 0 R 31 1175 0 R]>>endobj1828 0 obj<</Limits[32 96]/Nums[]>>endobj1829 0 obj<</Rect[65.1397 749.774 87.5327 764.667]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1830 0 obj[1829 0 R 1831 0 R 1832 0 R 1833 0 R 1834 0 R 1836 0 R]endobj1831 0 obj<</Rect[94.4827 749.774 142.355 764.667]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1791 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_36.html)/S/URI>>/Border[0 0 0]>>endobj1832 0 obj<</Rect[149.305 749.774 173.24 764.667]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1864 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_38.html)/S/URI>>/Border[0 0 0]>>endobj1833 0 obj<</Rect[180.191 749.774 199.498 764.667]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1834 0 obj<</Rect[249.302 749.774 341.181 764.667]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1835 0 obj[1825 0 R/XYZ 0 731.505 null]endobj1836 0 obj<</Rect[9.92862 693.805 131.324 711.037]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC39)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC39)/S/URI>>/Border[0 0 0]>>endobj1837 0 obj<</Parent 1897 0 R/ID 1857 0 R/StructParents 65/Contents 1851 0 R/PZ 1.00719/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1838 0 obj<</Parent 2059 0 R/Count 5/Type/Pages/Kids[1725 0 R 1740 0 R 1761 0 R 1791 0 R 1825 0 R]>>endobj1839 0 obj[1824 0 R]endobj1840 0 obj<</Parent 1897 0 R/ID 1857 0 R/StructParents 66/Contents 1852 0 R/PZ 1.00719/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1841 0 obj[1824 0 R]endobj1842 0 obj<</Annots 1845 0 R/Parent 1897 0 R/ID 1857 0 R/StructParents 67/Contents 1853 0 R/PZ 1.00719/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1843 0 obj[1824 0 R]endobj1844 0 obj<</Rect[65.1397 455.684 87.5327 470.577]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1845 0 obj[1844 0 R 1846 0 R 1847 0 R 1848 0 R 1849 0 R]endobj1846 0 obj<</Rect[94.4827 455.684 142.355 470.577]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1791 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_36.html)/S/URI>>/Border[0 0 0]>>endobj1847 0 obj<</Rect[149.305 455.684 173.24 470.577]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1864 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_38.html)/S/URI>>/Border[0 0 0]>>endobj1848 0 obj<</Rect[180.191 455.684 199.498 470.577]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1849 0 obj<</Rect[249.302 455.684 341.181 470.577]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1850 0 obj<</Length 5047>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.0642 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.9358 0 0 8.9358 18 780.2187 Tm
(An Introduction to Scheme and its Implementation - cdr-linked lists)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 9.9286 754.1185 Tm
(Go to the )Tj
ET
0 0 1 RG
0.701 w 10 M 0 j 0 J []0 d 
65.14 752.017 m
87.533 752.017 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 65.1397 754.1185 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
94.483 752.017 m
142.355 752.017 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 94.4827 754.1185 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
149.305 752.017 m
173.24 752.017 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 149.3046 754.1185 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
180.191 752.017 m
199.498 752.017 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 180.1905 754.1185 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
249.302 752.017 m
341.181 752.017 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 249.3016 754.1185 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
9.929 738.456 m
9.929 740.441 l
602.071 740.441 l
601.079 739.448 l
10.921 739.448 l
10.921 739.448 l
h
f
0.875 0.875 0.875 rg
602.071 740.441 m
602.071 738.456 l
9.929 738.456 l
10.921 739.448 l
601.079 739.448 l
601.079 739.448 l
h
f
0.808 w 
9.929 696.163 m
48.421 696.163 l
S
1.347 w 
48.421 694.546 m
131.324 694.546 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.0385 0 0 16.0385 9.9286 698.5879 Tm
(cdr-)Tj
/T1_2 1 Tf
(linked lists)Tj
0 0 0 rg
/T1_0 1 Tf
13.9001 0 0 13.9001 9.9286 660.4055 Tm
(In Lisp and Scheme, you don't typically string objects together into a l\ist by giving each one a "next" )Tj
0 -1.205 TD
(field that points right to the next object. Instead, you create a list o\f pairs whose )Tj
/T1_3 1 Tf
(car)Tj
/T1_0 1 Tf
( fields hold the )Tj
0 -1.205 TD
(pointers to the objects, and whose )Tj
/T1_3 1 Tf
(cdr)Tj
/T1_0 1 Tf
( fields link the pairs together into a "spine." )Tj
0 -2.562 TD
(There isn't really a special )Tj
/T1_3 1 Tf
(list)Tj
/T1_0 1 Tf
( data type in Scheme. A list is really just a sequence of pairs, ending \)Tj
0 -1.2 TD
(with a null pointer. A null pointer is a list, too--it's a sequence of )Tj
/T1_4 1 Tf
(zero)Tj
/T1_0 1 Tf
( pairs ending in a null pointer. We )Tj
T*
(sometimes talk about "the car of a list" or "the cdr of a list," but wha\t that really means is "the car of the )Tj
T*
(first pair in the list" and "the cdr of the first pair in the list." )Tj
0 -2.562 TD
(Suppose we have a variable )Tj
/T1_3 1 Tf
(foo)Tj
/T1_0 1 Tf
( holding a pointer to a list containing the integers )Tj
/T1_3 1 Tf
(22)Tj
/T1_0 1 Tf
(, )Tj
/T1_3 1 Tf
(15)Tj
/T1_0 1 Tf
(, and )Tj
/T1_3 1 Tf
(6)Tj
/T1_0 1 Tf
(. Here's )Tj
0 -1.2 TD
(one way of drawing this situation. )Tj
/T1_3 1 Tf
0 -2.562 TD
(                    +---------+          +---------+        +---------+)Tj
0 -1.2 TD
(     +---------+    | <PAIR>  |          | <PAIR>  |        | <PAIR>  |)Tj
T*
( foo |    *----+--->+=========+      +-->+=========+    +-->+=========+)Tj
T*
(     +---------+    |       22|     /    |       15|   /    |        6|)Tj
T*
(                    +---------+    /     +---------+  /     +---------+)Tj
T*
(                    |    *----+---+      |    *----+-+      |    *    |)Tj
T*
(                    +---------+          +---------+        +---------+)Tj
/T1_0 1 Tf
0 -2.552 TD
(This shows something pretty close to the way things are likely to actual\ly represented in memory. But )Tj
0 -1.2 TD
(there's usually a better way of drawing the list, which emphasizes the f\act that number values are )Tj
T*
(conceptually pointers to numbers, and which corresponds to the way we us\ually think about lists: )Tj
/T1_3 1 Tf
0 -2.562 TD
(     +---+    +---+---+      +---+---+      +---+---+)Tj
0 -1.2 TD
( bar | *-+--->| * | *-+----->| * | *-+----->| * | * |)Tj
T*
(     +---+    +-+-+---+      +-+-+---+      +-+-+---+)Tj
T*
(                |              |              |)Tj
T*
(               \\|/            \\|/            \\|/)Tj
T*
(               22             15              6       )Tj
/T1_0 1 Tf
0 -2.552 TD
(I've left off the header fields of objects, which are not visible to a S\cheme programmer. )Tj
0 -2.562 TD
(I've also drawn pairs in a special way, with the )Tj
/T1_3 1 Tf
(car)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(cdr)Tj
/T1_0 1 Tf
( fields side-by-side. Putting the fields side-)Tj
0 -1.205 TD
(by-side lets us draw the list left-to-right, with the )Tj
/T1_3 1 Tf
(cdr)Tj
/T1_0 1 Tf
( field in a convenient place for its normal use as a )Tj
0 -1.205 TD
("next" pointer. I've drawn the integers outside the pairs, with pointers\ to them from the )Tj
/T1_3 1 Tf
(car)Tj
/T1_0 1 Tf
( fields, )Tj
0 -1.2 TD
(because that's the way things look at the language level. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.0642 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.9358 0 0 8.9358 18 7.2187 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_37.html \(1 of 4\)11\/3/2006 8:57:15 PM)Tj
ET
EMC 

endstreamendobj1851 0 obj<</Length 4256>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.0642 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.9358 0 0 8.9358 18 780.2187 Tm
(An Introduction to Scheme and its Implementation - cdr-linked lists)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 9.9286 738.8054 Tm
(This emphasizes the fact that lists are generally separate things from t\he items "in" the list. )Tj
0 -2.557 TD
(We leave off the headers because they're a low-level detail anyway, beca\use they're a hidden )Tj
0 -1.2 TD
(implementation detail that may vary from system to system, and because S\cheme programmers )Tj
T*
(immediately recognize this kind of two-box drawing of a pair. )Tj
0 -2.557 TD
(A major advantage of Scheme's list structure is that you don't have to m\odify an object to put it on a list--)Tj
0 -1.2 TD
(an object can easily be in many lists at once, because a list is really \just a spine of pairs that holds )Tj
/T1_1 1 Tf
T*
(pointers to)Tj
/T1_0 1 Tf
( the items in the list. This is much cleaner than the way people are typ\ically taught to create )Tj
T*
(simple lists in most beginning programming classes. \(It's also very nat\ural in a language where all values )Tj
T*
(are pointers---)Tj
/T1_1 1 Tf
(of course)Tj
/T1_0 1 Tf
( lists of objects are really just lists of pointers to objects.\) )Tj
0 -2.557 TD
(For example, you can have two lists with the same elements, or some of t\he same elements, but perhaps )Tj
0 -1.2 TD
(in a different order. )Tj
/T1_2 1 Tf
0 -2.562 TD
(     +---+    +---+---+      +---+---+      +---+---+)Tj
0 -1.2 TD
( bar | *-+--->| * | *-+----->| * | *-+----->| * | * |)Tj
T*
(     +---+    +-+-+---+      +-+-+---+      +-+-+---+)Tj
T*
(                |              |              |)Tj
T*
(               \\|/            \\|/            \\|/)Tj
T*
(               22             15              6       )Tj
0 -1.2 TD
(               /|\\                           /|\\)Tj
0 -1.2 TD
(                |                             |)Tj
T*
(     +---+    +-|-+---+                     +-+-+---+)Tj
T*
( baz | *-+--->| * | *-+-------------------->| * | * |)Tj
T*
(     +---+    +---+---+                     +---+---+ )Tj
/T1_0 1 Tf
0 -2.557 TD
(Here I've drawn two lists, )Tj
/T1_2 1 Tf
(bar)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(baz)Tj
/T1_0 1 Tf
(---that is, lists that are the values of the variables )Tj
/T1_2 1 Tf
(bar)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(baz)Tj
/T1_0 1 Tf
(. )Tj
/T1_2 1 Tf
0 -1.205 TD
(bar)Tj
/T1_0 1 Tf
( holds the elements )Tj
/T1_2 1 Tf
(22)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(15)Tj
/T1_0 1 Tf
(, and )Tj
/T1_2 1 Tf
(6)Tj
/T1_0 1 Tf
(, while )Tj
/T1_2 1 Tf
(baz)Tj
/T1_0 1 Tf
( just holds the elements )Tj
/T1_2 1 Tf
(22)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(6)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Since these two lists are really just made up of pairs, and they're )Tj
/T1_1 1 Tf
(different)Tj
/T1_0 1 Tf
( pairs, we can modify one list )Tj
0 -1.2 TD
(without modifying the other, and without modifying the objects "in" the \lists. For example, we can )Tj
T*
(reverse the order of one of the lists without affecting the other. )Tj
0 -2.557 TD
(\(We also don't have to create a special kind of list node that has two \next fields, so that something can be )Tj
0 -1.2 TD
(in two lists at a time. We can just have two separate lists of pairs, or\ three or four.\) )Tj
0 -2.557 TD
(Scheme has a standard way of writing a textual representation of a list.\ Given the pictured situation, )Tj
0 -1.205 TD
(evaluating the expression )Tj
/T1_2 1 Tf
(\(display bar\))Tj
/T1_0 1 Tf
( will print )Tj
/T1_2 1 Tf
(\(22 15 6\))Tj
/T1_0 1 Tf
(. Evaluating the expression )Tj
/T1_2 1 Tf
0 -1.205 TD
(\(display baz\))Tj
/T1_0 1 Tf
( will print )Tj
/T1_2 1 Tf
(\(22 6\))Tj
/T1_0 1 Tf
(. Notice that Scheme just writes out a pair of parentheses around )Tj
T*
(the items in the list--it doesn't represent the individual pairs, but ju\st their )Tj
/T1_2 1 Tf
(car)Tj
/T1_0 1 Tf
( values. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.0642 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.9358 0 0 8.9358 18 7.2187 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_37.html \(2 of 4\)11\/3/2006 8:57:15 PM)Tj
ET
EMC 

endstreamendobj1852 0 obj<</Length 3413>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.0642 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.9358 0 0 8.9358 18 780.2187 Tm
(An Introduction to Scheme and its Implementation - cdr-linked lists)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 9.9286 748.4345 Tm
(Dynamic typing also helps make lists useful. A list of pairs can hold an\y type of object, or even a mixed )Tj
0 -1.2 TD
(bag of different types of objects. So, for example, a pair list can be a\ list of integers, a list of lists, a list of )Tj
T*
(text characters, or a list of any of the kinds of objects we haven't got\ten to yet. It can also be a mixed list )Tj
T*
(of integers, other lists, and whatnot. A few list routines can therefore\ be useful in a variety of situations--)Tj
T*
(a single list search routine can search any kind of list for a particula\r target object, for example. )Tj
0 -2.562 TD
(This picture shows two variable bindings, for the variables )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
('s binding holds a list )Tj
/T1_1 1 Tf
0 -1.205 TD
(\(10 15 6\))Tj
/T1_0 1 Tf
(, while )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
('s holds a list )Tj
/T1_1 1 Tf
(\(22 15 6\))Tj
/T1_0 1 Tf
(. We say that these lists )Tj
/T1_2 1 Tf
(share structure)Tj
/T1_0 1 Tf
(, i.e., part of )Tj
0 -1.2 TD
(one list is also part of the other. )Tj
/T1_1 1 Tf
0 -2.562 TD
(                    +-------- + )Tj
0 -1.2 TD
(     +---------+    | <PAIR>  |)Tj
T*
( bar |    *----+--->+=========+)Tj
T*
(     +---------+    |       10| )Tj
T*
(                    +---------+ )Tj
T*
(                    |    *----+-+ )Tj
T*
(                    +---------+  \\)Tj
T*
(                                  \\)Tj
T*
(                    +---------+    \\     +---------+        +---------+\)Tj
T*
(     +---------+    | <PAIR>  |     \\    | <PAIR>  |        | <PAIR>  |\)Tj
T*
( foo |    *----+--->+=========+      +-->+=========+    +-->+=========+)Tj
T*
(     +---------+    |       22|     /    |       15|   /    |        6|)Tj
T*
(                    +---------+    /     +---------+  /     +---------+)Tj
T*
(                    |    *----+---+      |    *----+-+      |    *    |)Tj
T*
(                    +---------+          +---------+        +---------+)Tj
/T1_0 1 Tf
0 -2.552 TD
(This picture may correspond well to how things are represented in memory\, but it's a little confusing. )Tj
0 -2.557 TD
(The more common way of drawing this data structure is )Tj
/T1_1 1 Tf
0 -2.562 TD
(     +---+    +---+---+ )Tj
0 -1.2 TD
( bar | *-+--->| * | *-+------+)Tj
T*
(     +---+    +-+-+---+      |)Tj
T*
(                |            |)Tj
T*
(               \\|/           |)Tj
T*
(               10            |)Tj
T*
(                            \\|/)Tj
T*
(     +---+    +---+---+      +---+---+      +---+---+)Tj
T*
( foo | *-+--->| * | *-+----->| * | *-+----->| * | * |)Tj
T*
(     +---+    +-+-+---+      +-+-+---+      +-+-+---+)Tj
T*
(                |              |              |)Tj
T*
(               \\|/            \\|/            \\|/)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.0642 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.9358 0 0 8.9358 18 7.2187 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_37.html \(3 of 4\)11\/3/2006 8:57:15 PM)Tj
ET
EMC 

endstreamendobj1853 0 obj<</Length 2981>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.0642 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.9358 0 0 8.9358 18 780.2187 Tm
(An Introduction to Scheme and its Implementation - cdr-linked lists)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.9001 0 0 13.9001 9.9286 754.0516 Tm
(               22             15              6       )Tj
/T1_0 1 Tf
0 -2.552 TD
(Again, this emphasizes the idea that everything's a pointer--conceptuall\y, the pairs hold pointers to the )Tj
0 -1.2 TD
(integers. )Tj
0 -2.562 TD
(In the above picture, we can talk about "the car of )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(", which really means the value in the )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( field of )Tj
0 -1.205 TD
(the pair pointed at by the value stored in \(the binding of\) )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(. It's \(a pointer to\) )Tj
/T1_1 1 Tf
(10)Tj
/T1_0 1 Tf
(. We would often call )Tj
0 -1.205 TD
(this "the car of the list )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(." )Tj
0 -2.562 TD
(Notice that the cdr of )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( is also a list, and it's )Tj
/T1_2 1 Tf
(the same list)Tj
/T1_0 1 Tf
( as the cdr of )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
(---the cdrs of the first pairs )Tj
0 -1.2 TD
(in each list point to the same list. )Tj
0 -2.562 TD
(We can say that the cdr of foo and the cdr of bar "are )Tj
/T1_1 1 Tf
(eq?)Tj
/T1_0 1 Tf
(," because the expression )Tj
/T1_1 1 Tf
(\(eq? \(cdr foo\) )Tj
0 -1.205 TD
(\(cdr bar\)\))Tj
/T1_0 1 Tf
( returns true. That is, )Tj
/T1_1 1 Tf
(\(car foo\))Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(\(cdr foo\))Tj
/T1_0 1 Tf
( return \(pointers to\) exactly the same )Tj
0 -1.2 TD
(object. )Tj
ET
0.5 0.5 0.5 rg
9.929 478.917 m
9.929 480.903 l
602.071 480.903 l
601.079 479.91 l
10.921 479.91 l
10.921 479.91 l
h
f
0.875 0.875 0.875 rg
602.071 480.903 m
602.071 478.917 l
9.929 478.917 l
10.921 479.91 l
601.079 479.91 l
601.079 479.91 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 9.9286 460.0285 Tm
(Go to the )Tj
ET
0 0 1 RG
0.701 w 10 M 0 j 0 J []0 d 
65.14 457.927 m
87.533 457.927 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 65.1397 460.0285 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
94.483 457.927 m
142.355 457.927 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 94.4827 460.0285 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
149.305 457.927 m
173.24 457.927 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 149.3046 460.0285 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
180.191 457.927 m
199.498 457.927 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 180.1905 460.0285 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
249.302 457.927 m
341.181 457.927 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 249.3016 460.0285 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.0642 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.9358 0 0 8.9358 18 7.2187 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_37.html \(4 of 4\)11\/3/2006 8:57:15 PM)Tj
ET
EMC 

endstreamendobj1854 0 obj(An Introduction to Scheme and its Implementation - cdr-linked lists)endobj1855 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_37.html)/S 700 0 R>>endobj1856 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_37.html)endobj1857 0 obj(ÛI7	K_¡Dª™Áci)endobj1858 0 obj<</TS(D:20061104045715)/ID 1857 0 R/CT(text/html)/O[1825 0 R 1837 0 R 1840 0 R 1842 0 R]/S/SPS/T 1854 0 R/TID 1860 0 R/SI 1859 0 R>>endobj1859 0 obj<</TS(D:20061104045715)/AU 1856 0 R>>endobj1860 0 obj(Ì£Â7˝Á˙kÙ‹Ã◊g)endobj1861 0 obj<</Parent 710 0 R/Next 1893 0 R/Dest[1825 0 R/XYZ 0 792 null]/Prev 1822 0 R/SE 1824 0 R/Title(An Introduction to Scheme and its Implementation - cdr-linked lists)>>endobj1862 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1863 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 1876 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 1864 0 R>>endobj1864 0 obj<</Annots 1867 0 R/Parent 1897 0 R/ID 1889 0 R/StructParents 68/Contents 1884 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1865 0 obj[1863 0 R]endobj1866 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1867 0 obj[1866 0 R 1868 0 R 1869 0 R 1870 0 R 1871 0 R 1873 0 R]endobj1868 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1825 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_37.html)/S/URI>>/Border[0 0 0]>>endobj1869 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1896 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_39.html)/S/URI>>/Border[0 0 0]>>endobj1870 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1871 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1872 0 obj[1864 0 R/XYZ 0 731.2 null]endobj1873 0 obj<</Rect[10.0 693.431 147.324 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC40)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC40)/S/URI>>/Border[0 0 0]>>endobj1874 0 obj[1864 0 R/XYZ 0 671.815 null]endobj1875 0 obj[1864 0 R/XYZ 0 671.815 null]endobj1876 0 obj<</Annots 1879 0 R/Parent 1897 0 R/ID 1889 0 R/StructParents 69/Contents 1885 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1877 0 obj[1863 0 R]endobj1878 0 obj<</Rect[65.608 261.928 88.162 276.928]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1879 0 obj[1878 0 R 1880 0 R 1881 0 R 1882 0 R 1883 0 R]endobj1880 0 obj<</Rect[95.162 261.928 143.378 276.928]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1825 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_37.html)/S/URI>>/Border[0 0 0]>>endobj1881 0 obj<</Rect[150.378 261.928 174.486 276.928]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1896 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_39.html)/S/URI>>/Border[0 0 0]>>endobj1882 0 obj<</Rect[181.486 261.928 200.932 276.928]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1883 0 obj<</Rect[251.094 261.928 343.634 276.928]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1884 0 obj<</Length 4636>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Lists and Quoting)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
147.324 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Lists and Quoting)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(Scheme allows you to write lists as literals using )Tj
/T1_2 1 Tf
(quoting)Tj
/T1_0 1 Tf
(. Just as you can write a literal boolean or )Tj
0 -1.205 TD
(number in your program, you can write a literal list if you use the spec\ial form )Tj
/T1_3 1 Tf
(quote)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Quote is a special form, not a procedure, because it doesn't evaluate it\s argument in the usual way. \(Its )Tj
0 -1.2 TD
(argument is really just a literal representation of a data structure, wh\ich may look like a Scheme )Tj
T*
(expression, but it isn't.\) )Tj
0 -2.562 TD
(For example, the expression )Tj
/T1_3 1 Tf
(\(quote \(1 2 3\)\))Tj
/T1_0 1 Tf
( returns a pointer to a list )Tj
/T1_3 1 Tf
(\(1 2 3\))Tj
/T1_0 1 Tf
(, i.e., a sequence )Tj
0 -1.2 TD
(of cdr linked pairs whose car values are \(pointers to\) to 1, 2, and 3.\ )Tj
0 -2.562 TD
(You can use )Tj
/T1_3 1 Tf
(quote)Tj
/T1_0 1 Tf
( expressions as subexpressions of other expressions, because they just r\eturn pointer )Tj
0 -1.2 TD
(values like anything else. )Tj
0 -2.562 TD
(For example, the expression )Tj
/T1_3 1 Tf
(\(define foo \(quote \(1 2 3\)\)\))Tj
/T1_0 1 Tf
( defines \(and binds\) a variable )Tj
/T1_3 1 Tf
0 -1.205 TD
(foo)Tj
/T1_0 1 Tf
(, and initializes its binding with \(a pointer to\) a three-element list\. )Tj
0 -2.557 TD
(We can draw the resulting situation this way: )Tj
/T1_3 1 Tf
0 -2.562 TD
(     +---+    +---+---+      +---+---+      +---+---+)Tj
0 -1.2 TD
( foo | *-+--->| * | *-+----->| * | *-+----->| * | * |)Tj
T*
(     +---+    +-+-+---+      +-+-+---+      +-+-+---+)Tj
T*
(                |              |              |)Tj
T*
(               \\|/            \\|/            \\|/)Tj
T*
(                1              2              3)Tj
0 -2.557 TD
(quote)Tj
/T1_0 1 Tf
( takes exactly one argument, and returns a data structure whose printed \representation is the same )Tj
0 -1.205 TD
(as what you typed in as the argument to )Tj
/T1_3 1 Tf
(quote)Tj
/T1_0 1 Tf
(. Scheme does )Tj
/T1_2 1 Tf
(not)Tj
/T1_0 1 Tf
( evaluate the argument to )Tj
/T1_3 1 Tf
(quote)Tj
/T1_0 1 Tf
( as )Tj
0 -1.2 TD
(an expression--it just gives you a pointer to a data structure. )Tj
0 -2.562 TD
(Note that )Tj
/T1_3 1 Tf
(quote)Tj
/T1_0 1 Tf
( does not generally construct a character string--it constructs a data s\tructure that may )Tj
0 -1.2 TD
(be a list or tree or even an array. It's a very general quoting facility\, much more powerful than the double )Tj
T*
(quotes around character strings, which only construct string objects. )Tj
0 -2.562 TD
(Scheme provides a cleaner way of writing )Tj
/T1_3 1 Tf
(quote)Tj
/T1_0 1 Tf
(d expressions, using the special single-quote character )Tj
/T1_3 1 Tf
0 -1.205 TD
(')Tj
/T1_0 1 Tf
(. Rather than writing out )Tj
/T1_3 1 Tf
(\(quote)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(some-expression)Tj
/T1_3 1 Tf
(\))Tj
/T1_0 1 Tf
(, you can just precede the quoted expression with )Tj
0 -1.205 TD
(the single-quote character. For example, we can write the same definitio\n of )Tj
/T1_3 1 Tf
(foo)Tj
/T1_0 1 Tf
( as )Tj
/T1_3 1 Tf
(\(define foo )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_38.html \(1 of 2\)11\/3/2006 8:57:53 PM)Tj
ET
EMC 

endstreamendobj1885 0 obj<</Length 3516>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Lists and Quoting)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
('\(1 2 3\)\))Tj
/T1_0 1 Tf
(. You don't need a closing quote, because of Scheme's parenthesized pref\ix syntax--it can )Tj
0 -1.2 TD
(figure out where the quoted data structure ends. )Tj
0 -2.562 TD
(One subtlety about )Tj
/T1_1 1 Tf
(quote)Tj
/T1_0 1 Tf
( is that a )Tj
/T1_1 1 Tf
(quote)Tj
/T1_0 1 Tf
( expression doesn't create a data structure every time it's )Tj
0 -1.2 TD
(called--evaluating the same expression many times may return many pointe\rs to the same structure. )Tj
0 -2.557 TD
(Consider the procedure definition )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(foo\))Tj
0 -1.2 TD
(   '\(1 2 3\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(The list )Tj
/T1_1 1 Tf
(\(1 2 3\))Tj
/T1_0 1 Tf
( may be created when we )Tj
/T1_2 1 Tf
(define)Tj
/T1_0 1 Tf
( the procedure )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(, and each time we call it, it may )Tj
0 -1.2 TD
(return a pointer to that same list. \(Exactly what happens depends on th\e particular implementation of )Tj
0 -1.205 TD
(Scheme, but most work this way, for efficiency reasons. Evaluating the )Tj
/T1_1 1 Tf
(quote)Tj
/T1_0 1 Tf
( expression just fetches a )Tj
0 -1.2 TD
(pointer to a data structure that was created beforehand.\) )Tj
0 -2.562 TD
(For this reason, it's an error to modify a data structure returned from \a )Tj
/T1_1 1 Tf
(quote)Tj
/T1_0 1 Tf
( form. Unfortunately, )Tj
0 -1.2 TD
(many Scheme systems don't detect this error, and will let you do it. If \you want a new data structure )Tj
0 -1.205 TD
(each time, you should use a procedure like )Tj
/T1_1 1 Tf
(list)Tj
/T1_0 1 Tf
(, which always creates a new data structure. \()Tj
/T1_1 1 Tf
(list)Tj
/T1_0 1 Tf
(, )Tj
0 -1.2 TD
(which we'll discuss more later, is a standard Scheme procedure that take\s any number of arguments, and )Tj
T*
(creates a list of those items.\) )Tj
0 -2.562 TD
(For example, if we want the procedure )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( to return a new list )Tj
/T1_1 1 Tf
(\(1 2 3\))Tj
/T1_0 1 Tf
( every time, we can write )Tj
/T1_1 1 Tf
T*
(\(define \(foo\))Tj
0 -1.2 TD
(   \(list 1 2 3\)\))Tj
ET
0.5 0.5 0.5 rg
10 285.328 m
10 287.328 l
602 287.328 l
601 286.328 l
11 286.328 l
11 286.328 l
h
f
0.875 0.875 0.875 rg
602 287.328 m
602 285.328 l
10 285.328 l
11 286.328 l
601 286.328 l
601 286.328 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 266.3038 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 264.187 m
88.162 264.187 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 266.3038 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 264.187 m
143.378 264.187 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 266.3038 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 264.187 m
174.486 264.187 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 266.3038 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 264.187 m
200.932 264.187 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 266.3038 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 264.187 m
343.634 264.187 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 266.3038 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_38.html \(2 of 2\)11\/3/2006 8:57:53 PM)Tj
ET
EMC 

endstreamendobj1886 0 obj(An Introduction to Scheme and its Implementation - Lists and Quoting)endobj1887 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_38.html)/S 700 0 R>>endobj1888 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_38.html)endobj1889 0 obj(˝M	„≠rÏ“¢™ÂÃeÆÚ)endobj1890 0 obj<</TS(D:20061104045753)/ID 1889 0 R/CT(text/html)/O[1864 0 R 1876 0 R]/S/SPS/T 1886 0 R/TID 1892 0 R/SI 1891 0 R>>endobj1891 0 obj<</TS(D:20061104045753)/AU 1888 0 R>>endobj1892 0 obj(˙‘xªf_›÷ÍØxÔG)endobj1893 0 obj<</Parent 710 0 R/Next 1920 0 R/Dest[1864 0 R/XYZ 0 792 null]/Prev 1861 0 R/SE 1863 0 R/Title(An Introduction to Scheme and its Implementation - Lists and Quoting)>>endobj1894 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1895 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 1896 0 R>>endobj1896 0 obj<</Annots 1900 0 R/Parent 2031 0 R/ID 1916 0 R/StructParents 70/Contents 1912 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1897 0 obj<</Parent 2059 0 R/Count 5/Type/Pages/Kids[1837 0 R 1840 0 R 1842 0 R 1864 0 R 1876 0 R]>>endobj1898 0 obj[1895 0 R]endobj1899 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1900 0 obj[1899 0 R 1901 0 R 1902 0 R 1903 0 R 1904 0 R 1906 0 R 1907 0 R 1908 0 R 1909 0 R 1910 0 R 1911 0 R]endobj1901 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1864 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_38.html)/S/URI>>/Border[0 0 0]>>endobj1902 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1923 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_40.html)/S/URI>>/Border[0 0 0]>>endobj1903 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1904 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1905 0 obj[1896 0 R/XYZ 0 731.2 null]endobj1906 0 obj<</Rect[10.0 693.431 279.285 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC41)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC41)/S/URI>>/Border[0 0 0]>>endobj1907 0 obj<</Rect[65.608 321.009 88.162 336.009]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1908 0 obj<</Rect[95.162 321.009 143.378 336.009]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1864 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_38.html)/S/URI>>/Border[0 0 0]>>endobj1909 0 obj<</Rect[150.378 321.009 174.486 336.009]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1923 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_40.html)/S/URI>>/Border[0 0 0]>>endobj1910 0 obj<</Rect[181.486 321.009 200.932 336.009]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1911 0 obj<</Rect[251.094 321.009 343.634 336.009]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1912 0 obj<</Length 3905>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Where the Empty List \Got its Name)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
279.285 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Where the Empty List Got its Name)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(Now that you understand Scheme lists and simple quoting, I can explain w\hy the null pointer is called )Tj
0 -1.205 TD
("the empty list," and written )Tj
/T1_2 1 Tf
('\(\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Consider a list )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
( of three elements: )Tj
/T1_2 1 Tf
T*
('\(1 2 3\))Tj
/T1_0 1 Tf
( )Tj
0 -2.562 TD
(The )Tj
/T1_2 1 Tf
(cdr)Tj
/T1_0 1 Tf
( of that list is a list )Tj
/T1_2 1 Tf
(\(2 3\))Tj
/T1_0 1 Tf
(. We could write a literal list like that as )Tj
/T1_2 1 Tf
('\(2 3\))Tj
/T1_0 1 Tf
( )Tj
0 -2.562 TD
(The )Tj
/T1_2 1 Tf
(cdr)Tj
/T1_0 1 Tf
( of )Tj
/T1_3 1 Tf
(that)Tj
/T1_0 1 Tf
( list is a one-element list, )Tj
/T1_2 1 Tf
(\(3\))Tj
/T1_0 1 Tf
(. We could write a literal list like that as )Tj
/T1_2 1 Tf
('\(3\))Tj
/T1_0 1 Tf
(. )Tj
T*
(The )Tj
/T1_2 1 Tf
(cdr)Tj
/T1_0 1 Tf
( of )Tj
/T1_3 1 Tf
(that)Tj
/T1_0 1 Tf
( list is a zero-element list, )Tj
/T1_2 1 Tf
(\(\))Tj
/T1_0 1 Tf
(, that is, it's the empty list. We could write it in quoted )Tj
0 -1.205 TD
(form as )Tj
/T1_2 1 Tf
('\(\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Given the way that Scheme lists work, a list of zero items is the same t\hing as a null pointer, and it's )Tj
0 -1.205 TD
(natural to for Scheme to print it as a list with zero elements, )Tj
/T1_2 1 Tf
(\(\))Tj
/T1_0 1 Tf
(---and for you to write it as a literal with )Tj
0 -1.205 TD
(a single quote, )Tj
/T1_2 1 Tf
('\(\))Tj
/T1_0 1 Tf
(. )Tj
ET
0.5 0.5 0.5 rg
10 344.409 m
10 346.409 l
602 346.409 l
601 345.409 l
11 345.409 l
11 345.409 l
h
f
0.875 0.875 0.875 rg
602 346.409 m
602 344.409 l
10 344.409 l
11 345.409 l
601 345.409 l
601 345.409 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 325.3844 Tm
(Go to the )Tj
ET
0.706 w 
65.608 323.268 m
88.162 323.268 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 325.3844 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 323.268 m
143.378 323.268 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 325.3844 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 323.268 m
174.486 323.268 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 325.3844 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 323.268 m
200.932 323.268 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 325.3844 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 323.268 m
343.634 323.268 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 325.3844 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_39.html11/3/2006 8:5\8:04 PM)Tj
ET
EMC 

endstreamendobj1913 0 obj(An Introduction to Scheme and its Implementation - Where the Empty List Got its Name)endobj1914 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_39.html)/S 700 0 R>>endobj1915 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_39.html)endobj1916 0 obj(ÎŸß%¢6•°Wª<A`Ù)endobj1917 0 obj<</TS(D:20061104045804)/ID 1916 0 R/CT(text/html)/O[1896 0 R]/S/SPS/T 1913 0 R/TID 1919 0 R/SI 1918 0 R>>endobj1918 0 obj<</TS(D:20061104045804)/AU 1915 0 R>>endobj1919 0 obj(çR-bmÖkXmÆäRì‘LJ)endobj1920 0 obj<</Parent 710 0 R/Next 1946 0 R/Dest[1896 0 R/XYZ 0 792 null]/Prev 1893 0 R/SE 1895 0 R/Title(An Introduction to Scheme and its Implementation - Where the Empty List Got its Name)>>endobj1921 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1922 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 1923 0 R>>endobj1923 0 obj<</Annots 1926 0 R/Parent 2031 0 R/ID 1942 0 R/StructParents 71/Contents 1938 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1924 0 obj[1922 0 R]endobj1925 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1926 0 obj[1925 0 R 1927 0 R 1928 0 R 1929 0 R 1930 0 R 1932 0 R 1933 0 R 1934 0 R 1935 0 R 1936 0 R 1937 0 R]endobj1927 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1896 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_39.html)/S/URI>>/Border[0 0 0]>>endobj1928 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1949 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_41.html)/S/URI>>/Border[0 0 0]>>endobj1929 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1930 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1931 0 obj[1923 0 R/XYZ 0 731.2 null]endobj1932 0 obj<</Rect[10.0 693.431 367.275 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC42)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC42)/S/URI>>/Border[0 0 0]>>endobj1933 0 obj<</Rect[65.608 517.415 88.162 532.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1934 0 obj<</Rect[95.162 517.415 143.378 532.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1896 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_39.html)/S/URI>>/Border[0 0 0]>>endobj1935 0 obj<</Rect[150.378 517.415 174.486 532.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1949 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_41.html)/S/URI>>/Border[0 0 0]>>endobj1936 0 obj<</Rect[181.486 517.415 200.932 532.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1937 0 obj<</Rect[251.094 517.415 343.634 532.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1938 0 obj<</Length 3031>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Some Handy Procedures\ that Operate on Lists)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
367.275 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Some Handy Procedures that Operate on Lists)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(Scheme provides a variety of procedures for operating on lists, so that \you usually don't have to think )Tj
0 -1.2 TD
(about pairs--you can think about whole lists. I'll discuss these procedu\res in more detail later )Tj
/T1_2 1 Tf
([ put in )Tj
T*
(link ])Tj
/T1_0 1 Tf
(, but here's a brief introduction. )Tj
0 -2.557 TD
(None of these procedures modifies its arguments--they may take lists as \arguments, but they return )Tj
/T1_2 1 Tf
(new)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(lists without modifying the old ones. )Tj
ET
0.5 0.5 0.5 rg
10 540.815 m
10 542.815 l
602 542.815 l
601 541.815 l
11 541.815 l
11 541.815 l
h
f
0.875 0.875 0.875 rg
602 542.815 m
602 540.815 l
10 540.815 l
11 541.815 l
601 541.815 l
601 541.815 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 521.7909 Tm
(Go to the )Tj
ET
0.706 w 
65.608 519.674 m
88.162 519.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 521.7909 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 519.674 m
143.378 519.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 521.7909 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 519.674 m
174.486 519.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 521.7909 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 519.674 m
200.932 519.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 521.7909 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 519.674 m
343.634 519.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 521.7909 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_40.html11/3/2006 8:5\8:25 PM)Tj
ET
EMC 

endstreamendobj1939 0 obj(An Introduction to Scheme and its Implementation - Some Handy Procedures that Operate on Lists)endobj1940 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_40.html)/S 700 0 R>>endobj1941 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_40.html)endobj1942 0 obj(¯ß=÷èIWi¿M9˙Q)endobj1943 0 obj<</TS(D:20061104045825)/ID 1942 0 R/CT(text/html)/O[1923 0 R]/S/SPS/T 1939 0 R/TID 1945 0 R/SI 1944 0 R>>endobj1944 0 obj<</TS(D:20061104045825)/AU 1941 0 R>>endobj1945 0 obj(|£ü,B¢·pf| ˜éd)endobj1946 0 obj<</Parent 710 0 R/Next 1973 0 R/Dest[1923 0 R/XYZ 0 792 null]/Prev 1920 0 R/SE 1922 0 R/Title(An Introduction to Scheme and its Implementation - Some Handy Procedures that Operate on Lists)>>endobj1947 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1948 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 1949 0 R>>endobj1949 0 obj<</Annots 1952 0 R/Parent 2031 0 R/ID 1969 0 R/StructParents 72/Contents 1965 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1950 0 obj[1948 0 R]endobj1951 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1952 0 obj[1951 0 R 1953 0 R 1954 0 R 1955 0 R 1956 0 R 1958 0 R 1960 0 R 1961 0 R 1962 0 R 1963 0 R 1964 0 R]endobj1953 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1923 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_40.html)/S/URI>>/Border[0 0 0]>>endobj1954 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1976 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_42.html)/S/URI>>/Border[0 0 0]>>endobj1955 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1956 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1957 0 obj[1949 0 R/XYZ 0 731.2 null]endobj1958 0 obj<</Rect[10.0 693.431 68.1538 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC43)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC43)/S/URI>>/Border[0 0 0]>>endobj1959 0 obj[1949 0 R/XYZ 0 671.815 null]endobj1960 0 obj<</Rect[65.608 586.681 88.162 601.681]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1961 0 obj<</Rect[95.162 586.681 143.378 601.681]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1923 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_40.html)/S/URI>>/Border[0 0 0]>>endobj1962 0 obj<</Rect[150.378 586.681 174.486 601.681]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1976 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_42.html)/S/URI>>/Border[0 0 0]>>endobj1963 0 obj<</Rect[181.486 586.681 200.932 601.681]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1964 0 obj<</Rect[251.094 586.681 343.634 601.681]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1965 0 obj<</Length 2668>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - length)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
0.814 w 
10 695.805 m
68.154 695.805 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.2479 Tm
(length)Tj
0 0 0 rg
/T1_2 1 Tf
14 0 0 14 10 659.7235 Tm
(length)Tj
/T1_0 1 Tf
( takes one argument, a list, and returns an integer giving the length of\ the list. For example, )Tj
/T1_2 1 Tf
0 -1.205 TD
(\(length '\(0 #t #f\)\))Tj
/T1_0 1 Tf
( returns )Tj
/T1_2 1 Tf
(3)Tj
/T1_0 1 Tf
(. )Tj
ET
0.5 0.5 0.5 rg
10 610.081 m
10 612.081 l
602 612.081 l
601 611.081 l
11 611.081 l
11 611.081 l
h
f
0.875 0.875 0.875 rg
602 612.081 m
602 610.081 l
10 610.081 l
11 611.081 l
601 611.081 l
601 611.081 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 591.0562 Tm
(Go to the )Tj
ET
0.706 w 
65.608 588.939 m
88.162 588.939 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 591.0562 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 588.939 m
143.378 588.939 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 591.0562 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 588.939 m
174.486 588.939 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 591.0562 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 588.939 m
200.932 588.939 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 591.0562 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 588.939 m
343.634 588.939 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 591.0562 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_41.html11/3/2006 8:5\8:30 PM)Tj
ET
EMC 

endstreamendobj1966 0 obj(An Introduction to Scheme and its Implementation - length)endobj1967 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_41.html)/S 700 0 R>>endobj1968 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_41.html)endobj1969 0 obj(?TÉW\n¨ÿUΩÆ%|DU)endobj1970 0 obj<</TS(D:20061104045830)/ID 1969 0 R/CT(text/html)/O[1949 0 R]/S/SPS/T 1966 0 R/TID 1972 0 R/SI 1971 0 R>>endobj1971 0 obj<</TS(D:20061104045830)/AU 1968 0 R>>endobj1972 0 obj(…2˜:4ä⁄∑4¯¨·<,)endobj1973 0 obj<</Parent 710 0 R/Next 2000 0 R/Dest[1949 0 R/XYZ 0 792 null]/Prev 1946 0 R/SE 1948 0 R/Title(An Introduction to Scheme and its Implementation - length)>>endobj1974 0 obj<</TextDecorationType/Underline/O/Layout>>endobj1975 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 1976 0 R>>endobj1976 0 obj<</Annots 1979 0 R/Parent 2031 0 R/ID 1996 0 R/StructParents 73/Contents 1992 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj1977 0 obj[1975 0 R]endobj1978 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1979 0 obj[1978 0 R 1980 0 R 1981 0 R 1982 0 R 1983 0 R 1985 0 R 1987 0 R 1988 0 R 1989 0 R 1990 0 R 1991 0 R]endobj1980 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1949 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_41.html)/S/URI>>/Border[0 0 0]>>endobj1981 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2003 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_43.html)/S/URI>>/Border[0 0 0]>>endobj1982 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1983 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1984 0 obj[1976 0 R/XYZ 0 731.2 null]endobj1985 0 obj<</Rect[10.0 695.8 43.6 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC44)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC44)/S/URI>>/Border[0 0 0]>>endobj1986 0 obj[1976 0 R/XYZ 0 674.4 null]endobj1987 0 obj<</Rect[65.608 397.461 88.162 412.461]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj1988 0 obj<</Rect[95.162 397.461 143.378 412.461]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1949 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_41.html)/S/URI>>/Border[0 0 0]>>endobj1989 0 obj<</Rect[150.378 397.461 174.486 412.461]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2003 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_43.html)/S/URI>>/Border[0 0 0]>>endobj1990 0 obj<</Rect[181.486 397.461 200.932 412.461]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj1991 0 obj<</Rect[251.094 397.461 343.634 412.461]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj1992 0 obj<</Length 3665>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - list)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
10 697.991 m
43.6 697.991 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 700.1082 Tm
(list)Tj
0 0 0 rg
/T1_2 1 Tf
0 -2.7 TD
(list)Tj
/T1_0 1 Tf
( takes one or more arguments and constructs a list of those items. That \is, a cdr-linked, null-)Tj
0 -1.205 TD
(terminated sequence of pairs is created, where each pair's )Tj
/T1_2 1 Tf
(car)Tj
/T1_0 1 Tf
( fields holds one of the values passed to )Tj
/T1_2 1 Tf
0 -1.205 TD
(list)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Notice that this is different from )Tj
/T1_2 1 Tf
(cons)Tj
/T1_0 1 Tf
(, in that the arguments are not lists in general--they're just any )Tj
0 -1.2 TD
(items that should be put into a list. )Tj
0 -2.562 TD
(Intuitively, we often use )Tj
/T1_2 1 Tf
(cons)Tj
/T1_0 1 Tf
( to push one item onto a list that already exists, but we use )Tj
/T1_2 1 Tf
(list)Tj
/T1_0 1 Tf
( to create )Tj
0 -1.2 TD
(a list from scratch. )Tj
0 -2.562 TD
(Notice that if we hand list just one argument, e.g., )Tj
/T1_2 1 Tf
(\(list 1\))Tj
/T1_0 1 Tf
(, that creates one pair whose )Tj
/T1_2 1 Tf
(cdr)Tj
/T1_0 1 Tf
( is null )Tj
0 -1.205 TD
(and whose car is the given argument. In contrast, if we use )Tj
/T1_2 1 Tf
(cons)Tj
/T1_0 1 Tf
( to create a one-element list, we must )Tj
0 -1.205 TD
(pass it that element )Tj
/T1_3 1 Tf
(and)Tj
/T1_0 1 Tf
( an empty list to serve as the )Tj
/T1_2 1 Tf
(cdr)Tj
/T1_0 1 Tf
( value: )Tj
/T1_2 1 Tf
(\(cons 1 '\(\)\))Tj
/T1_0 1 Tf
(. )Tj
ET
0.5 0.5 0.5 rg
10 420.861 m
10 422.861 l
602 422.861 l
601 421.861 l
11 421.861 l
11 421.861 l
h
f
0.875 0.875 0.875 rg
602 422.861 m
602 420.861 l
10 420.861 l
11 421.861 l
601 421.861 l
601 421.861 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 401.8364 Tm
(Go to the )Tj
ET
65.608 399.72 m
88.162 399.72 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 401.8364 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 399.72 m
143.378 399.72 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 401.8364 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 399.72 m
174.486 399.72 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 401.8364 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 399.72 m
200.932 399.72 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 401.8364 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 399.72 m
343.634 399.72 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 401.8364 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_42.html11/3/2006 8:5\8:36 PM)Tj
ET
EMC 

endstreamendobj1993 0 obj(An Introduction to Scheme and its Implementation - list)endobj1994 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_42.html)/S 700 0 R>>endobj1995 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_42.html)endobj1996 0 obj(:ºã˚hÖIN’r\rMc6)endobj1997 0 obj<</TS(D:20061104045836)/ID 1996 0 R/CT(text/html)/O[1976 0 R]/S/SPS/T 1993 0 R/TID 1999 0 R/SI 1998 0 R>>endobj1998 0 obj<</TS(D:20061104045836)/AU 1995 0 R>>endobj1999 0 obj(¬ôjV ⁄Åﬁ“ŒÏ\r‰˚j)endobj2000 0 obj<</Parent 710 0 R/Next 2027 0 R/Dest[1976 0 R/XYZ 0 792 null]/Prev 1973 0 R/SE 1975 0 R/Title(An Introduction to Scheme and its Implementation - list)>>endobj2001 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2002 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 2003 0 R>>endobj2003 0 obj<</Annots 2006 0 R/Parent 2031 0 R/ID 2023 0 R/StructParents 74/Contents 2019 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2004 0 obj[2002 0 R]endobj2005 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2006 0 obj[2005 0 R 2007 0 R 2008 0 R 2009 0 R 2010 0 R 2012 0 R 2014 0 R 2015 0 R 2016 0 R 2017 0 R 2018 0 R]endobj2007 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1976 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_42.html)/S/URI>>/Border[0 0 0]>>endobj2008 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2030 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_44.html)/S/URI>>/Border[0 0 0]>>endobj2009 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2010 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2011 0 obj[2003 0 R/XYZ 0 731.2 null]endobj2012 0 obj<</Rect[10.0 695.8 60.4 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC45)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC45)/S/URI>>/Border[0 0 0]>>endobj2013 0 obj[2003 0 R/XYZ 0 674.4 null]endobj2014 0 obj<</Rect[65.608 165.928 88.162 180.928]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2015 0 obj<</Rect[95.162 165.928 143.378 180.928]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[1976 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_42.html)/S/URI>>/Border[0 0 0]>>endobj2016 0 obj<</Rect[150.378 165.928 174.486 180.928]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2030 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_44.html)/S/URI>>/Border[0 0 0]>>endobj2017 0 obj<</Rect[181.486 165.928 200.932 180.928]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2018 0 obj<</Rect[251.094 165.928 343.634 180.928]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2019 0 obj<</Length 4254>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - append)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
10 697.991 m
60.4 697.991 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 700.1082 Tm
(append)Tj
0 0 0 rg
/T1_2 1 Tf
0 -2.7 TD
(append)Tj
/T1_0 1 Tf
( takes two or more lists and constructs a new list with all of their ele\ments. For example, )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(append '\(1 2\) '\(3 4\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(returns a list )Tj
/T1_2 1 Tf
(\(1 2 3 4\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Notice that this is different from what )Tj
/T1_2 1 Tf
(list)Tj
/T1_0 1 Tf
( does: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(list '\(1 2\) '\(3 4\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(returns )Tj
/T1_2 1 Tf
(\(\(1 2\) \(3 4\)\))Tj
/T1_0 1 Tf
(, a two element list of the lists it was given. )Tj
/T1_2 1 Tf
(list)Tj
/T1_0 1 Tf
( makes its arguments )Tj
0 -1.2 TD
(elements of the new list, independent of whether the arguments are lists\ or something else. )Tj
/T1_2 1 Tf
0 -2.562 TD
(append)Tj
/T1_0 1 Tf
( requires that its arguments are lists, and makes a list whose elements \are the )Tj
/T1_3 1 Tf
(elements)Tj
/T1_0 1 Tf
( of those )Tj
0 -1.2 TD
(lists--in this case, a four-element list. Intuitively, it concatenates t\he lists it is given. It )Tj
/T1_3 1 Tf
(only)Tj
/T1_0 1 Tf
( concatenates )Tj
T*
(the top-level structure, however--it doesn't "flatten" nested structures\. For example )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(append '\(\(1 2\) \(3 4\)\))Tj
0 -1.2 TD
(        '\(\(5 6\) \(7 8\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(returns )Tj
/T1_2 1 Tf
(\(\(1 2\) \(3 4\) \(5 6\) \(7 8\)\))Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
0 -2.562 TD
(append)Tj
/T1_0 1 Tf
( doesn't modify any of its arguments, but the result of )Tj
/T1_2 1 Tf
(append)Tj
/T1_0 1 Tf
( generally shares structure with )Tj
0 -1.2 TD
(the last list it's given. \(It effectively conses the elements of the ot\her lists onto the last list to create the )Tj
T*
(result list.\) It's therefore dangerous to make a "new" list with append\ and then modify the "old" list. This )Tj
T*
(is one of the reasons side effects are discouraged in Scheme. )Tj
ET
0.5 0.5 0.5 rg
10 189.328 m
10 191.328 l
602 191.328 l
601 190.328 l
11 190.328 l
11 190.328 l
h
f
0.875 0.875 0.875 rg
602 191.328 m
602 189.328 l
10 189.328 l
11 190.328 l
601 190.328 l
601 190.328 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 170.3038 Tm
(Go to the )Tj
ET
65.608 168.187 m
88.162 168.187 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 170.3038 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 168.187 m
143.378 168.187 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 170.3038 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 168.187 m
174.486 168.187 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 170.3038 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 168.187 m
200.932 168.187 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 170.3038 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 168.187 m
343.634 168.187 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 170.3038 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_43.html11/3/2006 8:5\8:41 PM)Tj
ET
EMC 

endstreamendobj2020 0 obj(An Introduction to Scheme and its Implementation - append)endobj2021 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_43.html)/S 700 0 R>>endobj2022 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_43.html)endobj2023 0 obj(ÀU`ˆÏY+dËw¶ß)endobj2024 0 obj<</TS(D:20061104045841)/ID 2023 0 R/CT(text/html)/O[2003 0 R]/S/SPS/T 2020 0 R/TID 2026 0 R/SI 2025 0 R>>endobj2025 0 obj<</TS(D:20061104045841)/AU 2022 0 R>>endobj2026 0 obj(R:“»´,5µ‡‚&äwßï)endobj2027 0 obj<</Parent 710 0 R/Next 2055 0 R/Dest[2003 0 R/XYZ 0 792 null]/Prev 2000 0 R/SE 2002 0 R/Title(An Introduction to Scheme and its Implementation - append)>>endobj2028 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2029 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 2030 0 R>>endobj2030 0 obj<</Annots 2034 0 R/Parent 2113 0 R/ID 2051 0 R/StructParents 75/Contents 2047 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2031 0 obj<</Parent 2059 0 R/Count 5/Type/Pages/Kids[1896 0 R 1923 0 R 1949 0 R 1976 0 R 2003 0 R]>>endobj2032 0 obj[2029 0 R]endobj2033 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2034 0 obj[2033 0 R 2035 0 R 2036 0 R 2037 0 R 2038 0 R 2040 0 R 2042 0 R 2043 0 R 2044 0 R 2045 0 R 2046 0 R]endobj2035 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2003 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_43.html)/S/URI>>/Border[0 0 0]>>endobj2036 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2058 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_45.html)/S/URI>>/Border[0 0 0]>>endobj2037 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2038 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2039 0 obj[2030 0 R/XYZ 0 731.2 null]endobj2040 0 obj<</Rect[10.0 695.8 68.8 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC46)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC46)/S/URI>>/Border[0 0 0]>>endobj2041 0 obj[2030 0 R/XYZ 0 674.4 null]endobj2042 0 obj<</Rect[65.608 445.998 88.162 460.998]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2043 0 obj<</Rect[95.162 445.998 143.378 460.998]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2003 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_43.html)/S/URI>>/Border[0 0 0]>>endobj2044 0 obj<</Rect[150.378 445.998 174.486 460.998]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2058 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_45.html)/S/URI>>/Border[0 0 0]>>endobj2045 0 obj<</Rect[181.486 445.998 200.932 460.998]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2046 0 obj<</Rect[251.094 445.998 343.634 460.998]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2047 0 obj<</Length 2984>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - reverse)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
10 697.991 m
68.8 697.991 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 700.1082 Tm
(reverse)Tj
0 0 0 rg
/T1_2 1 Tf
0 -2.7 TD
(reverse)Tj
/T1_0 1 Tf
( takes one list, and returns a new list with the same elements in the op\posite order. For )Tj
0 -1.2 TD
(example, )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(reverse '\(1 2 3 4\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(returns a list )Tj
/T1_2 1 Tf
(\(4 3 2 1\))Tj
/T1_0 1 Tf
(. Like )Tj
/T1_2 1 Tf
(append)Tj
/T1_0 1 Tf
( only reverses the top-level structure of the list it's given. )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(reverse '\(\(1 2\) \(3 4\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(returns )Tj
/T1_2 1 Tf
(\(\(3 4\) \(1 2\)\))Tj
/T1_0 1 Tf
(, not )Tj
/T1_2 1 Tf
(\(\(4 3\) \(2 1\)\))Tj
/T1_0 1 Tf
( )Tj
ET
0.5 0.5 0.5 rg
10 469.398 m
10 471.398 l
602 471.398 l
601 470.398 l
11 470.398 l
11 470.398 l
h
f
0.875 0.875 0.875 rg
602 471.398 m
602 469.398 l
10 469.398 l
11 470.398 l
601 470.398 l
601 470.398 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 450.3734 Tm
(Go to the )Tj
ET
65.608 448.257 m
88.162 448.257 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 450.3734 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 448.257 m
143.378 448.257 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 450.3734 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 448.257 m
174.486 448.257 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 450.3734 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 448.257 m
200.932 448.257 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 450.3734 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 448.257 m
343.634 448.257 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 450.3734 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_44.html11/3/2006 8:5\8:47 PM)Tj
ET
EMC 

endstreamendobj2048 0 obj(An Introduction to Scheme and its Implementation - reverse)endobj2049 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_44.html)/S 700 0 R>>endobj2050 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_44.html)endobj2051 0 obj(»!ÖÙú◊yÕ*|˙#|ÏΩ±)endobj2052 0 obj<</TS(D:20061104045847)/ID 2051 0 R/CT(text/html)/O[2030 0 R]/S/SPS/T 2048 0 R/TID 2054 0 R/SI 2053 0 R>>endobj2053 0 obj<</TS(D:20061104045847)/AU 2050 0 R>>endobj2054 0 obj(œ∑s π¸—€ÏQ≈n[ ¡)endobj2055 0 obj<</Parent 710 0 R/Next 2083 0 R/Dest[2030 0 R/XYZ 0 792 null]/Prev 2027 0 R/SE 2029 0 R/Title(An Introduction to Scheme and its Implementation - reverse)>>endobj2056 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2057 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 2058 0 R>>endobj2058 0 obj<</Annots 2062 0 R/Parent 2113 0 R/ID 2079 0 R/StructParents 76/Contents 2075 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2059 0 obj<</Parent 4701 0 R/Count 25/Type/Pages/Kids[1633 0 R 1726 0 R 1838 0 R 1897 0 R 2031 0 R]>>endobj2060 0 obj[2057 0 R]endobj2061 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2062 0 obj[2061 0 R 2063 0 R 2064 0 R 2065 0 R 2066 0 R 2068 0 R 2070 0 R 2071 0 R 2072 0 R 2073 0 R 2074 0 R]endobj2063 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2030 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_44.html)/S/URI>>/Border[0 0 0]>>endobj2064 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2086 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html)/S/URI>>/Border[0 0 0]>>endobj2065 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2066 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2067 0 obj[2058 0 R/XYZ 0 731.2 null]endobj2068 0 obj<</Rect[10.0 695.8 60.4 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC47)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC47)/S/URI>>/Border[0 0 0]>>endobj2069 0 obj[2058 0 R/XYZ 0 674.4 null]endobj2070 0 obj<</Rect[65.608 361.93 88.162 376.93]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2071 0 obj<</Rect[95.162 361.93 143.378 376.93]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2030 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_44.html)/S/URI>>/Border[0 0 0]>>endobj2072 0 obj<</Rect[150.378 361.93 174.486 376.93]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2086 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html)/S/URI>>/Border[0 0 0]>>endobj2073 0 obj<</Rect[181.486 361.93 200.932 376.93]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2074 0 obj<</Rect[251.094 361.93 343.634 376.93]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2075 0 obj<</Length 3568>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - member)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
10 697.991 m
60.4 697.991 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 700.1082 Tm
(member)Tj
0 0 0 rg
/T1_2 1 Tf
0 -2.7 TD
(member)Tj
/T1_0 1 Tf
( takes any value and a list, and searches the list for that value. If it\ finds it, it returns a pointer to )Tj
0 -1.2 TD
(the first )Tj
/T1_3 1 Tf
(pair)Tj
/T1_0 1 Tf
( whose car holds that value, i.e., the "rest" of the list starting at th\e point where the searched-)Tj
0 -1.205 TD
(for item was found. If it is not found, )Tj
/T1_2 1 Tf
(#f)Tj
/T1_0 1 Tf
( is returned. \(The return value is therefore always either a pair )Tj
0 -1.2 TD
(or the false object.\) )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(member 22 '\(18 22 #f 300\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(returns )Tj
/T1_2 1 Tf
(\(22 #f 300\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Notice that member can be used either to find a value's location in a li\st, or as a predicate to check )Tj
0 -1.205 TD
(whether the item is in the list at all. Since pairs are true values, you\ can use the result of )Tj
/T1_2 1 Tf
(member)Tj
/T1_0 1 Tf
( in a )Tj
0 -1.2 TD
(conditional expression and it will count as true if the item is found. )Tj
0 -2.557 TD
([ Maybe I should introduce strings and symbols here, moving some materia\l from the tutorial chapter )Tj
0 -1.2 TD
(here and possibly expanding the tutorial with more examples. ] )Tj
ET
0.5 0.5 0.5 rg
10 385.33 m
10 387.33 l
602 387.33 l
601 386.33 l
11 386.33 l
11 386.33 l
h
f
0.875 0.875 0.875 rg
602 387.33 m
602 385.33 l
10 385.33 l
11 386.33 l
601 386.33 l
601 386.33 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 366.306 Tm
(Go to the )Tj
ET
65.608 364.189 m
88.162 364.189 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 366.306 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 364.189 m
143.378 364.189 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 366.306 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 364.189 m
174.486 364.189 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 366.306 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 364.189 m
200.932 364.189 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 366.306 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 364.189 m
343.634 364.189 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 366.306 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_45.html11/3/2006 8:5\8:52 PM)Tj
ET
EMC 

endstreamendobj2076 0 obj(An Introduction to Scheme and its Implementation - member)endobj2077 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_45.html)/S 700 0 R>>endobj2078 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_45.html)endobj2079 0 obj(ˆ≥ÉXÔä9Cd^Æb#õaÿ)endobj2080 0 obj<</TS(D:20061104045852)/ID 2079 0 R/CT(text/html)/O[2058 0 R]/S/SPS/T 2076 0 R/TID 2082 0 R/SI 2081 0 R>>endobj2081 0 obj<</TS(D:20061104045852)/AU 2078 0 R>>endobj2082 0 obj(õÑª÷ˆMó˙A_¨÷j]t≠)endobj2083 0 obj<</Parent 710 0 R/Next 2159 0 R/Dest[2058 0 R/XYZ 0 792 null]/Prev 2055 0 R/SE 2057 0 R/Title(An Introduction to Scheme and its Implementation - member)>>endobj2084 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2085 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 2101 0 R/Type/MCR>><</MCID 0/Pg 2110 0 R/Type/MCR>><</MCID 0/Pg 2112 0 R/Type/MCR>><</MCID 0/Pg 2115 0 R/Type/MCR>><</MCID 0/Pg 2124 0 R/Type/MCR>><</MCID 0/Pg 2126 0 R/Type/MCR>><</MCID 0/Pg 2131 0 R/Type/MCR>><</MCID 0/Pg 2133 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 2086 0 R>>endobj2086 0 obj<</Annots 2089 0 R/Parent 2113 0 R/ID 2155 0 R/StructParents 77/Contents 2143 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R/T1_4 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2087 0 obj[2085 0 R]endobj2088 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2089 0 obj[2088 0 R 2090 0 R 2091 0 R 2092 0 R 2093 0 R 2097 0 R 2099 0 R]endobj2090 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2058 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_45.html)/S/URI>>/Border[0 0 0]>>endobj2091 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2162 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_47.html)/S/URI>>/Border[0 0 0]>>endobj2092 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2093 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2094 0 obj[2086 0 R/XYZ 0 731.2 null]endobj2095 0 obj<</Limits[(ÎŸß%¢6•°Wª<A`ÙSEC41)(õªÖ\(ùO¯»'≈´ÍIDX29)]/Names[]>>endobj2096 0 obj<</Limits[(õªÖ\(ùO¯»'≈´ÍIDX30)(÷ﬂªTD_í\(\nÄ…«ìSEC4)]/Names[]>>endobj2097 0 obj<</Rect[10.0 689.877 451.659 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC48)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC48)/S/URI>>/Border[0 0 0]>>endobj2098 0 obj[2086 0 R/XYZ 0 356.536 null]endobj2099 0 obj<</Rect[10.0 337.767 68.1538 354.921]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC49)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC49)/S/URI>>/Border[0 0 0]>>endobj2100 0 obj[2086 0 R/XYZ 0 316.152 null]endobj2101 0 obj<</Annots 2105 0 R/Parent 2113 0 R/ID 2155 0 R/StructParents 78/Contents 2144 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R/T1_3 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2102 0 obj[2085 0 R]endobj2103 0 obj[2101 0 R/XYZ 0 183.141 null]endobj2104 0 obj<</Rect[10.0 164.372 116.809 181.525]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC50)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC50)/S/URI>>/Border[0 0 0]>>endobj2105 0 obj[2104 0 R]endobj2106 0 obj[2101 0 R/XYZ 0 142.756 null]endobj2107 0 obj[2101 0 R/XYZ 0 142.756 null]endobj2108 0 obj[2101 0 R/XYZ 0 142.756 null]endobj2109 0 obj[2101 0 R/XYZ 0 142.756 null]endobj2110 0 obj<</Parent 2113 0 R/ID 2155 0 R/StructParents 79/Contents 2145 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2111 0 obj[2085 0 R]endobj2112 0 obj<</Parent 2134 0 R/ID 2155 0 R/StructParents 80/Contents 2146 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 737 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2113 0 obj<</Parent 2470 0 R/Count 5/Type/Pages/Kids[2030 0 R 2058 0 R 2086 0 R 2101 0 R 2110 0 R]>>endobj2114 0 obj[2085 0 R]endobj2115 0 obj<</Annots 2119 0 R/Parent 2134 0 R/ID 2155 0 R/StructParents 81/Contents 2147 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R/T1_2 736 0 R/T1_3 828 0 R/T1_4 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2116 0 obj[2115 0 R/XYZ 0 748.724 null]endobj2117 0 obj[2085 0 R]endobj2118 0 obj<</Rect[10.0 729.753 173.703 747.109]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC51)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC51)/S/URI>>/Border[0 0 0]>>endobj2119 0 obj[2118 0 R 2123 0 R]endobj2120 0 obj[2115 0 R/XYZ 0 708.137 null]endobj2121 0 obj[2115 0 R/XYZ 0 708.137 null]endobj2122 0 obj[2115 0 R/XYZ 0 567.002 null]endobj2123 0 obj<</Rect[10.0 550.602 60.4 565.602]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC52)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC52)/S/URI>>/Border[0 0 0]>>endobj2124 0 obj<</Parent 2134 0 R/ID 2155 0 R/StructParents 82/Contents 2148 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2125 0 obj[2085 0 R]endobj2126 0 obj<</Annots 2130 0 R/Parent 2134 0 R/ID 2155 0 R/StructParents 83/Contents 2149 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2127 0 obj[2085 0 R]endobj2128 0 obj[2126 0 R/XYZ 0 521.596 null]endobj2129 0 obj<</Rect[10.0 505.196 68.8 520.196]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC53)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC53)/S/URI>>/Border[0 0 0]>>endobj2130 0 obj[2129 0 R]endobj2131 0 obj<</Parent 2134 0 R/ID 2155 0 R/StructParents 84/Contents 2150 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2132 0 obj[2085 0 R]endobj2133 0 obj<</Annots 2137 0 R/Parent 2254 0 R/ID 2155 0 R/StructParents 85/Contents 2151 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2134 0 obj<</Parent 2470 0 R/Count 5/Type/Pages/Kids[2112 0 R 2115 0 R 2124 0 R 2126 0 R 2131 0 R]>>endobj2135 0 obj[2085 0 R]endobj2136 0 obj<</Rect[226.594 259.115 309.04 274.115]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(òZè+áI⁄øWº÷i‰osëSEC99)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_93.html#SEC99)/S/URI>>/Border[0 0 0]>>endobj2137 0 obj[2136 0 R 2138 0 R 2139 0 R 2140 0 R 2141 0 R 2142 0 R]endobj2138 0 obj<</Rect[65.608 205.315 88.162 220.315]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2139 0 obj<</Rect[95.162 205.315 143.378 220.315]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2058 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_45.html)/S/URI>>/Border[0 0 0]>>endobj2140 0 obj<</Rect[150.378 205.315 174.486 220.315]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2162 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_47.html)/S/URI>>/Border[0 0 0]>>endobj2141 0 obj<</Rect[181.486 205.315 200.932 220.315]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2142 0 obj<</Rect[251.094 205.315 343.634 220.315]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2143 0 obj<</Length 4702>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion Over Data S\tructures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
451.659 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Recursion Over Lists and Other Data Structures)Tj
0 0 0 rg
/T1_2 1 Tf
14 0 0 14 10 655.914 Tm
([ This section is a little out of place--need to introduce type and equa\lity predicates first! Those have )Tj
0 -1.2 TD
(been presented in class, so this should be comprehensible anyway. Need t\o make this a separate hunk, )Tj
T*
(and move it after the next hunk. ])Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
([ Also need to introduce tail recursion somewhere early, and fwd ref )Tj
T*
(the chapter on recursion. ] )Tj
/T1_0 1 Tf
(In this section I'll demonstrate the most common idioms for recursion ov\er )Tj
T*
(simple data structures--lists and trees. )Tj
0 -2.562 TD
(Some of the examples will be implementations of standard Scheme procedur\es like )Tj
/T1_3 1 Tf
(length)Tj
/T1_0 1 Tf
(, )Tj
/T1_3 1 Tf
(list)Tj
/T1_0 1 Tf
(, )Tj
/T1_3 1 Tf
0 -1.205 TD
(append)Tj
/T1_0 1 Tf
(, and )Tj
/T1_3 1 Tf
(reverse)Tj
/T1_0 1 Tf
(. Scheme already has these procedures built in, but you should understan\d how )Tj
T*
(they can be implemented using simpler procedures like )Tj
/T1_3 1 Tf
(cdr)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(cons)Tj
/T1_0 1 Tf
(. You'll inevitably have to write )Tj
0 -1.2 TD
(special-purpose procedures that are slightly different, but coded simila\rly. \(In later chapters, I'll show )Tj
0 -1.2 TD
(some more advanced programming techniques that let you implement more ge\neral and/or efficient )Tj
0 -1.2 TD
(procedures like these.\) )Tj
0 -2.557 TD
(I'll also show a few other handy procedures for operating on lists, e.g.\, a list-copying routine. )Tj
0 -2.557 TD
(Then I'll show recursion over simple binary trees of pairs. The normal s\tyle for recursion over trees in )Tj
0 -1.2 TD
(Scheme is slightly different from what you may be used to in languages l\ike C or Pascal--and simpler. )Tj
ET
0.814 w 
10 340.142 m
68.154 340.142 l
S
0 0 1 rg
BT
/T1_4 1 Tf
16.1538 0 0 16.1538 10 342.5842 Tm
(length)Tj
0 0 0 rg
/T1_3 1 Tf
14 0 0 14 10 304.0598 Tm
(length)Tj
/T1_0 1 Tf
( is the standard Scheme procedure that returns the length of a list. It \only counts the elements )Tj
0 -1.205 TD
(along the spine of the list \(down the )Tj
/T1_3 1 Tf
(cdr)Tj
/T1_0 1 Tf
('s\). )Tj
0 -2.557 TD
(It's easy to do this using recursion. The length of a list is 0 if the l\ist is empty, and otherwise it's 1 plus )Tj
0 -1.205 TD
(the length of the rest of the list. Here's the easiest way to define )Tj
/T1_3 1 Tf
(length)Tj
/T1_0 1 Tf
(: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define \(length lis\))Tj
0 -1.2 TD
(   \(cond \(\(null? lis\))Tj
T*
(          0\))Tj
T*
(         \(else)Tj
T*
(          \(+ 1 \(length \(cdr lis\)\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(The main thing to notice about this example is the recursive structure. \The procedure can accept a )Tj
0 -1.205 TD
(pointer to )Tj
/T1_2 1 Tf
(either)Tj
/T1_0 1 Tf
( a pair )Tj
/T1_3 1 Tf
(or)Tj
/T1_0 1 Tf
( the empty list. The structure of the procedure corresponds directly to \the )Tj
T*
(recursive definition of a \(proper\) list. The two-part )Tj
/T1_3 1 Tf
(cond)Tj
/T1_0 1 Tf
( corresponds to the fact that there are two rules )Tj
0 -1.2 TD
(that characterize lists; it figures out which case we're dealing with. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_46.html \(1 of 9\)11\/3/2006 8:58:58 PM)Tj
ET
EMC 

endstreamendobj2144 0 obj<</Length 4144>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion Over Data S\tructures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 739.3902 Tm
(We explicitly checked for the end-of-list case, but we implicitly )Tj
/T1_1 1 Tf
(assumed)Tj
/T1_0 1 Tf
( that otherwise the object being )Tj
0 -1.2 TD
(operated on is a pair. This might seem like bad style, but actually it's\ )Tj
/T1_1 1 Tf
(good)Tj
/T1_0 1 Tf
(, because it ensures that an )Tj
T*
(error will be signaled if the argument to length is not the empty list o\r a pair--the second branch of the )Tj
/T1_2 1 Tf
0 -1.205 TD
(cond)Tj
/T1_0 1 Tf
( will be taken \(erroneously\), but the attempt to evaluate )Tj
/T1_2 1 Tf
(\(cdr lis\))Tj
/T1_0 1 Tf
( will signal an error. )Tj
0 -2.562 TD
(We could make this clearer by using a three-branch )Tj
/T1_2 1 Tf
(cond)Tj
/T1_0 1 Tf
(, with separate branches for the two valid )Tj
0 -1.2 TD
(cases and the error case: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(length lis\))Tj
0 -1.2 TD
(   \(cond \(\(null? lis\))Tj
T*
(          0\))Tj
T*
(         \(\(pair? lis\))Tj
T*
(          \(+ 1 \(length \(cdr lis\)\)\)\))Tj
T*
(         \(else)Tj
T*
(          \(error "invalid argument to length"\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Here I've used the error-signaling procedure )Tj
/T1_2 1 Tf
(error)Tj
/T1_0 1 Tf
(, which stops execution and signals an error. \(In )Tj
0 -1.205 TD
(most systems, the error message )Tj
/T1_2 1 Tf
("invalid argument to length")Tj
/T1_0 1 Tf
( will be printed and the user )Tj
0 -1.205 TD
(will be presented with a break prompt for debugging the problem.\) Unfor\tunately, )Tj
/T1_2 1 Tf
(error)Tj
/T1_0 1 Tf
( is not )Tj
0 -1.2 TD
(supported by all Scheme systems. \(Later I'll show an implementation tha\t should work reasonably well )Tj
T*
(in any Scheme system.\) )Tj
0 -2.562 TD
(Also note that in this example, I've used )Tj
/T1_2 1 Tf
(lis)Tj
/T1_0 1 Tf
( as the name of a list argument, rather than )Tj
/T1_2 1 Tf
(list)Tj
/T1_0 1 Tf
(. That's )Tj
0 -1.205 TD
(because there's a standard Scheme procedure named )Tj
/T1_2 1 Tf
(list)Tj
/T1_0 1 Tf
(, which will be shadowed by any local )Tj
0 -1.2 TD
(variable with the same name. \(This is because of Scheme's )Tj
/T1_1 1 Tf
(unified namespace)Tj
/T1_0 1 Tf
(---you can't have a )Tj
0 -1.205 TD
(variable and a procedure with the same name, for reasons that will be ex\plained later; )Tj
/T1_2 1 Tf
(list)Tj
/T1_0 1 Tf
( seems to be )Tj
0 -1.2 TD
(the only identifier for which this is commonly a problem.\) )Tj
0 -2.562 TD
(The above definition of )Tj
/T1_2 1 Tf
(length)Tj
/T1_0 1 Tf
( is not tail recursive--after calling itself, there must be a return so \that )Tj
/T1_2 1 Tf
(1)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(can be added to the value and returned. Later I'll show a more efficient\, tail-recursive version of )Tj
/T1_2 1 Tf
0 -1.205 TD
(length)Tj
/T1_0 1 Tf
(, and a more general procedure called )Tj
/T1_2 1 Tf
(reduce)Tj
/T1_0 1 Tf
( that can be used to construct a variety of )Tj
0 -1.2 TD
(procedures whose basic algorithm is similar. )Tj
ET
0 0 1 RG
1.357 w 10 M 0 j 0 J []0 d 
10 164.916 m
116.809 164.916 l
S
0 0 1 rg
BT
/T1_3 1 Tf
16.1538 0 0 16.1538 10 168.9865 Tm
(Copying Lists)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 130.7317 Tm
(There are two common senses of copying, )Tj
/T1_1 1 Tf
(shallow)Tj
/T1_0 1 Tf
( copying, and )Tj
/T1_1 1 Tf
(deep)Tj
/T1_0 1 Tf
( copying. A shallow copy makes a )Tj
T*
(copy of one object, and the copy has pointers to the same objects that t\he original did. )Tj
0 -2.557 TD
(A )Tj
/T1_1 1 Tf
(deep)Tj
/T1_0 1 Tf
( copy copies not only the top-level objects in a data structure, but the\ ones below that, and so on )Tj
0 -1.2 TD
(recursively, so that a whole new data structure is created. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_46.html \(2 of 9\)11\/3/2006 8:58:58 PM)Tj
ET
EMC 

endstreamendobj2145 0 obj<</Length 3703>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion Over Data S\tructures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(For lists, which are made up of more than one object, it is often useful\ to copy the spine of the list, i.e., )Tj
0 -1.205 TD
(doing a deep copy along the )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
('s only. We typically think of a list as being like a special kind of )Tj
0 -1.2 TD
(object, even though it's really a sequence of pair objects. It's therefo\re natural to copy "just the list." )Tj
0 -2.562 TD
(If we just want to do a shallow copy, we can define )Tj
/T1_1 1 Tf
(pair-copy)Tj
/T1_0 1 Tf
( to copy a pair, without copying )Tj
0 -1.2 TD
(anything else. )Tj
0 -2.557 TD
(In these examples, I'll assume we only want to copy list structure--that\ is a connected set of pairs. )Tj
0 -1.2 TD
(Whenever we come to something that's not a pair, we stop copying and the\ copy shares structure with )Tj
T*
(the original. \(These aren't standard Scheme procedures.\) )Tj
0 -2.557 TD
(Here's a truly shallow copy, just copying a single pair: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(pair-copy pr\))Tj
0 -1.2 TD
(   \(cons \(car pr\) \(cdr pr\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(If we want to do a deep copy, we can use recursion to copy )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( or )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
( values that are also pairs. The )Tj
0 -1.205 TD
(following code for )Tj
/T1_1 1 Tf
(pair-tree-deep-copy)Tj
/T1_0 1 Tf
( assumes that the structure to be copied is a tree of pairs. )Tj
0 -1.2 TD
(\(If there is any shared structure, it will be copied each time it is re\ached, and the copy will not have the )Tj
T*
(same structure. It will always be a tree. Preserving shared structure wh\ile copying is harder, but can be )Tj
0 -1.205 TD
(done. If there's a directed cycle, )Tj
/T1_1 1 Tf
(pair-tree-deep-copy)Tj
/T1_0 1 Tf
( will loop infinitely.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(pair-tree-deep-copy thing\))Tj
0 -1.2 TD
(   \(if \(not \(pair? thing\)\))Tj
T*
(       thing)Tj
T*
(       \(cons \(pair-tree-deep-copy \(car thing\)\))Tj
T*
(             \(pair-tree-deep-copy \(cdr thing\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that )Tj
/T1_1 1 Tf
(pair-tree-deep-copy)Tj
/T1_0 1 Tf
( works on improper as well as proper lists, but only copies the )Tj
0 -1.2 TD
(pairs. Where it gets to a non-pair value, it stops and just uses the sam\e value in the copy, and the copy )Tj
T*
(shares structure with the original. )Tj
0 -2.562 TD
(The code for )Tj
/T1_1 1 Tf
(pair-tree-deep-copy)Tj
/T1_0 1 Tf
( directly reflects the kind of structure it copies. It can handle )Tj
0 -1.2 TD
(non-pairs, which are assumed to be leaves of the graph of pairs that it'\s copying, and it can handle pairs, )Tj
0 -1.205 TD
(which are assumed to be interior nodes of the tree. Their )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
( values may be leaves of the tree, )Tj
0 -1.2 TD
(or other pairs. )Tj
0 -2.557 TD
(So the recursive definition of a pair-tree is: )Tj
/T1_2 1 Tf
7 0 0 7 35.713 76.2364 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 76.2364 Tm
(a non-pair \(leaf\), or )Tj
/T1_2 1 Tf
7 0 0 7 35.713 59.4364 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 59.4364 Tm
(a pair whose car and cdr are pair-trees )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_46.html \(3 of 9\)11\/3/2006 8:58:58 PM)Tj
ET
EMC 

endstreamendobj2146 0 obj<</Length 3746>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion Over Data S\tructures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.6364 Tm
(The first rule is the base case, i.e., is the simple one that doesn't re\quire recursion. The second is the )Tj
0 -1.2 TD
(recursive rule, which expresses the fact that an interior node's car and\ cdr fields can point to any kind of )Tj
T*
(pair-tree: a leaf, or another interior node whose children may likewise \be leaves or other interior nodes... )Tj
0 -2.557 TD
(This is the easy way to write recursive routines over data structures--f\igure out a recursive description )Tj
0 -1.2 TD
(that exactly describes the expected data structures, and then use that r\ecursive description to write a )Tj
T*
(recursive )Tj
/T1_1 1 Tf
(description)Tj
/T1_0 1 Tf
( of the result you want. Then you can straightforwardly code routine tha\t will )Tj
T*
(traverse the structure and copmute that result. )Tj
0 -2.557 TD
(Generally, we write the base case first, to make it clear where recursio\n ends--and so that we don't forget )Tj
0 -1.2 TD
(to write it and accidentally write infinite recursions or unhandled case\s. If you do this consistently, your )Tj
T*
(code will be more readable and you'll make fewer mistakes. )Tj
0 -2.557 TD
(To copy the spine of a proper list, we can use this description of the a\nswer we want: )Tj
T*
(A copy of a list is )Tj
/T1_2 1 Tf
7 0 0 7 35.713 457.0364 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 457.0364 Tm
(the empty list if the original list is empty, or )Tj
/T1_2 1 Tf
7 0 0 7 35.713 440.169 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 440.169 Tm
(\(if the list is nonempty\) a pair whose )Tj
/T1_3 1 Tf
(car)Tj
/T1_0 1 Tf
( value is the same as the )Tj
/T1_3 1 Tf
(car)Tj
/T1_0 1 Tf
( of the original list, and )Tj
0 -1.205 TD
(whose )Tj
/T1_3 1 Tf
(cdr)Tj
/T1_0 1 Tf
( value is a copy of the rest of the original list. )Tj
-2.857 -2.557 Td
(Here's the code: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define \(list-copy lis\))Tj
0 -1.2 TD
(   \(cond \(\(null? lis\))Tj
T*
(          '\(\)\))Tj
T*
(         \(else)Tj
T*
(          \(cons \(car lis\))Tj
T*
(                \(list-copy \(cdr lis\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(As usual, we only check to see if we're a the end of the list, and other\wise assume the argument is a pair. )Tj
0 -1.205 TD
(Since we take the )Tj
/T1_3 1 Tf
(car)Tj
/T1_0 1 Tf
( and the )Tj
/T1_3 1 Tf
(cdr)Tj
/T1_0 1 Tf
( of the pair in the latter case, we'll get an error if the argument is n\ot )Tj
0 -1.2 TD
(a proper list. This is usually what we want, so that Scheme will signal \an error when it gets to the part of )Tj
T*
(the list with unexpected structure. )Tj
0 -2.562 TD
(The name )Tj
/T1_3 1 Tf
(list-copy)Tj
/T1_0 1 Tf
( was chosen to suggest that it operates on lists, and in Scheme terminol\ogy "list" )Tj
0 -1.2 TD
(means "proper list" by default. If we want a routine that copies imprope\r lists, we should call it )Tj
T*
(something else, and write a comment saying what kinds of things it works\ for. )Tj
0 -2.562 TD
(Actually, lists are so common in Scheme that we could have just called i\t )Tj
/T1_3 1 Tf
(copy)Tj
/T1_0 1 Tf
(. Most procedure names )Tj
0 -1.2 TD
(begin with the name of the kind of structure they operate on, but except\ions are made for lists and for )Tj
T*
(numbers. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_46.html \(4 of 9\)11\/3/2006 8:58:58 PM)Tj
ET
EMC 

endstreamendobj2147 0 obj<</Length 3753>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion Over Data S\tructures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 1 RG
0.814 w 10 M 0 j 0 J []0 d 
10 732.127 m
68.154 732.127 l
S
1.357 w 
68.154 730.499 m
105.857 730.499 l
S
0.814 w 
105.857 732.127 m
173.703 732.127 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 734.5696 Tm
(append)Tj
/T1_2 1 Tf
( and )Tj
/T1_1 1 Tf
(reverse)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 696.0453 Tm
(Two handy operations on lists are )Tj
/T1_3 1 Tf
(append)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(reverse)Tj
/T1_0 1 Tf
(; both are standard Scheme procedures. )Tj
/T1_3 1 Tf
0 -2.562 TD
(append)Tj
/T1_0 1 Tf
( takes any number of lists as arguments, and returns a list with all of \their elements. )Tj
/T1_3 1 Tf
(reverse)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(takes a list and returns a new list, with the same elements but in the o\pposite order. )Tj
0 -2.557 TD
(Note that like most Scheme procedures, neither of these procedures is de\structive--each creates a new )Tj
0 -1.2 TD
(list without side-effecting \(modifying\) its argument\(s\). )Tj
ET
0.706 w 
10 552.794 m
60.4 552.794 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 554.9105 Tm
(append)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.7 TD
(Append works much like )Tj
/T1_3 1 Tf
(list-copy)Tj
/T1_0 1 Tf
( except that we have multiple lists to deal with. )Tj
0 -2.562 TD
(The trick to getting it right is to maintain the essential structure of \)Tj
/T1_3 1 Tf
(list-copy)Tj
/T1_0 1 Tf
(, with the right minor )Tj
0 -1.2 TD
(differences. )Tj
0 -2.562 TD
(For now, let's keep things simple, and just do a two-argument version of\ )Tj
/T1_3 1 Tf
(append)Tj
/T1_0 1 Tf
(, called )Tj
/T1_3 1 Tf
(append2)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Our strategy is to recurse through the first list, like )Tj
/T1_3 1 Tf
(list-copy)Tj
/T1_0 1 Tf
(, copying one element of the list at each )Tj
0 -1.2 TD
(step. When we get to the end, however, the base case is different--rathe\r than terminating the list with )Tj
T*
(the empty list, we just use the second list as the "rest" of the copy we\'re making. )Tj
0 -2.562 TD
(Notice that the base case occurs when the first list is null--the )Tj
/T1_3 1 Tf
(append)Tj
/T1_0 1 Tf
( of an empty list and another list )Tj
0 -1.205 TD
(is just that other list--conceptually, we )Tj
/T1_3 1 Tf
(cons)Tj
/T1_0 1 Tf
( zero items onto the front of that list. Concretely, we can )Tj
0 -1.2 TD
(just return that list. )Tj
0 -2.557 TD
(Here's the recursive characterization of the result we want )Tj
/T1_4 1 Tf
7 0 0 7 35.713 217.9735 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 217.9735 Tm
(if the first list is empty, the result is just the second list )Tj
/T1_4 1 Tf
7 0 0 7 35.713 201.1061 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 201.1061 Tm
(if the first list is nonempty, the result is a pair whose )Tj
/T1_3 1 Tf
(car)Tj
/T1_0 1 Tf
( is the )Tj
/T1_3 1 Tf
(car)Tj
/T1_0 1 Tf
( of the first list, and whose )Tj
/T1_3 1 Tf
0 -1.205 TD
(cdr)Tj
/T1_0 1 Tf
( is the )Tj
/T1_3 1 Tf
(append)Tj
/T1_0 1 Tf
( of the rest of the first list and \(all of\) the second list. )Tj
-2.857 -2.562 Td
(Here's a simple two-argument version of )Tj
/T1_3 1 Tf
(append)Tj
/T1_0 1 Tf
(: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define \(append2 lis1 lis2\))Tj
0 -1.2 TD
(  \(cond \(\(null? lis1\))Tj
T*
(         lis2\))Tj
T*
(        \(else)Tj
T*
(         \(cons \(car lis1\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_46.html \(5 of 9\)11\/3/2006 8:58:58 PM)Tj
ET
EMC 

endstreamendobj2148 0 obj<</Length 3558>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion Over Data S\tructures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(               \(append2 \(cdr lis1\) lis2\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Note that )Tj
/T1_1 1 Tf
(append2)Tj
/T1_0 1 Tf
( copies its first list argument, but the result simply shares a pointer \to the last list )Tj
0 -1.2 TD
(argument--the last list is not copied, so the result shares structure wi\th that list. This is also true of the )Tj
0 -1.205 TD
(standard Scheme function )Tj
/T1_1 1 Tf
(append)Tj
/T1_0 1 Tf
(, which can take any number of lists as arguments. The first )Tj
/T1_2 1 Tf
(n)Tj
/T1_0 1 Tf
(-1 lists )Tj
0 -1.2 TD
(are copied, but the last is shared. )Tj
0 -2.557 TD
(Be sure you understand the concrete operation of the above algorithm. On\ the way down during )Tj
0 -1.2 TD
(recursion, we're taking the first list apart, holding onto one list elem\ent at each step. When we hit the end )Tj
T*
(of the first list, recursion stops and we return the second list. On the\ way back up, we're consing those )Tj
T*
(items onto the new list we're creating, back-to-front. )Tj
0 -2.562 TD
(Suppose we have defined two lists, )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
(, like this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define foo '\(x y z\)\))Tj
0 -1.2 TD
(\(define bar '\(a b\)\))Tj
T*
(\(define baz \(append bar foo\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(The result will be that )Tj
/T1_1 1 Tf
(baz)Tj
/T1_0 1 Tf
( shares structure with )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(, but not with )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
(. Changes to the list via )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( will )Tj
0 -1.205 TD
(also be visible via )Tj
/T1_1 1 Tf
(baz)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(                +----------------------------------------)Tj
0 -1.2 TD
(+                  )Tj
T*
(                |                                        |)Tj
T*
(               \\|/                                       |)Tj
T*
(     +---+    +---+---+     +---+---+      +---+---+     |)Tj
T*
( foo | *-+--->| * | *-+---->| * | *-+----->| * | * |     |)Tj
T*
(     +---+    +-+-+---+     +-+-+---+      +-+-+---+     |)Tj
T*
(                |             |             |            |)Tj
T*
(               \\|/           \\|/           \\|/           |)Tj
T*
(                x             y             z            |)Tj
T*
(                                                         |)Tj
T*
(                                                         |)Tj
T*
(     +---+    +---+---+     +---+---+                    |)Tj
T*
( bar | *-+--->| * | *-+---->| * | * |                    |)Tj
T*
(     +---+    +-+-+---+     +-+-+---+                    |)Tj
T*
(                |             |                          |)Tj
T*
(               \\|/           \\|/                         |)Tj
T*
(                a             b                          |)Tj
T*
(               /|\\           /|\\                         |)Tj
T*
(                |             |                          |)Tj
T*
(     +---+    +---+---+     +---+---+                    |)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_46.html \(6 of 9\)11\/3/2006 8:58:58 PM)Tj
ET
EMC 

endstreamendobj2149 0 obj<</Length 4004>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion Over Data S\tructures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
( baz | *-+--->| * | *-+---->| * | *-+--------------------+)Tj
0 -1.2 TD
(     +---+    +---+---+     +---+---+)Tj
/T1_0 1 Tf
0 -2.557 TD
(In general, the result of )Tj
/T1_1 1 Tf
(append)Tj
/T1_0 1 Tf
( shares structure with the last argument passed to )Tj
/T1_1 1 Tf
(append)Tj
/T1_0 1 Tf
(. If you want )Tj
0 -1.205 TD
(to avoid this, you can pass )Tj
/T1_1 1 Tf
(append)Tj
/T1_0 1 Tf
( an empty list as its last argument. For example )Tj
/T1_1 1 Tf
(\(append '\(1 2 )Tj
0 -1.205 TD
(3\) '\(\)\))Tj
/T1_0 1 Tf
( will copy the list )Tj
/T1_1 1 Tf
(\(1 2 3\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(If you're worried about efficiency, be aware that )Tj
/T1_1 1 Tf
(append)Tj
/T1_0 1 Tf
( takes time proportional to the length of the )Tj
0 -1.205 TD
(lists that must be copied, i.e., all but the last list being )Tj
/T1_1 1 Tf
(append)Tj
/T1_0 1 Tf
(ed. This usually doesn't matter, but it's a )Tj
0 -1.2 TD
(consideration for performance-critical parts of your program, especially\ if you're appending long lists. )Tj
0 -2.562 TD
(\(It's common to )Tj
/T1_1 1 Tf
(append)Tj
/T1_0 1 Tf
( short lists onto the )Tj
/T1_2 1 Tf
(front)Tj
/T1_0 1 Tf
( of long lists, and then )Tj
/T1_1 1 Tf
(reverse)Tj
/T1_0 1 Tf
( the result if )Tj
0 -1.2 TD
(necessary.\) )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
10 507.387 m
68.8 507.387 l
S
0 0 1 rg
BT
/T1_3 1 Tf
14 0 0 14 10 509.5038 Tm
(reverse)Tj
0 0 0 rg
/T1_1 1 Tf
0 -2.7 TD
(reverse)Tj
/T1_0 1 Tf
( returns a reversed copy of a list. )Tj
0 -2.562 TD
(There's an easy \(but slow\) way to define )Tj
/T1_1 1 Tf
(reverse)Tj
/T1_0 1 Tf
( in terms of )Tj
/T1_1 1 Tf
(append)Tj
/T1_0 1 Tf
(. We just take the first element )Tj
0 -1.2 TD
(off the list, reverse the rest of the list, and append the first element\ to the end of the list. We do this )Tj
T*
(recursively, so that each time we reverse the rest of the list, we're do\ing the same thing on a shorter list. )Tj
T*
(When we get down to the end of the list, reversing it is a no-op: the re\verse of an empty list is the empty )Tj
T*
(list. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(reverse lis\))Tj
0 -1.2 TD
(   \(if \(null? lis\))Tj
T*
(       '\(\))Tj
T*
(       \(append \(reverse \(cdr lis\)\))Tj
T*
(               \(list \(car lis\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Think about how this actually works. )Tj
/T1_1 1 Tf
(reverse)Tj
/T1_0 1 Tf
( recurses down the list, calling itself on the )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
( of the )Tj
0 -1.2 TD
(list at each recursive step, until the recursion stops at the end of the\ list. \(This last call returns the empty )Tj
0 -1.205 TD
(list, which is the reverse of the empty list.\) At each step, we use )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( to peel off one element of the list, )Tj
0 -1.2 TD
(and hold onto it until the recursive call returns. )Tj
0 -2.557 TD
(The reversed lists are handed back up through the returns, with the cars\ being slapped on the rear of the )Tj
0 -1.205 TD
(list at each return step. \(To add a single item to the end of the list \using )Tj
/T1_1 1 Tf
(append)Tj
/T1_0 1 Tf
(, we must first put it in )Tj
0 -1.205 TD
(a one-element list using )Tj
/T1_1 1 Tf
(list)Tj
/T1_0 1 Tf
(.\) )Tj
0 -2.557 TD
(We end up constructing the new list back-to-front on the way up from the\ recursion. Going down )Tj
0 -1.2 TD
(recursively tears the list apart, one item at each recursive step, and c\oming back up adds an element to )Tj
T*
(the end of the new list at each step. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_46.html \(7 of 9\)11\/3/2006 8:58:58 PM)Tj
ET
EMC 

endstreamendobj2150 0 obj<</Length 4807>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion Over Data S\tructures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 734.5668 Tm
(This is a good example to understand, both abstractly and concretely. Yo\u should understand the )Tj
0 -1.2 TD
(concrete steps involved in taking a list apart and putting it back toget\her backwards. On the other hand, )Tj
T*
(you should also recognize that the algorithm works )Tj
/T1_1 1 Tf
(even if you don't pay attention to that)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Once you get the hang of recursion, it's often easy to write algorithms \without actually thinking about )Tj
0 -1.2 TD
(the little steps involved, or thinking much about the ordering of steps.\ In this case, it's easy to see that if )Tj
T*
(we can reverse the rest of the list, and append the first item to the en\d of that, we've reversed the whole )Tj
T*
(list. We don't need to think much about the ordering of the operations, \because that falls naturally out of )Tj
0 -1.205 TD
(the way we pass arguments to functions. We can declare that "the )Tj
/T1_2 1 Tf
(reverse)Tj
/T1_0 1 Tf
( of a non-empty list )Tj
/T1_1 1 Tf
(is)Tj
/T1_0 1 Tf
( the )Tj
/T1_2 1 Tf
0 -1.205 TD
(append)Tj
/T1_0 1 Tf
( of the )Tj
/T1_2 1 Tf
(reverse)Tj
/T1_0 1 Tf
( of the rest of the list and \(a list containing\) the first item in the\ list", and then )Tj
0 -1.2 TD
(write the code accordingly, as a )Tj
/T1_1 1 Tf
(pure function)Tj
/T1_0 1 Tf
(---one that only depends on the values of its arguments, )Tj
T*
(and has no side effects. )Tj
0 -2.557 TD
(By writing this recursively, we'll apply the same trick all the way down\ the list. Thinking a little more )Tj
0 -1.2 TD
(concretely--but not much--we can see that at each time we reverse the re\st of the list, the list in question )Tj
T*
(will be shorter. Somewhere we'll hit the end of the list, so we have to \handle that base case. It's usually )Tj
T*
(easy to see what the right thing to do is for the base case. In this cas\e, we can declare that "the )Tj
/T1_2 1 Tf
0 -1.205 TD
(reverse)Tj
/T1_0 1 Tf
( of the empty list is the empty list," and add the appropriate branch to\ )Tj
/T1_2 1 Tf
(append)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(This is a good example of how you can combine functions to create new fu\nctions, implementing )Tj
0 -1.2 TD
(algorithms without using sequencing or side effects. \(Notice that if we\ had side effects, we'd have to )Tj
T*
(think very carefully about the ordering of steps, to make sure that we u\sed a data structure after certain )Tj
T*
(changes, and before others. Bleah.\) )Tj
0 -2.557 TD
(\(The following remarks about efficiency are fairly advanced--you should\n't worry about these things yet )Tj
0 -1.2 TD
(if they get in the way of learning how to write programs simply and stra\ightforwardly. You can skip or )Tj
T*
(skim them and come back to them later once you've gotten the hang of Sch\eme, and want to tune the )Tj
T*
(time-critical parts of your programs for maximum efficiency. On the othe\r hand, you may find that )Tj
0 -1.205 TD
(thinking about the concrete details reinforces the basic ideas.\) There \are two problems coding )Tj
/T1_2 1 Tf
(reverse)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(this very simple way, however---)Tj
/T1_2 1 Tf
(reverse)Tj
/T1_0 1 Tf
( turns out to be one of the hardest "simple" list routines to )Tj
0 -1.2 TD
(code efficiently. Later I'll sho better versions that are more clever, b\ut only very slightly more )Tj
T*
(complicated. \(They'll still be recursive, and won't use loops or assign\ment.\) )Tj
/T1_1 1 Tf
0 -2.557 TD
([ where? \(Later I need to show a linear-time version that uses list->ve\ctor and then reverses the vector )Tj
0 -1.2 TD
(into a list tail-recursively... ])Tj
/T1_0 1 Tf
( )Tj
0 -2.562 TD
(The first problem is that each call to )Tj
/T1_2 1 Tf
(append)Tj
/T1_0 1 Tf
( takes time proportional to the length of the list it's given. )Tj
0 -1.205 TD
(\(Remember that )Tj
/T1_2 1 Tf
(append)Tj
/T1_0 1 Tf
( effectively copies all of the pairs in the first list it's given, makin\g a backward )Tj
0 -1.205 TD
(copy.\) We have to copy the "rest" of the list using )Tj
/T1_2 1 Tf
(append)Tj
/T1_0 1 Tf
(, starting at each pair in the list. On average, )Tj
0 -1.2 TD
(we copy half the list at a given recursive step, so since we do this for\ every pair in the list, we have an )Tj
T*
(order n-squared algorithm. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_46.html \(8 of 9\)11\/3/2006 8:58:58 PM)Tj
ET
EMC 

endstreamendobj2151 0 obj<</Length 3636>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion Over Data S\tructures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 743.0277 Tm
(Another problem is that we're doing things on the way back up from recur\sion, which turns out to be )Tj
0 -1.2 TD
(more expensive than doing things on the way down. As I'll explain in a l\ater chapter, Scheme can do )Tj
T*
(recursion very efficiently if everything is done in a forward direction,\ on the way down--Scheme can )Tj
T*
(optimize away all but one of the returns, and the state-saving before th\e calls. \(Luckily, this is easy to )Tj
T*
(do.\) )Tj
0 -2.562 TD
(Since Scheme provides a built-in )Tj
/T1_1 1 Tf
(reverse)Tj
/T1_0 1 Tf
(, you don't have to think much about this. A good Scheme )Tj
0 -1.205 TD
(system will provide a heavily-optimized implementation of )Tj
/T1_1 1 Tf
(reverse)Tj
/T1_0 1 Tf
( that is linear in the length of the )Tj
0 -1.2 TD
(list being reversed. )Tj
/T1_1 1 Tf
0 -2.562 TD
(reverse)Tj
/T1_0 1 Tf
( is very handy, and the efficiency of a built-in )Tj
/T1_1 1 Tf
(reverse)Tj
/T1_0 1 Tf
( is important, because it's usually best )Tj
0 -1.2 TD
(to construct a list in whichever order is easy and efficient, and then r\everse the whole list if necessary. )Tj
0 -1.205 TD
(Typically, you )Tj
/T1_1 1 Tf
(cons)Tj
/T1_0 1 Tf
( one item onto a list at a time, or maybe )Tj
/T1_1 1 Tf
(append)Tj
/T1_0 1 Tf
( a few items at a time, in whatever )Tj
0 -1.2 TD
(order it's easiest to create the list. This allows you to construct the \list in linear time; with a linear-time )Tj
/T1_1 1 Tf
0 -1.205 TD
(reverse)Tj
/T1_0 1 Tf
(, the overall process is still linear-time. )Tj
/T1_1 1 Tf
0 -2.562 TD
(==================================================================)Tj
0 -2.4 TD
(This is the end of Hunk E.)Tj
T*
(TIME TO TRY IT OUT)Tj
T*
(At this point, you should go read Hunk F of the next chapter)Tj
0 -1.2 TD
(and work through the examples using a running Scheme system.)Tj
T*
(Then return here and resume this chapter.)Tj
0 -2.4 TD
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Go to Hunk F, which starts at section )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
226.594 261.374 m
309.04 261.374 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 226.594 263.4907 Tm
(Lists \(Hunk F\))Tj
0 0 0 rg
(.\) )Tj
ET
0.5 0.5 0.5 rg
10 228.715 m
10 230.715 l
602 230.715 l
601 229.715 l
11 229.715 l
11 229.715 l
h
f
0.875 0.875 0.875 rg
602 230.715 m
602 228.715 l
10 228.715 l
11 229.715 l
601 229.715 l
601 229.715 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 209.6907 Tm
(Go to the )Tj
ET
65.608 207.574 m
88.162 207.574 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 209.6907 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 207.574 m
143.378 207.574 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 209.6907 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 207.574 m
174.486 207.574 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 209.6907 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 207.574 m
200.932 207.574 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 209.6907 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 207.574 m
343.634 207.574 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 209.6907 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_46.html \(9 of 9\)11\/3/2006 8:58:58 PM)Tj
ET
EMC 

endstreamendobj2152 0 obj(An Introduction to Scheme and its Implementation - Recursion Over Data Structures)endobj2153 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_46.html)/S 700 0 R>>endobj2154 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_46.html)endobj2155 0 obj(Ì\\âÂ%$ñq˘‘”èa)endobj2156 0 obj<</TS(D:20061104045858)/ID 2155 0 R/CT(text/html)/O[2086 0 R 2101 0 R 2110 0 R 2112 0 R 2115 0 R 2124 0 R 2126 0 R 2131 0 R 2133 0 R]/S/SPS/T 2152 0 R/TID 2158 0 R/SI 2157 0 R>>endobj2157 0 obj<</TS(D:20061104045858)/AU 2154 0 R>>endobj2158 0 obj(¶d‰∫¬ƒÒnõØ–Noã«·)endobj2159 0 obj<</Parent 710 0 R/Next 2189 0 R/Dest[2086 0 R/XYZ 0 792 null]/Prev 2083 0 R/SE 2085 0 R/Title(An Introduction to Scheme and its Implementation - Recursion Over Data Structures)>>endobj2160 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2161 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 2162 0 R>>endobj2162 0 obj<</Annots 2165 0 R/Parent 2254 0 R/ID 2185 0 R/StructParents 86/Contents 2181 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R/T1_4 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2163 0 obj[2161 0 R]endobj2164 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2165 0 obj[2164 0 R 2166 0 R 2167 0 R 2168 0 R 2169 0 R 2171 0 R 2173 0 R 2174 0 R 2175 0 R 2176 0 R 2177 0 R 2178 0 R 2179 0 R 2180 0 R]endobj2166 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2086 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html)/S/URI>>/Border[0 0 0]>>endobj2167 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2192 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_48.html)/S/URI>>/Border[0 0 0]>>endobj2168 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2169 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2170 0 obj[2162 0 R/XYZ 0 731.2 null]endobj2171 0 obj<</Rect[10.0 689.877 366.561 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC54)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC54)/S/URI>>/Border[0 0 0]>>endobj2172 0 obj[2162 0 R/XYZ 0 598.538 null]endobj2173 0 obj<</Rect[50.0 409.738 139.81 424.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(`•cöulå∞7˛8DCW‚SEC55)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_48.html#SEC55)/S/URI>>/Border[0 0 0]>>endobj2174 0 obj<</Rect[50.0 390.938 158.486 405.938]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(íÅ¥çÕ◊&¥ãÚâLº‰SEC56)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_49.html#SEC56)/S/URI>>/Border[0 0 0]>>endobj2175 0 obj<</Rect[50.0 372.138 215.662 387.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D([Dd˙7¸…A∂Û-rudSEC57)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_50.html#SEC57)/S/URI>>/Border[0 0 0]>>endobj2176 0 obj<</Rect[65.608 93.2037 88.162 108.204]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2177 0 obj<</Rect[95.162 93.2037 143.378 108.204]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2086 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html)/S/URI>>/Border[0 0 0]>>endobj2178 0 obj<</Rect[150.378 93.2037 174.486 108.204]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2192 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_48.html)/S/URI>>/Border[0 0 0]>>endobj2179 0 obj<</Rect[181.486 93.2037 200.932 108.204]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2180 0 obj<</Rect[251.094 93.2037 343.634 108.204]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2181 0 obj<</Length 5448>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Type and Equality Pre\dicates)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
366.561 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Type and Equality Predicates \(Hunk G\))Tj
0 0 0 rg
/T1_2 1 Tf
14 0 0 14 10 655.8466 Tm
(==================================================================)Tj
0 -1.2 TD
(Hunk G starts here:)Tj
T*
(==================================================================)Tj
/T1_3 1 Tf
0 -2.552 TD
([ Some of this stuff needs to come before recursion over various data st\ructures... we use a few )Tj
0 -1.2 TD
(predicates there. Fix. ])Tj
/T1_0 1 Tf
( Since a pointer can point to any kind of thing, it's often good to know\ what kind )Tj
T*
(of thing it does point to. For example, you might have a mixed list of d\ifferent kinds of things, and want )Tj
T*
(to go through the list, doing a different operation for each kind of obj\ect you encounter. For this, Scheme )Tj
T*
(provides )Tj
/T1_3 1 Tf
(type predicates)Tj
/T1_0 1 Tf
(, which are procedures which test to see whether the pointed-to object i\s of a )Tj
T*
(particular type. )Tj
0 -2.557 TD
(You also often want to know whether two values refer to the same object,\ or to data structures with the )Tj
0 -1.2 TD
(same structure. For this, Scheme provides )Tj
/T1_3 1 Tf
(equality predicates)Tj
/T1_0 1 Tf
(. )Tj
/T1_4 1 Tf
7 0 0 7 35.713 414.114 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
50 411.997 m
139.81 411.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 414.114 Tm
(Type Predicates)Tj
0 0 0 rg
(: Discriminating between different kinds of objects )Tj
/T1_4 1 Tf
7 0 0 7 35.713 395.314 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 393.197 m
158.486 393.197 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 395.314 Tm
(Equality Predicates)Tj
0 0 0 rg
(: Discriminating whether objects are the same )Tj
/T1_4 1 Tf
7 0 0 7 35.713 376.514 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 374.397 m
215.662 374.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 376.514 Tm
(Choosing Equality Predicates)Tj
0 0 0 rg
(: Testing different kinds of sameness )Tj
-2.857 -2.7 Td
(These procedures are called "predicates" because they test whether a pro\perty is true of a value, and )Tj
0 -1.205 TD
(return a yes-or-no answer--that is, the boolean )Tj
/T1_2 1 Tf
(#t)Tj
/T1_0 1 Tf
( or the boolean )Tj
/T1_2 1 Tf
(#f)Tj
/T1_0 1 Tf
(. \(This is like a "predicate" in formal )Tj
0 -1.2 TD
(logic, which is a kind of statement with a "truth value" that depends on\ its arguments.\) )Tj
0 -2.557 TD
(The names of predicates generally end with a question mark, to signify t\hat they return a boolean. When )Tj
0 -1.2 TD
(you write your own programs, it's good style to end the names of boolean\-valued \(true/false\) functions )Tj
T*
(with a question mark. )Tj
0 -2.562 TD
(\(An exception to this rule is the standard numeric comparison predicate\s like )Tj
/T1_2 1 Tf
(<)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(>)Tj
/T1_0 1 Tf
(, and )Tj
/T1_2 1 Tf
(=)Tj
/T1_0 1 Tf
(. By the rule, )Tj
0 -1.2 TD
(they should have question marks after their names, but they're used very\ frequently and people generally )Tj
T*
(recognize that they're predicates. We don't bother with question marks i\n their names, because it would )Tj
T*
(clutter up arithmetic expressions.\) )Tj
ET
0.5 0.5 0.5 rg
10 116.604 m
10 118.604 l
602 118.604 l
601 117.604 l
11 117.604 l
11 117.604 l
h
f
0.875 0.875 0.875 rg
602 118.604 m
602 116.604 l
10 116.604 l
11 117.604 l
601 117.604 l
601 117.604 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 97.5792 Tm
(Go to the )Tj
ET
65.608 95.462 m
88.162 95.462 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 97.5792 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 95.462 m
143.378 95.462 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 97.5792 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 95.462 m
174.486 95.462 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 97.5792 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 95.462 m
200.932 95.462 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 97.5792 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 95.462 m
343.634 95.462 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 97.5792 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_47.html11/3/2006 8:5\9:20 PM)Tj
ET
EMC 

endstreamendobj2182 0 obj(An Introduction to Scheme and its Implementation - Type and Equality Predicates)endobj2183 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_47.html)/S 700 0 R>>endobj2184 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_47.html)endobj2185 0 obj(∆ã¸ó©0»¶M†ó$`O)endobj2186 0 obj<</TS(D:20061104045920)/ID 2185 0 R/CT(text/html)/O[2162 0 R]/S/SPS/T 2182 0 R/TID 2188 0 R/SI 2187 0 R>>endobj2187 0 obj<</TS(D:20061104045920)/AU 2184 0 R>>endobj2188 0 obj(Ó4Ça,BÎVFë!Ñw⁄<◊)endobj2189 0 obj<</Parent 710 0 R/Next 2216 0 R/Dest[2162 0 R/XYZ 0 792 null]/Prev 2159 0 R/SE 2161 0 R/Title(An Introduction to Scheme and its Implementation - Type and Equality Predicates)>>endobj2190 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2191 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 2192 0 R>>endobj2192 0 obj<</Annots 2195 0 R/Parent 2254 0 R/ID 2212 0 R/StructParents 87/Contents 2208 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2193 0 obj[2191 0 R]endobj2194 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2195 0 obj[2194 0 R 2196 0 R 2197 0 R 2198 0 R 2199 0 R 2201 0 R 2203 0 R 2204 0 R 2205 0 R 2206 0 R 2207 0 R]endobj2196 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2162 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_47.html)/S/URI>>/Border[0 0 0]>>endobj2197 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2219 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_49.html)/S/URI>>/Border[0 0 0]>>endobj2198 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2199 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2200 0 obj[2192 0 R/XYZ 0 731.2 null]endobj2201 0 obj<</Rect[10.0 693.431 133.9 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC55)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC55)/S/URI>>/Border[0 0 0]>>endobj2202 0 obj[2192 0 R/XYZ 0 671.815 null]endobj2203 0 obj<</Rect[65.608 464.411 88.162 479.411]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2204 0 obj<</Rect[95.162 464.411 143.378 479.411]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2162 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_47.html)/S/URI>>/Border[0 0 0]>>endobj2205 0 obj<</Rect[150.378 464.411 174.486 479.411]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2219 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_49.html)/S/URI>>/Border[0 0 0]>>endobj2206 0 obj<</Rect[181.486 464.411 200.932 479.411]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2207 0 obj<</Rect[251.094 464.411 343.634 479.411]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2208 0 obj<</Length 3404>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Type Predicates)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
133.9 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Type Predicates)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(Scheme provides built-in procedures to test whether values refer to obje\cts of particular types. If you )Tj
0 -1.205 TD
(want to know whether the value of variable )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( is \(a pointer to\) pair, you can use the predicate )Tj
/T1_2 1 Tf
(pair?)Tj
/T1_0 1 Tf
(, )Tj
0 -1.205 TD
(like this: )Tj
/T1_2 1 Tf
(\(pair? x\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Likewise, if you want to know if something is a number, you can use the \predicate )Tj
/T1_2 1 Tf
(number?)Tj
/T1_0 1 Tf
(. If you )Tj
0 -1.205 TD
(want to know whether a value is an integer, and not just some kind of nu\mber, you can use )Tj
/T1_2 1 Tf
(integer?)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Several other type predicates are provided, for other data types we'll d\iscuss later, including )Tj
/T1_2 1 Tf
(string?)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
0 -1.205 TD
(character?)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(vector?)Tj
/T1_0 1 Tf
(, and )Tj
/T1_2 1 Tf
(port?)Tj
/T1_0 1 Tf
(. )Tj
ET
0.5 0.5 0.5 rg
10 487.811 m
10 489.811 l
602 489.811 l
601 488.811 l
11 488.811 l
11 488.811 l
h
f
0.875 0.875 0.875 rg
602 489.811 m
602 487.811 l
10 487.811 l
11 488.811 l
601 488.811 l
601 488.811 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 468.7866 Tm
(Go to the )Tj
ET
0.706 w 
65.608 466.67 m
88.162 466.67 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 468.7866 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 466.67 m
143.378 466.67 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 468.7866 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 466.67 m
174.486 466.67 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 468.7866 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 466.67 m
200.932 466.67 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 468.7866 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 466.67 m
343.634 466.67 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 468.7866 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_48.html11/3/2006 8:5\9:29 PM)Tj
ET
EMC 

endstreamendobj2209 0 obj(An Introduction to Scheme and its Implementation - Type Predicates)endobj2210 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_48.html)/S 700 0 R>>endobj2211 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_48.html)endobj2212 0 obj(`•cöulå∞7˛8DCW‚)endobj2213 0 obj<</TS(D:20061104045929)/ID 2212 0 R/CT(text/html)/O[2192 0 R]/S/SPS/T 2209 0 R/TID 2215 0 R/SI 2214 0 R>>endobj2214 0 obj<</TS(D:20061104045929)/AU 2211 0 R>>endobj2215 0 obj(–Ï]`mò≥éÁcfB&ƒÕ≥)endobj2216 0 obj<</Parent 710 0 R/Next 2250 0 R/Dest[2192 0 R/XYZ 0 792 null]/Prev 2189 0 R/SE 2191 0 R/Title(An Introduction to Scheme and its Implementation - Type Predicates)>>endobj2217 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2218 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 2232 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 2219 0 R>>endobj2219 0 obj<</Annots 2222 0 R/Parent 2254 0 R/ID 2246 0 R/StructParents 88/Contents 2241 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2220 0 obj[2218 0 R]endobj2221 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2222 0 obj[2221 0 R 2223 0 R 2224 0 R 2225 0 R 2226 0 R 2228 0 R]endobj2223 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2192 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_48.html)/S/URI>>/Border[0 0 0]>>endobj2224 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2253 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_50.html)/S/URI>>/Border[0 0 0]>>endobj2225 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2226 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2227 0 obj[2219 0 R/XYZ 0 731.2 null]endobj2228 0 obj<</Rect[10.0 693.431 159.035 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC56)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC56)/S/URI>>/Border[0 0 0]>>endobj2229 0 obj[2219 0 R/XYZ 0 671.815 null]endobj2230 0 obj[2219 0 R/XYZ 0 671.815 null]endobj2231 0 obj[2219 0 R/XYZ 0 671.815 null]endobj2232 0 obj<</Annots 2235 0 R/Parent 2254 0 R/ID 2246 0 R/StructParents 89/Contents 2242 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2233 0 obj[2218 0 R]endobj2234 0 obj<</Rect[228.918 526.665 380.944 541.665]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(8 ˜€ÃÉ±j!¯\\\\^Y4 SEC100)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_94.html#SEC100)/S/URI>>/Border[0 0 0]>>endobj2235 0 obj[2234 0 R 2236 0 R 2237 0 R 2238 0 R 2239 0 R 2240 0 R]endobj2236 0 obj<</Rect[65.608 472.865 88.162 487.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2237 0 obj<</Rect[95.162 472.865 143.378 487.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2192 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_48.html)/S/URI>>/Border[0 0 0]>>endobj2238 0 obj<</Rect[150.378 472.865 174.486 487.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2253 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_50.html)/S/URI>>/Border[0 0 0]>>endobj2239 0 obj<</Rect[181.486 472.865 200.932 487.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2240 0 obj<</Rect[251.094 472.865 343.634 487.865]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2241 0 obj<</Length 5261>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Equality Predicates)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
159.035 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Equality Predicates)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(Equality predicates tell whether one value is "the same as" another. The\re are actually several important )Tj
0 -1.2 TD
(senses of "the same as," so Scheme provides four equality predicates. )Tj
0 -2.557 TD
(Sometimes you want to know whether two data structures are structurally \the same, with the same )Tj
0 -1.2 TD
(values in the same places. For example, you may want to know whether a l\ist has the same structure and )Tj
0 -1.205 TD
(elements as another list. For this, you can use )Tj
/T1_2 1 Tf
(equal?)Tj
/T1_0 1 Tf
(, which does a deep, element-by-element )Tj
0 -1.2 TD
(structural comparison. )Tj
0 -2.562 TD
(For example )Tj
/T1_2 1 Tf
(\(equal? '\(1 2 3\) '\(1 2 3\)\))Tj
/T1_0 1 Tf
( returns )Tj
/T1_2 1 Tf
(#t)Tj
/T1_0 1 Tf
(, because the arguments are both lists )Tj
0 -1.205 TD
(containing )Tj
/T1_2 1 Tf
(1)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(2)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(3)Tj
/T1_0 1 Tf
(, in that order. )Tj
/T1_2 1 Tf
(equal?)Tj
/T1_0 1 Tf
( does a deep traversal of the data structure, so you can hand it )Tj
0 -1.2 TD
(nested lists and other fairly complicated data structures as well. \(Don\'t hand it structures with directed )Tj
T*
(cycles of pointers, though, because it may loop forever without finding \the end.\) )Tj
/T1_2 1 Tf
0 -2.562 TD
(equal?)Tj
/T1_0 1 Tf
( works to compare simple things, too. For example, )Tj
/T1_2 1 Tf
(\(equal? 22 22\))Tj
/T1_0 1 Tf
( returns )Tj
/T1_2 1 Tf
(#t)Tj
/T1_0 1 Tf
(, and )Tj
/T1_2 1 Tf
0 -1.205 TD
(\(equal? #t 15\))Tj
/T1_0 1 Tf
( returns )Tj
/T1_2 1 Tf
(#f)Tj
/T1_0 1 Tf
(. \(Note that )Tj
/T1_2 1 Tf
(equal?)Tj
/T1_0 1 Tf
( can be used to compare things that may or may not )Tj
0 -1.205 TD
(be of the same type, but if they're not, the answer will always be )Tj
/T1_2 1 Tf
(#f)Tj
/T1_0 1 Tf
(. Objects of different types are never )Tj
/T1_2 1 Tf
0 -1.205 TD
(equal?)Tj
/T1_0 1 Tf
(.\) )Tj
0 -2.557 TD
(Often you don't want to structurally compare two whole data structures--\you just want to know if they're )Tj
0 -1.2 TD
(the )Tj
/T1_3 1 Tf
(exact same object)Tj
/T1_0 1 Tf
(. For example, given two pointers to lists, you may want to know if they\'re pointers )Tj
T*
(to the very same list, not just two lists with the same elements. )Tj
0 -2.562 TD
(For this, you use )Tj
/T1_2 1 Tf
(eq?)Tj
/T1_0 1 Tf
(. )Tj
/T1_2 1 Tf
(eq?)Tj
/T1_0 1 Tf
( compares two values to see if they refer to the same object. Since all \values )Tj
0 -1.205 TD
(in Scheme are \(conceptually\) pointers, this is just a pointer comparis\on, so )Tj
/T1_2 1 Tf
(eq?)Tj
/T1_0 1 Tf
( is always fast. )Tj
0 -2.562 TD
(\(You might think that tagged immediate representations would require )Tj
/T1_2 1 Tf
(eq?)Tj
/T1_0 1 Tf
( to be slower than a simple )Tj
0 -1.2 TD
(pointer comparision, because it would have to check whether things were \really pointers. This isn't )Tj
0 -1.205 TD
(actually true---)Tj
/T1_2 1 Tf
(eq?)Tj
/T1_0 1 Tf
( just compares the bit patterns without worrying whether they represent \pointers or )Tj
0 -1.2 TD
(immediates.\) )Tj
0 -2.557 TD
(Equality tests for numbers are treated specially. When comparing two val\ues that are supposed to be )Tj
0 -1.205 TD
(numbers, )Tj
/T1_2 1 Tf
(=)Tj
/T1_0 1 Tf
( is the appropriate predicate. Using )Tj
/T1_2 1 Tf
(=)Tj
/T1_0 1 Tf
( has the advantage that using it on non-numbers is an )Tj
0 -1.2 TD
(error, and Scheme will complain when it happens. If you make a mistake a\nd have a non-number where )Tj
0 -1.205 TD
(you intend to have a number, this will often show you the problem. \(You\ could also use )Tj
/T1_2 1 Tf
(equal?)Tj
/T1_0 1 Tf
(, but it )Tj
0 -1.2 TD
(won't signal an error when applied to non-numbers, and may be a little b\it slower.\) )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_49.html \(1 of 2\)11\/3/2006 8:59:38 PM)Tj
ET
EMC 

endstreamendobj2242 0 obj<</Length 2392>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Equality Predicates)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9082 Tm
(There is another equality predicate, )Tj
/T1_1 1 Tf
(eqv?)Tj
/T1_0 1 Tf
(, which does numeric comparisons on numbers \(like )Tj
/T1_1 1 Tf
(=)Tj
/T1_0 1 Tf
(\), and )Tj
0 -1.205 TD
(identity comparisons \(like )Tj
/T1_1 1 Tf
(eq?)Tj
/T1_0 1 Tf
(\) on anything else. )Tj
/T1_1 1 Tf
0 -2.562 TD
(==================================================================)Tj
0 -1.2 TD
(This is the end of Hunk G)Tj
0 -2.4 TD
(TIME TO TRY IT OUT)Tj
T*
(At this point, you should go read Hunk H of the next chapter)Tj
0 -1.2 TD
(and work through the examples using a running Scheme system.)Tj
T*
(Then return here and resume this chapter.)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Go to Hunk H, which starts at section )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
228.918 528.924 m
380.944 528.924 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 228.918 531.0408 Tm
(Using Predicates \(Hunk H\))Tj
0 0 0 rg
(.\) )Tj
ET
0.5 0.5 0.5 rg
10 496.265 m
10 498.265 l
602 498.265 l
601 497.265 l
11 497.265 l
11 497.265 l
h
f
0.875 0.875 0.875 rg
602 498.265 m
602 496.265 l
10 496.265 l
11 497.265 l
601 497.265 l
601 497.265 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 477.2408 Tm
(Go to the )Tj
ET
65.608 475.124 m
88.162 475.124 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 477.2408 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 475.124 m
143.378 475.124 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 477.2408 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 475.124 m
174.486 475.124 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 477.2408 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 475.124 m
200.932 475.124 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 477.2408 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 475.124 m
343.634 475.124 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 477.2408 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_49.html \(2 of 2\)11\/3/2006 8:59:38 PM)Tj
ET
EMC 

endstreamendobj2243 0 obj(An Introduction to Scheme and its Implementation - Equality Predicates)endobj2244 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_49.html)/S 700 0 R>>endobj2245 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_49.html)endobj2246 0 obj(íÅ¥çÕ◊&¥ãÚâLº‰)endobj2247 0 obj<</TS(D:20061104045938)/ID 2246 0 R/CT(text/html)/O[2219 0 R 2232 0 R]/S/SPS/T 2243 0 R/TID 2249 0 R/SI 2248 0 R>>endobj2248 0 obj<</TS(D:20061104045938)/AU 2245 0 R>>endobj2249 0 obj(áaîîyuèó2‚»\n)endobj2250 0 obj<</Parent 710 0 R/Next 2278 0 R/Dest[2219 0 R/XYZ 0 792 null]/Prev 2216 0 R/SE 2218 0 R/Title(An Introduction to Scheme and its Implementation - Equality Predicates)>>endobj2251 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2252 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 2253 0 R>>endobj2253 0 obj<</Annots 2257 0 R/Parent 2372 0 R/ID 2274 0 R/StructParents 90/Contents 2270 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2254 0 obj<</Parent 2470 0 R/Count 5/Type/Pages/Kids[2133 0 R 2162 0 R 2192 0 R 2219 0 R 2232 0 R]>>endobj2255 0 obj[2252 0 R]endobj2256 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2257 0 obj[2256 0 R 2258 0 R 2259 0 R 2260 0 R 2261 0 R 2263 0 R 2265 0 R 2266 0 R 2267 0 R 2268 0 R 2269 0 R]endobj2258 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2219 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_49.html)/S/URI>>/Border[0 0 0]>>endobj2259 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2281 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_51.html)/S/URI>>/Border[0 0 0]>>endobj2260 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2261 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2262 0 obj[2253 0 R/XYZ 0 731.2 null]endobj2263 0 obj<</Rect[10.0 693.431 302.627 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC57)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC57)/S/URI>>/Border[0 0 0]>>endobj2264 0 obj[2253 0 R/XYZ 0 602.415 null]endobj2265 0 obj<</Rect[65.608 121.541 88.162 136.541]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2266 0 obj<</Rect[95.162 121.541 143.378 136.541]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2219 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_49.html)/S/URI>>/Border[0 0 0]>>endobj2267 0 obj<</Rect[150.378 121.541 174.486 136.541]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2281 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_51.html)/S/URI>>/Border[0 0 0]>>endobj2268 0 obj<</Rect[181.486 121.541 200.932 136.541]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2269 0 obj<</Rect[251.094 121.541 343.634 136.541]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2270 0 obj<</Length 5503>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Choosing Equality Pre\dicates)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
302.627 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Choosing Equality Predicates \(Hunk I\))Tj
0 0 0 rg
/T1_2 1 Tf
14 0 0 14 10 659.7235 Tm
(==================================================================)Tj
0 -1.2 TD
(Hunk I starts here:)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.557 TD
(The reason that the )Tj
/T1_2 1 Tf
(=)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(eqv?)Tj
/T1_0 1 Tf
( predicates are needed is that the numeric system of Scheme is not quite\ )Tj
0 -1.2 TD
(as clean as it could be, for efficiency reasons. )Tj
0 -2.557 TD
(Ideally, there would be exactly one copy of any numeric value, and all o\ccurrences of that value would )Tj
0 -1.205 TD
(really be pointers to the same unique object. Then you could use )Tj
/T1_2 1 Tf
(eq?)Tj
/T1_0 1 Tf
( to compare numbers for identity, )Tj
0 -1.2 TD
(just as you can for other kinds of values. \(For example, there would be\ just one floating-point number )Tj
T*
(with the value 2.36529, and any computation that returned that floating-\point value would return a )Tj
0 -1.205 TD
(pointer to that unique object. \()Tj
/T1_2 1 Tf
(\(eq? 2.36529 2.36529\))Tj
/T1_0 1 Tf
( would return )Tj
/T1_2 1 Tf
(#t)Tj
/T1_0 1 Tf
(.\) )Tj
0 -2.557 TD
(Unfortunately, for numbers it would be too expensive to do this--it woul\d require keeping a table of all )Tj
0 -1.2 TD
(of the numbers in the system, and probing that table to eliminate duplic\ate copies of the same values. As )Tj
0 -1.205 TD
(a concession to efficiency, Scheme allows multiple copies of the same nu\mber, and the )Tj
/T1_2 1 Tf
(=)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(eqv?)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(predicates mask this wart in the language--they perform numeric comparis\ons when faced with numbers, )Tj
T*
(so that you don't have to worry about whether two numbers with the same \value are literally the same )Tj
T*
(object. )Tj
/T1_2 1 Tf
0 -2.562 TD
(eqv?)Tj
/T1_0 1 Tf
( thus tests whether two values are "equivalent," when two objects with t\he same numeric value are )Tj
0 -1.205 TD
(treated as "the same," like )Tj
/T1_2 1 Tf
(=)Tj
/T1_0 1 Tf
(, but all other objects are distinguished by their object identity, like\ )Tj
/T1_2 1 Tf
(eq?)Tj
/T1_0 1 Tf
(. In )Tj
0 -1.2 TD
(general, )Tj
/T1_3 1 Tf
7 0 0 7 35.713 245.1192 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_2 1 Tf
14 0 0 14 50 245.1192 Tm
(eq?)Tj
/T1_0 1 Tf
( is useful for fast identity \(same object\) comparisons of non-numbers,\ )Tj
/T1_3 1 Tf
7 0 0 7 35.713 228.2518 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_2 1 Tf
14 0 0 14 50 228.2518 Tm
(=)Tj
/T1_0 1 Tf
( performs numeric comparisons on numbers, )Tj
/T1_3 1 Tf
7 0 0 7 35.713 211.3844 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_2 1 Tf
14 0 0 14 50 211.3844 Tm
(eqv?)Tj
/T1_0 1 Tf
( is like )Tj
/T1_2 1 Tf
(eq?)Tj
/T1_0 1 Tf
(, but treats copies of the same number as though they were the same obje\ct, and )Tj
/T1_3 1 Tf
7 0 0 7 35.713 194.517 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_2 1 Tf
14 0 0 14 50 194.517 Tm
(equal?)Tj
/T1_0 1 Tf
( performs a "deep" comparison of the structure of data structures. \(It \uses )Tj
/T1_2 1 Tf
(eqv?)Tj
/T1_0 1 Tf
( for )Tj
T*
(components that are numbers.\) )Tj
ET
0.5 0.5 0.5 rg
10 144.941 m
10 146.941 l
602 146.941 l
601 145.941 l
11 145.941 l
11 145.941 l
h
f
0.875 0.875 0.875 rg
602 146.941 m
602 144.941 l
10 144.941 l
11 145.941 l
601 145.941 l
601 145.941 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 125.917 Tm
(Go to the )Tj
ET
0.706 w 
65.608 123.8 m
88.162 123.8 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 125.917 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 123.8 m
143.378 123.8 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 125.917 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 123.8 m
174.486 123.8 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 125.917 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 123.8 m
200.932 123.8 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 125.917 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 123.8 m
343.634 123.8 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 125.917 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_50.html11/3/2006 9:0\0:11 PM)Tj
ET
EMC 

endstreamendobj2271 0 obj(An Introduction to Scheme and its Implementation - Choosing Equality Predicates)endobj2272 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_50.html)/S 700 0 R>>endobj2273 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_50.html)endobj2274 0 obj([Dd˙7¸…A∂Û-rud)endobj2275 0 obj<</TS(D:20061104050011)/ID 2274 0 R/CT(text/html)/O[2253 0 R]/S/SPS/T 2271 0 R/TID 2277 0 R/SI 2276 0 R>>endobj2276 0 obj<</TS(D:20061104050011)/AU 2273 0 R>>endobj2277 0 obj(ê6°Q≤sòJæœzÇqwZ)endobj2278 0 obj<</Parent 710 0 R/Next 2311 0 R/Dest[2253 0 R/XYZ 0 792 null]/Prev 2250 0 R/SE 2252 0 R/Title(An Introduction to Scheme and its Implementation - Choosing Equality Predicates)>>endobj2279 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2280 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 2294 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 2281 0 R>>endobj2281 0 obj<</Annots 2284 0 R/Parent 2372 0 R/ID 2307 0 R/StructParents 91/Contents 2302 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2282 0 obj[2280 0 R]endobj2283 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2284 0 obj[2283 0 R 2285 0 R 2286 0 R 2287 0 R 2288 0 R 2290 0 R]endobj2285 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2253 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_50.html)/S/URI>>/Border[0 0 0]>>endobj2286 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2314 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_52.html)/S/URI>>/Border[0 0 0]>>endobj2287 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2288 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2289 0 obj[2281 0 R/XYZ 0 731.2 null]endobj2290 0 obj<</Rect[10.0 689.877 198.496 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC58)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC58)/S/URI>>/Border[0 0 0]>>endobj2291 0 obj[2281 0 R/XYZ 0 667.938 null]endobj2292 0 obj[2281 0 R/XYZ 0 667.938 null]endobj2293 0 obj[2281 0 R/XYZ 0 667.938 null]endobj2294 0 obj<</Annots 2297 0 R/Parent 2372 0 R/ID 2307 0 R/StructParents 92/Contents 2303 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2295 0 obj[2280 0 R]endobj2296 0 obj<</Rect[65.608 441.599 88.162 456.599]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2297 0 obj[2296 0 R 2298 0 R 2299 0 R 2300 0 R 2301 0 R]endobj2298 0 obj<</Rect[95.162 441.599 143.378 456.599]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2253 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_50.html)/S/URI>>/Border[0 0 0]>>endobj2299 0 obj<</Rect[150.378 441.599 174.486 456.599]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2314 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_52.html)/S/URI>>/Border[0 0 0]>>endobj2300 0 obj<</Rect[181.486 441.599 200.932 456.599]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2301 0 obj<</Rect[251.094 441.599 343.634 456.599]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2302 0 obj<</Length 4260>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Quoting and Literals)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
198.496 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Quoting and Literals)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 655.914 Tm
(Programs often need to refer to literal data values--data that you type \directly into the program. In many )Tj
0 -1.2 TD
(languages, the only literals are fairly simple values like integers and \strings. In Scheme, you can use )Tj
T*
(simple literals or complicated ones that represent \(pointers to\) data \structures like nested lists. Earlier, I )Tj
T*
(showed how to create list literals using quoting. )Tj
0 -2.557 TD
(You've probably noticed that the syntax of Scheme code and the textual r\epresentation of Scheme data )Tj
0 -1.205 TD
(are very similar. So, for example, )Tj
/T1_2 1 Tf
(\(min 1 2\))Tj
/T1_0 1 Tf
( is a combination if it's viewed as code, but it's also the )Tj
0 -1.205 TD
(standard textual representation of a list containing the symbol )Tj
/T1_2 1 Tf
(min)Tj
/T1_0 1 Tf
( and the integers )Tj
/T1_2 1 Tf
(1)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(2)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(\(A symbol is a data object that's sort of like a string, but with some \special properties, which will be )Tj
0 -1.2 TD
(explained in the next chapter.\) )Tj
0 -2.557 TD
(The resemblance between code and data is no accident, and it can be very\ convenient, as later examples )Tj
0 -1.2 TD
(will show. It can be confusing, too, however, so it's important to know \when you're looking at a piece of )Tj
T*
(code and when you're looking at a piece of literal data. )Tj
0 -2.562 TD
(The first thing to understand is )Tj
/T1_3 1 Tf
(quoting)Tj
/T1_0 1 Tf
(. In Scheme, the expression )Tj
/T1_2 1 Tf
(\(min 1 2\))Tj
/T1_0 1 Tf
( is a procedure call to )Tj
/T1_2 1 Tf
0 -1.205 TD
(min)Tj
/T1_0 1 Tf
( with the arguments )Tj
/T1_2 1 Tf
(1)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(2)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(As I explained earlier, we can quote it by wrapping it in the special fo\rm )Tj
/T1_2 1 Tf
(\(quote)Tj
/T1_0 1 Tf
(...)Tj
/T1_2 1 Tf
(\))Tj
/T1_0 1 Tf
(, however, and get )Tj
0 -1.205 TD
(a literal list )Tj
/T1_2 1 Tf
(\(min 1 2\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(For example, the definition )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define foo \(quote \(min 1 2\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(defines and binds )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
(, initializing the binding with \(a pointer to\) the list )Tj
/T1_2 1 Tf
(\(min 1 2\))Tj
/T1_0 1 Tf
(. )Tj
T*
(We can draw this situation this way: )Tj
/T1_2 1 Tf
0 -2.562 TD
(     +---+    +---+---+      +---+---+      +---+---+)Tj
0 -1.2 TD
( foo | *-+--->| * | *-+----->| * | *-+----->| * | * |)Tj
T*
(     +---+    +-+-+---+      +-+-+---+      +-+-+---+)Tj
T*
(                |              |              |)Tj
T*
(               \\|/            \\|/            \\|/)Tj
T*
(               min             1              2)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_51.html \(1 of 2\)11\/3/2006 9:00:21 PM)Tj
ET
EMC 

endstreamendobj2303 0 obj<</Length 2719>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Quoting and Literals)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 739.5749 Tm
(Of course, as I explained earlier, we can use )Tj
/T1_1 1 Tf
(')Tj
/T1_0 1 Tf
( as a euphemism for )Tj
/T1_1 1 Tf
(\(quote)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(... )Tj
/T1_1 1 Tf
(\))Tj
/T1_0 1 Tf
( )Tj
0 -2.557 TD
(We can define very complicated literals this way, if we want to. Here's \a procedure that returns a nested )Tj
0 -1.2 TD
(list of nested lists of integers and booleans and symbols: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(fubar\))Tj
0 -1.2 TD
(   '\(\(\(1 two #f\) \(#t 3 four\)\))Tj
T*
(     \(\(five #f 6\) \(seven 8 #t\)\))Tj
T*
(     \(\(#f 9 10\)\) \(\(11 12 #f\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(that's a pretty useless procedure, but it's very convenient to just be a\ble to type in printed representations )Tj
0 -1.2 TD
(of nested data structures and have Scheme construct them automatically f\or you. In most languages )Tj
T*
(you'd have to do some fairly tedious hacking to construct a list like th\at. As we'll see in a later chapter, )Tj
T*
(Scheme also supports )Tj
/T1_2 1 Tf
(quasiquotation)Tj
/T1_0 1 Tf
(, which lets you construct )Tj
/T1_2 1 Tf
(mostly)Tj
/T1_0 1 Tf
(-literal data structures, and create )Tj
T*
(customized variations on them easily; quasiquotation will be discussed i\n a later chapter. )Tj
ET
0.5 0.5 0.5 rg
10 464.999 m
10 466.999 l
602 466.999 l
601 465.999 l
11 465.999 l
11 465.999 l
h
f
0.875 0.875 0.875 rg
602 466.999 m
602 464.999 l
10 464.999 l
11 465.999 l
601 465.999 l
601 465.999 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 445.9749 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 443.858 m
88.162 443.858 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 445.9749 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 443.858 m
143.378 443.858 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 445.9749 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 443.858 m
174.486 443.858 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 445.9749 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 443.858 m
200.932 443.858 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 445.9749 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 443.858 m
343.634 443.858 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 445.9749 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_51.html \(2 of 2\)11\/3/2006 9:00:21 PM)Tj
ET
EMC 

endstreamendobj2304 0 obj(An Introduction to Scheme and its Implementation - Quoting and Literals)endobj2305 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_51.html)/S 700 0 R>>endobj2306 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_51.html)endobj2307 0 obj(?úØG’ À÷™ù$á ø˙)endobj2308 0 obj<</TS(D:20061104050021)/ID 2307 0 R/CT(text/html)/O[2281 0 R 2294 0 R]/S/SPS/T 2304 0 R/TID 2310 0 R/SI 2309 0 R>>endobj2309 0 obj<</TS(D:20061104050021)/AU 2306 0 R>>endobj2310 0 obj(—˛wÃK4	rI•éñ`)endobj2311 0 obj<</Parent 710 0 R/Next 2337 0 R/Dest[2281 0 R/XYZ 0 792 null]/Prev 2278 0 R/SE 2280 0 R/Title(An Introduction to Scheme and its Implementation - Quoting and Literals)>>endobj2312 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2313 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 2314 0 R>>endobj2314 0 obj<</Annots 2317 0 R/Parent 2372 0 R/ID 2333 0 R/StructParents 93/Contents 2329 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2315 0 obj[2313 0 R]endobj2316 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2317 0 obj[2316 0 R 2318 0 R 2319 0 R 2320 0 R 2321 0 R 2323 0 R 2324 0 R 2325 0 R 2326 0 R 2327 0 R 2328 0 R]endobj2318 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2281 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_51.html)/S/URI>>/Border[0 0 0]>>endobj2319 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2340 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_53.html)/S/URI>>/Border[0 0 0]>>endobj2320 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2321 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2322 0 obj[2314 0 R/XYZ 0 731.2 null]endobj2323 0 obj<</Rect[10.0 693.431 279.317 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC59)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC59)/S/URI>>/Border[0 0 0]>>endobj2324 0 obj<</Rect[65.608 140.676 88.162 155.676]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2325 0 obj<</Rect[95.162 140.676 143.378 155.676]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2281 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_51.html)/S/URI>>/Border[0 0 0]>>endobj2326 0 obj<</Rect[150.378 140.676 174.486 155.676]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2340 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_53.html)/S/URI>>/Border[0 0 0]>>endobj2327 0 obj<</Rect[181.486 140.676 200.932 155.676]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2328 0 obj<</Rect[251.094 140.676 343.634 155.676]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2329 0 obj<</Length 5706>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Simple Literals and S\elf-Evaluation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
279.317 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Simple Literals and Self-Evaluation)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(You might have noticed by now that we've already been using literals a l\ot in our examples--numeric )Tj
0 -1.2 TD
(literals and boolean literals. Why didn't we have to quote them to keep \Scheme from trying to evaluate )Tj
T*
(them like other expressions? Because Scheme has a special rule, which is\ that the value of a number or )Tj
T*
(boolean is that number or boolean. For these data types, the result of a\ttempting to evaluate it is the same )Tj
0 -1.205 TD
(as what you started with. So the value of )Tj
/T1_2 1 Tf
(4)Tj
/T1_0 1 Tf
( is )Tj
/T1_2 1 Tf
(4)Tj
/T1_0 1 Tf
(, and the value of )Tj
/T1_2 1 Tf
(#f)Tj
/T1_0 1 Tf
( is )Tj
/T1_2 1 Tf
(#f)Tj
/T1_0 1 Tf
(. \(This also works for a few )Tj
0 -1.2 TD
(other types, such as characters and character strings.\) Scheme lets you\ type in the text representation of a )Tj
T*
(value as an expression, and by convention the value of that expression i\s the value you typed the printed )Tj
T*
(representation of. Such an expression is called )Tj
/T1_3 1 Tf
(self-evaluating)Tj
/T1_0 1 Tf
(, because it is evaluated to itself. )Tj
0 -2.557 TD
(What's the deep meaning of this rule? There isn't any. It's just to keep\ you from having to type a lot of )Tj
0 -1.2 TD
(quotes to use simple literals. Notice that that means that you can quote\ a number or boolean if you want, )Tj
0 -1.205 TD
(and it doesn't make any difference. The expression )Tj
/T1_2 1 Tf
('0)Tj
/T1_0 1 Tf
( means "literally the number 0," but since Scheme )Tj
T*
(defines the value of a number to be itself, the value of plain )Tj
/T1_2 1 Tf
(0)Tj
/T1_0 1 Tf
( is )Tj
/T1_2 1 Tf
(0)Tj
/T1_0 1 Tf
(, too. )Tj
0 -2.562 TD
(Likewise, the value of )Tj
/T1_2 1 Tf
('#f)Tj
/T1_0 1 Tf
( or )Tj
/T1_2 1 Tf
(\(quote #f)Tj
/T1_0 1 Tf
( is the same as )Tj
/T1_2 1 Tf
(#f)Tj
/T1_0 1 Tf
(---they're all pointers to the false object. )Tj
0 -1.205 TD
(You can write a string literal )Tj
/T1_2 1 Tf
('"foo")Tj
/T1_0 1 Tf
( as )Tj
/T1_2 1 Tf
("foo")Tj
/T1_0 1 Tf
(. In either case, the value of the expression is a pointer )Tj
0 -1.205 TD
(to a string object with the character sequence )Tj
/T1_2 1 Tf
(f)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(o)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(o)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Minor warning: don't add extra quotes )Tj
/T1_3 1 Tf
(inside)Tj
/T1_0 1 Tf
( expressions that are already quoted. )Tj
/T1_2 1 Tf
('\(foo 10 baz\))Tj
/T1_0 1 Tf
( is )Tj
/T1_3 1 Tf
0 -1.205 TD
(not)Tj
/T1_0 1 Tf
( the same thing as )Tj
/T1_2 1 Tf
('\('foo '10 'baz\))Tj
/T1_0 1 Tf
(. One quote for a whole literal expression is enough, and )Tj
0 -1.2 TD
(extra quotes inside quotes do something that will seem surprising until \you understand how quoting )Tj
T*
(really works. )Tj
0 -2.557 TD
(Expression evaluation in Scheme is simple, for the most part, but you mu\st remember the rules for the )Tj
0 -1.2 TD
(special forms \(which don't always evaluate their arguments\) and self-e\valuation. Later, I'll show how an )Tj
T*
(interpreter implements self-evaluation by analyzing expressions before e\valuating them. Still later, I'll )Tj
T*
(show how a compiler can do the same work at compile time, so that using \literals doesn't cost any )Tj
T*
(evaluation overhead at run time. )Tj
ET
0.5 0.5 0.5 rg
10 164.076 m
10 166.076 l
602 166.076 l
601 165.076 l
11 165.076 l
11 165.076 l
h
f
0.875 0.875 0.875 rg
602 166.076 m
602 164.076 l
10 164.076 l
11 165.076 l
601 165.076 l
601 165.076 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 145.0518 Tm
(Go to the )Tj
ET
0.706 w 
65.608 142.935 m
88.162 142.935 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 145.0518 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 142.935 m
143.378 142.935 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 145.0518 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 142.935 m
174.486 142.935 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 145.0518 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 142.935 m
200.932 142.935 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 145.0518 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 142.935 m
343.634 142.935 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 145.0518 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_52.html11/3/2006 9:0\0:31 PM)Tj
ET
EMC 

endstreamendobj2330 0 obj(An Introduction to Scheme and its Implementation - Simple Literals and Self-Evaluation)endobj2331 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_52.html)/S 700 0 R>>endobj2332 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_52.html)endobj2333 0 obj(≥æ\)~ˇz_dl-ã\)∑G˚)endobj2334 0 obj<</TS(D:20061104050031)/ID 2333 0 R/CT(text/html)/O[2314 0 R]/S/SPS/T 2330 0 R/TID 2336 0 R/SI 2335 0 R>>endobj2335 0 obj<</TS(D:20061104050031)/AU 2332 0 R>>endobj2336 0 obj(‡›Àøê5\nƒÊTËæ¶Ê)endobj2337 0 obj<</Parent 710 0 R/Next 2368 0 R/Dest[2314 0 R/XYZ 0 792 null]/Prev 2311 0 R/SE 2313 0 R/Title(An Introduction to Scheme and its Implementation - Simple Literals and Self-Evaluation)>>endobj2338 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2339 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 2340 0 R>>endobj2340 0 obj<</Annots 2343 0 R/Parent 2372 0 R/ID 2364 0 R/StructParents 94/Contents 2360 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2341 0 obj[2339 0 R]endobj2342 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2343 0 obj[2342 0 R 2344 0 R 2345 0 R 2346 0 R 2347 0 R 2349 0 R 2352 0 R 2353 0 R 2354 0 R 2355 0 R 2356 0 R 2357 0 R 2358 0 R 2359 0 R]endobj2344 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2314 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_52.html)/S/URI>>/Border[0 0 0]>>endobj2345 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2371 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_54.html)/S/URI>>/Border[0 0 0]>>endobj2346 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2347 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2348 0 obj[2340 0 R/XYZ 0 731.2 null]endobj2349 0 obj<</Rect[10.0 689.877 326.764 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC60)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC60)/S/URI>>/Border[0 0 0]>>endobj2350 0 obj[2340 0 R/XYZ 0 667.938 null]endobj2351 0 obj[2340 0 R/XYZ 0 667.938 null]endobj2352 0 obj<</Rect[50.0 495.938 64.0 510.938]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(õß•ãæ‡rãÙ=¿c¨opBSEC61)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_54.html#SEC61)/S/URI>>/Border[0 0 0]>>endobj2353 0 obj<</Rect[50.0 477.138 129.702 492.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‹…a-©¬˝°‹ÀúIúúSEC63)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_56.html#SEC63)/S/URI>>/Border[0 0 0]>>endobj2354 0 obj<</Rect[50.0 458.338 71.0 473.338]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(_∞é±≈'HÕúÑÄÊûpSEC66)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_59.html#SEC66)/S/URI>>/Border[0 0 0]>>endobj2355 0 obj<</Rect[65.608 404.538 88.162 419.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2356 0 obj<</Rect[95.162 404.538 143.378 419.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2314 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_52.html)/S/URI>>/Border[0 0 0]>>endobj2357 0 obj<</Rect[150.378 404.538 174.486 419.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2371 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_54.html)/S/URI>>/Border[0 0 0]>>endobj2358 0 obj<</Rect[181.486 404.538 200.932 419.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2359 0 obj<</Rect[251.094 404.538 343.634 419.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2360 0 obj<</Length 3944>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Local Variables and L\exical Scope)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
326.764 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Local Variables and Lexical Scope)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 655.914 Tm
(Scheme is a )Tj
/T1_2 1 Tf
(block-structured)Tj
/T1_0 1 Tf
( language with )Tj
/T1_2 1 Tf
(nested scopes)Tj
/T1_0 1 Tf
(. You can declare local variables whose scope )Tj
0 -1.2 TD
(is a block of code, and blocks can have blocks inside them with their ow\n local variables. )Tj
0 -2.557 TD
(Scheme uses a )Tj
/T1_2 1 Tf
(lexical scope)Tj
/T1_0 1 Tf
( rule. \(We can also say that Scheme is )Tj
/T1_2 1 Tf
(statically scoped)Tj
/T1_0 1 Tf
(, rather than )Tj
/T1_2 1 Tf
0 -1.2 TD
(dynamically scoped)Tj
/T1_0 1 Tf
(, like some old Lisps.\) When you see a variable name in the code, you c\an tell what )Tj
T*
(variable it refers just to by looking at the source code for the program\. A program consists of possibly )Tj
T*
(nested blocks of code, and the meaning of the name is determined by whic\h variable binding constructs )Tj
T*
(it's used inside. )Tj
/T1_3 1 Tf
7 0 0 7 35.713 500.314 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
50 498.197 m
64 498.197 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 500.314 Tm
(let)Tj
0 0 0 rg
(: let binds local variables )Tj
/T1_3 1 Tf
7 0 0 7 35.713 481.514 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 479.397 m
129.702 479.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 481.514 Tm
(Lexical Scope)Tj
0 0 0 rg
(: lexical scope )Tj
/T1_3 1 Tf
7 0 0 7 35.713 462.714 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 460.597 m
71 460.597 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 462.714 Tm
(let*)Tj
0 0 0 rg
(: let* binds variables sequentially, in nested scopes )Tj
ET
0.5 0.5 0.5 rg
10 427.938 m
10 429.938 l
602 429.938 l
601 428.938 l
11 428.938 l
11 428.938 l
h
f
0.875 0.875 0.875 rg
602 429.938 m
602 427.938 l
10 427.938 l
11 428.938 l
601 428.938 l
601 428.938 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 408.914 Tm
(Go to the )Tj
ET
65.608 406.797 m
88.162 406.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 408.914 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 406.797 m
143.378 406.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 408.914 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 406.797 m
174.486 406.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 408.914 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 406.797 m
200.932 406.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 408.914 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 406.797 m
343.634 406.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 408.914 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_53.html11/3/2006 9:0\0:51 PM)Tj
ET
EMC 

endstreamendobj2361 0 obj(An Introduction to Scheme and its Implementation - Local Variables and Lexical Scope)endobj2362 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_53.html)/S 700 0 R>>endobj2363 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_53.html)endobj2364 0 obj(ù0Ì\(kÛ∫ØaX	◊Ô)endobj2365 0 obj<</TS(D:20061104050051)/ID 2364 0 R/CT(text/html)/O[2340 0 R]/S/SPS/T 2361 0 R/TID 2367 0 R/SI 2366 0 R>>endobj2366 0 obj<</TS(D:20061104050051)/AU 2363 0 R>>endobj2367 0 obj(‚'Ò≤¡1z”'®˛MÔ9Â¸)endobj2368 0 obj<</Parent 710 0 R/Next 2406 0 R/Dest[2340 0 R/XYZ 0 792 null]/Prev 2337 0 R/SE 2339 0 R/Title(An Introduction to Scheme and its Implementation - Local Variables and Lexical Scope)>>endobj2369 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2370 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 2383 0 R/Type/MCR>><</MCID 0/Pg 2387 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 2371 0 R>>endobj2371 0 obj<</Annots 2375 0 R/Parent 2447 0 R/ID 2402 0 R/StructParents 95/Contents 2396 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2372 0 obj<</Parent 2470 0 R/Count 5/Type/Pages/Kids[2253 0 R 2281 0 R 2294 0 R 2314 0 R 2340 0 R]>>endobj2373 0 obj[2370 0 R]endobj2374 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2375 0 obj[2374 0 R 2376 0 R 2377 0 R 2378 0 R 2379 0 R 2381 0 R]endobj2376 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2340 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_53.html)/S/URI>>/Border[0 0 0]>>endobj2377 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2409 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_55.html)/S/URI>>/Border[0 0 0]>>endobj2378 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2379 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2380 0 obj[2371 0 R/XYZ 0 731.2 null]endobj2381 0 obj<</Rect[10.0 693.431 39.0769 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC61)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC61)/S/URI>>/Border[0 0 0]>>endobj2382 0 obj[2371 0 R/XYZ 0 671.815 null]endobj2383 0 obj<</Parent 2447 0 R/ID 2402 0 R/StructParents 96/Contents 2397 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2384 0 obj[2370 0 R]endobj2385 0 obj<</Limits[32 63]/Nums[32 1201 0 R 33 1212 0 R 34 1232 0 R 35 1248 0 R 36 1250 0 R 37 1271 0 R 38 1300 0 R 39 1328 0 R 40 1339 0 R 41 1341 0 R 42 1343 0 R 43 1366 0 R 44 1378 0 R 45 1400 0 R 46 1426 0 R 47 1440 0 R 48 1464 0 R 49 1490 0 R 50 1517 0 R 51 1545 0 R 52 1571 0 R 53 1601 0 R 54 1611 0 R 55 1634 0 R 56 1646 0 R 57 1666 0 R 58 1678 0 R 59 1698 0 R 60 1727 0 R 61 1741 0 R 62 1762 0 R 63 1792 0 R]>>endobj2386 0 obj<</Limits[64 128]/Nums[]>>endobj2387 0 obj<</Annots 2390 0 R/Parent 2447 0 R/ID 2402 0 R/StructParents 97/Contents 2398 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2388 0 obj[2370 0 R]endobj2389 0 obj<</Rect[50.0 711.535 192.324 726.535]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D( \\ÀCP´jûœ2\(diòŒSEC62)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_55.html#SEC62)/S/URI>>/Border[0 0 0]>>endobj2390 0 obj[2389 0 R 2391 0 R 2392 0 R 2393 0 R 2394 0 R 2395 0 R]endobj2391 0 obj<</Rect[65.608 657.735 88.162 672.735]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2392 0 obj<</Rect[95.162 657.735 143.378 672.735]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2340 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_53.html)/S/URI>>/Border[0 0 0]>>endobj2393 0 obj<</Rect[150.378 657.735 174.486 672.735]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2409 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_55.html)/S/URI>>/Border[0 0 0]>>endobj2394 0 obj<</Rect[181.486 657.735 200.932 672.735]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2395 0 obj<</Rect[251.094 657.735 343.634 672.735]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2396 0 obj<</Length 4431>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - let)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
0.814 w 
10 695.805 m
39.077 695.805 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.2479 Tm
(let)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7235 Tm
(You can create code blocks that have local variables using the )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( special form. )Tj
0 -2.557 TD
(You've seen local binding environments in other languages before. In C o\r Pascal you've probably seen )Tj
0 -1.2 TD
(blocks with local variables of their own, e.g., in C: )Tj
/T1_2 1 Tf
0 -2.562 TD
(...)Tj
0 -1.2 TD
({  int x = 10;)Tj
T*
(   int y = 20;)Tj
0 -2.4 TD
(   foo\(x,y\);)Tj
0 -1.2 TD
(})Tj
T*
(...)Tj
/T1_0 1 Tf
0 -2.557 TD
(Here we've got a block \(inside curly braces\) where local variables nam\ed )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(y)Tj
/T1_0 1 Tf
( are visible. \(The same )Tj
0 -1.205 TD
(thing can be done with )Tj
/T1_2 1 Tf
(begin)Tj
/T1_0 1 Tf
(...)Tj
/T1_2 1 Tf
(end)Tj
/T1_0 1 Tf
( blocks in Pascal.\) )Tj
0 -2.557 TD
(When we enter the block, storage is allocated for the local variables, a\nd the storage is initialized with )Tj
0 -1.205 TD
(the appropriate initial values. We say that the variables are )Tj
/T1_3 1 Tf
(bound)Tj
/T1_0 1 Tf
( when we enter the block--the names )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(and )Tj
/T1_2 1 Tf
(y)Tj
/T1_0 1 Tf
( refer to something, namely the storage allocated for them. \(In C, the \storage for local variables )Tj
0 -1.2 TD
(may be allocated on an activation stack.\) )Tj
0 -2.557 TD
(This is a simple but important idea--when you enter a scope, you "bind" \a name to storage, creating an )Tj
0 -1.2 TD
(association \(naming\) between a name and a place you can put a value. \(\In later chapters, we'll see how )Tj
T*
(interpreters and compilers keep track of the association between names a\nd storage.\) )Tj
0 -2.557 TD
(Sometimes, we refer to the storage allocated for a variable as "its bind\ing," but really that's a shorthand )Tj
0 -1.2 TD
(for "the storage named by the variable," or "the storage that the variab\le is bound to." )Tj
0 -2.562 TD
(Inside the block, all references to the variables )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(y)Tj
/T1_0 1 Tf
( refer to these new local variable bindings. When )Tj
0 -1.205 TD
(execution reaches the end of the block, these variable bindings cease to\ exist and references to )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( or )Tj
/T1_2 1 Tf
(y)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(will again refer to whatever they did outside the block \(perhaps global\ variables, or block variables of )Tj
T*
(some intermediate-level block, or nothing at all\). )Tj
0 -2.562 TD
(In this example, all that happens inside the block is a call to the proc\edure )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
(, using the values of the )Tj
0 -1.205 TD
(block variables, i.e., )Tj
/T1_2 1 Tf
(10)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(20)Tj
/T1_0 1 Tf
(. In C or Pascal, these temporary variables might be allocated by growin\g )Tj
0 -1.2 TD
(the stack when the block is entered, and shrinking it again when the blo\ck is exited. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_54.html \(1 of 3\)11\/3/2006 9:01:19 PM)Tj
ET
EMC 

endstreamendobj2397 0 obj<</Length 3908>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - let)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 747.717 Tm
(In Scheme, things are pretty similar. Blocks can be created with )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( expressions, like so: )Tj
/T1_1 1 Tf
0 -2.562 TD
(...)Tj
0 -1.2 TD
(\(let \(\(x 10\))Tj
T*
(      \(y 20\)\))Tj
T*
(   \(foo x y\)\))Tj
T*
(...)Tj
/T1_0 1 Tf
0 -2.557 TD
(The first part of the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( is the variable binding clause, which in this case two subclauses, )Tj
/T1_1 1 Tf
(\(x 10\))Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
0 -1.205 TD
(\(y 20\))Tj
/T1_0 1 Tf
(. This says that the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( will create a variable named )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( whose initial value is )Tj
/T1_1 1 Tf
(10)Tj
/T1_0 1 Tf
(, and another )Tj
0 -1.205 TD
(variable )Tj
/T1_1 1 Tf
(y)Tj
/T1_0 1 Tf
( whose initial value is )Tj
/T1_1 1 Tf
(20)Tj
/T1_0 1 Tf
(. A )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
('s variable binding clause can contain any number of clauses, )Tj
0 -1.205 TD
(creating any number of )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( variables. Each subclause is very much like the name and initial value \parts )Tj
0 -1.205 TD
(of a )Tj
/T1_1 1 Tf
(define)Tj
/T1_0 1 Tf
( form. )Tj
0 -2.562 TD
(The rest of the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( is a sequence of expressions, called the )Tj
/T1_2 1 Tf
(let body)Tj
/T1_0 1 Tf
(. The expressions are simply )Tj
0 -1.205 TD
(evaluated in order, and the value of the last expression is returned as \the value of the whole )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(expression. \(The fact that this value is returned is very handy, and wi\ll be important in examples we use )Tj
T*
(later.\) )Tj
0 -2.562 TD
(A )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( may only bind one variable, but it still needs parentheses around the w\hole variable binding )Tj
0 -1.2 TD
(clause, as well as around the \(one\) subclause for a particular binding\. For example: )Tj
/T1_1 1 Tf
0 -2.562 TD
(...)Tj
0 -1.2 TD
(\(let \(\(x 10\)\))Tj
T*
(   \(foo x\)\))Tj
T*
(...)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Don't forget the "extra" parentheses around the one variable binding c\lause--they're not really extra, )Tj
0 -1.2 TD
(because they're what tells Scheme where the variable binding clause star\ts and stops. In this case, before )Tj
T*
(and after the subclause that defines the one variable.\) )Tj
0 -2.557 TD
(In Scheme, you can use local variables pretty much the way you do in mos\t languages. When you enter a )Tj
/T1_1 1 Tf
0 -1.205 TD
(let)Tj
/T1_0 1 Tf
( expression, the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( variables will be bound and initialized with values. When you exit the \)Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(expression, those bindings will disappear. )Tj
0 -2.557 TD
(You can also use local variables differently, however, as we'll explain \in later chapters. In general, the )Tj
0 -1.2 TD
(bindings for Scheme variables aren't allocated on an activation stack, b\ut on the heap. This lets you keep )Tj
T*
(bindings around after the procedure that creates them returns, which wil\l turn out to be useful. )Tj
0 -2.557 TD
(\(You might think that this is inefficient, and it could be, but goodSch\eme compilers can almost always )Tj
0 -1.2 TD
(determine that it's not really necessary to put most variables on the he\ap, and avoid the cost of heap-)Tj
T*
(allocating them. As with good compilers for most languages, most variabl\es are actually in registers )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_54.html \(2 of 3\)11\/3/2006 9:01:19 PM)Tj
ET
EMC 

endstreamendobj2398 0 obj<</Length 1714>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - let)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 751.7104 Tm
(when it matters, so that the generated code is fast.\) )Tj
/T1_1 1 Tf
7 0 0 7 35.713 715.9104 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
50 713.794 m
192.324 713.794 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 715.9104 Tm
(Indenting let Expressions)Tj
0 0 0 rg
( )Tj
ET
0.5 0.5 0.5 rg
10 681.135 m
10 683.135 l
602 683.135 l
601 682.135 l
11 682.135 l
11 682.135 l
h
f
0.875 0.875 0.875 rg
602 683.135 m
602 681.135 l
10 681.135 l
11 682.135 l
601 682.135 l
601 682.135 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 662.1104 Tm
(Go to the )Tj
ET
65.608 659.994 m
88.162 659.994 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 662.1104 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 659.994 m
143.378 659.994 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 662.1104 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 659.994 m
174.486 659.994 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 662.1104 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 659.994 m
200.932 659.994 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 662.1104 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 659.994 m
343.634 659.994 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 662.1104 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_54.html \(3 of 3\)11\/3/2006 9:01:19 PM)Tj
ET
EMC 

endstreamendobj2399 0 obj(An Introduction to Scheme and its Implementation - let)endobj2400 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_54.html)/S 700 0 R>>endobj2401 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_54.html)endobj2402 0 obj(õß•ãæ‡rãÙ=¿c¨opB)endobj2403 0 obj<</TS(D:20061104050119)/ID 2402 0 R/CT(text/html)/O[2371 0 R 2383 0 R 2387 0 R]/S/SPS/T 2399 0 R/TID 2405 0 R/SI 2404 0 R>>endobj2404 0 obj<</TS(D:20061104050119)/AU 2401 0 R>>endobj2405 0 obj(ÕLI4ÖtŸÉÒ˚≥≈jı)endobj2406 0 obj<</Parent 710 0 R/Next 2432 0 R/Dest[2371 0 R/XYZ 0 792 null]/Prev 2368 0 R/SE 2370 0 R/Title(An Introduction to Scheme and its Implementation - let)>>endobj2407 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2408 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 2409 0 R>>endobj2409 0 obj<</Annots 2412 0 R/Parent 2447 0 R/ID 2428 0 R/StructParents 98/Contents 2424 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 1287 0 R/T1_3 828 0 R/T1_4 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2410 0 obj[2408 0 R]endobj2411 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2412 0 obj[2411 0 R 2413 0 R 2414 0 R 2415 0 R 2416 0 R 2418 0 R 2419 0 R 2420 0 R 2421 0 R 2422 0 R 2423 0 R]endobj2413 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2371 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_54.html)/S/URI>>/Border[0 0 0]>>endobj2414 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2435 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_56.html)/S/URI>>/Border[0 0 0]>>endobj2415 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2416 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2417 0 obj[2409 0 R/XYZ 0 731.2 null]endobj2418 0 obj<</Rect[10.0 695.625 189.242 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC62)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC62)/S/URI>>/Border[0 0 0]>>endobj2419 0 obj<</Rect[65.608 332.488 88.162 347.488]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2420 0 obj<</Rect[95.162 332.488 143.378 347.488]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2371 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_54.html)/S/URI>>/Border[0 0 0]>>endobj2421 0 obj<</Rect[150.378 332.488 174.486 347.488]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2435 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_56.html)/S/URI>>/Border[0 0 0]>>endobj2422 0 obj<</Rect[181.486 332.488 200.932 347.488]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2423 0 obj<</Rect[251.094 332.488 343.634 347.488]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2424 0 obj<</Length 3969>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Indenting let Express\ions)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.176 w 
10 696.405 m
76.892 696.405 l
S
0.706 w 
76.892 697.816 m
102.092 697.816 l
S
1.176 w 
102.092 696.405 m
189.242 696.405 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 699.933 Tm
(Indenting )Tj
/T1_2 1 Tf
(let)Tj
/T1_1 1 Tf
( Expressions)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.7 TD
(In general, we indent )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
( expressions in a way that shows the block structure of the program. The\ )Tj
0 -1.205 TD
(binding forms \(variable names and initial values\) are lined up vertica\lly after the keyword )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
(, and the )Tj
0 -1.2 TD
(body expressions are indented a few characters and lined up vertically, \like so: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(let \(\(x 10\)    ; bindings of x)Tj
0 -1.2 TD
(      \(y 20\)\)   ; and y)Tj
T*
(   \(foo x\))Tj
T*
(   \(let \(\(a \(bar\)\)   ; bindings of a)Tj
T*
(         \(b \(baz\)\)\)  ; and b)Tj
T*
(      \(quux x a\))Tj
T*
(      \(quux y b\)\))Tj
T*
(   \(baz\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that the binding forms of each )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
( are lined up vertically, and the )Tj
/T1_3 1 Tf
(body)Tj
/T1_0 1 Tf
( expressions are )Tj
/T1_4 1 Tf
(not)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(indented as far. This is important for making it obvious where the bindi\ng forms stop and the body )Tj
0 -1.205 TD
(expressions start. \(In this example, the body of the outer )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
( consists of a call to )Tj
/T1_3 1 Tf
(foo)Tj
/T1_0 1 Tf
(, another )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
(, and )Tj
0 -1.205 TD
(a call to )Tj
/T1_3 1 Tf
(baz)Tj
/T1_0 1 Tf
(. The body of the inner let consists of two calls to )Tj
/T1_3 1 Tf
(quux)Tj
/T1_0 1 Tf
(.\) )Tj
ET
0.5 0.5 0.5 rg
10 355.888 m
10 357.888 l
602 357.888 l
601 356.888 l
11 356.888 l
11 356.888 l
h
f
0.875 0.875 0.875 rg
602 357.888 m
602 355.888 l
10 355.888 l
11 356.888 l
601 356.888 l
601 356.888 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 336.8634 Tm
(Go to the )Tj
ET
0.706 w 
65.608 334.747 m
88.162 334.747 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 336.8634 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 334.747 m
143.378 334.747 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 336.8634 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 334.747 m
174.486 334.747 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 336.8634 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 334.747 m
200.932 334.747 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 336.8634 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 334.747 m
343.634 334.747 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 336.8634 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_55.html11/3/2006 9:0\1:25 PM)Tj
ET
EMC 

endstreamendobj2425 0 obj(An Introduction to Scheme and its Implementation - Indenting let Expressions)endobj2426 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_55.html)/S 700 0 R>>endobj2427 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_55.html)endobj2428 0 obj( .ÀCP´jûœ2\(diòŒ)endobj2429 0 obj<</TS(D:20061104050125)/ID 2428 0 R/CT(text/html)/O[2409 0 R]/S/SPS/T 2425 0 R/TID 2431 0 R/SI 2430 0 R>>endobj2430 0 obj<</TS(D:20061104050125)/AU 2427 0 R>>endobj2431 0 obj(@ﬂ˝Æÿa/—˙ÌœÌMd)endobj2432 0 obj<</Parent 710 0 R/Next 2466 0 R/Dest[2409 0 R/XYZ 0 792 null]/Prev 2406 0 R/SE 2408 0 R/Title(An Introduction to Scheme and its Implementation - Indenting let Expressions)>>endobj2433 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2434 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 2446 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 2435 0 R>>endobj2435 0 obj<</Annots 2438 0 R/Parent 2447 0 R/ID 2462 0 R/StructParents 99/Contents 2457 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2436 0 obj[2434 0 R]endobj2437 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2438 0 obj[2437 0 R 2439 0 R 2440 0 R 2441 0 R 2442 0 R 2444 0 R]endobj2439 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2409 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_55.html)/S/URI>>/Border[0 0 0]>>endobj2440 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2469 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_57.html)/S/URI>>/Border[0 0 0]>>endobj2441 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2442 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2443 0 obj[2435 0 R/XYZ 0 731.2 null]endobj2444 0 obj<</Rect[10.0 693.431 117.746 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC63)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC63)/S/URI>>/Border[0 0 0]>>endobj2445 0 obj[2435 0 R/XYZ 0 671.815 null]endobj2446 0 obj<</Annots 2450 0 R/Parent 2558 0 R/ID 2462 0 R/StructParents 100/Contents 2458 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2447 0 obj<</Parent 2470 0 R/Count 5/Type/Pages/Kids[2371 0 R 2383 0 R 2387 0 R 2409 0 R 2435 0 R]>>endobj2448 0 obj[2434 0 R]endobj2449 0 obj<</Rect[50.0 728.27 304.352 743.27]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(9Qr;|…Û‘”…ﬂö‡\\\\⁄SEC64)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_57.html#SEC64)/S/URI>>/Border[0 0 0]>>endobj2450 0 obj[2449 0 R 2451 0 R 2452 0 R 2453 0 R 2454 0 R 2455 0 R 2456 0 R]endobj2451 0 obj<</Rect[50.0 709.47 196.202 724.47]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(§}}©”®ê˘ü¡SEC65)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_58.html#SEC65)/S/URI>>/Border[0 0 0]>>endobj2452 0 obj<</Rect[65.608 655.67 88.162 670.67]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2453 0 obj<</Rect[95.162 655.67 143.378 670.67]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2409 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_55.html)/S/URI>>/Border[0 0 0]>>endobj2454 0 obj<</Rect[150.378 655.67 174.486 670.67]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2469 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_57.html)/S/URI>>/Border[0 0 0]>>endobj2455 0 obj<</Rect[181.486 655.67 200.932 670.67]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2456 0 obj<</Rect[251.094 655.67 343.634 670.67]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2457 0 obj<</Length 5422>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Lexical Scope)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
117.746 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Lexical Scope)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7235 Tm
(If nested )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(s define variables by the same name, then the uses of that name in the b\ody of the inner )Tj
/T1_2 1 Tf
0 -1.205 TD
(let)Tj
/T1_0 1 Tf
( will refer to the bindings created by the inner )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Consider the following code fragment: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(let \(\(x 10\)    ; outer binding of x)Tj
0 -1.2 TD
(      \(a 20\)\)   ; binding of a)Tj
T*
(   \(foo x\))Tj
T*
(   \(let \(\(x \(bar\)\)       ; inner binding of x)Tj
T*
(         \(b \(baz x x\)\)\)  ; binding of b)Tj
T*
(      \(quux x a\))Tj
T*
(      \(quux y b\)\))Tj
T*
(   \(baz x a\)  ; refers to outer x \(and a\))Tj
T*
(   \(baz x b\)\) ; illegal?)Tj
/T1_0 1 Tf
0 -2.557 TD
(When control enters the outer )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(, the inital values for the variables are computed. In this case, that's\ )Tj
0 -1.205 TD
(just the literal values )Tj
/T1_2 1 Tf
(10)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(20)Tj
/T1_0 1 Tf
(. Then storage is allocated for the variables, and initialized with thos\e )Tj
T*
(values. Once that's done, the meaning of the names )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(a)Tj
/T1_0 1 Tf
( changes--they now refer to the new storage )Tj
0 -1.205 TD
(for \(bindings of\) the )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( variables )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(a)Tj
/T1_0 1 Tf
(---and then the body expressions are evaluated. )Tj
0 -2.562 TD
(Similarly, when control enters the inner )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(, the inital values are computed by the calls to )Tj
/T1_2 1 Tf
(bar)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
0 -1.205 TD
(baz)Tj
/T1_0 1 Tf
(, and then storage for )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(b)Tj
/T1_0 1 Tf
( is allocated and initialized with those values. Then the meanings of )Tj
0 -1.205 TD
(the names )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(b)Tj
/T1_0 1 Tf
( change, to refer to the new storage \(bindings\) of those variables. \(\For example, the )Tj
0 -1.205 TD
(value of )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( when )Tj
/T1_2 1 Tf
(\(baz x x\))Tj
/T1_0 1 Tf
( is evaluated is still 10, because )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( still refers to the outer )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
(.\) )Tj
0 -2.562 TD
(In this example, the meaning of the identifier )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( changes when we enter the inner )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(. We say that the )Tj
0 -1.205 TD
(inner let variable )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( )Tj
/T1_3 1 Tf
(shadows)Tj
/T1_0 1 Tf
( the outer one, within the body of the )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(. The outer )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( is no longer visible, )Tj
0 -1.2 TD
(because the inner one is. )Tj
0 -2.562 TD
(When we exit a )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( \(after evaluating its body expressions\), the bindings introduced by t\he )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( "go out )Tj
0 -1.205 TD
(of scope," i.e., aren't visible anymore. \(For example, when we evaluate\ the expression )Tj
/T1_2 1 Tf
(\(baz x a\))Tj
/T1_0 1 Tf
( in )Tj
0 -1.205 TD
(the body of the outer )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( refers to the binding introduced by the outer )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(---the )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( introduced by the )Tj
0 -1.2 TD
(inner let is no longer visible. )Tj
0 -2.562 TD
(Likewise, in the example code fragment, the )Tj
/T1_2 1 Tf
(b)Tj
/T1_0 1 Tf
( in the last expression, )Tj
/T1_2 1 Tf
(\(baz x b\))Tj
/T1_0 1 Tf
(, does not refer to the )Tj
0 -1.205 TD
(inner )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
('s binding of )Tj
/T1_2 1 Tf
(b)Tj
/T1_0 1 Tf
(. Unless there is a binding of )Tj
/T1_2 1 Tf
(b)Tj
/T1_0 1 Tf
( in some outer scope we haven't shown \(such as a )Tj
0 -1.2 TD
(top-level binding\), then this will be an error. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_56.html \(1 of 2\)11\/3/2006 9:01:32 PM)Tj
ET
EMC 

endstreamendobj2458 0 obj<</Length 1844>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Lexical Scope)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
7 0 0 7 35.713 732.6452 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
50 730.528 m
304.352 730.528 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 732.6452 Tm
(Binding Environments and Binding Contours)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 713.8452 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 711.728 m
196.202 711.728 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 713.8452 Tm
(Block Structure Diagrams)Tj
0 0 0 rg
(: Visualizing scope )Tj
ET
0.5 0.5 0.5 rg
10 679.07 m
10 681.07 l
602 681.07 l
601 680.07 l
11 680.07 l
11 680.07 l
h
f
0.875 0.875 0.875 rg
602 681.07 m
602 679.07 l
10 679.07 l
11 680.07 l
601 680.07 l
601 680.07 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 660.0452 Tm
(Go to the )Tj
ET
65.608 657.928 m
88.162 657.928 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 660.0452 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 657.928 m
143.378 657.928 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 660.0452 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 657.928 m
174.486 657.928 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 660.0452 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 657.928 m
200.932 657.928 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 660.0452 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 657.928 m
343.634 657.928 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 660.0452 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_56.html \(2 of 2\)11\/3/2006 9:01:32 PM)Tj
ET
EMC 

endstreamendobj2459 0 obj(An Introduction to Scheme and its Implementation - Lexical Scope)endobj2460 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_56.html)/S 700 0 R>>endobj2461 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_56.html)endobj2462 0 obj(‹…a-©¬˝°‹ÀúIúú)endobj2463 0 obj<</TS(D:20061104050132)/ID 2462 0 R/CT(text/html)/O[2435 0 R 2446 0 R]/S/SPS/T 2459 0 R/TID 2465 0 R/SI 2464 0 R>>endobj2464 0 obj<</TS(D:20061104050132)/AU 2461 0 R>>endobj2465 0 obj(Î∑V„|ÄERÇ›÷:õ)endobj2466 0 obj<</Parent 710 0 R/Next 2495 0 R/Dest[2435 0 R/XYZ 0 792 null]/Prev 2432 0 R/SE 2434 0 R/Title(An Introduction to Scheme and its Implementation - Lexical Scope)>>endobj2467 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2468 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 2469 0 R>>endobj2469 0 obj<</Annots 2473 0 R/Parent 2558 0 R/ID 2491 0 R/StructParents 101/Contents 2487 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2470 0 obj<</Parent 4701 0 R/Count 25/Type/Pages/Kids[2113 0 R 2134 0 R 2254 0 R 2372 0 R 2447 0 R]>>endobj2471 0 obj[2468 0 R]endobj2472 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2473 0 obj[2472 0 R 2474 0 R 2475 0 R 2476 0 R 2477 0 R 2479 0 R 2482 0 R 2483 0 R 2484 0 R 2485 0 R 2486 0 R]endobj2474 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2435 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_56.html)/S/URI>>/Border[0 0 0]>>endobj2475 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2498 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_58.html)/S/URI>>/Border[0 0 0]>>endobj2476 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2477 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2478 0 obj[2469 0 R/XYZ 0 731.2 null]endobj2479 0 obj<</Rect[10.0 695.8 310.244 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC64)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC64)/S/URI>>/Border[0 0 0]>>endobj2480 0 obj[2469 0 R/XYZ 0 674.4 null]endobj2481 0 obj[2469 0 R/XYZ 0 569.2 null]endobj2482 0 obj<</Rect[65.608 242.198 88.162 257.198]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2483 0 obj<</Rect[95.162 242.198 143.378 257.198]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2435 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_56.html)/S/URI>>/Border[0 0 0]>>endobj2484 0 obj<</Rect[150.378 242.198 174.486 257.198]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2498 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_58.html)/S/URI>>/Border[0 0 0]>>endobj2485 0 obj<</Rect[181.486 242.198 200.932 257.198]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2486 0 obj<</Rect[251.094 242.198 343.634 257.198]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2487 0 obj<</Length 4585>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Binding Environments \and Binding Contours)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.176 w 
10 696.405 m
310.244 696.405 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 699.933 Tm
(Binding Environments and Binding Contours)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(The set of all bindings that are visible at a given point during program\ execution is called a )Tj
/T1_2 1 Tf
(binding )Tj
0 -1.2 TD
(environment)Tj
/T1_0 1 Tf
(. That is, a binding environment maps a set of names to the pieces of st\orage they name. )Tj
0 -2.557 TD
(A top-level binding environment is the mapping that the Scheme system ma\intains between top-level )Tj
0 -1.2 TD
(variable names and the storage they're bound to. This might be implement\ed as a hash table. )Tj
0 -2.562 TD
(With local variables, a simple "flat" table isn't sufficient. Entering a\ )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
(, for example, adds new )Tj
0 -1.2 TD
(bindings to the environment that code is executing in--it makes the new \variable bindings visible, )Tj
T*
(changing the mapping from names to storage. )Tj
0 -2.557 TD
(We say that each binding contruct we execute introduces a new )Tj
/T1_2 1 Tf
(binding contour)Tj
/T1_0 1 Tf
(. We call it a contour )Tj
0 -1.2 TD
(because it changes the "shape" of the environment. )Tj
0 -2.557 TD
(You can think of a binding contour as being implemented by a new table t\hat's created when you enter a )Tj
/T1_3 1 Tf
0 -1.205 TD
(let)Tj
/T1_0 1 Tf
(, or any other construct that binds variables. When Scheme looks for a b\inding of an identifier, it )Tj
0 -1.2 TD
(looks first in this new table, then in the old table that represented th\e environment outside the )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(. Since )Tj
T*
(Scheme looks in the "inner" environment's table first, it will always fi\nd the innermost binding of any )Tj
0 -1.205 TD
(identifier, such as )Tj
/T1_3 1 Tf
(x)Tj
/T1_0 1 Tf
( in the example above. )Tj
0 -2.557 TD
(At any given point, the )Tj
/T1_2 1 Tf
(environment)Tj
/T1_0 1 Tf
( consists of )Tj
/T1_2 1 Tf
(all)Tj
/T1_0 1 Tf
( of the variable bindings that are visible. This includes )Tj
0 -1.2 TD
(all of the bindings in the table for the innermost contour, and all of t\he bindings in the table for the )Tj
T*
(contours it's nested inside, )Tj
/T1_2 1 Tf
(except)Tj
/T1_0 1 Tf
( those that are shadowed by inner bindings of the same names. )Tj
ET
0.5 0.5 0.5 rg
10 265.598 m
10 267.598 l
602 267.598 l
601 266.598 l
11 266.598 l
11 266.598 l
h
f
0.875 0.875 0.875 rg
602 267.598 m
602 265.598 l
10 265.598 l
11 266.598 l
601 266.598 l
601 266.598 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 246.5734 Tm
(Go to the )Tj
ET
0.706 w 
65.608 244.457 m
88.162 244.457 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 246.5734 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 244.457 m
143.378 244.457 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 246.5734 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 244.457 m
174.486 244.457 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 246.5734 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 244.457 m
200.932 244.457 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 246.5734 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 244.457 m
343.634 244.457 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 246.5734 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_57.html11/3/2006 9:0\1:38 PM)Tj
ET
EMC 

endstreamendobj2488 0 obj(An Introduction to Scheme and its Implementation - Binding Environments and Binding Contours)endobj2489 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_57.html)/S 700 0 R>>endobj2490 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_57.html)endobj2491 0 obj(9Qr;|…Û‘”…ﬂö‡\\⁄)endobj2492 0 obj<</TS(D:20061104050138)/ID 2491 0 R/CT(text/html)/O[2469 0 R]/S/SPS/T 2488 0 R/TID 2494 0 R/SI 2493 0 R>>endobj2493 0 obj<</TS(D:20061104050138)/AU 2490 0 R>>endobj2494 0 obj(J’UpÛRZŒ8≠JÎt	…)endobj2495 0 obj<</Parent 710 0 R/Next 2522 0 R/Dest[2469 0 R/XYZ 0 792 null]/Prev 2466 0 R/SE 2468 0 R/Title(An Introduction to Scheme and its Implementation - Binding Environments and Binding Contours)>>endobj2496 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2497 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 2498 0 R>>endobj2498 0 obj<</Annots 2501 0 R/Parent 2558 0 R/ID 2518 0 R/StructParents 102/Contents 2514 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 1287 0 R/T1_3 828 0 R/T1_4 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2499 0 obj[2497 0 R]endobj2500 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2501 0 obj[2500 0 R 2502 0 R 2503 0 R 2504 0 R 2505 0 R 2507 0 R 2509 0 R 2510 0 R 2511 0 R 2512 0 R 2513 0 R]endobj2502 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2469 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_57.html)/S/URI>>/Border[0 0 0]>>endobj2503 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2525 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_59.html)/S/URI>>/Border[0 0 0]>>endobj2504 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2505 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2506 0 obj[2498 0 R/XYZ 0 731.2 null]endobj2507 0 obj<</Rect[10.0 695.625 241.364 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC65)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC65)/S/URI>>/Border[0 0 0]>>endobj2508 0 obj[2498 0 R/XYZ 0 674.225 null]endobj2509 0 obj<</Rect[65.608 73.8878 88.162 88.8878]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2510 0 obj<</Rect[95.162 73.8878 143.378 88.8878]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2469 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_57.html)/S/URI>>/Border[0 0 0]>>endobj2511 0 obj<</Rect[150.378 73.8878 174.486 88.8878]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2525 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_59.html)/S/URI>>/Border[0 0 0]>>endobj2512 0 obj<</Rect[181.486 73.8878 200.932 88.8878]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2513 0 obj<</Rect[251.094 73.8878 343.634 88.8878]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2514 0 obj<</Length 5437>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Block Structure Diagr\ams)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.176 w 
10 696.405 m
208.38 696.405 l
S
0.706 w 
208.38 697.816 m
233.58 697.816 l
S
1.176 w 
233.58 696.405 m
241.364 696.405 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 699.933 Tm
(Block Structure Diagrams for )Tj
/T1_2 1 Tf
(let)Tj
/T1_1 1 Tf
(s)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.695 TD
(We can make environments and contours clearer by drawing a block diagram\ showing where the )Tj
0 -1.2 TD
(different variables are visible: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(let \(\(x 10\)    ; bindings of x)Tj
0 -1.2 TD
(      \(a 20\)\)   ; and a )Tj
T*
( +----------------------------------------------------------+)Tj
T*
( | \(foo x\)                                 scope of outer x |)Tj
T*
( | \(let \(\(x \(bar\)\)                           and a          |)Tj
T*
( |       \(b \(baz x x\)\)\)                                     |)Tj
T*
( |  +------------------------------------------------+      |)Tj
T*
( |  | \(quux x a\)                    scope of inner x |      |)Tj
T*
( |  | \(quux y b\)                    and b            | \)    |)Tj
T*
( |  +------------------------------------------------+      |)Tj
T*
( | \(baz x a\)                                                |)Tj
T*
( | \(baz x b\)                                                | \))Tj
T*
( +----------------------------------------------------------+)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(This kind of block diagram is the origin of the term "block structure.\"\) )Tj
0 -2.557 TD
(Each box represents a contour: it shows where in the program each variab\le binding will be visible. )Tj
0 -2.557 TD
(We can interpret a block structure diagram by looking outward from an oc\currence of a variable name, )Tj
0 -1.2 TD
(and using the nearest enclosing box that corresponds to a binding of tha\t name. Now we can see that the )Tj
0 -1.205 TD
(final call )Tj
/T1_3 1 Tf
(\(baz x b\))Tj
/T1_0 1 Tf
( does not refer to the )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
( variable )Tj
/T1_3 1 Tf
(b)Tj
/T1_0 1 Tf
(---it's not inside the box corresponding to )Tj
T*
(that variable. We can also see that the occurrence of )Tj
/T1_3 1 Tf
(x)Tj
/T1_0 1 Tf
( in that expression refers to the outer )Tj
/T1_3 1 Tf
(x)Tj
/T1_0 1 Tf
(. The )Tj
0 -1.205 TD
(occurrence of )Tj
/T1_3 1 Tf
(x)Tj
/T1_0 1 Tf
( in the calls to )Tj
/T1_3 1 Tf
(quux)Tj
/T1_0 1 Tf
( refer to the inner )Tj
/T1_3 1 Tf
(x)Tj
/T1_0 1 Tf
(, because they're inside its box, and inner )Tj
0 -1.2 TD
(definitions shadow outer ones. )Tj
0 -2.557 TD
(There's something a little tricky to notice here. When we evaluate the i\nitial value expressions for the )Tj
0 -1.205 TD
(inner )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
(, the inner bindings )Tj
/T1_4 1 Tf
(are not visible yet)Tj
/T1_0 1 Tf
(. )Tj
/T1_3 1 Tf
(x)Tj
/T1_0 1 Tf
( still refers to the )Tj
/T1_4 1 Tf
(outer)Tj
/T1_0 1 Tf
( binding of )Tj
/T1_3 1 Tf
(x)Tj
/T1_0 1 Tf
(, not the inner one )Tj
0 -1.2 TD
(that we are about to create. Sometimes this is exactly what you want, bu\t sometimes it's not. Because it )Tj
0 -1.205 TD
(isn't always what you want, Scheme provides two variants of )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
(, called )Tj
/T1_3 1 Tf
(let*)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(letrec)Tj
/T1_0 1 Tf
(. )Tj
ET
0.5 0.5 0.5 rg
10 97.288 m
10 99.288 l
602 99.288 l
601 98.288 l
11 98.288 l
11 98.288 l
h
f
0.875 0.875 0.875 rg
602 99.288 m
602 97.288 l
10 97.288 l
11 98.288 l
601 98.288 l
601 98.288 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 78.2634 Tm
(Go to the )Tj
ET
0.706 w 
65.608 76.147 m
88.162 76.147 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 78.2634 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 76.147 m
143.378 76.147 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 78.2634 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 76.147 m
174.486 76.147 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 78.2634 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 76.147 m
200.932 76.147 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 78.2634 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 76.147 m
343.634 76.147 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 78.2634 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_58.html11/3/2006 9:0\1:45 PM)Tj
ET
EMC 

endstreamendobj2515 0 obj(An Introduction to Scheme and its Implementation - Block Structure Diagrams)endobj2516 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_58.html)/S 700 0 R>>endobj2517 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_58.html)endobj2518 0 obj(§}}©”®ê˘ü¡)endobj2519 0 obj<</TS(D:20061104050145)/ID 2518 0 R/CT(text/html)/O[2498 0 R]/S/SPS/T 2515 0 R/TID 2521 0 R/SI 2520 0 R>>endobj2520 0 obj<</TS(D:20061104050145)/AU 2517 0 R>>endobj2521 0 obj($<À˝òpπò†ßÜ∫<”√Œ)endobj2522 0 obj<</Parent 710 0 R/Next 2554 0 R/Dest[2498 0 R/XYZ 0 792 null]/Prev 2495 0 R/SE 2497 0 R/Title(An Introduction to Scheme and its Implementation - Block Structure Diagrams)>>endobj2523 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2524 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 2536 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 2525 0 R>>endobj2525 0 obj<</Annots 2528 0 R/Parent 2558 0 R/ID 2550 0 R/StructParents 103/Contents 2545 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2526 0 obj[2524 0 R]endobj2527 0 obj<</Rect[62.5812 750.726 84.0947 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2528 0 obj[2527 0 R 2529 0 R 2530 0 R 2531 0 R 2532 0 R 2534 0 R]endobj2529 0 obj<</Rect[90.7717 750.726 136.763 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2498 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_58.html)/S/URI>>/Border[0 0 0]>>endobj2530 0 obj<</Rect[143.44 750.726 166.436 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2557 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_60.html)/S/URI>>/Border[0 0 0]>>endobj2531 0 obj<</Rect[173.113 750.726 191.662 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2532 0 obj<</Rect[239.51 750.726 327.781 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2533 0 obj[2525 0 R/XYZ 0 733.175 null]endobj2534 0 obj<</Rect[9.53865 697.148 46.5193 713.51]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC66)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC66)/S/URI>>/Border[0 0 0]>>endobj2535 0 obj[2525 0 R/XYZ 0 676.53 null]endobj2536 0 obj<</Annots 2539 0 R/Parent 2558 0 R/ID 2550 0 R/StructParents 104/Contents 2546 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2537 0 obj[2524 0 R]endobj2538 0 obj<</Rect[209.463 291.278 480.859 305.65]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‚ÊzTÜ˙zIÂt%u∏SEC103)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_97.html#SEC103)/S/URI>>/Border[0 0 0]>>endobj2539 0 obj[2538 0 R 2540 0 R 2541 0 R 2542 0 R 2543 0 R 2544 0 R]endobj2540 0 obj<</Rect[62.5812 239.96 84.0947 254.268]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2541 0 obj<</Rect[90.7717 239.96 136.763 254.268]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2498 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_58.html)/S/URI>>/Border[0 0 0]>>endobj2542 0 obj<</Rect[143.44 239.96 166.436 254.268]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2557 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_60.html)/S/URI>>/Border[0 0 0]>>endobj2543 0 obj<</Rect[173.113 239.96 191.662 254.268]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2544 0 obj<</Rect[239.51 239.96 327.781 254.268]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2545 0 obj<</Length 4437>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - let*)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(Go to the )Tj
ET
0 0 1 RG
0.673 w 10 M 0 j 0 J []0 d 
62.581 752.88 m
84.095 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 62.5812 754.8994 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
90.772 752.88 m
136.763 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 90.7717 754.8994 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
143.44 752.88 m
166.436 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 143.4404 754.8994 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
173.113 752.88 m
191.662 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 173.1132 754.8994 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
239.51 752.88 m
327.781 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 239.5099 754.8994 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
9.539 739.852 m
9.539 741.759 l
602.461 741.759 l
601.507 740.805 l
10.493 740.805 l
10.493 740.805 l
h
f
0.875 0.875 0.875 rg
602.461 741.759 m
602.461 739.852 l
9.539 739.852 l
10.493 740.805 l
601.507 740.805 l
601.507 740.805 l
h
f
0.777 w 
9.539 699.413 m
46.519 699.413 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 701.7427 Tm
(let*)Tj
0 0 0 rg
/T1_2 1 Tf
13.3541 0 0 13.3541 9.5387 664.9957 Tm
(let)Tj
/T1_0 1 Tf
( is useful for most local variables, but sometimes you want to create se\veral local variables in sequence, )Tj
0 -1.2 TD
(with each variable's value available to compute the next variable's valu\e. )Tj
0 -2.557 TD
(For example, it is common to "destructure" a data structure, extracting \part of the structure, then a part of that )Tj
0 -1.2 TD
(part, and so on. We could do this by simply nesting expressions that ext\ract parts, but then we don't have )Tj
T*
(understandable names for the intermediate results of the nested expressi\ons. )Tj
0 -2.557 TD
(\(In other cases, we may want to do more than one thing with the results\ of one of the nested expressions, so )Tj
0 -1.2 TD
(we need to create a variable so that we can refer to it in more than one\ body expression.\) )Tj
0 -2.557 TD
(Consider the code fragment: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(let \(\(a-structure \(some-procedure\)\)\))Tj
0 -1.2 TD
(   \(let \(\(a-substructure \(get-some-subpart a-structure\)\)\))Tj
T*
(      \(let \(\(a-subsubstructure \(get-another-subpart a-substructure\)\\)\))Tj
T*
(         \(foo a-substructure\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Scheme provides a convenient syntax for this sort of nested let; can be \written as a single )Tj
/T1_2 1 Tf
(let*)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(let* \(\(a-structure \(some-procedure\)\))Tj
0 -1.2 TD
(       \(a-substructure \(get-some-subpart a-structure\)\))Tj
T*
(       \(a-subsubstructure \(get-another-subpart a-substructure\)\)\))Tj
T*
(   \(foo a-substructure\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that this wouldn't work if we wrote it as a normal )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( that binds three variables. A block structure )Tj
0 -1.2 TD
(diagram shows why: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(let \(\(a-structure \(some-procedure\)\))Tj
0 -1.2 TD
(      \(a-substructure \(get-some-subpart a-structure\)\))Tj
T*
(      \(a-subsubstructure \(get-another-subpart a-substructure\)\)\))Tj
0 -1.2 TD
( +---------------------------------------------------------------+)Tj
0 -1.2 TD
( | \(foo a-substructure\)           ; scope of all three variables | \)\)\\))Tj
T*
( +---------------------------------------------------------------+)Tj
/T1_0 1 Tf
0 -2.557 TD
(Now we see that all of the initial value expressions for the )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( variables are outside the scope of any of the )Tj
0 -1.205 TD
(variables. )Tj
/T1_2 1 Tf
(a-substructure)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(a-substructure)Tj
/T1_0 1 Tf
( will not refer to the bindings introduced by this )Tj
/T1_2 1 Tf
0 -1.205 TD
(let)Tj
/T1_0 1 Tf
(, but to whatever bindings \(if any\) are visible outside the )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_59.html \(1 of 2\)11\/3/2006 9:01:51 PM)Tj
ET
EMC 

endstreamendobj2546 0 obj<</Length 3754>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - let*)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8351 Tm
(With )Tj
/T1_1 1 Tf
(let*)Tj
/T1_0 1 Tf
(, it's different: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let* \(\(a-structure \(some-procedure\)\))Tj
0 -1.2 TD
( +-------------------------------------------------------------------+)Tj
T*
( |     \(a-substructure \(get-some-subpart a-structure\)\)              \ |)Tj
T*
( +----------------------------------------------------------------+  |)Tj
T*
( |     \(a-subsubstructure \(get-another-subpart a-substructure\)\)\)  |\  |)Tj
T*
( +-------------------------------------------------------------+  |  |)Tj
T*
( | \(foo a-subsubtructure\)                                      |  |  |\ \)\)\))Tj
T*
( +-------------------------------------------------------------+--+--+)Tj
/T1_0 1 Tf
0 -2.557 TD
(Each initial value clause is in the scope of the previous variable in th\e )Tj
/T1_1 1 Tf
(let*)Tj
/T1_0 1 Tf
(. From the nesting of the boxes, )Tj
0 -1.2 TD
(we can see that bindings become visible one at a time, so that the value\ of a binding can be used in computing )Tj
0 -1.2 TD
(the initial value of the next binding. )Tj
0 -2.562 TD
(There's another local binding construct in Scheme, )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
(, which is used when creating mutually recursive )Tj
0 -1.2 TD
(local procedures. I'll discuss that later, when I describe how local pro\cedures work in Scheme. )Tj
/T1_1 1 Tf
0 -2.562 TD
(==================================================================)Tj
0 -1.2 TD
(This is the end of Hunk I)Tj
0 -2.4 TD
(TIME TO TRY IT OUT)Tj
T*
(At this point, you should go read Hunk J of the next chapter)Tj
0 -1.2 TD
(and work through the examples using a running Scheme system.)Tj
T*
(Then return here and resume this chapter.)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.557 TD
(Go to Hunk J, which starts at section )Tj
ET
0 0 1 RG
0.673 w 10 M 0 j 0 J []0 d 
209.463 293.432 m
301.059 293.432 l
S
0.409 w 
301.059 294.226 m
325.096 294.226 l
S
0.673 w 
325.096 293.432 m
480.859 293.432 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 209.4631 295.4515 Tm
(Local Variables, )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, and Lexical Scope \(Hunk J\))Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
9.539 262.28 m
9.539 264.188 l
602.461 264.188 l
601.507 263.234 l
10.493 263.234 l
10.493 263.234 l
h
f
0.875 0.875 0.875 rg
602.461 264.188 m
602.461 262.28 l
9.539 262.28 l
10.493 263.234 l
601.507 263.234 l
601.507 263.234 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 244.1335 Tm
(Go to the )Tj
ET
62.581 242.114 m
84.095 242.114 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 62.5812 244.1335 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
90.772 242.114 m
136.763 242.114 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 90.7717 244.1335 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
143.44 242.114 m
166.436 242.114 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 143.4404 244.1335 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
173.113 242.114 m
191.662 242.114 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 173.1132 244.1335 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
239.51 242.114 m
327.781 242.114 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 239.5099 244.1335 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_59.html \(2 of 2\)11\/3/2006 9:01:51 PM)Tj
ET
EMC 

endstreamendobj2547 0 obj(An Introduction to Scheme and its Implementation - let*)endobj2548 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_59.html)/S 700 0 R>>endobj2549 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_59.html)endobj2550 0 obj(_∞é±≈'HÕúÑÄÊûp)endobj2551 0 obj<</TS(D:20061104050151)/ID 2550 0 R/CT(text/html)/O[2525 0 R 2536 0 R]/S/SPS/T 2547 0 R/TID 2553 0 R/SI 2552 0 R>>endobj2552 0 obj<</TS(D:20061104050151)/AU 2549 0 R>>endobj2553 0 obj(4OÓn¯n≠&}È<-ΩnL)endobj2554 0 obj<</Parent 710 0 R/Next 2591 0 R/Dest[2525 0 R/XYZ 0 792 null]/Prev 2522 0 R/SE 2524 0 R/Title(An Introduction to Scheme and its Implementation - let*)>>endobj2555 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2556 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 2557 0 R>>endobj2557 0 obj<</Annots 2561 0 R/Parent 2648 0 R/ID 2587 0 R/StructParents 105/Contents 2583 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2558 0 obj<</Parent 2876 0 R/Count 5/Type/Pages/Kids[2446 0 R 2469 0 R 2498 0 R 2525 0 R 2536 0 R]>>endobj2559 0 obj[2556 0 R]endobj2560 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2561 0 obj[2560 0 R 2562 0 R 2563 0 R 2564 0 R 2565 0 R 2567 0 R 2569 0 R 2570 0 R 2571 0 R 2572 0 R 2573 0 R 2574 0 R 2575 0 R 2576 0 R 2577 0 R 2578 0 R 2579 0 R 2580 0 R 2581 0 R 2582 0 R]endobj2562 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2525 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_59.html)/S/URI>>/Border[0 0 0]>>endobj2563 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2594 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_61.html)/S/URI>>/Border[0 0 0]>>endobj2564 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2565 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2566 0 obj[2557 0 R/XYZ 0 731.2 null]endobj2567 0 obj<</Rect[10.0 689.877 202.799 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC67)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC67)/S/URI>>/Border[0 0 0]>>endobj2568 0 obj[2557 0 R/XYZ 0 598.538 null]endobj2569 0 obj<</Rect[50.0 512.738 175.216 527.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®l<¯wÊ±d≥i∞9©™µSEC68)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_61.html#SEC68)/S/URI>>/Border[0 0 0]>>endobj2570 0 obj<</Rect[50.0 493.938 191.89 508.938]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ˇÏ,•©Ãè˘ÿh≠˛b§÷SEC69)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_62.html#SEC69)/S/URI>>/Border[0 0 0]>>endobj2571 0 obj<</Rect[50.0 475.138 252.58 490.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(¯º•”ó‘°∏WM&⁄ÈZSEC70)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_63.html#SEC70)/S/URI>>/Border[0 0 0]>>endobj2572 0 obj<</Rect[50.0 456.338 198.134 471.338]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(:’Z\\pˆdê‚Òi_\r6SEC71)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_64.html#SEC71)/S/URI>>/Border[0 0 0]>>endobj2573 0 obj<</Rect[50.0 437.538 148.378 452.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(—âø0Ê‘sﬁ”cQÂ!&SEC72)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_65.html#SEC72)/S/URI>>/Border[0 0 0]>>endobj2574 0 obj<</Rect[50.0 418.738 205.89 433.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(a©¶%ùa§Zc—∫ß˜òSEC73)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_66.html#SEC73)/S/URI>>/Border[0 0 0]>>endobj2575 0 obj<</Rect[50.0 399.938 236.228 414.938]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(K¯^¬F8%]m¯ìÕ~©∏SEC74)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_67.html#SEC74)/S/URI>>/Border[0 0 0]>>endobj2576 0 obj<</Rect[50.0 381.138 131.256 396.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÖøÔWØ”3ä∆é4/{ˆ6SEC75)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_68.html#SEC75)/S/URI>>/Border[0 0 0]>>endobj2577 0 obj<</Rect[50.0 362.338 81.108 377.338]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(5ójÜøUÄº‚≥ï¯≥c@SEC76)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_69.html#SEC76)/S/URI>>/Border[0 0 0]>>endobj2578 0 obj<</Rect[65.608 308.538 88.162 323.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2579 0 obj<</Rect[95.162 308.538 143.378 323.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2525 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_59.html)/S/URI>>/Border[0 0 0]>>endobj2580 0 obj<</Rect[150.378 308.538 174.486 323.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2594 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_61.html)/S/URI>>/Border[0 0 0]>>endobj2581 0 obj<</Rect[181.486 308.538 200.932 323.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2582 0 obj<</Rect[251.094 308.538 343.634 323.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2583 0 obj<</Length 4952>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Procedures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
202.799 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Procedures \(Hunk K\))Tj
0 0 0 rg
/T1_2 1 Tf
14 0 0 14 10 655.8466 Tm
(==================================================================)Tj
0 -1.2 TD
(Hunk K starts here:)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
(Scheme procedures are "first class," meaning that they're objects in the\ language. They can be )Tj
0 -1.2 TD
(anonymous, meaning that you can have pointers to procedures that don't h\ave printed names. They can )Tj
T*
(be higher-order, meaning that procedures can operate on procedures. )Tj
/T1_3 1 Tf
7 0 0 7 35.713 517.114 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
50 514.997 m
175.216 514.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 517.114 Tm
(First Class Procedures)Tj
0 0 0 rg
(: Procedures are objects in the language )Tj
/T1_3 1 Tf
7 0 0 7 35.713 498.314 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 496.197 m
191.89 496.197 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 498.314 Tm
(Higher-Order Procedures)Tj
0 0 0 rg
(: Procedures can take procedures as arguments )Tj
/T1_3 1 Tf
7 0 0 7 35.713 479.514 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 477.397 m
252.58 477.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 479.514 Tm
(Anonymous Procedures and lambda)Tj
0 0 0 rg
(: lambda creates procedure objects, which don't need names )Tj
/T1_3 1 Tf
7 0 0 7 35.713 460.714 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 458.597 m
198.134 458.597 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 460.714 Tm
(lambda and Lexical Scope)Tj
0 0 0 rg
( )Tj
/T1_3 1 Tf
7 0 0 7 35.713 441.914 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 439.797 m
148.378 439.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 441.914 Tm
(Local Definitions)Tj
0 0 0 rg
(: defines work locally, too )Tj
/T1_3 1 Tf
7 0 0 7 35.713 423.114 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 420.997 m
205.89 420.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 423.114 Tm
(Local Procedures and letrec)Tj
0 0 0 rg
(: letrec is like let, but supports recursive definitions )Tj
/T1_3 1 Tf
7 0 0 7 35.713 404.314 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 402.197 m
236.228 402.197 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 404.314 Tm
(Multiple defines are Like a letrec)Tj
0 0 0 rg
(: Understanding definitions and scope )Tj
/T1_3 1 Tf
7 0 0 7 35.713 385.514 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 383.397 m
131.256 383.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 385.514 Tm
(Variable Arity)Tj
0 0 0 rg
(: Procedures can take a variable number of arguments )Tj
/T1_3 1 Tf
7 0 0 7 35.713 366.714 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 364.597 m
81.108 364.597 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 366.714 Tm
(apply)Tj
0 0 0 rg
( )Tj
ET
0.5 0.5 0.5 rg
10 331.938 m
10 333.938 l
602 333.938 l
601 332.938 l
11 332.938 l
11 332.938 l
h
f
0.875 0.875 0.875 rg
602 333.938 m
602 331.938 l
10 331.938 l
11 332.938 l
601 332.938 l
601 332.938 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 312.914 Tm
(Go to the )Tj
ET
65.608 310.797 m
88.162 310.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 312.914 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 310.797 m
143.378 310.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 312.914 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 310.797 m
174.486 310.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 312.914 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 310.797 m
200.932 310.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 312.914 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 310.797 m
343.634 310.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 312.914 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_60.html11/3/2006 9:0\1:58 PM)Tj
ET
EMC 

endstreamendobj2584 0 obj(An Introduction to Scheme and its Implementation - Procedures)endobj2585 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_60.html)/S 700 0 R>>endobj2586 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_60.html)endobj2587 0 obj(Ÿ1´‘?jµ3ÓF'‹˘èÆ¯)endobj2588 0 obj<</TS(D:20061104050158)/ID 2587 0 R/CT(text/html)/O[2557 0 R]/S/SPS/T 2584 0 R/TID 2590 0 R/SI 2589 0 R>>endobj2589 0 obj<</TS(D:20061104050158)/AU 2586 0 R>>endobj2590 0 obj(R’√\)ü⁄Ø©cöﬁ©ıÅ)endobj2591 0 obj<</Parent 710 0 R/Next 2627 0 R/Dest[2557 0 R/XYZ 0 792 null]/Prev 2554 0 R/SE 2556 0 R/Title(An Introduction to Scheme and its Implementation - Procedures)>>endobj2592 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2593 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 2607 0 R/Type/MCR>><</MCID 0/Pg 2609 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 2594 0 R>>endobj2594 0 obj<</Annots 2597 0 R/Parent 2648 0 R/ID 2623 0 R/StructParents 106/Contents 2617 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2595 0 obj[2593 0 R]endobj2596 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2597 0 obj[2596 0 R 2598 0 R 2599 0 R 2600 0 R 2601 0 R 2603 0 R]endobj2598 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2557 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_60.html)/S/URI>>/Border[0 0 0]>>endobj2599 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2630 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_62.html)/S/URI>>/Border[0 0 0]>>endobj2600 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2601 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2602 0 obj[2594 0 R/XYZ 0 731.2 null]endobj2603 0 obj<</Rect[10.0 693.431 214.702 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC68)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC68)/S/URI>>/Border[0 0 0]>>endobj2604 0 obj[2594 0 R/XYZ 0 671.815 null]endobj2605 0 obj[2594 0 R/XYZ 0 671.815 null]endobj2606 0 obj[2594 0 R/XYZ 0 671.815 null]endobj2607 0 obj<</Parent 2648 0 R/ID 2623 0 R/StructParents 107/Contents 2618 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2608 0 obj[2593 0 R]endobj2609 0 obj<</Annots 2612 0 R/Parent 2648 0 R/ID 2623 0 R/StructParents 108/Contents 2619 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2610 0 obj[2593 0 R]endobj2611 0 obj<</Rect[65.608 647.4 88.162 662.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2612 0 obj[2611 0 R 2613 0 R 2614 0 R 2615 0 R 2616 0 R]endobj2613 0 obj<</Rect[95.162 647.4 143.378 662.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2557 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_60.html)/S/URI>>/Border[0 0 0]>>endobj2614 0 obj<</Rect[150.378 647.4 174.486 662.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2630 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_62.html)/S/URI>>/Border[0 0 0]>>endobj2615 0 obj<</Rect[181.486 647.4 200.932 662.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2616 0 obj<</Rect[251.094 647.4 343.634 662.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2617 0 obj<</Length 4348>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - First Class Procedure\s)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
214.702 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Procedures are First Class)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(In Scheme, procedures are data objects--you can have a pointer to a proc\edure and do the same things )Tj
0 -1.2 TD
(you can do with any other Scheme value. Technically, we say that procedu\res are )Tj
/T1_2 1 Tf
(first class)Tj
/T1_0 1 Tf
( objects in )Tj
T*
(the language--you can pass a procedure value as an argument to a procedu\re, return it as the value of a )Tj
T*
(procedure call, store it in a variable or a field of another object. A p\rocedure pointer is just a value that )Tj
T*
(you can pass around like any other value, like a pair or a boolean. )Tj
0 -2.557 TD
(Procedures are special, of course, because they're the only kind of obje\ct that supports the procedure call )Tj
0 -1.2 TD
(operation. )Tj
0 -2.557 TD
(In Scheme terminology, a procedure call expression is called a )Tj
/T1_2 1 Tf
(combination)Tj
/T1_0 1 Tf
(. Evaluation of a )Tj
0 -1.2 TD
(combination includes evaluation of the argument expressions and )Tj
/T1_2 1 Tf
(application)Tj
/T1_0 1 Tf
( of the procedure to the )Tj
T*
(arguments, i.e., actually calling it with \("applying it to"\) those val\ues. )Tj
0 -2.557 TD
(An unusual feature of Scheme is that it uses a )Tj
/T1_2 1 Tf
(unified namespace)Tj
/T1_0 1 Tf
(, which means that there's only one kind )Tj
0 -1.2 TD
(of name for both normal variables and procedures--in fact, procedure nam\es are really just variable )Tj
T*
(names, and there's only one kind of variable. A named procedure is reall\y just a first-class procedure )Tj
T*
(object that happens to be referenced from a variable. )Tj
0 -2.562 TD
(Recall the definition of )Tj
/T1_3 1 Tf
(min)Tj
/T1_0 1 Tf
(: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define \(min a b\))Tj
0 -1.2 TD
(   \(if \(< a b\))Tj
T*
(       a)Tj
T*
(       b\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(When you define a procedure like this, you're really doing three things:\ creating a procedure, creating a )Tj
0 -1.205 TD
(normal variable \(named )Tj
/T1_3 1 Tf
(min)Tj
/T1_0 1 Tf
(\), and initializing the variable with a pointer to the procedure. )Tj
0 -2.557 TD
(\(This means that you can't have both a procedure variable and a "normal\" data variable by the same )Tj
0 -1.2 TD
(name in the same scope--there's really only one kind of variable, so you\ can only have one binding in a )Tj
T*
(given scope.\) )Tj
0 -2.562 TD
(When you define a procedure as we did above for the )Tj
/T1_3 1 Tf
(min)Tj
/T1_0 1 Tf
( example, Don't let the special syntax for )Tj
0 -1.2 TD
(procedure definitions fool you--a procedure name is really just the name\ of a variable that happens to )Tj
T*
(hold a procedure value. You can use any variable that way, by storing a \procedure value in it. You can )Tj
T*
(also assign a new procedure value to a variable, and then use it to name\ the new procedure. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_61.html \(1 of 3\)11\/3/2006 9:02:34 PM)Tj
ET
EMC 

endstreamendobj2618 0 obj<</Length 4497>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - First Class Procedure\s)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 748.1214 Tm
(For example, if you've defined )Tj
/T1_1 1 Tf
(min)Tj
/T1_0 1 Tf
( as above, you can change the value in the binding of )Tj
/T1_1 1 Tf
(min)Tj
/T1_0 1 Tf
( by saying )Tj
/T1_1 1 Tf
0 -1.205 TD
(\(set! min +\))Tj
/T1_0 1 Tf
(. That assignment expression will look up the value of the variable )Tj
/T1_1 1 Tf
(+)Tj
/T1_0 1 Tf
(, which is the )Tj
0 -1.205 TD
(addition procedure, and assign that into the variable )Tj
/T1_1 1 Tf
(min)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Then when you call )Tj
/T1_1 1 Tf
(min)Tj
/T1_0 1 Tf
( as before, it will do addition instead, because it will call the same p\rocedure as )Tj
/T1_1 1 Tf
0 -1.205 TD
(+)Tj
/T1_0 1 Tf
(. For example )Tj
/T1_1 1 Tf
(\(min 5 10\))Tj
/T1_0 1 Tf
( will return )Tj
/T1_1 1 Tf
(15)Tj
/T1_0 1 Tf
(, not )Tj
/T1_1 1 Tf
(5)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(You could also change the meaning of )Tj
/T1_1 1 Tf
(+)Tj
/T1_0 1 Tf
(, just by assigning a new value to the \(the binding of\) the )Tj
0 -1.205 TD
(variable )Tj
/T1_1 1 Tf
(+)Tj
/T1_0 1 Tf
(. This is probably a bad idea unless you really have a good reason, beca\use if the new )Tj
T*
(procedure doesn't do addition, any code that calls )Tj
/T1_1 1 Tf
(+)Tj
/T1_0 1 Tf
( will return different answers! )Tj
0 -2.557 TD
(It is important to understand how procedure calls actually work in Schem\e, which is actually very )Tj
0 -1.205 TD
(simple. Consider the combination \(procedure call expression\) )Tj
/T1_1 1 Tf
(\(+ a b\))Tj
/T1_0 1 Tf
(. What this really means is )Tj
1.607 -2.562 Td
(1.  )Tj
(look up the value of \(the current binding of\) the variable )Tj
/T1_1 1 Tf
(+)Tj
/T1_0 1 Tf
(, which we )Tj
/T1_2 1 Tf
(assume)Tj
/T1_0 1 Tf
( is a procedure, )Tj
T*
(2.  )Tj
(look up the values of \(the current bindings of\) the variables )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
(, and )Tj
0 -1.2 TD
(3.  )Tj
(apply the procedure to those values, i.e., call it with those values as \arguments. )Tj
-1.607 -2.557 Td
(The first subexpression of the combination is evaluated in just the same\ way as the others, although the )Tj
T*
(result is used differently. The first subexpression is just a subexpress\ion that should return a procedure )Tj
T*
(value, and the others give the arguments to pass to it. )Tj
0 -2.557 TD
(This won't work if the first subexpression doesn't evaluate to a procedu\re value. For example, you can )Tj
0 -1.205 TD
(change the meaning of )Tj
/T1_1 1 Tf
(+)Tj
/T1_0 1 Tf
( with an assignment expression )Tj
/T1_1 1 Tf
(\(set! + 3\))Tj
/T1_0 1 Tf
(. Then if you attempt to call )Tj
/T1_1 1 Tf
(+)Tj
/T1_0 1 Tf
( )Tj
T*
(with the combination )Tj
/T1_1 1 Tf
(\(+ 2 3\))Tj
/T1_0 1 Tf
( you'll get an error. Scheme will say something like "ERROR: Attempt )Tj
0 -1.2 TD
(to apply non-procedure." )Tj
0 -2.557 TD
(The fact that the first \(operator\) subexpression is evaluated just lik\e any other expression can be very )Tj
0 -1.2 TD
(useful. Rather than giving the name of a particular procedure to call, w\e can use any expression whose )Tj
T*
(result is a procedure. For example, we might have a table of procedures \to use in different kinds of )Tj
T*
(situations, and search that table for the procedure to call at a particu\lar time: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(\(look-up-appropriate-procedure key\) foo bar\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Here we call the procedure )Tj
/T1_1 1 Tf
(look-up-appropriate-procedure)Tj
/T1_0 1 Tf
( with the argument )Tj
/T1_1 1 Tf
(key)Tj
/T1_0 1 Tf
( to get a )Tj
0 -1.205 TD
(procedure, and then apply it to the values of )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(One warning about combinations: the Scheme language doesn't specify the \order in which the )Tj
0 -1.2 TD
(subexpressions of a combination are evaluated. Don't write code that dep\ends on whether the operator )Tj
T*
(expression is evaluated first, or on the order of evaluation of the argu\ment expressions. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_61.html \(2 of 3\)11\/3/2006 9:02:34 PM)Tj
ET
EMC 

endstreamendobj2619 0 obj<</Length 1847>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - First Class Procedure\s)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(You might wonder what's so special about first-class procedures, since s\ome other languages \(like C\) let )Tj
0 -1.2 TD
(you pass around pointers to procedures, and call them via those pointers\. Scheme's procedures work like )Tj
T*
(Pascal's if you use them for the kinds of things Pascal allows, but also\ lets you use them in more general )Tj
T*
(ways that I'll explain later. )Tj
ET
0.5 0.5 0.5 rg
10 670.8 m
10 672.8 l
602 672.8 l
601 671.8 l
11 671.8 l
11 671.8 l
h
f
0.875 0.875 0.875 rg
602 672.8 m
602 670.8 l
10 670.8 l
11 671.8 l
601 671.8 l
601 671.8 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 651.7756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 649.659 m
88.162 649.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 651.7756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 649.659 m
143.378 649.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 651.7756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 649.659 m
174.486 649.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 651.7756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 649.659 m
200.932 649.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 651.7756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 649.659 m
343.634 649.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 651.7756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_61.html \(3 of 3\)11\/3/2006 9:02:34 PM)Tj
ET
EMC 

endstreamendobj2620 0 obj(An Introduction to Scheme and its Implementation - First Class Procedures)endobj2621 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_61.html)/S 700 0 R>>endobj2622 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_61.html)endobj2623 0 obj(®l<¯wÊ±d≥i∞9©™µ)endobj2624 0 obj<</TS(D:20061104050234)/ID 2623 0 R/CT(text/html)/O[2594 0 R 2607 0 R 2609 0 R]/S/SPS/T 2620 0 R/TID 2626 0 R/SI 2625 0 R>>endobj2625 0 obj<</TS(D:20061104050234)/AU 2622 0 R>>endobj2626 0 obj(pOûÆ'ŸˇΩ€˛)endobj2627 0 obj<</Parent 710 0 R/Next 2658 0 R/Dest[2594 0 R/XYZ 0 792 null]/Prev 2591 0 R/SE 2593 0 R/Title(An Introduction to Scheme and its Implementation - First Class Procedures)>>endobj2628 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2629 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 2630 0 R>>endobj2630 0 obj<</Annots 2633 0 R/Parent 2648 0 R/ID 2654 0 R/StructParents 109/Contents 2649 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2631 0 obj[2629 0 R]endobj2632 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2633 0 obj[2632 0 R 2634 0 R 2635 0 R 2636 0 R 2637 0 R 2639 0 R 2642 0 R 2643 0 R 2644 0 R 2645 0 R 2646 0 R]endobj2634 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2594 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_61.html)/S/URI>>/Border[0 0 0]>>endobj2635 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2661 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_63.html)/S/URI>>/Border[0 0 0]>>endobj2636 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2637 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2638 0 obj[2630 0 R/XYZ 0 731.2 null]endobj2639 0 obj<</Rect[10.0 693.431 203.895 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC69)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC69)/S/URI>>/Border[0 0 0]>>endobj2640 0 obj[2630 0 R/XYZ 0 671.815 null]endobj2641 0 obj[2630 0 R/XYZ 0 671.815 null]endobj2642 0 obj<</Rect[65.608 36.674 88.162 51.674]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2643 0 obj<</Rect[95.162 36.674 143.378 51.674]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2594 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_61.html)/S/URI>>/Border[0 0 0]>>endobj2644 0 obj<</Rect[150.378 36.674 174.486 51.674]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2661 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_63.html)/S/URI>>/Border[0 0 0]>>endobj2645 0 obj<</Rect[181.486 36.674 200.932 51.674]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2646 0 obj<</Rect[251.094 36.674 343.634 51.674]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2647 0 obj<</Parent 2730 0 R/ID 2654 0 R/Contents 2650 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2648 0 obj<</Parent 2876 0 R/Count 5/Type/Pages/Kids[2557 0 R 2594 0 R 2607 0 R 2609 0 R 2630 0 R]>>endobj2649 0 obj<</Length 4542>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Higher-Order Procedur\es)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
203.895 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Higher-Order Procedures)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(Scheme is designed to make it easy to use )Tj
/T1_2 1 Tf
(higher-order)Tj
/T1_0 1 Tf
( procedures, i.e., procedures that may take other )Tj
0 -1.2 TD
(procedures as arguments or return them as values. )Tj
0 -2.562 TD
(For example, you can easily write a )Tj
/T1_3 1 Tf
(sort)Tj
/T1_0 1 Tf
( procedure that takes a comparison procedure as an argument, )Tj
0 -1.2 TD
(and uses whatever procedure you hand it to determine the sorted order. )Tj
0 -2.562 TD
(To sort a list in ascending order, you can then call )Tj
/T1_3 1 Tf
(sort)Tj
/T1_0 1 Tf
( with \(a pointer to\) the procedure )Tj
/T1_3 1 Tf
(<)Tj
/T1_0 1 Tf
( \("less than"\) )Tj
0 -1.2 TD
(as its argument, like this: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(sort < '\(5 2 3\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(and you'll get back a sorted list )Tj
/T1_3 1 Tf
(\(2 3 5\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Note that the expression )Tj
/T1_3 1 Tf
(<)Tj
/T1_0 1 Tf
( here is just a variable reference. We're fetching the value of the vari\able )Tj
/T1_3 1 Tf
(<)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(and passing it to )Tj
/T1_3 1 Tf
(sort)Tj
/T1_0 1 Tf
( as an argument. )Tj
0 -2.562 TD
(If you'd rather sort the list in descending order, you can pass it the p\rocedure )Tj
/T1_3 1 Tf
(>)Tj
/T1_0 1 Tf
( \("greater than"\) instead: )Tj
/T1_3 1 Tf
T*
(\(sort > '\(5 2 3\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(and get back a sorted list )Tj
/T1_3 1 Tf
(\(5 3 2\))Tj
/T1_0 1 Tf
(. )Tj
T*
(The same procedure can be used with lists of different kinds of objects,\ as long as you supply a )Tj
0 -1.2 TD
(comparison operator that does what you want. )Tj
0 -2.562 TD
(For example, to sort a list of character strings into alphabetic order, \you can pass )Tj
/T1_3 1 Tf
(sort)Tj
/T1_0 1 Tf
( a pointer to the )Tj
0 -1.205 TD
(standard string-comparison procedure )Tj
/T1_3 1 Tf
(string<?)Tj
/T1_0 1 Tf
(, )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(sort string<? '\("foo" "bar" "baz" "quux"\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(and get back a list )Tj
/T1_3 1 Tf
(\("bar" "baz" "foo" "quux"\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
([ give )Tj
/T1_3 1 Tf
(map)Tj
/T1_0 1 Tf
( example here? ] )Tj
ET
0.5 0.5 0.5 rg
10 60.074 m
10 62.074 l
602 62.074 l
601 61.074 l
11 61.074 l
11 61.074 l
h
f
0.875 0.875 0.875 rg
602 62.074 m
602 60.074 l
10 60.074 l
11 61.074 l
601 61.074 l
601 61.074 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 41.0496 Tm
(Go to the )Tj
ET
0.706 w 
65.608 38.933 m
88.162 38.933 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 41.0496 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 38.933 m
143.378 38.933 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 41.0496 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 38.933 m
174.486 38.933 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 41.0496 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 38.933 m
200.932 38.933 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 41.0496 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 38.933 m
343.634 38.933 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 41.0496 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_62.html \(1 of 2\)11\/3/2006 9:02:44 PM)Tj
ET
EMC 

endstreamendobj2650 0 obj<</Length 459>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Higher-Order Procedur\es)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_62.html \(2 of 2\)11\/3/2006 9:02:44 PM)Tj
ET
EMC 

endstreamendobj2651 0 obj(An Introduction to Scheme and its Implementation - Higher-Order Procedures)endobj2652 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_62.html)/S 700 0 R>>endobj2653 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_62.html)endobj2654 0 obj(ˇÏ,•©Ãè˘ÿh≠˛b§÷)endobj2655 0 obj<</TS(D:20061104050244)/ID 2654 0 R/CT(text/html)/O[2630 0 R 2647 0 R]/S/SPS/T 2651 0 R/TID 2657 0 R/SI 2656 0 R>>endobj2656 0 obj<</TS(D:20061104050244)/AU 2653 0 R>>endobj2657 0 obj(;”aæù§§…µûÕD2ùü)endobj2658 0 obj<</Parent 710 0 R/Next 2693 0 R/Dest[2630 0 R/XYZ 0 792 null]/Prev 2627 0 R/SE 2629 0 R/Title(An Introduction to Scheme and its Implementation - Higher-Order Procedures)>>endobj2659 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2660 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 2674 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 2661 0 R>>endobj2661 0 obj<</Annots 2664 0 R/Parent 2730 0 R/ID 2689 0 R/StructParents 110/Contents 2684 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 1287 0 R/T1_3 828 0 R/T1_4 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2662 0 obj[2660 0 R]endobj2663 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2664 0 obj[2663 0 R 2665 0 R 2666 0 R 2667 0 R 2668 0 R 2670 0 R]endobj2665 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2630 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_62.html)/S/URI>>/Border[0 0 0]>>endobj2666 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2696 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_64.html)/S/URI>>/Border[0 0 0]>>endobj2667 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2668 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2669 0 obj[2661 0 R/XYZ 0 731.2 null]endobj2670 0 obj<</Rect[10.0 693.229 292.563 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC70)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC70)/S/URI>>/Border[0 0 0]>>endobj2671 0 obj[2661 0 R/XYZ 0 671.613 null]endobj2672 0 obj[2661 0 R/XYZ 0 671.613 null]endobj2673 0 obj[2661 0 R/XYZ 0 671.613 null]endobj2674 0 obj<</Annots 2677 0 R/Parent 2730 0 R/ID 2689 0 R/StructParents 111/Contents 2685 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2675 0 obj[2660 0 R]endobj2676 0 obj<</Rect[227.364 697.0 573.038 712.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(≈	ÇÈ£Á¡\\C™†ƒà} SEC104)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_98.html#SEC104)/S/URI>>/Border[0 0 0]>>endobj2677 0 obj[2676 0 R 2678 0 R 2679 0 R 2680 0 R 2681 0 R 2682 0 R 2683 0 R]endobj2678 0 obj<</Rect[10.0 678.2 62.486 693.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(≈	ÇÈ£Á¡\\C™†ƒà} SEC104)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_98.html#SEC104)/S/URI>>/Border[0 0 0]>>endobj2679 0 obj<</Rect[65.608 624.4 88.162 639.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2680 0 obj<</Rect[95.162 624.4 143.378 639.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2630 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_62.html)/S/URI>>/Border[0 0 0]>>endobj2681 0 obj<</Rect[150.378 624.4 174.486 639.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2696 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_64.html)/S/URI>>/Border[0 0 0]>>endobj2682 0 obj<</Rect[181.486 624.4 200.932 639.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2683 0 obj<</Rect[251.094 624.4 343.634 639.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2684 0 obj<</Length 3787>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Anonymous Procedures \and lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
234.409 693.975 l
S
0.814 w 
234.409 695.603 m
292.563 695.603 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Anonymous Procedures and )Tj
/T1_2 1 Tf
(lambda)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.5214 Tm
(Scheme has a special form that is very special, called )Tj
/T1_3 1 Tf
(lambda)Tj
/T1_0 1 Tf
(. It creates a first-class procedure and )Tj
0 -1.2 TD
(returns a pointer to it. )Tj
0 -2.557 TD
(For example, you can create a procedure that doubles its argument by eva\luating the expression )Tj
/T1_3 1 Tf
0 -1.205 TD
(\(lambda \(x\) \(+ x x\)\))Tj
/T1_0 1 Tf
(. The second subform of the expression is a list of formal arguments, an\d )Tj
0 -1.2 TD
(the third subform is the body of the procedure. )Tj
/T1_3 1 Tf
0 -2.562 TD
(lambda)Tj
/T1_0 1 Tf
( doesn't give a name to the procedure it creates--it just returns a poin\ter to the procedure object. )Tj
0 -2.562 TD
(Actually, the procedure-defining variant of )Tj
/T1_3 1 Tf
(define)Tj
/T1_0 1 Tf
( is exactly equivalent to a variable-defining )Tj
/T1_3 1 Tf
0 -1.205 TD
(define)Tj
/T1_0 1 Tf
(, with a )Tj
/T1_3 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression as its initial value form. )Tj
0 -2.557 TD
(For example, )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define \(double x\))Tj
0 -1.2 TD
(   \(+ x x\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(is )Tj
/T1_4 1 Tf
(exactly)Tj
/T1_0 1 Tf
( equivalent to )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define double \(lambda \(x\))Tj
0 -1.2 TD
(                  \(+ x x\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(In either case, we're creating a one-argument procedure, and we're also \defining and binding a variable )Tj
0 -1.205 TD
(named )Tj
/T1_3 1 Tf
(double)Tj
/T1_0 1 Tf
(, and initializing its storage with a pointer to the procedure. )Tj
0 -2.562 TD
(The procedure-defining syntax for )Tj
/T1_3 1 Tf
(define)Tj
/T1_0 1 Tf
( is just syntactic sugar--there's nothing you can do with it )Tj
0 -1.205 TD
(that you can't do with local variables and )Tj
/T1_3 1 Tf
(lambda)Tj
/T1_0 1 Tf
(. It's just a more convenient notation for the same )Tj
0 -1.2 TD
(thing. )Tj
/T1_3 1 Tf
0 -2.562 TD
(==================================================================)Tj
0 -1.2 TD
(This is the end of Hunk K.)Tj
0 -2.4 TD
(TIME TO TRY IT OUT)Tj
T*
(At this point, you should go read Hunk L of the next chapter)Tj
0 -1.2 TD
(and work through the examples using a running Scheme system.)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_63.html \(1 of 2\)11\/3/2006 9:02:50 PM)Tj
ET
EMC 

endstreamendobj2685 0 obj<</Length 1925>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Anonymous Procedures \and lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(Then return here and resume this chapter.)Tj
0 -1.2 TD
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Go to Hunk L, which starts at section )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
227.364 699.259 m
576.538 699.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 227.364 701.3755 Tm
(Using First-Class, Higher-Order, and Anonymous Procedures )Tj
ET
10 680.459 m
62.486 680.459 l
S
BT
/T1_0 1 Tf
14 0 0 14 10 682.5756 Tm
(\(Hunk L\))Tj
0 0 0 rg
(.\) )Tj
ET
0.5 0.5 0.5 rg
10 647.8 m
10 649.8 l
602 649.8 l
601 648.8 l
11 648.8 l
11 648.8 l
h
f
0.875 0.875 0.875 rg
602 649.8 m
602 647.8 l
10 647.8 l
11 648.8 l
601 648.8 l
601 648.8 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 628.7756 Tm
(Go to the )Tj
ET
65.608 626.659 m
88.162 626.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 628.7756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 626.659 m
143.378 626.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 628.7756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 626.659 m
174.486 626.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 628.7756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 626.659 m
200.932 626.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 628.7756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 626.659 m
343.634 626.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 628.7756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_63.html \(2 of 2\)11\/3/2006 9:02:50 PM)Tj
ET
EMC 

endstreamendobj2686 0 obj(An Introduction to Scheme and its Implementation - Anonymous Procedures and lambda)endobj2687 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_63.html)/S 700 0 R>>endobj2688 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_63.html)endobj2689 0 obj(¯º•”ó‘°∏WM&⁄ÈZ)endobj2690 0 obj<</TS(D:20061104050250)/ID 2689 0 R/CT(text/html)/O[2661 0 R 2674 0 R]/S/SPS/T 2686 0 R/TID 2692 0 R/SI 2691 0 R>>endobj2691 0 obj<</TS(D:20061104050250)/AU 2688 0 R>>endobj2692 0 obj(/6Ü%.ƒ/ —wiÓã;)endobj2693 0 obj<</Parent 710 0 R/Next 2726 0 R/Dest[2661 0 R/XYZ 0 792 null]/Prev 2658 0 R/SE 2660 0 R/Title(An Introduction to Scheme and its Implementation - Anonymous Procedures and lambda)>>endobj2694 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2695 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 2706 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 2696 0 R>>endobj2696 0 obj<</Annots 2699 0 R/Parent 2730 0 R/ID 2722 0 R/StructParents 112/Contents 2717 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R/T1_2 736 0 R/T1_3 828 0 R/T1_4 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2697 0 obj[2695 0 R]endobj2698 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2699 0 obj[2698 0 R 2700 0 R 2701 0 R 2702 0 R 2703 0 R 2705 0 R]endobj2700 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2661 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_63.html)/S/URI>>/Border[0 0 0]>>endobj2701 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2729 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_65.html)/S/URI>>/Border[0 0 0]>>endobj2702 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2703 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2704 0 obj[2696 0 R/XYZ 0 731.2 null]endobj2705 0 obj<</Rect[10.0 693.229 287.184 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC71)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC71)/S/URI>>/Border[0 0 0]>>endobj2706 0 obj<</Annots 2712 0 R/Parent 2730 0 R/ID 2722 0 R/StructParents 113/Contents 2718 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2707 0 obj[2695 0 R]endobj2708 0 obj[2706 0 R/XYZ 0 365.928 null]endobj2709 0 obj<</Limits[(ºj\rﬁl¨V£¥T-%«IDX96)(:ºã˚hÖIN’r\rMc6SEC44)]/Names[]>>endobj2710 0 obj<</Limits[(:’Z\\pˆdê‚Òi_\r6IDX72)(õªÖ\(ùO¯»'≈´ÍIDX29)]/Names[]>>endobj2711 0 obj<</Rect[65.608 194.526 88.162 209.526]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2712 0 obj[2711 0 R 2713 0 R 2714 0 R 2715 0 R 2716 0 R]endobj2713 0 obj<</Rect[95.162 194.526 143.378 209.526]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2661 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_63.html)/S/URI>>/Border[0 0 0]>>endobj2714 0 obj<</Rect[150.378 194.526 174.486 209.526]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2729 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_65.html)/S/URI>>/Border[0 0 0]>>endobj2715 0 obj<</Rect[181.486 194.526 200.932 209.526]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2716 0 obj<</Rect[251.094 194.526 343.634 209.526]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2717 0 obj<</Length 3996>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - lambda and Lexical Sc\ope)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
0.814 w 
10 695.603 m
68.154 695.603 l
S
1.357 w 
68.154 693.975 m
287.184 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(lambda)Tj
/T1_2 1 Tf
( and Lexical Scope \(Hunk M\))Tj
0 0 0 rg
/T1_3 1 Tf
14 0 0 14 10 659.5214 Tm
(==================================================================)Tj
0 -1.2 TD
(Hunk M starts here:)Tj
T*
(==================================================================)Tj
0 -2.557 TD
(lambda)Tj
/T1_0 1 Tf
( creates a procedure that will execute in the scope where the )Tj
/T1_3 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression was )Tj
0 -1.2 TD
(evaluated. )Tj
0 -2.557 TD
(Except for local variables of the procedure itself, including its argume\nts, names in the body of the )Tj
0 -1.205 TD
(procedure refer to whatever they refer to at the point where the procedu\re is created by )Tj
/T1_3 1 Tf
(lambda)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(This is necessary for preserving lexical scope--the meanings of variable\ names must be obvious at the )Tj
0 -1.2 TD
(point where the procedure is defined. )Tj
0 -2.557 TD
(Local variables created by the procedure have the usual scope rule withi\n the body. \(Argument variables )Tj
0 -1.2 TD
(are just a special kind of local variable, which get their initial value\s from the caller.\) Other variables are )Tj
T*
(called )Tj
/T1_4 1 Tf
(free)Tj
/T1_0 1 Tf
( variables--that is variables defined outside the procedure, but referre\d to from inside it. )Tj
0 -2.562 TD
(We say that )Tj
/T1_3 1 Tf
(lambda)Tj
/T1_0 1 Tf
( creates a )Tj
/T1_4 1 Tf
(closure)Tj
/T1_0 1 Tf
(, a procedure whose free variable references are "fixed" at the )Tj
0 -1.2 TD
(time the procedure is created. Whenever the procedure references a free \variable, it will will refer to the )Tj
T*
(bindings of those variables in the environment where the procedure was c\reated. )Tj
0 -2.557 TD
(Consider the following small program )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define foo 1\))Tj
0 -2.4 TD
(\(define \(baz\))Tj
0 -1.2 TD
(   foo\))Tj
0 -2.4 TD
(\(define \(quux\))Tj
0 -1.2 TD
(   \(let \(\(foo 6\)\))Tj
T*
(      \(baz\)\)\))Tj
0 -2.4 TD
(\(quux\))Tj
/T1_0 1 Tf
0 -2.557 TD
(When )Tj
/T1_3 1 Tf
(quux)Tj
/T1_0 1 Tf
( is called, it will bind its local variable )Tj
/T1_3 1 Tf
(foo)Tj
/T1_0 1 Tf
( and then call )Tj
/T1_3 1 Tf
(baz)Tj
/T1_0 1 Tf
(. When )Tj
/T1_3 1 Tf
(baz)Tj
/T1_0 1 Tf
( is called from )Tj
/T1_3 1 Tf
0 -1.205 TD
(quux)Tj
/T1_0 1 Tf
(, however, it will still see the top level binding of )Tj
/T1_3 1 Tf
(foo)Tj
/T1_0 1 Tf
(, whose value is )Tj
/T1_3 1 Tf
(1)Tj
/T1_0 1 Tf
(. The result of the call to )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_64.html \(1 of 2\)11\/3/2006 9:02:54 PM)Tj
ET
EMC 

endstreamendobj2718 0 obj<</Length 4293>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - lambda and Lexical Sc\ope)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(baz)Tj
/T1_0 1 Tf
( will be )Tj
/T1_1 1 Tf
(1)Tj
/T1_0 1 Tf
(, and that value will be returned as the value of the call to )Tj
/T1_1 1 Tf
(quux)Tj
/T1_0 1 Tf
( as well. )Tj
0 -2.557 TD
(There is a very good reason for this, and it's the rule used by most pro\gramming languages. It is )Tj
0 -1.2 TD
(important that the meaning of a procedure be fixed where it is defined, \rather than having the meaning )Tj
0 -1.205 TD
(depend on where it is called from. You want to be able to look at the co\de, and see that the name )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(refers to particular variable, namely the one that's visible there, at t\he top level. You don't want to have )Tj
0 -1.205 TD
(to worry about the meaning of the procedure )Tj
/T1_1 1 Tf
(baz)Tj
/T1_0 1 Tf
( changing, depending on where it's called from. )Tj
0 -2.562 TD
(A block structure diagram may make this clearer. I'll just show the part\ for the procedure )Tj
/T1_1 1 Tf
(baz)Tj
/T1_0 1 Tf
(: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(quux\))Tj
0 -1.2 TD
(   \(let \(\(foo 6\)\))Tj
T*
(     +---------------------------+)Tj
T*
(     | \(baz\)        scope of foo | \)\))Tj
T*
(     +---------------------------+)Tj
/T1_0 1 Tf
0 -2.557 TD
(This emphasizes the fact that the local )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( really is local. The definition of )Tj
/T1_1 1 Tf
(baz)Tj
/T1_0 1 Tf
( is not inside the box, so )Tj
0 -1.205 TD
(it can't ever see )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
('s local variable )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(. \(The fact that )Tj
/T1_1 1 Tf
(baz)Tj
/T1_0 1 Tf
( is )Tj
/T1_2 1 Tf
(called)Tj
/T1_0 1 Tf
( from inside the box doesn't )Tj
0 -1.2 TD
(matter.\) )Tj
0 -2.562 TD
(Conceptually, the procedure )Tj
/T1_1 1 Tf
(baz)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(returns to the environment where it was created)Tj
/T1_0 1 Tf
( before it executes, )Tj
0 -1.2 TD
(and even before it binds its arguments. )Tj
0 -2.562 TD
(In early Lisps, a different rule was used, called )Tj
/T1_2 1 Tf
(dynamic scope)Tj
/T1_0 1 Tf
(. In those Lisps, the call to )Tj
/T1_1 1 Tf
(baz)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(would)Tj
/T1_0 1 Tf
( see )Tj
0 -1.205 TD
(the )Tj
/T1_2 1 Tf
(most recent)Tj
/T1_0 1 Tf
( binding of )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(. In this case, it would see the binding created by )Tj
/T1_1 1 Tf
(quux)Tj
/T1_0 1 Tf
( just before the )Tj
0 -1.205 TD
(call to )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(. This led to very inscrutable bugs, because a procedure would work some\times, and not )Tj
0 -1.2 TD
(others, depending on the names of variables bound in )Tj
/T1_2 1 Tf
(other)Tj
/T1_0 1 Tf
( procedures. )Tj
0 -2.557 TD
(\(Dynamic scoping is generally considered to have been a big mistake, an\d was fixed in recent versions )Tj
0 -1.2 TD
(of Lisp, such as Common Lisp, which were influenced by Scheme.\) )Tj
ET
0.5 0.5 0.5 rg
10 217.926 m
10 219.926 l
602 219.926 l
601 218.926 l
11 218.926 l
11 218.926 l
h
f
0.875 0.875 0.875 rg
602 219.926 m
602 217.926 l
10 217.926 l
11 218.926 l
601 218.926 l
601 218.926 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 198.9016 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 196.785 m
88.162 196.785 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 198.9016 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 196.785 m
143.378 196.785 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 198.9016 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 196.785 m
174.486 196.785 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 198.9016 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 196.785 m
200.932 196.785 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 198.9016 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 196.785 m
343.634 196.785 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 198.9016 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_64.html \(2 of 2\)11\/3/2006 9:02:54 PM)Tj
ET
EMC 

endstreamendobj2719 0 obj(An Introduction to Scheme and its Implementation - lambda and Lexical Scope)endobj2720 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_64.html)/S 700 0 R>>endobj2721 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_64.html)endobj2722 0 obj(:’Z.pˆdê‚Òi_\r6)endobj2723 0 obj<</TS(D:20061104050254)/ID 2722 0 R/CT(text/html)/O[2696 0 R 2706 0 R]/S/SPS/T 2719 0 R/TID 2725 0 R/SI 2724 0 R>>endobj2724 0 obj<</TS(D:20061104050254)/AU 2721 0 R>>endobj2725 0 obj(x≤Ê@ﬂwÇ€0 Î›è„)endobj2726 0 obj<</Parent 710 0 R/Next 2762 0 R/Dest[2696 0 R/XYZ 0 792 null]/Prev 2693 0 R/SE 2695 0 R/Title(An Introduction to Scheme and its Implementation - lambda and Lexical Scope)>>endobj2727 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2728 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 2741 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 2729 0 R>>endobj2729 0 obj<</Annots 2733 0 R/Parent 2783 0 R/ID 2754 0 R/StructParents 114/Contents 2749 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2730 0 obj<</Parent 2876 0 R/Count 5/Type/Pages/Kids[2647 0 R 2661 0 R 2674 0 R 2696 0 R 2706 0 R]>>endobj2731 0 obj[2728 0 R]endobj2732 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2733 0 obj[2732 0 R 2734 0 R 2735 0 R 2736 0 R 2737 0 R 2739 0 R]endobj2734 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2696 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_64.html)/S/URI>>/Border[0 0 0]>>endobj2735 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2765 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_66.html)/S/URI>>/Border[0 0 0]>>endobj2736 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2737 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2738 0 obj[2729 0 R/XYZ 0 731.2 null]endobj2739 0 obj<</Rect[10.0 693.431 140.152 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC72)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC72)/S/URI>>/Border[0 0 0]>>endobj2740 0 obj[2729 0 R/XYZ 0 671.815 null]endobj2741 0 obj<</Annots 2744 0 R/Parent 2783 0 R/ID 2754 0 R/StructParents 115/Contents 2750 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2742 0 obj[2728 0 R]endobj2743 0 obj<</Rect[65.608 196.793 88.162 211.793]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2744 0 obj[2743 0 R 2745 0 R 2746 0 R 2747 0 R 2748 0 R]endobj2745 0 obj<</Rect[95.162 196.793 143.378 211.793]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2696 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_64.html)/S/URI>>/Border[0 0 0]>>endobj2746 0 obj<</Rect[150.378 196.793 174.486 211.793]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2765 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_66.html)/S/URI>>/Border[0 0 0]>>endobj2747 0 obj<</Rect[181.486 196.793 200.932 211.793]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2748 0 obj<</Rect[251.094 196.793 343.634 211.793]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2749 0 obj<</Length 4551>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Local Definitions)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
140.152 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Local Definitions)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(Scheme lets you define local procedures, scoped inside other procedures \or blocks with local variables. )Tj
0 -1.2 TD
(This lets you "hide" procedures that only make sense in a certain contex\t, so that they can only be called )Tj
T*
(in that context. )Tj
0 -2.562 TD
(You can define local procedures using )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
(, like this: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(quadruple x\))Tj
0 -1.2 TD
(   \(let \(\(double \(lambda \(x\))Tj
T*
(                    \(+ x x\)\)\)\))Tj
T*
(      \(double \(double x\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Here we've defined a procedure named )Tj
/T1_2 1 Tf
(quadruple)Tj
/T1_0 1 Tf
(, with a local variable named )Tj
/T1_2 1 Tf
(double)Tj
/T1_0 1 Tf
(; its value is )Tj
0 -1.205 TD
(a procedure that will double its argument value, created with )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Notice that when we call )Tj
/T1_2 1 Tf
(double)Tj
/T1_0 1 Tf
( from inside the procedure )Tj
/T1_2 1 Tf
(quadruple)Tj
/T1_0 1 Tf
(, we call it by the name )Tj
/T1_2 1 Tf
0 -1.205 TD
(double)Tj
/T1_0 1 Tf
(, which is really the name of a local variable. That's okay, because the\re's no difference between )Tj
0 -1.2 TD
(variable names and procedure names--a call to a named procedure is )Tj
/T1_3 1 Tf
(always)Tj
/T1_0 1 Tf
( a lookup of a variable value )Tj
T*
(followed by a call to the procedure it points to. )Tj
0 -2.562 TD
(Also notice that the inner procedure's argument variable )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( shadows the outer procedure's argument )Tj
0 -1.205 TD
(variable )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
(. Inside the body of )Tj
/T1_2 1 Tf
(double)Tj
/T1_0 1 Tf
(, it refers to )Tj
/T1_2 1 Tf
(double)Tj
/T1_0 1 Tf
('s argument, but outside it doesn't. \(The code )Tj
0 -1.2 TD
(might be easier to read if we chose different names for the two procedur\es' arguments, but this is just for )Tj
T*
(illustration.\) )Tj
0 -2.562 TD
(As with a top-level definition, we can write a local definition using )Tj
/T1_2 1 Tf
(define)Tj
/T1_0 1 Tf
( instead of )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(. For )Tj
0 -1.2 TD
(example, we could have written the above procedure as: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(quadruple x\))Tj
0 -1.2 TD
(   \(define \(double x\)      ; define a local procedure double)Tj
T*
(      \(+ x x\)\)\)\))Tj
0 -1.2 TD
(   \(double \(double x\)\)\)\)   ; nested calls to the local procedure)Tj
/T1_0 1 Tf
0 -2.557 TD
(A local )Tj
/T1_2 1 Tf
(define)Tj
/T1_0 1 Tf
( acts a lot like )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( with )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
(. \(Actually, it's exactly like a )Tj
/T1_2 1 Tf
(letrec)Tj
/T1_0 1 Tf
( with )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
(, )Tj
0 -1.205 TD
(but we haven't discussed )Tj
/T1_2 1 Tf
(letrec)Tj
/T1_0 1 Tf
( yet; we will later.\) )Tj
0 -2.562 TD
(There's a restriction on internal )Tj
/T1_2 1 Tf
(define)Tj
/T1_0 1 Tf
(s--they must be at the beginning of the procedure body \(or the )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_65.html \(1 of 2\)11\/3/2006 9:03:04 PM)Tj
ET
EMC 

endstreamendobj2750 0 obj<</Length 3819>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Local Definitions)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9082 Tm
(beginning of another body, like a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( body, )Tj
/T1_2 1 Tf
(before)Tj
/T1_0 1 Tf
( the normal executable expressions in the body. )Tj
0 -2.562 TD
(Local procedure definitions follow the normal lexical scope rule, like n\ested )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(s. For example, in the )Tj
0 -1.205 TD
(above example, the formal argument )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( of )Tj
/T1_1 1 Tf
(double)Tj
/T1_0 1 Tf
( is local to the body of )Tj
/T1_1 1 Tf
(double)Tj
/T1_0 1 Tf
(---it's a different )Tj
T*
(variable )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( than the argument )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( of )Tj
/T1_1 1 Tf
(quadruple)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(quadruple x\))Tj
0 -1.2 TD
(   \(define \(double x\))Tj
T*
( +------------------------+)Tj
T*
( |     +--------+         |)Tj
T*
( |     | \(+ x x\)|\)        |)Tj
T*
( |     +--------+         |)Tj
T*
( |  \(double \(double x\)\)   | \)\))Tj
T*
( +------------------------+)Tj
/T1_0 1 Tf
0 -2.557 TD
(Here the inner box is the scope of )Tj
/T1_1 1 Tf
(double)Tj
/T1_0 1 Tf
('s argument )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
(, and the outer one is the scope of the )Tj
/T1_2 1 Tf
(variable)Tj
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
0 -1.205 TD
(double)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(We could have used a different name for the argument to the local proced\ure, and it wouldn't change the )Tj
0 -1.2 TD
(meaning of either procedure: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(quadruple x\))Tj
0 -1.2 TD
(   \(define \(double \(y\)   ; local defn. of double)Tj
T*
(              \(+ y y\)\)\)  ;    body of local procedure)Tj
T*
(   \(double \(double x\)\)\)  ; body of quadruple)Tj
/T1_0 1 Tf
0 -2.557 TD
(On the other hand, since there are no local bindings of )Tj
/T1_1 1 Tf
(+)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(+)Tj
/T1_0 1 Tf
( refers to whatever it refers to in the context )Tj
0 -1.205 TD
(where )Tj
/T1_1 1 Tf
(quadruple)Tj
/T1_0 1 Tf
( is defined. Assuming that )Tj
/T1_1 1 Tf
(quadruple)Tj
/T1_0 1 Tf
( is a top-level procedure, not a local )Tj
0 -1.205 TD
(procedure in some other scope, )Tj
/T1_1 1 Tf
(+)Tj
/T1_0 1 Tf
( refers to the top-level binding of )Tj
/T1_1 1 Tf
(+)Tj
/T1_0 1 Tf
(. \(Remember that a procedure name )Tj
0 -1.2 TD
(is really just a variable name, so the scope rules for variables apply t\o procedure names too.\) )Tj
ET
0.5 0.5 0.5 rg
10 220.193 m
10 222.193 l
602 222.193 l
601 221.193 l
11 221.193 l
11 221.193 l
h
f
0.875 0.875 0.875 rg
602 222.193 m
602 220.193 l
10 220.193 l
11 221.193 l
601 221.193 l
601 221.193 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 201.169 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 199.052 m
88.162 199.052 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 201.169 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 199.052 m
143.378 199.052 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 201.169 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 199.052 m
174.486 199.052 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 201.169 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 199.052 m
200.932 199.052 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 201.169 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 199.052 m
343.634 199.052 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 201.169 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_65.html \(2 of 2\)11\/3/2006 9:03:04 PM)Tj
ET
EMC 

endstreamendobj2751 0 obj(An Introduction to Scheme and its Implementation - Local Definitions)endobj2752 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_65.html)/S 700 0 R>>endobj2753 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_65.html)endobj2754 0 obj(—âø0Ê‘sﬁ”cQÂ!&)endobj2755 0 obj<</TS(D:20061104050304)/ID 2754 0 R/CT(text/html)/O[2729 0 R 2741 0 R]/S/SPS/T 2751 0 R/TID 2757 0 R/SI 2756 0 R>>endobj2756 0 obj<</TS(D:20061104050304)/AU 2753 0 R>>endobj2757 0 obj(Œ%0»¯º5w†+çå¢Hµ)endobj2758 0 obj<</Limits[(ºj\rﬁl¨V£¥T-%«)(®l<¯wÊ±d≥i∞9©™µ)]/Names[]>>endobj2759 0 obj<</Limits[(®≈u£ˆ˘Ln€u‹Ùœ)(ˇÏ,•©Ãè˘ÿh≠˛b§÷)]/Names[4512 0 R 4513 0 R 5083 0 R 5084 0 R 861 0 R 862 0 R 3281 0 R 3282 0 R 1754 0 R 1755 0 R 2333 0 R 2334 0 R 4557 0 R 4558 0 R 1292 0 R 1293 0 R 1224 0 R 1225 0 R 1167 0 R 1168 0 R 1102 0 R 1103 0 R 3879 0 R 3880 0 R 771 0 R 772 0 R 4826 0 R 4827 0 R 3799 0 R 3800 0 R 1508 0 R 1509 0 R 2185 0 R 2186 0 R 2051 0 R 2052 0 R 3365 0 R 3366 0 R 2428 0 R 2429 0 R 945 0 R 946 0 R 2023 0 R 2024 0 R 1690 0 R 1691 0 R 1139 0 R 1140 0 R 5783 0 R 5784 0 R 901 0 R 902 0 R 3700 0 R 3701 0 R 2754 0 R 2755 0 R 834 0 R 835 0 R 3982 0 R 3983 0 R 2587 0 R 2588 0 R 5660 0 R 5661 0 R 3461 0 R 3462 0 R 1784 0 R 1785 0 R 2462 0 R 2463 0 R 4286 0 R 4287 0 R 5333 0 R 5334 0 R 5606 0 R 5607 0 R 1563 0 R 1564 0 R 704 0 R 705 0 R 1263 0 R 1264 0 R 3087 0 R 3088 0 R 1593 0 R 1594 0 R 1857 0 R 1858 0 R 2079 0 R 2080 0 R 1942 0 R 1943 0 R 2689 0 R 2690 0 R 5686 0 R 5687 0 R 6328 0 R 6329 0 R 1889 0 R 1890 0 R 3033 0 R 3034 0 R 1391 0 R 1392 0 R 2654 0 R 2655 0 R]>>endobj2760 0 obj<</Limits[(http://www.federated.com/~jim/schintro-v14/schintro_10.html)(http://www.federated.com/~jim/schintro-v14/schintro_39.html)]/Names[]>>endobj2761 0 obj<</Limits[(http://www.federated.com/~jim/schintro-v14/schintro_4.html)(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)]/Names[]>>endobj2762 0 obj<</Parent 710 0 R/Next 2803 0 R/Dest[2729 0 R/XYZ 0 792 null]/Prev 2726 0 R/SE 2728 0 R/Title(An Introduction to Scheme and its Implementation - Local Definitions)>>endobj2763 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2764 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 2778 0 R/Type/MCR>><</MCID 0/Pg 2780 0 R/Type/MCR>><</MCID 0/Pg 2782 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 2765 0 R>>endobj2765 0 obj<</Annots 2768 0 R/Parent 2783 0 R/ID 2799 0 R/StructParents 116/Contents 2792 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 1287 0 R/T1_3 828 0 R/T1_4 766 0 R/T1_5 2791 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2766 0 obj[2764 0 R]endobj2767 0 obj<</Rect[61.7725 751.026 83.0079 765.15]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2768 0 obj[2767 0 R 2769 0 R 2770 0 R 2771 0 R 2772 0 R 2774 0 R]endobj2769 0 obj<</Rect[89.5987 751.026 134.996 765.15]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2729 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_65.html)/S/URI>>/Border[0 0 0]>>endobj2770 0 obj<</Rect[141.587 751.026 164.285 765.15]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2806 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_67.html)/S/URI>>/Border[0 0 0]>>endobj2771 0 obj<</Rect[170.876 751.026 189.185 765.15]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2772 0 obj<</Rect[236.415 751.026 323.545 765.15]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2773 0 obj[2765 0 R/XYZ 0 733.702 null]endobj2774 0 obj<</Rect[9.41539 697.951 304.236 714.292]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC73)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC73)/S/URI>>/Border[0 0 0]>>endobj2775 0 obj[2765 0 R/XYZ 0 677.599 null]endobj2776 0 obj[2765 0 R/XYZ 0 677.599 null]endobj2777 0 obj[2765 0 R/XYZ 0 677.599 null]endobj2778 0 obj<</Parent 2783 0 R/ID 2799 0 R/StructParents 117/Contents 2793 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2779 0 obj[2764 0 R]endobj2780 0 obj<</Parent 2783 0 R/ID 2799 0 R/StructParents 118/Contents 2794 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2781 0 obj[2764 0 R]endobj2782 0 obj<</Annots 2786 0 R/Parent 2855 0 R/ID 2799 0 R/StructParents 119/Contents 2795 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2783 0 obj<</Parent 2876 0 R/Count 5/Type/Pages/Kids[2729 0 R 2741 0 R 2765 0 R 2778 0 R 2780 0 R]>>endobj2784 0 obj[2764 0 R]endobj2785 0 obj<</Rect[61.7725 734.457 83.0079 748.58]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2786 0 obj[2785 0 R 2787 0 R 2788 0 R 2789 0 R 2790 0 R]endobj2787 0 obj<</Rect[89.5987 734.457 134.996 748.58]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2729 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_65.html)/S/URI>>/Border[0 0 0]>>endobj2788 0 obj<</Rect[141.587 734.457 164.285 748.58]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2806 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_67.html)/S/URI>>/Border[0 0 0]>>endobj2789 0 obj<</Rect[170.876 734.457 189.185 748.58]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2790 0 obj<</Rect[236.415 734.457 323.545 748.58]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2791 0 obj<</Subtype/Type1/BaseFont/Courier-Oblique/Encoding/WinAnsiEncoding/Type/Font>>endobj2792 0 obj<</Length 4927>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Local Procedures and \letrec)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 755.1462 Tm
(Go to the )Tj
ET
0 0 1 RG
0.664 w 10 M 0 j 0 J []0 d 
61.772 753.153 m
83.008 753.153 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 61.7725 755.1462 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
89.599 753.153 m
134.996 753.153 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 89.5987 755.1462 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
141.587 753.153 m
164.285 753.153 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 141.5867 755.1462 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
170.876 753.153 m
189.185 753.153 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 170.8761 755.1462 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
236.415 753.153 m
323.545 753.153 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 236.4147 755.1462 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
9.415 740.293 m
9.415 742.176 l
602.585 742.176 l
601.643 741.234 l
10.357 741.234 l
10.357 741.234 l
h
f
0.875 0.875 0.875 rg
602.585 742.176 m
602.585 740.293 l
9.415 740.293 l
10.357 741.234 l
601.643 741.234 l
601.643 741.234 l
h
f
1.278 w 
9.415 698.653 m
249.482 698.653 l
S
0.767 w 
249.482 700.186 m
304.236 700.186 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.2095 0 0 15.2095 9.4154 702.4861 Tm
(Recursive Local Procedures and )Tj
/T1_2 1 Tf
(letrec)Tj
0 0 0 rg
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 666.214 Tm
(Using )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(lambda)Tj
/T1_0 1 Tf
( to define local procedures will often work, but generally we use )Tj
/T1_3 1 Tf
(letrec)Tj
/T1_0 1 Tf
( rather than )Tj
/T1_3 1 Tf
0 -1.205 TD
(let)Tj
/T1_0 1 Tf
(, because it supports )Tj
/T1_4 1 Tf
(recursive)Tj
/T1_0 1 Tf
( local procedures. \(That's why it's called )Tj
/T1_3 1 Tf
(letrec)Tj
/T1_0 1 Tf
(---it means )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
( with )Tj
/T1_4 1 Tf
0 -1.2 TD
(rec)Tj
/T1_0 1 Tf
(ursive definitions.\) )Tj
0 -2.562 TD
(Suppose we tried to use )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(lambda)Tj
/T1_0 1 Tf
( to define a recursive local procedure: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define \(foo x\))Tj
0 -1.2 TD
(   \(let \(\(local-proc \(lambda \(y\))Tj
T*
(                        ...)Tj
T*
(                        \(local-proc ...\)   ; recursive call?  No.)Tj
T*
(                        ...\)\)\) )Tj
T*
(      ...)Tj
T*
(      \(local-proc x\))Tj
T*
(      ...\))Tj
/T1_0 1 Tf
0 -2.557 TD
(The problem with this example is that what appears to be a recursive cal\l to )Tj
/T1_3 1 Tf
(local-proc)Tj
/T1_0 1 Tf
( from inside )Tj
/T1_3 1 Tf
0 -1.205 TD
(local-proc)Tj
/T1_0 1 Tf
( actually isn't. Remember that )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
( computes the initial values of variables, then initializes all of )Tj
0 -1.2 TD
(the variables' storage, and only )Tj
/T1_4 1 Tf
(then)Tj
/T1_0 1 Tf
( do any of the bindings become visible--when we enter the body of the )Tj
/T1_3 1 Tf
0 -1.205 TD
(let)Tj
/T1_0 1 Tf
(. In the example above, that means that the local variable )Tj
/T1_3 1 Tf
(local-proc)Tj
/T1_0 1 Tf
( )Tj
/T1_4 1 Tf
(isn't visible to the )Tj
/T1_5 1 Tf
(lambda)Tj
/T1_4 1 Tf
( )Tj
0 -1.205 TD
(expression)Tj
/T1_0 1 Tf
(. The procedure created by )Tj
/T1_3 1 Tf
(lambda)Tj
/T1_0 1 Tf
( will not see its own name--the name )Tj
/T1_3 1 Tf
(local-proc)Tj
/T1_0 1 Tf
( in the body )Tj
T*
(of the procedure will refer to whatever binding of )Tj
/T1_3 1 Tf
(local-proc)Tj
/T1_0 1 Tf
( exists in the enclosing environment, if there )Tj
0 -1.2 TD
(is one. )Tj
0 -2.557 TD
(A block structure diagram may make this clearer: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define \(foo x\))Tj
0 -1.2 TD
(   \(let \(\(local-proc \(lambda \(y\))Tj
T*
(                      +--------------------------+)Tj
T*
(                      | ...                scope |)Tj
T*
(                      | \(local-proc ...\)   of y  | )Tj
T*
(                      | ...                      | \)\)\))Tj
T*
(                      +--------------------------+)Tj
T*
(    +------------------------------------------+)Tj
T*
(    | ...                         scope of     |)Tj
T*
(    | \(local-proc x\)              local-proc   |)Tj
T*
(    | ...                                      | \))Tj
T*
(    +------------------------------------------+)Tj
/T1_0 1 Tf
0 -2.557 TD
(Unlike )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
(, )Tj
/T1_3 1 Tf
(letrec)Tj
/T1_0 1 Tf
( makes new bindings visible )Tj
/T1_3 1 Tf
(before)Tj
/T1_0 1 Tf
( they're initialized. Storage is allocated, and the )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_66.html \(1 of 4\)11\/3/2006 9:03:10 PM)Tj
ET
EMC 

endstreamendobj2793 0 obj<</Length 3899>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Local Procedures and \letrec)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 755.1462 Tm
(meanings of names are changed to refer to the new local variable binding\s, and )Tj
/T1_1 1 Tf
(then)Tj
/T1_0 1 Tf
( the initial values of those )Tj
0 -1.2 TD
(variables are computed and the variables are initialized. )Tj
0 -2.557 TD
(For most purposes, this wouldn't make any sense at all--why would you wa\nt variable bindings to be visible )Tj
0 -1.2 TD
(before they have had their initial values installed? For local procedure\ definitions, however, it makes perfect )Tj
0 -1.205 TD
(sense--we want to use )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
( to create a procedure that can operate on the variables )Tj
/T1_1 1 Tf
(later)Tj
/T1_0 1 Tf
(, when it's called. )Tj
/T1_2 1 Tf
0 -2.562 TD
(lambda)Tj
/T1_0 1 Tf
( creates a procedure that will start executing in the scope where the )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression is evaluated, )Tj
0 -1.205 TD
(so we need to make the bindings visible before we evaluate the )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression. )Tj
0 -2.562 TD
(If we use )Tj
/T1_2 1 Tf
(letrec)Tj
/T1_0 1 Tf
( in our example, instead of )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(, it works. The procedure )Tj
/T1_2 1 Tf
(local-proc)Tj
/T1_0 1 Tf
( can see the )Tj
/T1_1 1 Tf
0 -1.205 TD
(variable)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(local-proc)Tj
/T1_0 1 Tf
(, so it can call itself by its name. )Tj
0 -2.557 TD
(The block structure diagram looks like this: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(foo x\)         +-----------------------------------+)Tj
0 -1.2 TD
(   \(letrec \(\(local-proc | \(lambda \(y\)                       |)Tj
0 -1.2 TD
(                        |  +--------------------------+     |)Tj
0 -1.2 TD
(                        |  | ...                scope |     |)Tj
T*
(                        |  | \(local-proc ...\)   of y  |     |)Tj
T*
(                        |  | ...                      | \)\)\) |)Tj
T*
(                        |  +--------------------------+     |)Tj
T*
(    +-------------------+                                   |)Tj
T*
(    | ...                                  scope of         |)Tj
T*
(    | \(local-proc x\)                       local-proc       |)Tj
T*
(    | ...\)                                                  |)Tj
T*
(    +-------------------------------------------------------+)Tj
/T1_0 1 Tf
0 -2.557 TD
(The recursive call to )Tj
/T1_2 1 Tf
(local-proc)Tj
/T1_0 1 Tf
( will work, because the call is inside the box that corresponds to the s\cope )Tj
0 -1.205 TD
(of the variable )Tj
/T1_2 1 Tf
(local-proc)Tj
/T1_0 1 Tf
(. )Tj
/T1_2 1 Tf
0 -2.562 TD
(letrec)Tj
/T1_0 1 Tf
( works for multiple )Tj
/T1_1 1 Tf
(mutually recursive)Tj
/T1_0 1 Tf
( local procedures, too. You can define several local procedures )Tj
0 -1.2 TD
(that can call each other, like this: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(my-proc\))Tj
0 -1.2 TD
(   \(letrec \(\(local-proc-1 \(lambda \(\))Tj
T*
(                             ...)Tj
T*
(                             \(local-proc-2\))Tj
T*
(                             ...\)\))Tj
T*
(            \(local-proc-2 \(lambda \(\))Tj
T*
(                             ...)Tj
0 -1.2 TD
(                             \(local-proc-1\))Tj
0 -1.2 TD
(                             ...\)\)\))Tj
T*
(      \(local-proc-1\)\)\) ; start off mutual recursion by calling local\-proc-1)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_66.html \(2 of 4\)11\/3/2006 9:03:10 PM)Tj
ET
EMC 

endstreamendobj2794 0 obj<</Length 4041>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Local Procedures and \letrec)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 755.1462 Tm
(A block structure diagram shows that each local procedure definition can\ see the bindings of the other's names: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(my-proc\))Tj
0 -1.2 TD
(             +--------------------------------------------------------+)Tj
T*
(   \(letrec \( | \(local-proc-1 \(lambda \(\)        scope of local-proc\-1  |)Tj
T*
(             |                ...                and local-proc-2     |)Tj
T*
(             |                \(local-proc-2\)                          \|)Tj
T*
(             |                ...\)\)                                   \|)Tj
T*
(             | \(local-proc-2 \(lambda \(\)                             \  |)Tj
T*
(             |               ...                                      |)Tj
T*
(             |               \(local-proc-1\)                           \|)Tj
T*
(    +--------+               ...\)\)\)                                  \ |)Tj
T*
(    | \(local-proc-1\)                                                  \| \)\))Tj
T*
(    +-----------------------------------------------------------------+)Tj
/T1_0 1 Tf
0 -2.557 TD
(You can also define plain variables while you're at it, in the same )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
(, but )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
( is mostly interesting )Tj
0 -1.2 TD
(for defining local procedures. )Tj
0 -2.562 TD
(When the initial value of a )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
( variable is not a procedure, you must be careful that the expression do\es )Tj
0 -1.205 TD
(not depend on the values of any of the other )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
( variables. Like )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, the order of initialization of the )Tj
0 -1.2 TD
(variables is undefined. )Tj
0 -2.557 TD
(For example, the following is illegal: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(letrec \(\(x 2\))Tj
0 -1.2 TD
(         \(y \(+ x x\)\)\))Tj
T*
(   ...\))Tj
/T1_0 1 Tf
0 -2.557 TD
(In this case, the attempt to compute )Tj
/T1_1 1 Tf
(\(+ x x\))Tj
/T1_0 1 Tf
( may fail, because the value of )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( may not have been computed )Tj
0 -1.205 TD
(yet. For this example, )Tj
/T1_1 1 Tf
(let*)Tj
/T1_0 1 Tf
( would do the job--the second initialization expression needs to see the\ result of the )Tj
0 -1.2 TD
(first, but not vice versa: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let* \(\(x 2\))Tj
0 -1.2 TD
(       \(y \(+ x x\)\)\))Tj
T*
(   ...\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Be sure you understand why this is illegal, but the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expressions in the earlier examples are not. )Tj
0 -2.562 TD
(When we create recursive procedures using )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
(, the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expressions can be evaluated )Tj
0 -1.2 TD
(without actually using the )Tj
/T1_2 1 Tf
(values)Tj
/T1_0 1 Tf
( stored in the bindings they reference. We are creating procedures that \)Tj
/T1_2 1 Tf
(will)Tj
/T1_0 1 Tf
( use )Tj
T*
(the values in the bindings )Tj
/T1_2 1 Tf
(when those procedures are called)Tj
/T1_0 1 Tf
(, but just creating the procedure objects themselves )Tj
0 -1.205 TD
(doesn't require the bindings to have values yet. It does require that th\e bindings exist, because each )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(expression creates a procedure that "captures" the currently visible bin\dings--the procedure remembers what )Tj
T*
(environment it was created in. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_66.html \(3 of 4\)11\/3/2006 9:03:10 PM)Tj
ET
EMC 

endstreamendobj2795 0 obj<</Length 1586>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Local Procedures and \letrec)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0.5 0.5 0.5 rg
9.415 756.489 m
9.415 758.372 l
602.585 758.372 l
601.643 757.431 l
10.357 757.431 l
10.357 757.431 l
h
f
0.875 0.875 0.875 rg
602.585 758.372 m
602.585 756.489 l
9.415 756.489 l
10.357 757.431 l
601.643 757.431 l
601.643 757.431 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 738.577 Tm
(Go to the )Tj
ET
0 0 1 RG
0.664 w 10 M 0 j 0 J []0 d 
61.772 736.584 m
83.008 736.584 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 61.7725 738.577 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
89.599 736.584 m
134.996 736.584 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 89.5987 738.577 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
141.587 736.584 m
164.285 736.584 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 141.5867 738.577 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
170.876 736.584 m
189.185 736.584 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 170.8761 738.577 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
236.415 736.584 m
323.545 736.584 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 236.4147 738.577 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_66.html \(4 of 4\)11\/3/2006 9:03:10 PM)Tj
ET
EMC 

endstreamendobj2796 0 obj(An Introduction to Scheme and its Implementation - Local Procedures and letrec)endobj2797 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_66.html)/S 700 0 R>>endobj2798 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_66.html)endobj2799 0 obj(a©¶%ùa§Zc—∫ß˜ò)endobj2800 0 obj<</TS(D:20061104050310)/ID 2799 0 R/CT(text/html)/O[2765 0 R 2778 0 R 2780 0 R 2782 0 R]/S/SPS/T 2796 0 R/TID 2802 0 R/SI 2801 0 R>>endobj2801 0 obj<</TS(D:20061104050310)/AU 2798 0 R>>endobj2802 0 obj(‹HÄ]ïvvıàe@–™˝ñH)endobj2803 0 obj<</Parent 710 0 R/Next 2836 0 R/Dest[2765 0 R/XYZ 0 792 null]/Prev 2762 0 R/SE 2764 0 R/Title(An Introduction to Scheme and its Implementation - Local Procedures and letrec)>>endobj2804 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2805 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 2816 0 R/Type/MCR>><</MCID 0/Pg 2818 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 2806 0 R>>endobj2806 0 obj<</Annots 2809 0 R/Parent 2855 0 R/ID 2832 0 R/StructParents 120/Contents 2826 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 1287 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2807 0 obj[2805 0 R]endobj2808 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2809 0 obj[2808 0 R 2810 0 R 2811 0 R 2812 0 R 2813 0 R 2815 0 R]endobj2810 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2765 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_66.html)/S/URI>>/Border[0 0 0]>>endobj2811 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2839 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_68.html)/S/URI>>/Border[0 0 0]>>endobj2812 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2813 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2814 0 obj[2806 0 R/XYZ 0 731.2 null]endobj2815 0 obj<</Rect[10.0 693.229 278.945 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC74)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC74)/S/URI>>/Border[0 0 0]>>endobj2816 0 obj<</Parent 2855 0 R/ID 2832 0 R/StructParents 121/Contents 2827 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2817 0 obj[2805 0 R]endobj2818 0 obj<</Annots 2821 0 R/Parent 2855 0 R/ID 2832 0 R/StructParents 122/Contents 2828 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2819 0 obj[2805 0 R]endobj2820 0 obj<</Rect[65.608 386.533 88.162 401.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2821 0 obj[2820 0 R 2822 0 R 2823 0 R 2824 0 R 2825 0 R]endobj2822 0 obj<</Rect[95.162 386.533 143.378 401.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2765 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_66.html)/S/URI>>/Border[0 0 0]>>endobj2823 0 obj<</Rect[150.378 386.533 174.486 401.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2839 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_68.html)/S/URI>>/Border[0 0 0]>>endobj2824 0 obj<</Rect[181.486 386.533 200.932 401.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2825 0 obj<</Rect[251.094 386.533 343.634 401.533]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2826 0 obj<</Length 3342>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Multiple defines are \Like a letrec)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
75.52 693.975 l
S
0.814 w 
75.52 695.603 m
133.674 695.603 l
S
1.357 w 
133.674 693.975 m
220.792 693.975 l
S
0.814 w 
220.792 695.603 m
278.945 695.603 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Multiple )Tj
/T1_2 1 Tf
(define)Tj
/T1_1 1 Tf
(s are like a )Tj
/T1_2 1 Tf
(letrec)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.5214 Tm
(Now that you understand )Tj
/T1_3 1 Tf
(letrec)Tj
/T1_0 1 Tf
(, I can explain what )Tj
/T1_3 1 Tf
(define)Tj
/T1_0 1 Tf
( really does. )Tj
0 -2.562 TD
(Notice that when you )Tj
/T1_3 1 Tf
(define)Tj
/T1_0 1 Tf
( top-level variables and procedures, the procedures you create can refer\ to )Tj
0 -1.2 TD
(other variables in the same top-level environment. )Tj
0 -2.562 TD
(It is as though all of the top-level bindings were created by a single b\ig )Tj
/T1_3 1 Tf
(letrec)Tj
/T1_0 1 Tf
(, so that the initial value )Tj
0 -1.2 TD
(expressions create procedures that can "see" each others' name bindings.\ Expressions that aren't )Tj
0 -1.205 TD
(definitions make up the "body" of this imaginary )Tj
/T1_3 1 Tf
(letrec)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Recall that a procedure-defining )Tj
/T1_3 1 Tf
(define)Tj
/T1_0 1 Tf
( is equivalent to a variable-defining )Tj
/T1_3 1 Tf
(define)Tj
/T1_0 1 Tf
( with a )Tj
/T1_3 1 Tf
(lambda)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(expression to compute its initial value. )Tj
0 -2.557 TD
(The following top-level forms )Tj
/T1_3 1 Tf
0 -2.562 TD
(...)Tj
0 -2.4 TD
(\(define \(foo\))Tj
0 -1.2 TD
(   \(... \(bar\) ...\)\))Tj
0 -2.4 TD
(\(define \(bar\))Tj
0 -1.2 TD
(   \(... \(baz\) ...\)\))Tj
0 -2.4 TD
(\(define \(baz\))Tj
0 -1.2 TD
(   \(... \(quux\) ...\)\))Tj
T*
(...)Tj
T*
(\(foo\))Tj
T*
(...)Tj
/T1_0 1 Tf
0 -2.552 TD
(are therefore equivalent to )Tj
/T1_3 1 Tf
0 -2.562 TD
(...)Tj
0 -2.4 TD
(\(define foo)Tj
0 -1.2 TD
(        \(lambda \(\))Tj
T*
(           \(... \(bar\) ...\)\)\))Tj
0 -2.4 TD
(\(define bar)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_67.html \(1 of 3\)11\/3/2006 9:03:14 PM)Tj
ET
EMC 

endstreamendobj2827 0 obj<</Length 2437>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Multiple defines are \Like a letrec)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 752.1844 Tm
(        \(lambda \(\))Tj
0 -1.2 TD
(           \(... \(baz\) ...\)\)\))Tj
0 -2.4 TD
(\(define baz)Tj
0 -1.2 TD
(        \(lambda \(\))Tj
T*
(           \(... \(foo\) ...\)\)\))Tj
T*
(...)Tj
T*
(\(foo\))Tj
T*
(...)Tj
/T1_0 1 Tf
0 -2.557 TD
(When we view top-level )Tj
/T1_1 1 Tf
(define)Tj
/T1_0 1 Tf
(s as being implicitly like parts of a )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
(, the program takes the )Tj
0 -1.2 TD
(equivalent form )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(letrec \(... )Tj
0 -2.4 TD
(         \(foo \(lambda \(\))Tj
0 -1.2 TD
(                 \(... \(bar\) ...\)\)\))Tj
T*
(         \(bar \(lambda \(\))Tj
T*
(                 \(... \(baz\) ...\)\)\))Tj
T*
(         \(baz \(lambda \(\))Tj
T*
(                 \(... \(foo\) ...\)\)\))Tj
T*
(         ...\))Tj
T*
( ...)Tj
T*
( \(foo\))Tj
T*
( ...\))Tj
/T1_0 1 Tf
0 -2.557 TD
(\(Actually, things are scoped like this, but the initial value expressio\ns of )Tj
/T1_1 1 Tf
(define)Tj
/T1_0 1 Tf
(s and the non-)Tj
0 -1.2 TD
(definition expressions are evaluated in the order they occurred in the s\ource program. For top-level )Tj
T*
(expressions, you can depend on Scheme executing the executable parts of \definitions in the order )Tj
T*
(written.\) )Tj
0 -2.562 TD
(Local )Tj
/T1_1 1 Tf
(define)Tj
/T1_0 1 Tf
(s work pretty this way, too. A Scheme interpreter or compiler recognizes\ any )Tj
/T1_1 1 Tf
(define)Tj
/T1_0 1 Tf
(s )Tj
0 -1.205 TD
(that occur at the beginning of a body as being parts of an implicit )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
(; the subsequent expressions )Tj
0 -1.205 TD
(in the same body are treated as the body of the implicit )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(So the following procedure )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(my-proc\))Tj
0 -1.2 TD
(   \(define \(local-proc-1\))Tj
T*
(      ...\))Tj
T*
(   \(define \(local-proc-2\))Tj
T*
(      ...\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_67.html \(2 of 3\)11\/3/2006 9:03:14 PM)Tj
ET
EMC 

endstreamendobj2828 0 obj<</Length 2257>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Multiple defines are \Like a letrec)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(   \(local-proc-1\))Tj
0 -1.2 TD
(   \(local-proc-1\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(is equivalent to )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(my-proc\))Tj
0 -1.2 TD
(   \(letrec \(\(local-proc-1 \(lambda \(\) ...\)\))Tj
T*
(            \(local-proc-2 \(lambda \(\) ...\)\)\))Tj
T*
(      \(local-proc-1\))Tj
T*
(      \(local-proc-2\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(If we "desugar" the outer )Tj
/T1_1 1 Tf
(define)Tj
/T1_0 1 Tf
(, too, we get )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define my-proc)Tj
0 -1.2 TD
(        \(lambda \(\))Tj
0 -1.2 TD
(           \(letrec \(\(local-proc-1 \(lambda \(\) ...\)\))Tj
0 -1.2 TD
(                    \(local-proc-2 \(lambda \(\) ...\)\)\))Tj
0 -1.2 TD
(             \(local-proc-1\))Tj
0 -1.2 TD
(             \(local-proc-2\)\)\))Tj
ET
0.5 0.5 0.5 rg
10 409.933 m
10 411.933 l
602 411.933 l
601 410.933 l
11 410.933 l
11 410.933 l
h
f
0.875 0.875 0.875 rg
602 411.933 m
602 409.933 l
10 409.933 l
11 410.933 l
601 410.933 l
601 410.933 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 390.9082 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 388.791 m
88.162 388.791 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 390.9082 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 388.791 m
143.378 388.791 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 390.9082 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 388.791 m
174.486 388.791 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 390.9082 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 388.791 m
200.932 388.791 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 390.9082 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 388.791 m
343.634 388.791 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 390.9082 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_67.html \(3 of 3\)11\/3/2006 9:03:14 PM)Tj
ET
EMC 

endstreamendobj2829 0 obj(An Introduction to Scheme and its Implementation - Multiple defines are Like a letrec)endobj2830 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_67.html)/S 700 0 R>>endobj2831 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_67.html)endobj2832 0 obj(K¯^¬F8%]m¯ìÕ~©∏)endobj2833 0 obj<</TS(D:20061104050314)/ID 2832 0 R/CT(text/html)/O[2806 0 R 2816 0 R 2818 0 R]/S/SPS/T 2829 0 R/TID 2835 0 R/SI 2834 0 R>>endobj2834 0 obj<</TS(D:20061104050314)/AU 2831 0 R>>endobj2835 0 obj(∆∑W ˇ„ÿ?&˚	Î.)endobj2836 0 obj<</Parent 710 0 R/Next 2872 0 R/Dest[2806 0 R/XYZ 0 792 null]/Prev 2803 0 R/SE 2805 0 R/Title(An Introduction to Scheme and its Implementation - Multiple defines are Like a letrec)>>endobj2837 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2838 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 2854 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 2839 0 R>>endobj2839 0 obj<</Annots 2842 0 R/Parent 2855 0 R/ID 2868 0 R/StructParents 123/Contents 2863 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2840 0 obj[2838 0 R]endobj2841 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2842 0 obj[2841 0 R 2843 0 R 2844 0 R 2845 0 R 2846 0 R 2848 0 R 2853 0 R]endobj2843 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2806 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_67.html)/S/URI>>/Border[0 0 0]>>endobj2844 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2875 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_69.html)/S/URI>>/Border[0 0 0]>>endobj2845 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2846 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2847 0 obj[2839 0 R/XYZ 0 731.2 null]endobj2848 0 obj<</Rect[10.0 693.431 544.127 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC75)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC75)/S/URI>>/Border[0 0 0]>>endobj2849 0 obj[2839 0 R/XYZ 0 671.815 null]endobj2850 0 obj[2839 0 R/XYZ 0 671.815 null]endobj2851 0 obj[2839 0 R/XYZ 0 671.815 null]endobj2852 0 obj[2839 0 R/XYZ 0 626.191 null]endobj2853 0 obj<</Rect[254.16 621.815 270.484 636.815]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_foot.html#FOOT4)/S/URI>>/Border[0 0 0]>>endobj2854 0 obj<</Annots 2858 0 R/Parent 2967 0 R/ID 2868 0 R/StructParents 124/Contents 2864 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2855 0 obj<</Parent 2876 0 R/Count 5/Type/Pages/Kids[2782 0 R 2806 0 R 2816 0 R 2818 0 R 2839 0 R]>>endobj2856 0 obj[2838 0 R]endobj2857 0 obj<</Rect[65.608 131.726 88.162 146.726]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2858 0 obj[2857 0 R 2859 0 R 2860 0 R 2861 0 R 2862 0 R]endobj2859 0 obj<</Rect[95.162 131.726 143.378 146.726]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2806 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_67.html)/S/URI>>/Border[0 0 0]>>endobj2860 0 obj<</Rect[150.378 131.726 174.486 146.726]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2875 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_69.html)/S/URI>>/Border[0 0 0]>>endobj2861 0 obj<</Rect[181.486 131.726 200.932 146.726]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2862 0 obj<</Rect[251.094 131.726 343.634 146.726]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2863 0 obj<</Length 4599>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Variable Arity)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
544.127 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Variable Arity: Procedures that Take a Variable Number of Arguments)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(In Scheme, you can easily write procedures that can take a variable numb\er of arguments. Technically, )Tj
0 -1.2 TD
(the number of arguments a procedure accepts is called its )Tj
/T1_2 1 Tf
(arity)Tj
/T1_0 1 Tf
(, and we call a procedure that accepts a )Tj
T*
(variable number a )Tj
/T1_2 1 Tf
(variable arity)Tj
/T1_0 1 Tf
( procedure.)Tj
ET
0.706 w 
254.16 624.074 m
270.484 624.074 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 254.16 626.1909 Tm
(\(4\))Tj
0 0 0 rg
( )Tj
-17.44 -2.7 Td
(One way to write a variable arity procedure is to use an argument declar\ation form that consists of a )Tj
T*
(single argument name, rather than a parenthesized sequence of argument n\ames. This tells Scheme that )Tj
T*
(the procedure's actual arguments should be packaged up as a list when th\e procedure is entered, and the )Tj
T*
(procedure will have a single argument that points to this list of argume\nt values. )Tj
0 -2.557 TD
(For example, we could write a procedure that takes any number of argumen\ts and displays the list of )Tj
0 -1.2 TD
(actual arguments passed to the procedure. )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define \(display-all . args\))Tj
0 -1.2 TD
(   \(display args\)\) )Tj
/T1_0 1 Tf
0 -2.552 TD
(Here the argument variable args receives the list of all arguments, and \we use display to display this list. )Tj
0 -1.2 TD
(Now if we call the procedure like this )Tj
/T1_3 1 Tf
0 -2.562 TD
(Scheme>\(display-all 'foo 3 'bar\))Tj
0 -1.2 TD
(\(foo 3 bar\))Tj
/T1_0 1 Tf
0 -2.557 TD
(the argument variable )Tj
/T1_3 1 Tf
(args)Tj
/T1_0 1 Tf
( will be bound and initialized with a list )Tj
/T1_3 1 Tf
(\(foo 3 bar\))Tj
/T1_0 1 Tf
(, which will be )Tj
0 -1.205 TD
(passed as the sole argument to )Tj
/T1_3 1 Tf
(display)Tj
/T1_0 1 Tf
(. Once inside the procedure, there's nothing special about this )Tj
0 -1.205 TD
(argument variable )Tj
/T1_3 1 Tf
(args)Tj
/T1_0 1 Tf
(---it just happens to hold the list of arguments that were passed. )Tj
0 -2.562 TD
(This works for )Tj
/T1_3 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expressions as well. We could define )Tj
/T1_3 1 Tf
(display-all)Tj
/T1_0 1 Tf
( using an equivalent plain )Tj
0 -1.2 TD
(variable definition whose initial value is the result of an explicit lam\bda expression: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define display-all)Tj
0 -1.2 TD
(        \(lambda args)Tj
T*
(           \(display args\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(\(Notice that for this \(plain )Tj
/T1_3 1 Tf
(lambda)Tj
/T1_0 1 Tf
(\) version, we just used )Tj
/T1_3 1 Tf
(args)Tj
/T1_0 1 Tf
( as the argument specification, not )Tj
/T1_3 1 Tf
0 -1.205 TD
(\(args\))Tj
/T1_0 1 Tf
(. If we just use an identifer, rather than a parenthesized sequence of i\dentifiers, Scheme )Tj
0 -1.205 TD
(packages up all of the actual arguments to the procedure as a list and h\ands that to )Tj
/T1_3 1 Tf
(display-all)Tj
/T1_0 1 Tf
( as )Tj
T*
(one argument variable. This looks a little different from the )Tj
/T1_3 1 Tf
(define)Tj
/T1_0 1 Tf
( version, but it's the same idea--)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_68.html \(1 of 2\)11\/3/2006 9:03:19 PM)Tj
ET
EMC 

endstreamendobj2864 0 obj<</Length 5161>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Variable Arity)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9082 Tm
(we're using the variable )Tj
/T1_1 1 Tf
(args)Tj
/T1_0 1 Tf
( to "stand for" a sequence of argument values, which scheme represents a\s )Tj
0 -1.2 TD
(a list.\) )Tj
0 -2.557 TD
(Often, you write procedures that take a certain number of normal \(requi\red\) arguments, but can take )Tj
0 -1.2 TD
(more. When you pass a procedure more arguments than it requires, Scheme \packages up the extra )Tj
T*
(arguments in a list, called a )Tj
/T1_2 1 Tf
(rest list)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Scheme allows you to express this by writing a mostly normal-looking par\enthesized sequence of )Tj
0 -1.2 TD
(argument names, followed by a dot and the name of the argument to receiv\e the list of the remaining )Tj
T*
(arguments. \(If no extra arguments are passed, this argument variable wi\ll receive the empty list.\) )Tj
0 -2.562 TD
(For example, suppose we want our )Tj
/T1_1 1 Tf
(display-all)Tj
/T1_0 1 Tf
( procedure to accept at least one argument, display )Tj
0 -1.2 TD
(it, and then display the list of any remaining arguments. We could write\ it like this: )Tj
0 -2.557 TD
(\(define \(display-all first . rest\) \(display first\) \(display rest\)\\) )Tj
0 -2.557 TD
(This allows us to declare that the procedure's first argument is require\d, and give it a name of its own. )Tj
0 -1.2 TD
(The dot notation is similar to the dot notation for improper lists, and \is used to suggest that the that )Tj
0 -1.205 TD
(variable after the dot refers to the "rest" of the actual arguments.\\fo\otnote{Consider an improper list )Tj
/T1_1 1 Tf
(\(a )Tj
0 -1.205 TD
(b . c\))Tj
/T1_0 1 Tf
(. Here the first element of the list is a, the )Tj
/T1_1 1 Tf
(cadr)Tj
/T1_0 1 Tf
( of the list is )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
(, and the rest of the list beyond )Tj
0 -1.205 TD
(that \(the )Tj
/T1_1 1 Tf
(cddr)Tj
/T1_0 1 Tf
(\) is just )Tj
/T1_1 1 Tf
(c)Tj
/T1_0 1 Tf
(. If we write the argument declarations of a procedure in this way, e.g.\, )Tj
/T1_1 1 Tf
T*
(\(lambda \(a b . c\) ...\))Tj
/T1_0 1 Tf
(, we think of the formal parameter )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( as "standing for" the first actual )Tj
0 -1.205 TD
(argument value, the formal parameter )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
( as standing for the second actual argument value, and the formal )Tj
0 -1.205 TD
(parameter )Tj
/T1_1 1 Tf
(c)Tj
/T1_0 1 Tf
( as standing for the rest of the actual argument values.} One common app\lication of variable )Tj
0 -1.205 TD
(arity is to allow optional arguments with default values. For example we\ can define a procedure )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(which takes two required arguments and a third, optional argument. We wo\uld like to use a default value )Tj
0 -1.205 TD
(for the optional argument, say )Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
(, if the optional argument is not actually passed. \(define \(foo a b . \rest\) )Tj
0 -1.2 TD
(\(let \(\(c \(if \(null? rest\) ; if no extra argument\(s\) #f\) ; use d\efault value #f for c \(car rest\)\)\) ; else use first )Tj
T*
(optional arg \(bar a b c\)\)\) This idiom is common in routines that per\form I/O, where a given I/O )Tj
T*
(operation typically reads from or writes to a special file--such as the \standard input or output, or a log )Tj
T*
(file--but can also be used to write to other files using explicit )Tj
/T1_2 1 Tf
(port)Tj
/T1_0 1 Tf
( objects, which are like file handles. )Tj
T*
(\(Ports will be discussed in detail later.\) If no port is passed to spe\cify where the I/O operation should be )Tj
T*
(directed, it's directed to the usual file. Another common application of\ variable arity is to allow )Tj
T*
(procedures to operate on an arbitrary number of arguments. [give example\] )Tj
ET
0.5 0.5 0.5 rg
10 155.126 m
10 157.126 l
602 157.126 l
601 156.126 l
11 156.126 l
11 156.126 l
h
f
0.875 0.875 0.875 rg
602 157.126 m
602 155.126 l
10 155.126 l
11 156.126 l
601 156.126 l
601 156.126 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 136.1016 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 133.985 m
88.162 133.985 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 136.1016 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 133.985 m
143.378 133.985 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 136.1016 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 133.985 m
174.486 133.985 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 136.1016 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 133.985 m
200.932 133.985 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 136.1016 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 133.985 m
343.634 133.985 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 136.1016 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_68.html \(2 of 2\)11\/3/2006 9:03:19 PM)Tj
ET
EMC 

endstreamendobj2865 0 obj(An Introduction to Scheme and its Implementation - Variable Arity)endobj2866 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_68.html)/S 700 0 R>>endobj2867 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_68.html)endobj2868 0 obj(ÖøÔWØ”3ä∆é4/{ˆ6)endobj2869 0 obj<</TS(D:20061104050319)/ID 2868 0 R/CT(text/html)/O[2839 0 R 2854 0 R]/S/SPS/T 2865 0 R/TID 2871 0 R/SI 2870 0 R>>endobj2870 0 obj<</TS(D:20061104050319)/AU 2867 0 R>>endobj2871 0 obj(¨Ê£\r|ÚùÍå ã\\"\(—)endobj2872 0 obj<</Parent 710 0 R/Next 2900 0 R/Dest[2839 0 R/XYZ 0 792 null]/Prev 2836 0 R/SE 2838 0 R/Title(An Introduction to Scheme and its Implementation - Variable Arity)>>endobj2873 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2874 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 2875 0 R>>endobj2875 0 obj<</Annots 2879 0 R/Parent 2967 0 R/ID 2896 0 R/StructParents 125/Contents 2892 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2876 0 obj<</Parent 4701 0 R/Count 25/Type/Pages/Kids[2558 0 R 2648 0 R 2730 0 R 2783 0 R 2855 0 R]>>endobj2877 0 obj[2874 0 R]endobj2878 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2879 0 obj[2878 0 R 2880 0 R 2881 0 R 2882 0 R 2883 0 R 2885 0 R 2887 0 R 2888 0 R 2889 0 R 2890 0 R 2891 0 R]endobj2880 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2839 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_68.html)/S/URI>>/Border[0 0 0]>>endobj2881 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2903 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_70.html)/S/URI>>/Border[0 0 0]>>endobj2882 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2883 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2884 0 obj[2875 0 R/XYZ 0 731.2 null]endobj2885 0 obj<</Rect[10.0 693.431 58.4615 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC76)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC76)/S/URI>>/Border[0 0 0]>>endobj2886 0 obj[2875 0 R/XYZ 0 671.815 null]endobj2887 0 obj<</Rect[65.608 464.546 88.162 479.546]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2888 0 obj<</Rect[95.162 464.546 143.378 479.546]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2839 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_68.html)/S/URI>>/Border[0 0 0]>>endobj2889 0 obj<</Rect[150.378 464.546 174.486 479.546]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2903 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_70.html)/S/URI>>/Border[0 0 0]>>endobj2890 0 obj<</Rect[181.486 464.546 200.932 479.546]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2891 0 obj<</Rect[251.094 464.546 343.634 479.546]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2892 0 obj<</Length 3357>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - apply)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
0.814 w 
10 695.805 m
58.462 695.805 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.2479 Tm
(apply)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7235 Tm
(The procedure )Tj
/T1_2 1 Tf
(apply)Tj
/T1_0 1 Tf
( allows you to call any procedure, and specify a list of values to be pa\ssed as )Tj
0 -1.205 TD
(arguments. )Tj
/T1_2 1 Tf
(apply)Tj
/T1_0 1 Tf
( takes a procedure and a list of values, and then calls the procedure wi\th those values )Tj
0 -1.2 TD
(as arguments. )Tj
0 -2.562 TD
(For example, )Tj
/T1_2 1 Tf
(\(apply + '\(1 2\)\))Tj
/T1_0 1 Tf
( passes the values )Tj
/T1_2 1 Tf
(1)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(2)Tj
/T1_0 1 Tf
( to )Tj
/T1_2 1 Tf
(+)Tj
/T1_0 1 Tf
(, and is equivalent to )Tj
/T1_2 1 Tf
(\(+ 1 2\))Tj
/T1_0 1 Tf
(. )Tj
T*
(You'll seldom need to use )Tj
/T1_2 1 Tf
(apply)Tj
/T1_0 1 Tf
(, because normal procedure calling works fine in most situations. )Tj
0 -1.2 TD
(Occasionally, though, it is convenient to be able to apply a procedure t\o a list of values that have already )Tj
T*
(been computed. \(I'll show an example in [ chapter 4? ].\) )Tj
ET
0.5 0.5 0.5 rg
10 487.946 m
10 489.946 l
602 489.946 l
601 488.946 l
11 488.946 l
11 488.946 l
h
f
0.875 0.875 0.875 rg
602 489.946 m
602 487.946 l
10 487.946 l
11 488.946 l
601 488.946 l
601 488.946 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 468.9214 Tm
(Go to the )Tj
ET
0.706 w 
65.608 466.805 m
88.162 466.805 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 468.9214 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 466.805 m
143.378 466.805 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 468.9214 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 466.805 m
174.486 466.805 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 468.9214 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 466.805 m
200.932 466.805 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 468.9214 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 466.805 m
343.634 466.805 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 468.9214 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_69.html11/3/2006 9:0\3:23 PM)Tj
ET
EMC 

endstreamendobj2893 0 obj(An Introduction to Scheme and its Implementation - apply)endobj2894 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_69.html)/S 700 0 R>>endobj2895 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_69.html)endobj2896 0 obj(5ójÜøUÄº‚≥ï¯≥c@)endobj2897 0 obj<</TS(D:20061104050323)/ID 2896 0 R/CT(text/html)/O[2875 0 R]/S/SPS/T 2893 0 R/TID 2899 0 R/SI 2898 0 R>>endobj2898 0 obj<</TS(D:20061104050323)/AU 2895 0 R>>endobj2899 0 obj(è\\◊´\)Y—úÑkI6êô4á)endobj2900 0 obj<</Parent 710 0 R/Next 2935 0 R/Dest[2875 0 R/XYZ 0 792 null]/Prev 2872 0 R/SE 2874 0 R/Title(An Introduction to Scheme and its Implementation - apply)>>endobj2901 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2902 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 2918 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 2903 0 R>>endobj2903 0 obj<</Annots 2906 0 R/Parent 2967 0 R/ID 2931 0 R/StructParents 126/Contents 2926 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 737 0 R/T1_3 766 0 R/T1_4 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2904 0 obj[2902 0 R]endobj2905 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2906 0 obj[2905 0 R 2907 0 R 2908 0 R 2909 0 R 2910 0 R 2912 0 R 2916 0 R 2917 0 R]endobj2907 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2875 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_69.html)/S/URI>>/Border[0 0 0]>>endobj2908 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2938 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_71.html)/S/URI>>/Border[0 0 0]>>endobj2909 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2910 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2911 0 obj[2903 0 R/XYZ 0 731.2 null]endobj2912 0 obj<</Rect[10.0 689.877 222.203 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC77)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC77)/S/URI>>/Border[0 0 0]>>endobj2913 0 obj[2903 0 R/XYZ 0 667.938 null]endobj2914 0 obj[2903 0 R/XYZ 0 667.938 null]endobj2915 0 obj[2903 0 R/XYZ 0 667.938 null]endobj2916 0 obj<</Rect[50.0 651.538 188.404 666.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(~}9≈ø\nDÕ;Ïƒ-OSEC78)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_71.html#SEC78)/S/URI>>/Border[0 0 0]>>endobj2917 0 obj<</Rect[50.0 632.738 238.986 647.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(\rmT#^_•ò—Åq∞∂tSEC79)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_72.html#SEC79)/S/URI>>/Border[0 0 0]>>endobj2918 0 obj<</Annots 2921 0 R/Parent 2967 0 R/ID 2931 0 R/StructParents 127/Contents 2927 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2919 0 obj[2902 0 R]endobj2920 0 obj<</Rect[65.608 681.0 88.162 696.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2921 0 obj[2920 0 R 2922 0 R 2923 0 R 2924 0 R 2925 0 R]endobj2922 0 obj<</Rect[95.162 681.0 143.378 696.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2875 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_69.html)/S/URI>>/Border[0 0 0]>>endobj2923 0 obj<</Rect[150.378 681.0 174.486 696.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2938 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_71.html)/S/URI>>/Border[0 0 0]>>endobj2924 0 obj<</Rect[181.486 681.0 200.932 696.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2925 0 obj<</Rect[251.094 681.0 343.634 696.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2926 0 obj<</Length 4530>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Variable Binding Agai\n)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
222.203 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Variable Binding Again)Tj
0 0 0 rg
/T1_2 1 Tf
7 0 0 7 35.713 655.914 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
50 653.797 m
188.404 653.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 655.914 Tm
(Identifiers and Variables)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 637.114 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 634.997 m
238.986 634.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 637.114 Tm
(Variables vs. Bindings vs. Values)Tj
0 0 0 rg
( )Tj
-2.857 -2.7 Td
(So far, I've sometimes casually talked about variables holding values, b\ut that's not quite right. Variables )Tj
0 -1.2 TD
(are bound to storage, and storage holds values. )Tj
0 -2.557 TD
(I've also sometimes casually talked about fetching "the value of a varia\ble," but that's really just a )Tj
0 -1.2 TD
(shorthand for fetching the value of the )Tj
/T1_3 1 Tf
(current binding)Tj
/T1_0 1 Tf
( of a variable, from the )Tj
/T1_3 1 Tf
(current environment)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Consider what happens when we define a variable )Tj
/T1_4 1 Tf
(foo)Tj
/T1_0 1 Tf
( with the definition )Tj
/T1_4 1 Tf
(\(define foo 10\))Tj
/T1_0 1 Tf
(. We )Tj
0 -1.2 TD
(can draw the binding of the variable in this way: )Tj
/T1_4 1 Tf
0 -2.562 TD
(     +-----+)Tj
0 -1.2 TD
( foo |  *--+---> 10)Tj
T*
(     +-----+)Tj
/T1_0 1 Tf
0 -2.557 TD
(When speaking precisely, we say that the variable )Tj
/T1_4 1 Tf
(foo)Tj
/T1_0 1 Tf
( is )Tj
/T1_3 1 Tf
(bound)Tj
/T1_0 1 Tf
( to the memory location represented by )Tj
0 -1.2 TD
(the box on the left. )Tj
/T1_3 1 Tf
(Binding)Tj
/T1_0 1 Tf
( just means making an association between a name and something. \(There \are )Tj
T*
(several senses of "binding"---it's a very general word--but in this book\, I'm generally talking about )Tj
T*
(associating program variables with actual storage.\) )Tj
0 -2.557 TD
(For brevity, we refer to the location as the variable's )Tj
/T1_3 1 Tf
(binding)Tj
/T1_0 1 Tf
(, but binding is really the relationship )Tj
0 -1.2 TD
(between the name and the storage it names. )Tj
0 -2.557 TD
(In Scheme terminology, we talk about "bindings" as distinct from variabl\es, because they are two )Tj
0 -1.2 TD
(different things. This is true in most other languages as well \(e.g., C\ and Pascal\), but usually people )Tj
0 -1.2 TD
(don't make the distinction explicit. They'll refer to a program variable\ as a variable, but they'll also call )Tj
0 -1.2 TD
(the storage allocated for a particular instance of that variable a "vari\able." Usually, experienced )Tj
0 -1.2 TD
(programmers aren't confused by this. )Tj
0 -2.557 TD
(In this book, I try to be a little more precise, because the distinction\ between variables and bindings is )Tj
0 -1.2 TD
(especially important in discussing advanced topics that will come up lat\er. For now, rest assured that )Tj
T*
(there's nothing really unusual here--when I distinguish between variable\s and bindings, that's applicable )Tj
T*
(to most programming languages, not just Scheme. I'm just giving a name t\o something you probably )Tj
T*
(already know. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_70.html \(1 of 2\)11\/3/2006 9:03:28 PM)Tj
ET
EMC 

endstreamendobj2927 0 obj<</Length 1624>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Variable Binding Agai\n)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(\(So far, we haven't seen anything really special about Scheme variables\ and bindings, except that the )Tj
0 -1.2 TD
(values in bindings are always pointers.\) )Tj
ET
0.5 0.5 0.5 rg
10 704.4 m
10 706.4 l
602 706.4 l
601 705.4 l
11 705.4 l
11 705.4 l
h
f
0.875 0.875 0.875 rg
602 706.4 m
602 704.4 l
10 704.4 l
11 705.4 l
601 705.4 l
601 705.4 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 685.3755 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 683.259 m
88.162 683.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 685.3755 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 683.259 m
143.378 683.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 685.3755 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 683.259 m
174.486 683.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 685.3755 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 683.259 m
200.932 683.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 685.3755 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 683.259 m
343.634 683.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 685.3755 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_70.html \(2 of 2\)11\/3/2006 9:03:28 PM)Tj
ET
EMC 

endstreamendobj2928 0 obj(An Introduction to Scheme and its Implementation - Variable Binding Again)endobj2929 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_70.html)/S 700 0 R>>endobj2930 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_70.html)endobj2931 0 obj('	Kπg™zRF†gn¨±ñ)endobj2932 0 obj<</TS(D:20061104050328)/ID 2931 0 R/CT(text/html)/O[2903 0 R 2918 0 R]/S/SPS/T 2928 0 R/TID 2934 0 R/SI 2933 0 R>>endobj2933 0 obj<</TS(D:20061104050328)/AU 2930 0 R>>endobj2934 0 obj(=ã6Ô‡r¥=	/#^5ﬂ;)endobj2935 0 obj<</Parent 710 0 R/Next 2963 0 R/Dest[2903 0 R/XYZ 0 792 null]/Prev 2900 0 R/SE 2902 0 R/Title(An Introduction to Scheme and its Implementation - Variable Binding Again)>>endobj2936 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2937 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 2938 0 R>>endobj2938 0 obj<</Annots 2943 0 R/Parent 2967 0 R/ID 2959 0 R/StructParents 128/Contents 2955 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2939 0 obj[2937 0 R]endobj2940 0 obj<</Limits[64 95]/Nums[64 1826 0 R 65 1839 0 R 66 1841 0 R 67 1843 0 R 68 1865 0 R 69 1877 0 R 70 1898 0 R 71 1924 0 R 72 1950 0 R 73 1977 0 R 74 2004 0 R 75 2032 0 R 76 2060 0 R 77 2087 0 R 78 2102 0 R 79 2111 0 R 80 2114 0 R 81 2117 0 R 82 2125 0 R 83 2127 0 R 84 2132 0 R 85 2135 0 R 86 2163 0 R 87 2193 0 R 88 2220 0 R 89 2233 0 R 90 2255 0 R 91 2282 0 R 92 2295 0 R 93 2315 0 R 94 2341 0 R 95 2373 0 R]>>endobj2941 0 obj<</Limits[96 160]/Nums[]>>endobj2942 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2943 0 obj[2942 0 R 2944 0 R 2945 0 R 2946 0 R 2947 0 R 2949 0 R 2950 0 R 2951 0 R 2952 0 R 2953 0 R 2954 0 R]endobj2944 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2903 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_70.html)/S/URI>>/Border[0 0 0]>>endobj2945 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2966 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_72.html)/S/URI>>/Border[0 0 0]>>endobj2946 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2947 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2948 0 obj[2938 0 R/XYZ 0 731.2 null]endobj2949 0 obj<</Rect[10.0 693.431 196.738 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC78)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC78)/S/URI>>/Border[0 0 0]>>endobj2950 0 obj<</Rect[65.608 395.011 88.162 410.011]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2951 0 obj<</Rect[95.162 395.011 143.378 410.011]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2903 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_70.html)/S/URI>>/Border[0 0 0]>>endobj2952 0 obj<</Rect[150.378 395.011 174.486 410.011]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2966 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_72.html)/S/URI>>/Border[0 0 0]>>endobj2953 0 obj<</Rect[181.486 395.011 200.932 410.011]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2954 0 obj<</Rect[251.094 395.011 343.634 410.011]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2955 0 obj<</Length 3840>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Identifiers and Varia\bles)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
196.738 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Identifiers and Variables)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7235 Tm
(In isolation, a textual identifier \(name\) such us as )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
( isn't even a variable. )Tj
0 -2.557 TD
(The static scoping structure of a program gives names a certain aspect o\f meaning, and the dynamic )Tj
0 -1.2 TD
(execution of the program gives them more meaning. )Tj
0 -2.562 TD
(In isolation, )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
( doesn't mean anything. Used in a program, it can be the name of a )Tj
/T1_3 1 Tf
(variable)Tj
/T1_0 1 Tf
(. At )Tj
0 -1.2 TD
(different places in a program, it can be the name of )Tj
/T1_3 1 Tf
(different)Tj
/T1_0 1 Tf
( variables, e.g., a toplevel variable, or a local )Tj
T*
(variable in one or more procedures. )Tj
0 -2.562 TD
(In Scheme an identifier such as )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
( may not represent a variable at all. In the )Tj
/T1_2 1 Tf
(quote)Tj
/T1_0 1 Tf
( expressions )Tj
/T1_2 1 Tf
('foo)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(and )Tj
/T1_2 1 Tf
('\(baz foo bar\))Tj
/T1_0 1 Tf
( it identifies a symbol object, but in an entirely different sense than \variable )Tj
T*
(binding. It doesn't name a variable )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
(, or a variable whose binding holds a pointer to )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
(---it is a )Tj
0 -1.205 TD
(literal representation of a pointer to the unique symbol object whose pr\inted representation is )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
(. )Tj
ET
0.5 0.5 0.5 rg
10 418.411 m
10 420.411 l
602 420.411 l
601 419.411 l
11 419.411 l
11 419.411 l
h
f
0.875 0.875 0.875 rg
602 420.411 m
602 418.411 l
10 418.411 l
11 419.411 l
601 419.411 l
601 419.411 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 399.3866 Tm
(Go to the )Tj
ET
0.706 w 
65.608 397.27 m
88.162 397.27 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 399.3866 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 397.27 m
143.378 397.27 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 399.3866 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 397.27 m
174.486 397.27 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 399.3866 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 397.27 m
200.932 397.27 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 399.3866 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 397.27 m
343.634 397.27 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 399.3866 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_71.html11/3/2006 9:0\3:32 PM)Tj
ET
EMC 

endstreamendobj2956 0 obj(An Introduction to Scheme and its Implementation - Identifiers and Variables)endobj2957 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_71.html)/S 700 0 R>>endobj2958 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_71.html)endobj2959 0 obj(~}9≈ø\nDÕ;Ïƒ-O)endobj2960 0 obj<</TS(D:20061104050332)/ID 2959 0 R/CT(text/html)/O[2938 0 R]/S/SPS/T 2956 0 R/TID 2962 0 R/SI 2961 0 R>>endobj2961 0 obj<</TS(D:20061104050332)/AU 2958 0 R>>endobj2962 0 obj(Õ%ú8b^@˙^…ª J)endobj2963 0 obj<</Parent 710 0 R/Next 3004 0 R/Dest[2938 0 R/XYZ 0 792 null]/Prev 2935 0 R/SE 2937 0 R/Title(An Introduction to Scheme and its Implementation - Identifiers and Variables)>>endobj2964 0 obj<</TextDecorationType/Underline/O/Layout>>endobj2965 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 2977 0 R/Type/MCR>><</MCID 0/Pg 2979 0 R/Type/MCR>><</MCID 0/Pg 2984 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 2966 0 R>>endobj2966 0 obj<</Annots 2970 0 R/Parent 3020 0 R/ID 3000 0 R/StructParents 129/Contents 2993 0 R/PZ 1.03464/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2967 0 obj<</Parent 3384 0 R/Count 5/Type/Pages/Kids[2854 0 R 2875 0 R 2903 0 R 2918 0 R 2938 0 R]>>endobj2968 0 obj[2965 0 R]endobj2969 0 obj<</Rect[63.4114 750.417 85.2103 764.915]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2970 0 obj[2969 0 R 2971 0 R 2972 0 R 2973 0 R 2974 0 R 2976 0 R]endobj2971 0 obj<</Rect[91.9759 750.417 138.578 764.915]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2938 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_71.html)/S/URI>>/Border[0 0 0]>>endobj2972 0 obj<</Rect[145.343 750.417 168.644 764.915]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3007 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_73.html)/S/URI>>/Border[0 0 0]>>endobj2973 0 obj<</Rect[175.41 750.417 194.205 764.915]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2974 0 obj<</Rect[242.687 750.417 332.129 764.915]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2975 0 obj[2966 0 R/XYZ 0 732.633 null]endobj2976 0 obj<</Rect[9.66519 696.128 256.991 712.708]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC79)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC79)/S/URI>>/Border[0 0 0]>>endobj2977 0 obj<</Parent 3020 0 R/ID 3000 0 R/StructParents 130/Contents 2994 0 R/PZ 1.03464/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2978 0 obj[2965 0 R]endobj2979 0 obj<</Annots 2983 0 R/Parent 3020 0 R/ID 3000 0 R/StructParents 131/Contents 2995 0 R/PZ 1.03464/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2980 0 obj[2965 0 R]endobj2981 0 obj[2979 0 R/XYZ 0 171.057 null]endobj2982 0 obj<</Rect[323.807 166.828 339.585 181.326]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_foot.html#FOOT5)/S/URI>>/Border[0 0 0]>>endobj2983 0 obj[2982 0 R]endobj2984 0 obj<</Annots 2987 0 R/Parent 3020 0 R/ID 3000 0 R/StructParents 132/Contents 2996 0 R/PZ 1.03464/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 737 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj2985 0 obj[2965 0 R]endobj2986 0 obj<</Rect[221.254 352.211 460.635 366.709]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(π,ã’…6~|7´ò\r`-SEC107)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_100.html#SEC107)/S/URI>>/Border[0 0 0]>>endobj2987 0 obj[2986 0 R 2988 0 R 2989 0 R 2990 0 R 2991 0 R 2992 0 R]endobj2988 0 obj<</Rect[63.4114 300.212 85.2103 314.71]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj2989 0 obj<</Rect[91.9759 300.212 138.578 314.71]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2938 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_71.html)/S/URI>>/Border[0 0 0]>>endobj2990 0 obj<</Rect[145.343 300.212 168.644 314.71]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3007 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_73.html)/S/URI>>/Border[0 0 0]>>endobj2991 0 obj<</Rect[175.41 300.212 194.205 314.71]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj2992 0 obj<</Rect[242.687 300.212 332.129 314.71]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj2993 0 obj<</Length 4637>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.3013 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.6987 0 0 8.6987 18 780.3987 Tm
(An Introduction to Scheme and its Implementation - Variables vs. Binding\s vs. Values)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 9.6652 754.646 Tm
(Go to the )Tj
ET
0 0 1 RG
0.682 w 10 M 0 j 0 J []0 d 
63.411 752.6 m
85.21 752.6 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 63.4114 754.646 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
91.976 752.6 m
138.578 752.6 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 91.9759 754.646 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
145.343 752.6 m
168.644 752.6 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 145.3432 754.646 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
175.41 752.6 m
194.205 752.6 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 175.4097 754.646 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
242.687 752.6 m
332.129 752.6 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 242.6872 754.646 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
9.665 739.399 m
9.665 741.332 l
602.335 741.332 l
601.368 740.365 l
10.632 740.365 l
10.632 740.365 l
h
f
0.875 0.875 0.875 rg
602.335 741.332 m
602.335 739.399 l
9.665 739.399 l
10.632 740.365 l
601.368 740.365 l
601.368 740.365 l
h
f
1.311 w 
9.665 696.654 m
256.991 696.654 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.613 0 0 15.613 9.6652 700.5887 Tm
(Variables vs. Bindings vs. Values)Tj
0 0 0 rg
/T1_0 1 Tf
13.5313 0 0 13.5313 9.6652 663.6147 Tm
(The distinction between variables, bindings, and values is particularly \important in Scheme, and important )Tj
0 -1.2 TD
(for understanding interpreters and compilers, so I'll take a little time\ to discuss it with examples. )Tj
0 -2.557 TD
(What is this distinction? Why not just say that the variable holds a val\ue, i.e., why not call the unit of )Tj
0 -1.2 TD
(storage a variable? Because that's not right. Consider the following sho\rt program. )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(double x\)        ; define a procedure that doubles its argum\ent)Tj
0 -1.2 TD
(   \(+ x x\)\)            )Tj
0 -2.4 TD
(\(define \(quadruple x\)     ; define a procedure that quadruples)Tj
0 -1.2 TD
(   \(+ \(double x\)          ; its argument.)Tj
T*
(      \(double x\)\)\))Tj
0 -2.4 TD
(\(define \(foo x\)           ; define a recursive procedure that calls)Tj
0 -1.2 TD
(   \(if \(> x 0\)            ; itself if its argument is more than 0,)Tj
T*
(       \(foo \(- x 1\)\)\)     ; handing the recursive call an argument)Tj
T*
(                          ; that's one less.)Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that we've defined three procedures, )Tj
/T1_2 1 Tf
(double)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(quadruple)Tj
/T1_0 1 Tf
(, and )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
(, each of which has a local )Tj
0 -1.205 TD
(\(argument\) variable )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
(. \(An argument variable is just a local variable that gets its initial \value in a special )Tj
0 -1.2 TD
(way, passed from the caller of the procedure.\) )Tj
0 -2.562 TD
(There are therefore )Tj
/T1_3 1 Tf
(three different variables named)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( in this code. In each of the procedures, it means )Tj
0 -1.205 TD
(something different. Each procedure defines a different meaning for the \name )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
(, and each separate meaning )Tj
0 -1.2 TD
(is a different variable. )Tj
0 -2.562 TD
(This becomes obvious when we talk about "the variable )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( defined in the procedure )Tj
/T1_2 1 Tf
(double)Tj
/T1_0 1 Tf
(" versus "the )Tj
0 -1.205 TD
(variable )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( in the procedure )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
(," and so on. )Tj
0 -2.557 TD
(We could change the names of variables, so that every variable has a dif\ferent name, without changing the )Tj
0 -1.2 TD
(meaning of any of the procedure definitions. Wherever two different vari\ables have the same name, we can )Tj
T*
(change one of them to something else, as long as we change all reference\s in the scope of that variable to the )Tj
T*
(new name. )Tj
0 -2.557 TD
(In the example above, we might change each variable x to x1, x2, or x3, \and change all uses within its scope )Tj
0 -1.2 TD
(to use the new name: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(double x1\)        ; define a procedure that doubles its argu\ment)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.3013 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.6987 0 0 8.6987 18 7.3987 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_72.html \(1 of 4\)11\/3/2006 9:03:37 PM)Tj
ET
EMC 

endstreamendobj2994 0 obj<</Length 4183>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.3013 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.6987 0 0 8.6987 18 780.3987 Tm
(An Introduction to Scheme and its Implementation - Variables vs. Binding\s vs. Values)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.5313 0 0 13.5313 9.6652 754.5809 Tm
(   \(+ x2 x3\)\)            )Tj
0 -2.4 TD
(\(define \(quadruple x2\)     ; define a procedure that quadruples)Tj
0 -1.2 TD
(   \(+ \(double x2\)          ; its argument.)Tj
T*
(      \(double x2\)\)\))Tj
0 -2.4 TD
(\(define \(foo x3\)           ; define a recursive procedure that calls)Tj
0 -1.2 TD
(   \(if \(> x3 0\)            ; itself if its argument is more than 0,)Tj
T*
(       \(foo \(- x3 1\)\)\)     ; handing the recursive call an argument\)Tj
T*
(                          ; that's one less.)Tj
/T1_0 1 Tf
0 -2.552 TD
(This makes it clearer that each of the variables is a different thing, b\ut it doesn't change what the procedures )Tj
0 -1.2 TD
(do, because the normal scope rules of the language have the same effect.\ )Tj
0 -2.557 TD
(Notice also that when we define the procedures, there is no storage allo\cated for their local variables; the )Tj
0 -1.205 TD
(variables named )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( in the procedures are just definitions--no space will be allocated for \them until the )Tj
0 -1.2 TD
(procedures are actually )Tj
/T1_2 1 Tf
(called)Tj
/T1_0 1 Tf
(. That's when binding happens--some storage is allocated at run time to \hold )Tj
T*
(the value. )Tj
0 -2.557 TD
(\(Bear in mind that this happens in other languages too, even if people \don't discuss it clearly--for example, a )Tj
0 -1.2 TD
(C argument variable is bound when you enter the procedure, because sudde\nly space is allocated for it and )Tj
T*
(the name refers to that space.\) )Tj
0 -2.557 TD
(When we call something a "variable," that's )Tj
/T1_2 1 Tf
(not)Tj
/T1_0 1 Tf
( because we can assign to it and change its value. None of )Tj
0 -1.2 TD
(the above variables has a value that varies in that sense; none of these\ procedures happens to modify the )Tj
T*
(values they're given as arguments. In some languages, such as pure funct\ional languages, you can't do )Tj
T*
(assignment at all, but those languages still have variables. )Tj
0 -2.557 TD
(In programming language terminology, the term "variable" means pretty mu\ch what it means in )Tj
0 -1.2 TD
(mathematics--at different times we invoke the same procedure and the var\iable will refer to something )Tj
0 -1.205 TD
(different. For example, I may call )Tj
/T1_1 1 Tf
(double)Tj
/T1_0 1 Tf
( with the argument )Tj
/T1_1 1 Tf
(10)Tj
/T1_0 1 Tf
(, and while executing in that call to )Tj
/T1_1 1 Tf
0 -1.205 TD
(double)Tj
/T1_0 1 Tf
(, the value of )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( will be )Tj
/T1_1 1 Tf
(10)Tj
/T1_0 1 Tf
(. Later, I may call )Tj
/T1_1 1 Tf
(double)Tj
/T1_0 1 Tf
( with the value )Tj
/T1_1 1 Tf
(500)Tj
/T1_0 1 Tf
(, and while executing in )Tj
/T1_2 1 Tf
0 -1.205 TD
(that)Tj
/T1_0 1 Tf
( call the value of )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( will be )Tj
/T1_1 1 Tf
(500)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Consider how similar this is to variables in logic. I may have a logical\ statement that "for all )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
(, if )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( is a )Tj
0 -1.2 TD
(person then )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( is mortal". \(Forall x, person\(x\) -> mortal\(x\)\). I can use the sam\e logical rule \(statement\) and )Tj
T*
(apply it to lots of things. )Tj
0 -2.557 TD
(If Socrates is a person then Socrates is mortal, and if Bill Clinton is \a person then Bill Clinton is mortal, and )Tj
0 -1.2 TD
(so on. \(Or even, if my car is human then my car is mortal.\) )Tj
0 -2.557 TD
(Each time I use it, )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( may refer to a different thing, and that's why it's called a )Tj
/T1_2 1 Tf
(variable)Tj
/T1_0 1 Tf
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.3013 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.6987 0 0 8.6987 18 7.3987 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_72.html \(2 of 4\)11\/3/2006 9:03:37 PM)Tj
ET
EMC 

endstreamendobj2995 0 obj<</Length 5063>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.3013 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.6987 0 0 8.6987 18 780.3987 Tm
(An Introduction to Scheme and its Implementation - Variables vs. Binding\s vs. Values)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 9.6652 754.646 Tm
(Just because it's a variable doesn't mean that when I use it I change th\e state of the thing I use it to refer to--)Tj
0 -1.2 TD
(for example, Bill Clinton is probably not modified much by the fact that\ I'm inferring something about him, )Tj
T*
(and I'm pretty sure Socrates isn't changed much at all by the experience\. )Tj
0 -2.557 TD
(It also doesn't mean that the meaning of a variable changes from instant\ to instant. If I use the rule above, )Tj
0 -1.2 TD
(and apply it to Socrates, saying "if Socrates is a person then Socrates \is mortal", )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( consistently refers to )Tj
T*
(Socrates--that's the point. But I can also say that "if Bill Clinton is \a person then Bill Clinton is mortal." In )Tj
T*
(that case )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( refers consistently to Bill Clinton. In logic, we say that in one case \)Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( is )Tj
/T1_1 1 Tf
(bound to)Tj
/T1_0 1 Tf
( Socrates, but )Tj
T*
(then used consistently within the rule; and in the other, we say it's bo\und to Bill Clinton, and then used )Tj
T*
(consistently within the rule. )Tj
0 -2.557 TD
(The point here is that the same variable can refer to different things a\t different times. These different things )Tj
0 -1.2 TD
(are called )Tj
/T1_1 1 Tf
(bindings)Tj
/T1_0 1 Tf
(, because the variable is associated with \("bound to"\) something diffe\rent each time. )Tj
0 -2.562 TD
(Consider the recursive procedure )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
(, above. In a recursive procedure, the same variable may be bound to )Tj
/T1_1 1 Tf
0 -1.205 TD
(different)Tj
/T1_0 1 Tf
( things at the )Tj
/T1_1 1 Tf
(same time)Tj
/T1_0 1 Tf
(. Suppose I call )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
( with the argument )Tj
/T1_2 1 Tf
(15)Tj
/T1_0 1 Tf
(, and it binds its argument )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( and )Tj
0 -1.205 TD
(gives the binding the initial value )Tj
/T1_2 1 Tf
(15)Tj
/T1_0 1 Tf
(. Then it examines that value, and calls itself with the argument )Tj
/T1_2 1 Tf
(14)Tj
/T1_0 1 Tf
(. )Tj
0 -1.205 TD
(The recursive call binds its argument )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( with the value )Tj
/T1_2 1 Tf
(14)Tj
/T1_0 1 Tf
(, then examines that and calls itself with the value )Tj
/T1_2 1 Tf
0 -1.205 TD
(13)Tj
/T1_0 1 Tf
(, and so on. )Tj
0 -2.562 TD
(At each recursive call, a new )Tj
/T1_1 1 Tf
(binding)Tj
/T1_0 1 Tf
( of )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( is created, even if the old bindings still exist, because the earlier )Tj
0 -1.2 TD
(calls haven't finished yet--they're suspended for the duration of the re\cursion. )Tj
0 -2.557 TD
(When there are multiple bindings in existence at the same time, only one\ one is "visible" as a procedure )Tj
0 -1.2 TD
(executes. For example, in a recursive set of calls to a procedure, only \one binding is "in scope," that is, )Tj
T*
(visible\) to an executing procedure--the binding for that call. We call \this the )Tj
/T1_1 1 Tf
(current binding)Tj
/T1_0 1 Tf
( of the variable. )Tj
T*
(When a call returns, an older binding becomes visible again, and becomes\ the current binding. )Tj
0 -2.557 TD
(But what is a variable bound to, i.e., to what does a variable refer? In\ Scheme, it refers to a piece of )Tj
/T1_1 1 Tf
(storage)Tj
/T1_0 1 Tf
(. )Tj
0 -1.2 TD
(When you call a procedure, for example, each argument variable is bound \to a piece of storage that can hold )Tj
T*
(the argument value you pass. Inside that call to that procedure, that va\riable name will refer to that piece of )Tj
T*
(memory. )Tj
0 -2.557 TD
(A single binding of a Scheme variable may hold different values over tim\e, because of assignments, as in )Tj
0 -1.2 TD
(most procedural languages. So not only may the same variable be bound to\ different pieces of storage, but )Tj
T*
(each piece of storage may hold different values over time.)Tj
ET
0 0 1 RG
0.682 w 10 M 0 j 0 J []0 d 
323.807 169.012 m
339.585 169.012 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 323.8071 171.0574 Tm
(\(5\))Tj
0 0 0 rg
( )Tj
-23.216 -2.7 Td
(Sometimes people talk about binding a variable to a )Tj
/T1_1 1 Tf
(value)Tj
/T1_0 1 Tf
(, but in Scheme \(and other languages with )Tj
T*
(assignment\) this is not correct, and speaking in this sloppy way causes\ confusion. If you don't distinguish )Tj
T*
(between storage and values, you can't talk clearly about assignment. )Tj
0 -2.557 TD
(Always remember that there are )Tj
/T1_1 1 Tf
(three)Tj
/T1_0 1 Tf
( "one-to-many mappings" here: )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.3013 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.6987 0 0 8.6987 18 7.3987 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_72.html \(3 of 4\)11\/3/2006 9:03:37 PM)Tj
ET
EMC 

endstreamendobj2996 0 obj<</Length 3611>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.3013 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.6987 0 0 8.6987 18 780.3987 Tm
(An Introduction to Scheme and its Implementation - Variables vs. Binding\s vs. Values)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
6.7656 0 0 6.7656 34.5173 754.646 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.5313 0 0 13.5313 48.326 754.646 Tm
(a single name \(identifier\) can be used for different variables at diff\erent places in a program, or for a )Tj
0 -1.2 TD
(symbol )Tj
/T1_1 1 Tf
6.7656 0 0 6.7656 34.5173 722.1709 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.5313 0 0 13.5313 48.326 722.1709 Tm
(a given variable may be bound to different pieces of storage, e.g., at d\ifferent calls to the same )Tj
T*
(procedure, )Tj
/T1_1 1 Tf
6.7656 0 0 6.7656 34.5173 689.6959 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.5313 0 0 13.5313 48.326 689.6959 Tm
(a given binding may hold different values if you assign to it and change\ what's stored there. )Tj
-2.857 -2.557 Td
(To keep these terms straight, it's usually best to think about local var\iables; top-level or global variables are )Tj
T*
(a special case, because they only have one binding each. )Tj
0 -2.557 TD
(Top-level defines can be a little confusing in terms of the variable/bin\ding/value distinction, because they do )Tj
/T1_2 1 Tf
0 -1.2 TD
(three different)Tj
/T1_0 1 Tf
( things. They declare a variable that will be visible in a scope \(the t\op level scope\), they bind )Tj
T*
(they variable to new storage \(creating the top-level binding\), and the\y initialize that storage with an initial )Tj
T*
(value. )Tj
/T1_3 1 Tf
0 -2.562 TD
(==================================================================)Tj
0 -1.2 TD
(This is the end of Hunk M.)Tj
0 -2.4 TD
(TIME TO TRY IT OUT)Tj
T*
(At this point, you should go read Hunk N of the next chapter)Tj
0 -1.2 TD
(and work through the examples using a running Scheme system.)Tj
T*
(Then return here and resume this chapter.)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Go to Hunk N, which starts at section )Tj
ET
0 0 1 RG
0.682 w 10 M 0 j 0 J []0 d 
221.254 354.394 m
460.635 354.394 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 221.2537 356.44 Tm
(Interactively Changing a Program \(Hunk N\))Tj
0 0 0 rg
(.\) )Tj
ET
0.5 0.5 0.5 rg
9.665 322.829 m
9.665 324.762 l
602.335 324.762 l
601.368 323.795 l
10.632 323.795 l
10.632 323.795 l
h
f
0.875 0.875 0.875 rg
602.335 324.762 m
602.335 322.829 l
9.665 322.829 l
10.632 323.795 l
601.368 323.795 l
601.368 323.795 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 9.6652 304.4413 Tm
(Go to the )Tj
ET
63.411 302.395 m
85.21 302.395 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 63.4114 304.4413 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
91.976 302.395 m
138.578 302.395 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 91.9759 304.4413 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
145.343 302.395 m
168.644 302.395 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 145.3432 304.4413 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
175.41 302.395 m
194.205 302.395 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 175.4097 304.4413 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
242.687 302.395 m
332.129 302.395 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.5313 0 0 13.5313 242.6872 304.4413 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.3013 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.6987 0 0 8.6987 18 7.3987 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_72.html \(4 of 4\)11\/3/2006 9:03:37 PM)Tj
ET
EMC 

endstreamendobj2997 0 obj(An Introduction to Scheme and its Implementation - Variables vs. Bindings vs. Values)endobj2998 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_72.html)/S 700 0 R>>endobj2999 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_72.html)endobj3000 0 obj(\rmT#^_•ò—Åq∞∂t)endobj3001 0 obj<</TS(D:20061104050337)/ID 3000 0 R/CT(text/html)/O[2966 0 R 2977 0 R 2979 0 R 2984 0 R]/S/SPS/T 2997 0 R/TID 3003 0 R/SI 3002 0 R>>endobj3002 0 obj<</TS(D:20061104050337)/AU 2999 0 R>>endobj3003 0 obj(AÑˆjå∞SJÔ€Œè+)endobj3004 0 obj<</Parent 710 0 R/Next 3037 0 R/Dest[2966 0 R/XYZ 0 792 null]/Prev 2963 0 R/SE 2965 0 R/Title(An Introduction to Scheme and its Implementation - Variables vs. Bindings vs. Values)>>endobj3005 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3006 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 3019 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 3007 0 R>>endobj3007 0 obj<</Annots 3010 0 R/Parent 3020 0 R/ID 3033 0 R/StructParents 133/Contents 3028 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R/T1_4 2791 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3008 0 obj[3006 0 R]endobj3009 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3010 0 obj[3009 0 R 3011 0 R 3012 0 R 3013 0 R 3014 0 R 3016 0 R]endobj3011 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2966 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_72.html)/S/URI>>/Border[0 0 0]>>endobj3012 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3040 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_74.html)/S/URI>>/Border[0 0 0]>>endobj3013 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3014 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3015 0 obj[3007 0 R/XYZ 0 731.2 null]endobj3016 0 obj<</Rect[10.0 689.877 230.81 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC80)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC80)/S/URI>>/Border[0 0 0]>>endobj3017 0 obj[3007 0 R/XYZ 0 667.938 null]endobj3018 0 obj[3007 0 R/XYZ 0 667.938 null]endobj3019 0 obj<</Annots 3023 0 R/Parent 3147 0 R/ID 3033 0 R/StructParents 134/Contents 3029 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3020 0 obj<</Parent 3384 0 R/Count 5/Type/Pages/Kids[2966 0 R 2977 0 R 2979 0 R 2984 0 R 3007 0 R]>>endobj3021 0 obj[3006 0 R]endobj3022 0 obj<</Rect[65.608 628.4 88.162 643.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3023 0 obj[3022 0 R 3024 0 R 3025 0 R 3026 0 R 3027 0 R]endobj3024 0 obj<</Rect[95.162 628.4 143.378 643.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[2966 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_72.html)/S/URI>>/Border[0 0 0]>>endobj3025 0 obj<</Rect[150.378 628.4 174.486 643.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3040 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_74.html)/S/URI>>/Border[0 0 0]>>endobj3026 0 obj<</Rect[181.486 628.4 200.932 643.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3027 0 obj<</Rect[251.094 628.4 343.634 643.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3028 0 obj<</Length 4764>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Tail Recursion)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
230.81 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Tail Recursion \(Hunk O\))Tj
0 0 0 rg
/T1_2 1 Tf
14 0 0 14 10 655.8466 Tm
(==================================================================)Tj
0 -1.2 TD
(Hunk O starts here:)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
(Many Scheme programs rely heavily on recursion, and Scheme makes it easy\ to use recursion in ways )Tj
0 -1.2 TD
(that aren't feasible in most other languages. In particular, you can wri\te )Tj
/T1_3 1 Tf
(recursive)Tj
/T1_0 1 Tf
( procedures which call )Tj
T*
(themselves instead of looping. )Tj
0 -2.557 TD
(When a procedure calls itself in a way that is equivalent to iterating a\ loop, Scheme automatically )Tj
0 -1.2 TD
("optimizes" it so that it doesn't need extra stack space. You can use re\cursion anywhere you could use a )Tj
T*
(loop in a conventional language. Technically, loop-like recursion is cal\led )Tj
/T1_3 1 Tf
(tail recursion)Tj
/T1_0 1 Tf
(, which we'll )Tj
T*
(explain in detail in a later chapter. )Tj
0 -2.557 TD
(The basic idea is that you never have to return to a procedure if all th\at procedure will do is return the )Tj
0 -1.2 TD
(same value ot )Tj
/T1_3 1 Tf
(its)Tj
/T1_0 1 Tf
( caller. For example, consider the following procedure definition: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(foo\))Tj
0 -1.2 TD
(   \(bar\))Tj
T*
(   \(baz\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(When )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
( calls )Tj
/T1_2 1 Tf
(baz)Tj
/T1_0 1 Tf
(, it is a tail call, because on return from )Tj
/T1_2 1 Tf
(baz)Tj
/T1_0 1 Tf
(, foo will do nothing except return the )Tj
0 -1.205 TD
(returned value to )Tj
/T1_3 1 Tf
(its)Tj
/T1_0 1 Tf
( caller. That is, the return to )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
( from )Tj
/T1_2 1 Tf
(baz)Tj
/T1_0 1 Tf
( will be immediately followed by a return )Tj
0 -1.205 TD
(to whatever procedure called )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
(. There's really no need to do )Tj
/T1_3 1 Tf
(two)Tj
/T1_0 1 Tf
( returns, passing through )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
( on the )Tj
0 -1.205 TD
(way back. Instead, Scheme avoids saving )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
('s state before the call to )Tj
/T1_2 1 Tf
(baz)Tj
/T1_0 1 Tf
(, so that )Tj
/T1_2 1 Tf
(baz)Tj
/T1_0 1 Tf
( can return )Tj
/T1_3 1 Tf
0 -1.205 TD
(directly to )Tj
/T1_4 1 Tf
(foo)Tj
/T1_3 1 Tf
('s caller)Tj
/T1_0 1 Tf
(, without actually coming back to )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Tail-calling allows recursion to be used for looping, because a tail cal\l that acts to iterates a loop doesn't )Tj
0 -1.2 TD
(save the caller's state on a stack. )Tj
0 -2.557 TD
(Scheme systems can implement such )Tj
/T1_3 1 Tf
(tail calls)Tj
/T1_0 1 Tf
( as a kind of GOTO that passes arguments, without saving )Tj
0 -1.2 TD
(the state of the caller. This is not unsafe, like language-level GOTO's,\ because it's only done when the )Tj
0 -1.2 TD
(result would be the same as doing the extra returns. )Tj
0 -2.557 TD
(Some compilers for languages such as Common Lisp and C perform a limited\ form of "tail call )Tj
0 -1.2 TD
(optimization," but Scheme's treatment of tail calls, is more general, an\d standardized, so you can use )Tj
T*
(recursion more freely in your programs, without fear of stack overflow i\f you code your routines tail-)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_73.html \(1 of 2\)11\/3/2006 9:03:43 PM)Tj
ET
EMC 

endstreamendobj3029 0 obj<</Length 1765>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Tail Recursion)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(recursively. )Tj
0 -2.557 TD
(And of course, you can use recursion the way you would in most languages\, as well as for loops, so )Tj
0 -1.2 TD
(recursion can do )Tj
/T1_1 1 Tf
(both)Tj
/T1_0 1 Tf
( jobs. While Scheme has conventional-looking looping constructs, they're\ defined )Tj
T*
(in terms of recursion. )Tj
ET
0.5 0.5 0.5 rg
10 651.8 m
10 653.8 l
602 653.8 l
601 652.8 l
11 652.8 l
11 652.8 l
h
f
0.875 0.875 0.875 rg
602 653.8 m
602 651.8 l
10 651.8 l
11 652.8 l
601 652.8 l
601 652.8 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 632.7756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 630.659 m
88.162 630.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 632.7756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 630.659 m
143.378 630.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 632.7756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 630.659 m
174.486 630.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 632.7756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 630.659 m
200.932 630.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 632.7756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 630.659 m
343.634 630.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 632.7756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_73.html \(2 of 2\)11\/3/2006 9:03:43 PM)Tj
ET
EMC 

endstreamendobj3030 0 obj(An Introduction to Scheme and its Implementation - Tail Recursion)endobj3031 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_73.html)/S 700 0 R>>endobj3032 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_73.html)endobj3033 0 obj(˛&‚!—IPÍ [[‚Xè”)endobj3034 0 obj<</TS(D:20061104050343)/ID 3033 0 R/CT(text/html)/O[3007 0 R 3019 0 R]/S/SPS/T 3030 0 R/TID 3036 0 R/SI 3035 0 R>>endobj3035 0 obj<</TS(D:20061104050343)/AU 3032 0 R>>endobj3036 0 obj(î_°ï\)2;mÑ°ßbe≤)endobj3037 0 obj<</Parent 710 0 R/Next 3064 0 R/Dest[3007 0 R/XYZ 0 792 null]/Prev 3004 0 R/SE 3006 0 R/Title(An Introduction to Scheme and its Implementation - Tail Recursion)>>endobj3038 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3039 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 3040 0 R>>endobj3040 0 obj<</Annots 3043 0 R/Parent 3147 0 R/ID 3060 0 R/StructParents 135/Contents 3056 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3041 0 obj[3039 0 R]endobj3042 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3043 0 obj[3042 0 R 3044 0 R 3045 0 R 3046 0 R 3047 0 R 3049 0 R 3051 0 R 3052 0 R 3053 0 R 3054 0 R 3055 0 R]endobj3044 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3007 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_73.html)/S/URI>>/Border[0 0 0]>>endobj3045 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3067 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_75.html)/S/URI>>/Border[0 0 0]>>endobj3046 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3047 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3048 0 obj[3040 0 R/XYZ 0 731.2 null]endobj3049 0 obj<</Rect[10.0 689.877 77.8655 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC81)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC81)/S/URI>>/Border[0 0 0]>>endobj3050 0 obj[3040 0 R/XYZ 0 667.938 null]endobj3051 0 obj<</Rect[65.608 288.538 88.162 303.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3052 0 obj<</Rect[95.162 288.538 143.378 303.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3007 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_73.html)/S/URI>>/Border[0 0 0]>>endobj3053 0 obj<</Rect[150.378 288.538 174.486 303.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3067 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_75.html)/S/URI>>/Border[0 0 0]>>endobj3054 0 obj<</Rect[181.486 288.538 200.932 303.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3055 0 obj<</Rect[251.094 288.538 343.634 303.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3056 0 obj<</Length 3882>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Macros)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
77.866 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Macros)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 655.914 Tm
(Scheme is very procedure-oriented, but procedures can't do everything, a\t least not in a way that is )Tj
0 -1.2 TD
(syntactically pretty and efficient. )Tj
0 -2.557 TD
(Sometimes you want to define your own control structures and data-defini\ng expressions that can't be )Tj
0 -1.2 TD
(clearly and efficiently expressed as procedures, and for this Scheme pro\vides a )Tj
/T1_2 1 Tf
(syntactic extension)Tj
/T1_0 1 Tf
( or )Tj
/T1_2 1 Tf
T*
(macro)Tj
/T1_0 1 Tf
( facility. )Tj
0 -2.557 TD
(With )Tj
/T1_2 1 Tf
(macros)Tj
/T1_0 1 Tf
(, you can define stereotyped pieces of code, and how to transform them f\or different )Tj
0 -1.2 TD
(purposes. )Tj
0 -2.557 TD
(You might have had bad experiences with macros in other languages, like \C, but Scheme's macro system )Tj
0 -1.2 TD
(is special. It's an extremely powerful mechanism for abstracting over pr\ograms and putting things )Tj
T*
(together in special ways. )Tj
0 -2.557 TD
(As we'll see in a later chapter, with Scheme macros you can effectively \reprogram the compiler to )Tj
0 -1.2 TD
(change the language and its implementation. This is not something you'll\ need to do often--most of the )Tj
T*
(time you'll do fine with normal programming and higher-order procedures-\-but sometimes it's extremely )Tj
T*
(useful for building your own extended version of Scheme to solve particu\lar kinds of problems, or for )Tj
T*
(automating tedious and repetitive aspects of program construction. )Tj
ET
0.5 0.5 0.5 rg
10 311.938 m
10 313.938 l
602 313.938 l
601 312.938 l
11 312.938 l
11 312.938 l
h
f
0.875 0.875 0.875 rg
602 313.938 m
602 311.938 l
10 311.938 l
11 312.938 l
601 312.938 l
601 312.938 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 292.914 Tm
(Go to the )Tj
ET
0.706 w 
65.608 290.797 m
88.162 290.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 292.914 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 290.797 m
143.378 290.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 292.914 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 290.797 m
174.486 290.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 292.914 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 290.797 m
200.932 290.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 292.914 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 290.797 m
343.634 290.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 292.914 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_74.html11/3/2006 9:0\3:47 PM)Tj
ET
EMC 

endstreamendobj3057 0 obj(An Introduction to Scheme and its Implementation - Macros)endobj3058 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_74.html)/S 700 0 R>>endobj3059 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_74.html)endobj3060 0 obj(ÅˆÜ'`{FAÜÕ©$Dó)endobj3061 0 obj<</TS(D:20061104050347)/ID 3060 0 R/CT(text/html)/O[3040 0 R]/S/SPS/T 3057 0 R/TID 3063 0 R/SI 3062 0 R>>endobj3062 0 obj<</TS(D:20061104050347)/AU 3059 0 R>>endobj3063 0 obj(7∞= ‡ÁE^àB◊ÜË8)endobj3064 0 obj<</Parent 710 0 R/Next 3091 0 R/Dest[3040 0 R/XYZ 0 792 null]/Prev 3037 0 R/SE 3039 0 R/Title(An Introduction to Scheme and its Implementation - Macros)>>endobj3065 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3066 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 3067 0 R>>endobj3067 0 obj<</Annots 3070 0 R/Parent 3147 0 R/ID 3087 0 R/StructParents 136/Contents 3083 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3068 0 obj[3066 0 R]endobj3069 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3070 0 obj[3069 0 R 3071 0 R 3072 0 R 3073 0 R 3074 0 R 3076 0 R 3077 0 R 3078 0 R 3079 0 R 3080 0 R 3081 0 R 3082 0 R]endobj3071 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3040 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_74.html)/S/URI>>/Border[0 0 0]>>endobj3072 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3094 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_76.html)/S/URI>>/Border[0 0 0]>>endobj3073 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3074 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3075 0 obj[3067 0 R/XYZ 0 731.2 null]endobj3076 0 obj<</Rect[10.0 689.877 140.303 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC82)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC82)/S/URI>>/Border[0 0 0]>>endobj3077 0 obj<</Rect[226.594 133.867 452.134 148.867]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(`æß\)¯Á8;∏úÆI7~SEC118)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#SEC118)/S/URI>>/Border[0 0 0]>>endobj3078 0 obj<</Rect[65.608 80.0667 88.162 95.0667]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3079 0 obj<</Rect[95.162 80.0667 143.378 95.0667]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3040 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_74.html)/S/URI>>/Border[0 0 0]>>endobj3080 0 obj<</Rect[150.378 80.0667 174.486 95.0667]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3094 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_76.html)/S/URI>>/Border[0 0 0]>>endobj3081 0 obj<</Rect[181.486 80.0667 200.932 95.0667]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3082 0 obj<</Rect[251.094 80.0667 343.634 95.0667]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3083 0 obj<</Length 4549>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Continuations)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
140.303 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Continuations)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 655.914 Tm
(Scheme has the usual control constructs that most languages have--condit\ionals \(if statements\), loops, )Tj
0 -1.205 TD
(and recursion--but it also has a very special control structure called )Tj
/T1_2 1 Tf
(call-with-current-)Tj
0 -1.205 TD
(continuation)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(\(Warning: )Tj
/T1_2 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
( is )Tj
/T1_3 1 Tf
(weird)Tj
/T1_0 1 Tf
(.\) )Tj
/T1_2 1 Tf
0 -2.562 TD
(call-with-current-continuation)Tj
/T1_0 1 Tf
( allows you to save the state of a computation, package it )Tj
0 -1.2 TD
(up as a data structure, and go off and do something else. Whenever you w\ant, you can restore the old )Tj
T*
(saved state, abandoning the current computation and and picking up where\ the saved computation left )Tj
T*
(off. )Tj
0 -2.557 TD
(This is far more powerful than normal procedure calling and returning, a\nd allows you to implement )Tj
0 -1.2 TD
(advanced control structures such as backtracking, cooperative multitaski\ng, and custom exception-)Tj
T*
(handling. )Tj
0 -2.562 TD
(You won't use )Tj
/T1_2 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
( most of the time, because more )Tj
0 -1.2 TD
(conventional control structures are usually sufficient. But if you need \to customize Scheme with a )Tj
0 -1.205 TD
(special control structure to solve a particular kind of problem, you can\ do it with )Tj
/T1_2 1 Tf
(call-with-)Tj
0 -1.205 TD
(current-continuation)Tj
/T1_0 1 Tf
(. )Tj
/T1_2 1 Tf
0 -2.562 TD
(==================================================================)Tj
0 -1.2 TD
(This is the end of Hunk O.)Tj
0 -2.4 TD
(TIME TO TRY IT OUT)Tj
T*
(At this point, you should go read Hunk P of the next chapter)Tj
0 -1.2 TD
(and work through the examples using a running Scheme system.)Tj
T*
(Then return here and resume this chapter.)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Go to Hunk P, which starts at section )Tj
ET
0.706 w 
226.594 136.125 m
452.134 136.125 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 226.594 138.2422 Tm
(Basic Programming Examples \(Hunk P\))Tj
0 0 0 rg
(.\) )Tj
ET
0.5 0.5 0.5 rg
10 103.467 m
10 105.467 l
602 105.467 l
601 104.467 l
11 104.467 l
11 104.467 l
h
f
0.875 0.875 0.875 rg
602 105.467 m
602 103.467 l
10 103.467 l
11 104.467 l
601 104.467 l
601 104.467 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 84.4423 Tm
(Go to the )Tj
ET
65.608 82.325 m
88.162 82.325 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 84.4423 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 82.325 m
143.378 82.325 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 84.4423 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 82.325 m
174.486 82.325 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 84.4423 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 82.325 m
200.932 82.325 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 84.4423 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 82.325 m
343.634 82.325 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 84.4423 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_75.html11/3/2006 9:0\3:53 PM)Tj
ET
EMC 

endstreamendobj3084 0 obj(An Introduction to Scheme and its Implementation - Continuations)endobj3085 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_75.html)/S 700 0 R>>endobj3086 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_75.html)endobj3087 0 obj(ÒTíÇ®P¢Çÿ+]∏»)endobj3088 0 obj<</TS(D:20061104050353)/ID 3087 0 R/CT(text/html)/O[3067 0 R]/S/SPS/T 3084 0 R/TID 3090 0 R/SI 3089 0 R>>endobj3089 0 obj<</TS(D:20061104050353)/AU 3086 0 R>>endobj3090 0 obj(UecﬂQû†‰¨]¸Á\n)endobj3091 0 obj<</Parent 710 0 R/Next 3117 0 R/Dest[3067 0 R/XYZ 0 792 null]/Prev 3064 0 R/SE 3066 0 R/Title(An Introduction to Scheme and its Implementation - Continuations)>>endobj3092 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3093 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 3094 0 R>>endobj3094 0 obj<</Annots 3097 0 R/Parent 3147 0 R/ID 3113 0 R/StructParents 137/Contents 3109 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3095 0 obj[3093 0 R]endobj3096 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3097 0 obj[3096 0 R 3098 0 R 3099 0 R 3100 0 R 3101 0 R 3103 0 R 3104 0 R 3105 0 R 3106 0 R 3107 0 R 3108 0 R]endobj3098 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3067 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_75.html)/S/URI>>/Border[0 0 0]>>endobj3099 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3120 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_77.html)/S/URI>>/Border[0 0 0]>>endobj3100 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3101 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3102 0 obj[3094 0 R/XYZ 0 731.2 null]endobj3103 0 obj<</Rect[10.0 689.877 194.173 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC83)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC83)/S/URI>>/Border[0 0 0]>>endobj3104 0 obj<</Rect[65.608 271.671 88.162 286.671]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3105 0 obj<</Rect[95.162 271.671 143.378 286.671]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3067 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_75.html)/S/URI>>/Border[0 0 0]>>endobj3106 0 obj<</Rect[150.378 271.671 174.486 286.671]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3120 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_77.html)/S/URI>>/Border[0 0 0]>>endobj3107 0 obj<</Rect[181.486 271.671 200.932 286.671]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3108 0 obj<</Rect[251.094 271.671 343.634 286.671]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3109 0 obj<</Length 4257>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Iteration Constructs)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
194.173 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Iteration Constructs)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 655.914 Tm
(You may have noticed that we haven't discussed iteration constructs much\. Scheme does include )Tj
0 -1.205 TD
(iteration constructs like )Tj
/T1_2 1 Tf
(do)Tj
/T1_0 1 Tf
(, which we'll describe later, but you'll use them less than in most othe\r )Tj
0 -1.2 TD
(languages. It's usually easier to use recursion, once you get the hang o\f it. When you do use iteration )Tj
T*
(constructs, you should also understand that they're really syntactic sug\ar for recursion. )Tj
0 -2.557 TD
(For most purposes, you can use Scheme's iteration constructs as you woul\d in other languages, but )Tj
0 -1.2 TD
(they're actually interestingly different. Scheme's iteration constructs \are really syntactic sugar for tail )Tj
T*
(recursion. Anything you can do iteratively, you can do with recursion, a\nd recursion lets you do other )Tj
T*
(things that normal iteration doesn't. )Tj
0 -2.557 TD
(The main difference between Scheme's iteration constructs and the ones y\ou may be used to is that loop )Tj
0 -1.2 TD
(variables aren't updated at each iteration. This doesn't mean you don't \have loop variables--the difference )Tj
T*
(is that loop variables are )Tj
/T1_3 1 Tf
(rebound)Tj
/T1_0 1 Tf
( at each iteration \(tail call\), rather than being bound once on entry \to )Tj
T*
(the loop, and updated \(assigned to\) at each iteration. )Tj
0 -2.557 TD
(\(Don't worry if this doesn't make sense yet--it will later, in the Chap\ter on recursion.\) )Tj
0 -2.557 TD
(It turns out that having a new binding of the loop variable at each iter\ation is very convenient when )Tj
0 -1.2 TD
(using first-class procedures and continuations. For example, if you crea\te a first-class procedure in a )Tj
T*
(loop body, it can continue to refer to the variable binding for the iter\ation of the loop that created it. )Tj
ET
0.5 0.5 0.5 rg
10 295.071 m
10 297.071 l
602 297.071 l
601 296.071 l
11 296.071 l
11 296.071 l
h
f
0.875 0.875 0.875 rg
602 297.071 m
602 295.071 l
10 295.071 l
11 296.071 l
601 296.071 l
601 296.071 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 276.0466 Tm
(Go to the )Tj
ET
0.706 w 
65.608 273.93 m
88.162 273.93 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 276.0466 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 273.93 m
143.378 273.93 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 276.0466 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 273.93 m
174.486 273.93 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 276.0466 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 273.93 m
200.932 273.93 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 276.0466 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 273.93 m
343.634 273.93 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 276.0466 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_76.html11/3/2006 9:0\3:57 PM)Tj
ET
EMC 

endstreamendobj3110 0 obj(An Introduction to Scheme and its Implementation - Iteration Constructs)endobj3111 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_76.html)/S 700 0 R>>endobj3112 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_76.html)endobj3113 0 obj(YˆEàêŸ⁄ê\\^¬®\)-yı)endobj3114 0 obj<</TS(D:20061104050357)/ID 3113 0 R/CT(text/html)/O[3094 0 R]/S/SPS/T 3110 0 R/TID 3116 0 R/SI 3115 0 R>>endobj3115 0 obj<</TS(D:20061104050357)/AU 3112 0 R>>endobj3116 0 obj(hR:\\¨XMí+¸?˚m—∑)endobj3117 0 obj<</Parent 710 0 R/Next 3143 0 R/Dest[3094 0 R/XYZ 0 792 null]/Prev 3091 0 R/SE 3093 0 R/Title(An Introduction to Scheme and its Implementation - Iteration Constructs)>>endobj3118 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3119 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 3120 0 R>>endobj3120 0 obj<</Annots 3123 0 R/Parent 3147 0 R/ID 3139 0 R/StructParents 138/Contents 3135 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3121 0 obj[3119 0 R]endobj3122 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3123 0 obj[3122 0 R 3124 0 R 3125 0 R 3126 0 R 3127 0 R 3129 0 R 3130 0 R 3131 0 R 3132 0 R 3133 0 R 3134 0 R]endobj3124 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3094 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_76.html)/S/URI>>/Border[0 0 0]>>endobj3125 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_78.html)/S/URI>>/Border[0 0 0]>>endobj3126 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3127 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3128 0 obj[3120 0 R/XYZ 0 731.2 null]endobj3129 0 obj<</Rect[10.0 689.877 225.46 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC84)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC84)/S/URI>>/Border[0 0 0]>>endobj3130 0 obj<</Rect[65.608 635.538 88.162 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3131 0 obj<</Rect[95.162 635.538 143.378 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3094 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_76.html)/S/URI>>/Border[0 0 0]>>endobj3132 0 obj<</Rect[150.378 635.538 174.486 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_78.html)/S/URI>>/Border[0 0 0]>>endobj3133 0 obj<</Rect[181.486 635.538 200.932 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3134 0 obj<</Rect[251.094 635.538 343.634 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3135 0 obj<</Length 2413>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Introduction Discussi\on)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
225.46 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Discussion and Review)Tj
ET
0.5 0.5 0.5 rg
10 658.938 m
10 660.938 l
602 660.938 l
601 659.938 l
11 659.938 l
11 659.938 l
h
f
0.875 0.875 0.875 rg
602 660.938 m
602 658.938 l
10 658.938 l
11 659.938 l
601 659.938 l
601 659.938 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 639.914 Tm
(Go to the )Tj
ET
0.706 w 
65.608 637.797 m
88.162 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 639.914 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 637.797 m
143.378 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 639.914 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 637.797 m
174.486 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 639.914 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 637.797 m
200.932 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 639.914 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 637.797 m
343.634 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 639.914 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_77.html11/3/2006 9:0\4:01 PM)Tj
ET
EMC 

endstreamendobj3136 0 obj(An Introduction to Scheme and its Implementation - Introduction Discussion)endobj3137 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_77.html)/S 700 0 R>>endobj3138 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_77.html)endobj3139 0 obj(?'⁄\\Á‘?öøÈ9|π/≠)endobj3140 0 obj<</TS(D:20061104050401)/ID 3139 0 R/CT(text/html)/O[3120 0 R]/S/SPS/T 3136 0 R/TID 3142 0 R/SI 3141 0 R>>endobj3141 0 obj<</TS(D:20061104050401)/AU 3138 0 R>>endobj3142 0 obj(^^!Ov«B\)Y…µîiI )endobj3143 0 obj<</Parent 710 0 R/Next 3180 0 R/Dest[3120 0 R/XYZ 0 792 null]/Prev 3117 0 R/SE 3119 0 R/Title(An Introduction to Scheme and its Implementation - Introduction Discussion)>>endobj3144 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3145 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 3146 0 R>>endobj3146 0 obj<</Annots 3150 0 R/Parent 3257 0 R/ID 3176 0 R/StructParents 139/Contents 3172 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3147 0 obj<</Parent 3384 0 R/Count 5/Type/Pages/Kids[3019 0 R 3040 0 R 3067 0 R 3094 0 R 3120 0 R]>>endobj3148 0 obj[3145 0 R]endobj3149 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3150 0 obj[3149 0 R 3151 0 R 3152 0 R 3153 0 R 3154 0 R 3156 0 R 3157 0 R 3158 0 R 3159 0 R 3160 0 R 3161 0 R 3162 0 R 3163 0 R 3164 0 R 3165 0 R 3166 0 R 3167 0 R 3168 0 R 3169 0 R 3170 0 R 3171 0 R]endobj3151 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_78.html)/S/URI>>/Border[0 0 0]>>endobj3152 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3183 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_80.html)/S/URI>>/Border[0 0 0]>>endobj3153 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3154 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3155 0 obj[3146 0 R/XYZ 0 731.2 null]endobj3156 0 obj<</Rect[10.0 683.954 319.665 709.723]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC85)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC85)/S/URI>>/Border[0 0 0]>>endobj3157 0 obj<</Rect[50.0 487.277 169.756 502.277]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(É2≤À∫m¶	◊v|˘çSEC86)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_80.html#SEC86)/S/URI>>/Border[0 0 0]>>endobj3158 0 obj<</Rect[50.0 468.477 144.486 483.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(8 ˜€ÃÉ±j!¯\\\\^Y4 SEC100)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_94.html#SEC100)/S/URI>>/Border[0 0 0]>>endobj3159 0 obj<</Rect[50.0 449.677 139.026 464.677]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‚ÊzTÜ˙zIÂt%u∏SEC103)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_97.html#SEC103)/S/URI>>/Border[0 0 0]>>endobj3160 0 obj<</Rect[50.0 430.877 149.148 445.877]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(≈	ÇÈ£Á¡\\C™†ƒà} SEC104)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_98.html#SEC104)/S/URI>>/Border[0 0 0]>>endobj3161 0 obj<</Rect[50.0 412.077 240.134 427.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(π,ã’…6~|7´ò\r`-SEC107)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_100.html#SEC107)/S/URI>>/Border[0 0 0]>>endobj3162 0 obj<</Rect[50.0 393.277 225.742 408.277]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(=€∑‰[Œ‰yMèÃaMsSEC111)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_101.html#SEC111)/S/URI>>/Border[0 0 0]>>endobj3163 0 obj<</Rect[50.0 374.477 220.324 389.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(`æß\)¯Á8;∏úÆI7~SEC118)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#SEC118)/S/URI>>/Border[0 0 0]>>endobj3164 0 obj<</Rect[50.0 355.677 179.472 370.677]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(!†˝ì1¬Ñ®∏¡Ø‰ÅSEC126)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_107.html#SEC126)/S/URI>>/Border[0 0 0]>>endobj3165 0 obj<</Rect[50.0 336.877 181.432 351.877]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‘K˚ÄiA|◊´"3Bx>SEC147)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_118.html#SEC147)/S/URI>>/Border[0 0 0]>>endobj3166 0 obj<</Rect[420.368 299.077 575.11 314.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(p±“äE∆0·Ìü≈ôV”SEC9)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_9.html#SEC9)/S/URI>>/Border[0 0 0]>>endobj3167 0 obj<</Rect[65.608 228.477 88.162 243.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3168 0 obj<</Rect[95.162 228.477 143.378 243.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_78.html)/S/URI>>/Border[0 0 0]>>endobj3169 0 obj<</Rect[150.378 228.477 174.486 243.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3183 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_80.html)/S/URI>>/Border[0 0 0]>>endobj3170 0 obj<</Rect[181.486 228.477 200.932 243.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3171 0 obj<</Rect[251.094 228.477 343.634 243.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3172 0 obj<</Length 5240>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Using Scheme \(A Tuto\rial\))Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
2.081 w 
10 684.255 m
319.665 684.255 l
S
0 0 1 rg
BT
/T1_1 1 Tf
24.7692 0 0 24.7692 10 690.4968 Tm
(Using Scheme \(A Tutorial\))Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 649.4525 Tm
(In this chapter, I'll describe how Scheme works from the user's point of\ view, and how to write simple )Tj
0 -1.2 TD
(programs in Scheme. You should follow along, experimenting with the actu\al Scheme system you use. )Tj
0 -2.557 TD
(This chapter is not meant to be read independently of the previous chapt\er. I've included notes saying )Tj
0 -1.2 TD
(which parts of the previous chapter you should read before working throu\gh parts of this one. If you )Tj
T*
(haven't already, you should read the first part of that chapter. )Tj
0 -2.557 TD
(This chapter is also not meant to be read without a running Scheme syste\m to try things out. )Tj
/T1_2 1 Tf
7 0 0 7 35.713 491.6525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
50 489.536 m
169.756 489.536 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 491.6525 Tm
(Interactive Prog Envt)Tj
0 0 0 rg
(: An Interactive Programming Environment )Tj
/T1_2 1 Tf
7 0 0 7 35.713 472.8525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 470.736 m
144.486 470.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 472.8525 Tm
(Using Predicates)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 454.0525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 451.936 m
139.026 451.936 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 454.0525 Tm
(Local Variables)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 435.2525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 433.136 m
149.148 433.136 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 435.2525 Tm
(Using Procedures)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 416.4525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 414.336 m
240.134 414.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 416.4525 Tm
(Interactively Changing a Program)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 397.6525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 395.536 m
225.742 395.536 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 397.6525 Tm
(Some Other Useful Data Types)Tj
0 0 0 rg
(: Strings and symbols )Tj
/T1_2 1 Tf
7 0 0 7 35.713 378.8525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 376.736 m
220.324 376.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 378.8525 Tm
(Basic Programming Examples)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 360.0525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 357.936 m
179.472 357.936 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 360.0525 Tm
(Procedural Abstraction)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 341.2525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 339.136 m
181.432 339.136 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 341.2525 Tm
(Discussion and Review)Tj
0 0 0 rg
( )Tj
-2.857 -2.7 Td
(\(If you haven't read Hunk A of the previous chapter, please go to secti\on )Tj
ET
420.368 301.336 m
575.11 301.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 420.368 303.4525 Tm
(What is Scheme? \(Hunk A\))Tj
0 0 0 rg
( )Tj
-29.312 -1.343 Td
(and read until you reach the end of Hunk A and are directed back here.\)\ )Tj
ET
0.5 0.5 0.5 rg
10 251.877 m
10 253.877 l
602 253.877 l
601 252.877 l
11 252.877 l
11 252.877 l
h
f
0.875 0.875 0.875 rg
602 253.877 m
602 251.877 l
10 251.877 l
11 252.877 l
601 252.877 l
601 252.877 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 232.8525 Tm
(Go to the )Tj
ET
65.608 230.736 m
88.162 230.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 232.8525 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 230.736 m
143.378 230.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 232.8525 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 230.736 m
174.486 230.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 232.8525 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 230.736 m
200.932 230.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 232.8525 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 230.736 m
343.634 230.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 232.8525 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_79.html11/3/2006 9:0\4:05 PM)Tj
ET
EMC 

endstreamendobj3173 0 obj(An Introduction to Scheme and its Implementation - Using Scheme \(A Tutorial\))endobj3174 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_79.html)/S 700 0 R>>endobj3175 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_79.html)endobj3176 0 obj(Q˚<˚‚‹df·§OÀ@;)endobj3177 0 obj<</TS(D:20061104050405)/ID 3176 0 R/CT(text/html)/O[3146 0 R]/S/SPS/T 3173 0 R/TID 3179 0 R/SI 3178 0 R>>endobj3178 0 obj<</TS(D:20061104050405)/AU 3175 0 R>>endobj3179 0 obj("Y:Æ”õ'‡‹≈aé)endobj3180 0 obj<</Parent 710 0 R/Next 3222 0 R/Dest[3146 0 R/XYZ 0 792 null]/Prev 3143 0 R/SE 3145 0 R/Title(An Introduction to Scheme and its Implementation - Using Scheme \(A Tutorial\))>>endobj3181 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3182 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 3194 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 3183 0 R>>endobj3183 0 obj<</Annots 3186 0 R/Parent 3257 0 R/ID 3218 0 R/StructParents 140/Contents 3213 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3184 0 obj[3182 0 R]endobj3185 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3186 0 obj[3185 0 R 3187 0 R 3188 0 R 3189 0 R 3190 0 R 3192 0 R]endobj3187 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3146 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_79.html)/S/URI>>/Border[0 0 0]>>endobj3188 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3225 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_81.html)/S/URI>>/Border[0 0 0]>>endobj3189 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3190 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3191 0 obj[3183 0 R/XYZ 0 731.2 null]endobj3192 0 obj<</Rect[10.0 689.877 479.612 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC86)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC86)/S/URI>>/Border[0 0 0]>>endobj3193 0 obj[3183 0 R/XYZ 0 598.538 null]endobj3194 0 obj<</Annots 3197 0 R/Parent 3257 0 R/ID 3218 0 R/StructParents 141/Contents 3214 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3195 0 obj[3182 0 R]endobj3196 0 obj<</Rect[50.0 697.0 142.162 712.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(fo\\\\Öq0v%O›/!Í¿VÀSEC87)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_81.html#SEC87)/S/URI>>/Border[0 0 0]>>endobj3197 0 obj[3196 0 R 3198 0 R 3199 0 R 3200 0 R 3201 0 R 3202 0 R 3203 0 R 3204 0 R 3205 0 R 3206 0 R 3207 0 R 3208 0 R 3209 0 R 3210 0 R 3211 0 R 3212 0 R]endobj3198 0 obj<</Rect[50.0 678.2 199.31 693.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(´Îï9∞Ò‰˘^ìÃÆ±trSEC88)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_82.html#SEC88)/S/URI>>/Border[0 0 0]>>endobj3199 0 obj<</Rect[50.0 659.4 186.864 674.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÑÅ'kFﬁx\\¯RáÚéwySEC89)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_83.html#SEC89)/S/URI>>/Border[0 0 0]>>endobj3200 0 obj<</Rect[50.0 640.6 164.702 655.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‡ıï5Å\nz?,ê¡hgSEC90)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_84.html#SEC90)/S/URI>>/Border[0 0 0]>>endobj3201 0 obj<</Rect[50.0 621.8 193.094 636.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(3»ñBàF>E∞ΩBD^0nSEC92)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_86.html#SEC92)/S/URI>>/Border[0 0 0]>>endobj3202 0 obj<</Rect[50.0 603.0 139.054 618.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(»ZGc0NÀá⁄YøSEC91)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_85.html#SEC91)/S/URI>>/Border[0 0 0]>>endobj3203 0 obj<</Rect[50.0 584.2 200.892 599.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(~'ı?5\r’{ﬂƒ≠\\=ò˜2SEC93)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_87.html#SEC93)/S/URI>>/Border[0 0 0]>>endobj3204 0 obj<</Rect[50.0 565.4 115.324 580.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‹6ê¶¸mÍ©8úRùn!èSEC94)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_88.html#SEC94)/S/URI>>/Border[0 0 0]>>endobj3205 0 obj<</Rect[50.0 546.6 238.202 561.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(J˝sòﬁ2›?ÂRtì]ä–SEC95)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_89.html#SEC95)/S/URI>>/Border[0 0 0]>>endobj3206 0 obj<</Rect[50.0 527.8 175.216 542.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ºj\rﬁl¨V£¥T-%«SEC98)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_92.html#SEC98)/S/URI>>/Border[0 0 0]>>endobj3207 0 obj<</Rect[50.0 509.0 77.23 524.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(òZè+áI⁄øWº÷i‰osëSEC99)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_93.html#SEC99)/S/URI>>/Border[0 0 0]>>endobj3208 0 obj<</Rect[65.608 455.2 88.162 470.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3209 0 obj<</Rect[95.162 455.2 143.378 470.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3146 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_79.html)/S/URI>>/Border[0 0 0]>>endobj3210 0 obj<</Rect[150.378 455.2 174.486 470.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3225 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_81.html)/S/URI>>/Border[0 0 0]>>endobj3211 0 obj<</Rect[181.486 455.2 200.932 470.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3212 0 obj<</Rect[251.094 455.2 343.634 470.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3213 0 obj<</Length 4550>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Interactive Prog Envt\)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
479.612 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(An Interactive Programming Environment \(Hunk B\))Tj
0 0 0 rg
/T1_2 1 Tf
14 0 0 14 10 655.8466 Tm
(==================================================================)Tj
0 -1.2 TD
(This is the beginning of Hunk B.)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
(Most Scheme implementations are )Tj
/T1_3 1 Tf
(interactive)Tj
/T1_0 1 Tf
(. The Scheme system is just a program with a command )Tj
0 -1.2 TD
(interpreter. When it starts up, it presents you with a prompt, letting y\ou type in an expression. The )Tj
T*
(Scheme system "interprets" that expression, and does what it says to do.\ Then it prints out a textual )Tj
T*
(representation of the result of the expression. )Tj
0 -2.557 TD
(\(Your Scheme system may have a graphical user interface, but the basic \idea is the same--you tell )Tj
0 -1.2 TD
(Scheme what to do, and it obediently does it, tells you what happened, a\nd asks for the next command. )Tj
T*
(With a GUI, you may be able to tell Scheme what to do by clicking on but\tons, etc.\) )Tj
0 -2.557 TD
(This is very similar to an operating system's command interpreter or "sh\ell." A shell is just an interpreter )Tj
0 -1.2 TD
(for a language--usually a really ugly language. )Tj
0 -2.557 TD
(The nice thing about an interactive programming environment is that your\ program doesn't go away after )Tj
0 -1.2 TD
(you run it. You're "inside" the program, and you can tell it what to do,\ but instead of just running to )Tj
T*
(completion, it comes back and asks you what to do next. )Tj
0 -2.557 TD
(The values of variables are still around, and you can look at them if yo\u want to. This makes it easy to )Tj
0 -1.2 TD
(debug a program. You can type in definitions of variables and procedures\, and then run a procedure and )Tj
T*
(see if it does what you expect. If not, you can redefine it. In effect, \you're inside )Tj
/T1_3 1 Tf
(your)Tj
/T1_0 1 Tf
( program, and the )Tj
T*
(Scheme system acts as a dispatcher, executing whatever part you want and\ letting you examine the )Tj
T*
(results. This makes it easy to build and test your program in small piec\es, and gradually build up larger )Tj
T*
(and larger pieces that use those pieces. )Tj
0 -2.557 TD
(In this section, we'll go through a simple example session with Scheme, \fairly slowly, starting with )Tj
0 -1.2 TD
(examples similar to the ones in the previous chapter. I'll assume Scheme\ is already properly installed on )Tj
T*
(your system. If it's not, you need to get Scheme and install it, or have\ someone install it for you. )Tj
0 -2.557 TD
(\(Plug: you might want to use our Scheme, RScheme, which is free. There \are other implementations of )Tj
0 -1.2 TD
(Scheme of course, including commercial products and other free implement\ations. If you're using a )Tj
T*
(different Scheme, its operation should be very similar--see the manual f\or your system.\) )Tj
0 -2.557 TD
(It's a very good idea to follow along with this text in front of a runni\ng Scheme system, so that you get )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_80.html \(1 of 2\)11\/3/2006 9:04:10 PM)Tj
ET
EMC 

endstreamendobj3214 0 obj<</Length 4034>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Interactive Prog Envt\)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(used to using it interactively. I'll assume you are doing this, and say \"do this" and "do that." You don't )Tj
0 -1.2 TD
(have to do it, of course, but it's the best way to learn Scheme. )Tj
/T1_1 1 Tf
7 0 0 7 35.713 701.3755 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
50 699.259 m
142.162 699.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 701.3755 Tm
(Starting Scheme)Tj
0 0 0 rg
(: making Scheme go )Tj
/T1_1 1 Tf
7 0 0 7 35.713 682.5756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 680.459 m
199.31 680.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 682.5756 Tm
(Recovering from Mistakes)Tj
0 0 0 rg
(: making mistakes and recovering from them )Tj
/T1_1 1 Tf
7 0 0 7 35.713 663.7756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 661.659 m
186.864 661.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 663.7756 Tm
(Returns and Parentheses)Tj
0 0 0 rg
(: formatting interactive input )Tj
/T1_1 1 Tf
7 0 0 7 35.713 644.9756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 642.859 m
164.702 642.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 644.9756 Tm
(Interrupting Scheme)Tj
0 0 0 rg
(: getting a stuck Scheme system unstuck )Tj
/T1_1 1 Tf
7 0 0 7 35.713 626.1756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 624.059 m
193.094 624.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 626.1756 Tm
(Trying More Expressions)Tj
0 0 0 rg
(: trying out more kinds of expressions )Tj
/T1_1 1 Tf
7 0 0 7 35.713 607.3755 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 605.259 m
139.054 605.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 607.3755 Tm
(Exiting Scheme)Tj
0 0 0 rg
(: making Scheme go away )Tj
/T1_1 1 Tf
7 0 0 7 35.713 588.5756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 586.459 m
200.892 586.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 588.5756 Tm
(Booleans and Conditionals)Tj
0 0 0 rg
(: trying out basic control flow )Tj
/T1_1 1 Tf
7 0 0 7 35.713 569.7756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 567.659 m
115.324 567.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 569.7756 Tm
(Sequencing)Tj
0 0 0 rg
(: trying out begin and procedure bodies )Tj
/T1_1 1 Tf
7 0 0 7 35.713 550.9756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 548.859 m
238.202 548.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 550.9756 Tm
(Other Flow-of-Control Structures)Tj
0 0 0 rg
(: cond, and, and or )Tj
/T1_1 1 Tf
7 0 0 7 35.713 532.1756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 530.059 m
175.216 530.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 532.1756 Tm
(Making Some Objects)Tj
0 0 0 rg
(: messing around with pairs )Tj
/T1_1 1 Tf
7 0 0 7 35.713 513.3755 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 511.259 m
77.23 511.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 513.3755 Tm
(Lists)Tj
0 0 0 rg
(: using lists )Tj
ET
0.5 0.5 0.5 rg
10 478.6 m
10 480.6 l
602 480.6 l
601 479.6 l
11 479.6 l
11 479.6 l
h
f
0.875 0.875 0.875 rg
602 480.6 m
602 478.6 l
10 478.6 l
11 479.6 l
601 479.6 l
601 479.6 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 459.5756 Tm
(Go to the )Tj
ET
65.608 457.459 m
88.162 457.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 459.5756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 457.459 m
143.378 457.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 459.5756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 457.459 m
174.486 457.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 459.5756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 457.459 m
200.932 457.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 459.5756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 457.459 m
343.634 457.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 459.5756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_80.html \(2 of 2\)11\/3/2006 9:04:10 PM)Tj
ET
EMC 

endstreamendobj3215 0 obj(An Introduction to Scheme and its Implementation - Interactive Prog Envt)endobj3216 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_80.html)/S 700 0 R>>endobj3217 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_80.html)endobj3218 0 obj(É2≤À∫m¶	◊v|˘ç)endobj3219 0 obj<</TS(D:20061104050410)/ID 3218 0 R/CT(text/html)/O[3183 0 R 3194 0 R]/S/SPS/T 3215 0 R/TID 3221 0 R/SI 3220 0 R>>endobj3220 0 obj<</TS(D:20061104050410)/AU 3217 0 R>>endobj3221 0 obj(Î\rZq\ní˝ôÊ§UÍ\)Î)endobj3222 0 obj<</Parent 710 0 R/Next 3253 0 R/Dest[3183 0 R/XYZ 0 792 null]/Prev 3180 0 R/SE 3182 0 R/Title(An Introduction to Scheme and its Implementation - Interactive Prog Envt)>>endobj3223 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3224 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 3236 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 3225 0 R>>endobj3225 0 obj<</Annots 3228 0 R/Parent 3257 0 R/ID 3249 0 R/StructParents 142/Contents 3244 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R/T1_4 2791 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3226 0 obj[3224 0 R]endobj3227 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3228 0 obj[3227 0 R 3229 0 R 3230 0 R 3231 0 R 3232 0 R 3234 0 R]endobj3229 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3183 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_80.html)/S/URI>>/Border[0 0 0]>>endobj3230 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3256 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_82.html)/S/URI>>/Border[0 0 0]>>endobj3231 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3232 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3233 0 obj[3225 0 R/XYZ 0 731.2 null]endobj3234 0 obj<</Rect[10.0 693.431 137.47 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC87)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC87)/S/URI>>/Border[0 0 0]>>endobj3235 0 obj[3225 0 R/XYZ 0 359.941 null]endobj3236 0 obj<</Annots 3239 0 R/Parent 3257 0 R/ID 3249 0 R/StructParents 143/Contents 3245 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3237 0 obj[3224 0 R]endobj3238 0 obj<</Rect[65.608 474.663 88.162 489.663]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3239 0 obj[3238 0 R 3240 0 R 3241 0 R 3242 0 R 3243 0 R]endobj3240 0 obj<</Rect[95.162 474.663 143.378 489.663]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3183 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_80.html)/S/URI>>/Border[0 0 0]>>endobj3241 0 obj<</Rect[150.378 474.663 174.486 489.663]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3256 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_82.html)/S/URI>>/Border[0 0 0]>>endobj3242 0 obj<</Rect[181.486 474.663 200.932 489.663]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3243 0 obj<</Rect[251.094 474.663 343.634 489.663]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3244 0 obj<</Length 4405>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Starting Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
137.47 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Starting Scheme)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7235 Tm
(First we start up Scheme. If we're using RScheme under UNIX, that's prob\ably by typing )Tj
/T1_2 1 Tf
(rs)Tj
/T1_0 1 Tf
( at the )Tj
0 -1.205 TD
(UNIX )Tj
/T1_2 1 Tf
(%)Tj
/T1_0 1 Tf
( prompt. \(RScheme might be installed under a different name on your sys\tem, perhaps )Tj
/T1_2 1 Tf
0 -1.205 TD
(rscheme)Tj
/T1_0 1 Tf
(, if so, use that name instead. If you're not using UNIX, start up RSche\me the way you start up )Tj
0 -1.2 TD
(any program on your system, perhaps by clicking on its icon. If you're u\sing UNIX but your shell has a )Tj
0 -1.205 TD
(different prompt, like )Tj
/T1_2 1 Tf
(>)Tj
/T1_0 1 Tf
(, don't worry about it. )Tj
/T1_3 1 Tf
0 -2.562 TD
([ Note to my \(UT CS\)students: on our machines, RScheme is installed as\ )Tj
/T1_4 1 Tf
(/p/bin/runscheme)Tj
/T1_3 1 Tf
(. You )Tj
0 -1.205 TD
(can just type that at the UNIX prompt, or if you have )Tj
/T1_4 1 Tf
(/p/bin)Tj
/T1_3 1 Tf
( in your path, plain )Tj
/T1_4 1 Tf
(runscheme)Tj
/T1_3 1 Tf
( will )Tj
0 -1.2 TD
(do. ] )Tj
/T1_2 1 Tf
0 -2.562 TD
(%rs)Tj
/T1_0 1 Tf
( )Tj
0 -2.557 TD
(Now the Scheme system starts up and prints out some information about it\self, usually including )Tj
0 -1.2 TD
(including the name and version version number, and then gives you a Sche\me prompt. We'll pretend that )Tj
0 -1.205 TD
(the prompt is )Tj
/T1_2 1 Tf
(Scheme>)Tj
/T1_0 1 Tf
(, but on your system it's probably something different. \(For RScheme, i\t's )Tj
0 -1.205 TD
(something like )Tj
/T1_2 1 Tf
(top[0]=>)Tj
/T1_0 1 Tf
(, where the first few characters give you some information about the sta\te of )Tj
T*
(the system, and the )Tj
/T1_2 1 Tf
(=>)Tj
/T1_0 1 Tf
( tells you it's ready for input.\) )Tj
0 -2.562 TD
(Scheme then waits for you to type in an expression and hit )Tj
/T1_2 1 Tf
(<RETURN>)Tj
/T1_0 1 Tf
(. \(By that I mean hit the )Tj
0 -1.2 TD
("RETURN" or "ENTER" key on the keyboard. In some Scheme systems, these m\ay be distinct keys, )Tj
T*
(and you may have to hit "ENTER"; the documentation for your system will \tell you which key does )Tj
T*
(what.\) )Tj
0 -2.557 TD
(Scheme lets you type, echoing the characters to the screen, and doesn't \do anything else until you hit )Tj
/T1_2 1 Tf
0 -1.205 TD
(<RETURN>)Tj
/T1_0 1 Tf
(. Until you hit )Tj
/T1_2 1 Tf
(<RETURN>)Tj
/T1_0 1 Tf
(, you can back up to correct typing mistakes \(just as you can in an )Tj
0 -1.2 TD
(operating system's command shell\), using the delete or backspace key. )Tj
0 -2.562 TD
(Now type in a variable definition )Tj
/T1_2 1 Tf
(\(define myvar 10\))Tj
/T1_0 1 Tf
(, and hit )Tj
/T1_2 1 Tf
(<RETURN>)Tj
/T1_0 1 Tf
(. What's happening on )Tj
0 -1.2 TD
(the screen looks something like this. )Tj
/T1_2 1 Tf
0 -2.562 TD
(Generational Real-Time Garbage Collector Version 0.5)Tj
0 -1.2 TD
(RScheme version 0.7)Tj
T*
(Scheme>\(define myvar 10\))Tj
T*
(#void)Tj
T*
(Scheme>)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_81.html \(1 of 2\)11\/3/2006 9:04:14 PM)Tj
ET
EMC 

endstreamendobj3245 0 obj<</Length 2992>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Starting Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9082 Tm
(Here we defined a variable named )Tj
/T1_1 1 Tf
(myvar)Tj
/T1_0 1 Tf
(, giving it the initial value )Tj
/T1_1 1 Tf
(10)Tj
/T1_0 1 Tf
(. Scheme read what we typed )Tj
0 -1.2 TD
(and figured out what it meant, and then allocated some storage for the v\ariable binding, and initialized )Tj
0 -1.205 TD
(that storage with \(a pointer to\) )Tj
/T1_1 1 Tf
(10)Tj
/T1_0 1 Tf
(. Scheme keeps track of the fact that the storage it allocated is now )Tj
0 -1.205 TD
(known as )Tj
/T1_1 1 Tf
(myvar)Tj
/T1_0 1 Tf
(, as well as keeping track of the value in it. )Tj
0 -2.557 TD
(What Scheme prints out after evaluating this expression may be different\ on your system \(you may not )Tj
0 -1.205 TD
(see )Tj
/T1_1 1 Tf
(#void)Tj
/T1_0 1 Tf
(\). That's because the Scheme standard doesn't specify what's returned a\s the value of a )Tj
0 -1.2 TD
(definition expression. \(It's possible that your Scheme system will prin\t out something a little more )Tj
0 -1.205 TD
(verbose, or different, or nothing at all as the value of a )Tj
/T1_1 1 Tf
(define)Tj
/T1_0 1 Tf
( expression. Don't worry about it.\) )Tj
0 -2.557 TD
(You don't usually use the result value of a definition--you're just defi\ning something to use later. )Tj
0 -1.2 TD
(Depending on the implementation you're using, you'll see whatever the im\plementors chose to have )Tj
T*
(definitions return. In some systems, a special unusable value is returne\d, and Scheme will suppress the )Tj
T*
(printing of these meaningless values to avoid clutter on the screen. )Tj
ET
0.5 0.5 0.5 rg
10 498.063 m
10 500.063 l
602 500.063 l
601 499.063 l
11 499.063 l
11 499.063 l
h
f
0.875 0.875 0.875 rg
602 500.063 m
602 498.063 l
10 498.063 l
11 499.063 l
601 499.063 l
601 499.063 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 479.0386 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 476.922 m
88.162 476.922 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 479.0386 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 476.922 m
143.378 476.922 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 479.0386 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 476.922 m
174.486 476.922 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 479.0386 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 476.922 m
200.932 476.922 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 479.0386 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 476.922 m
343.634 476.922 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 479.0386 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_81.html \(2 of 2\)11\/3/2006 9:04:14 PM)Tj
ET
EMC 

endstreamendobj3246 0 obj(An Introduction to Scheme and its Implementation - Starting Scheme)endobj3247 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_81.html)/S 700 0 R>>endobj3248 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_81.html)endobj3249 0 obj(fo\\Öq0v%O›/!Í¿VÀ)endobj3250 0 obj<</TS(D:20061104050414)/ID 3249 0 R/CT(text/html)/O[3225 0 R 3236 0 R]/S/SPS/T 3246 0 R/TID 3252 0 R/SI 3251 0 R>>endobj3251 0 obj<</TS(D:20061104050414)/AU 3248 0 R>>endobj3252 0 obj(µû‰˚/#u√•õÄ)endobj3253 0 obj<</Parent 710 0 R/Next 3285 0 R/Dest[3225 0 R/XYZ 0 792 null]/Prev 3222 0 R/SE 3224 0 R/Title(An Introduction to Scheme and its Implementation - Starting Scheme)>>endobj3254 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3255 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 3268 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 3256 0 R>>endobj3256 0 obj<</Annots 3260 0 R/Parent 3373 0 R/ID 3281 0 R/StructParents 144/Contents 3276 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3257 0 obj<</Parent 3384 0 R/Count 5/Type/Pages/Kids[3146 0 R 3183 0 R 3194 0 R 3225 0 R 3236 0 R]>>endobj3258 0 obj[3255 0 R]endobj3259 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3260 0 obj[3259 0 R 3261 0 R 3262 0 R 3263 0 R 3264 0 R 3266 0 R]endobj3261 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3225 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_81.html)/S/URI>>/Border[0 0 0]>>endobj3262 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3288 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_83.html)/S/URI>>/Border[0 0 0]>>endobj3263 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3264 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3265 0 obj[3256 0 R/XYZ 0 731.2 null]endobj3266 0 obj<</Rect[10.0 693.431 343.044 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC88)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC88)/S/URI>>/Border[0 0 0]>>endobj3267 0 obj[3256 0 R/XYZ 0 671.815 null]endobj3268 0 obj<</Annots 3271 0 R/Parent 3373 0 R/ID 3281 0 R/StructParents 145/Contents 3277 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3269 0 obj[3255 0 R]endobj3270 0 obj<</Rect[65.608 332.074 88.162 347.074]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3271 0 obj[3270 0 R 3272 0 R 3273 0 R 3274 0 R 3275 0 R]endobj3272 0 obj<</Rect[95.162 332.074 143.378 347.074]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3225 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_81.html)/S/URI>>/Border[0 0 0]>>endobj3273 0 obj<</Rect[150.378 332.074 174.486 347.074]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3288 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_83.html)/S/URI>>/Border[0 0 0]>>endobj3274 0 obj<</Rect[181.486 332.074 200.932 347.074]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3275 0 obj<</Rect[251.094 332.074 343.634 347.074]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3276 0 obj<</Length 4669>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recovering from Mista\kes)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
343.044 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Making mistakes and recovering from them)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(Sometimes you'll make mistakes when interacting with Scheme. This is qui\te normal, and if you've done )Tj
0 -1.2 TD
(it already, don't worry. When Scheme detects that something's wrong, it \will complain. In most text-)Tj
T*
(based Scheme systems, it will give you a special kind of prompt, so that\ you can type in commands to )Tj
T*
(fix the mistake. In other systems, it may invoke a debugger, which is a \program for diagnosing and )Tj
T*
(fixing mistakes. For now, you need to know the command for your system t\hat tells Scheme to give up )Tj
T*
(on trying to fix the mistake, and go back to its normal "top level" inte\raction mode. Later, you should )Tj
T*
(learn how to use the debugging facilities of your system, but for now ju\st being able to get back to the )Tj
T*
(normal Scheme prompt will do. )Tj
0 -2.557 TD
(Assuming you've looked up the command for aborting an expression \(by re\ading the manual, or asking a )Tj
0 -1.2 TD
(help system\), you should try it out. You should make a mistake intentio\nally, watch what the system )Tj
T*
(does, and make sure you can recover from your mistakes. )Tj
0 -2.557 TD
(Here's a good mistake, and a hypothetical response from the Scheme, and \a recovery to the normal )Tj
0 -1.2 TD
(Scheme prompt. Try this on your system, and make sure you can do the equ\ivalent things: )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme>\(2 3 4\))Tj
0 -1.2 TD
(ERROR: attempt to apply non-procedure 2)Tj
T*
(break[1]>,toplevel)Tj
T*
(Scheme>)Tj
0 -2.557 TD
([ Note to RScheme users: in RScheme, the ,toplevel command above is )Tj
0 -1.2 TD
(abbreviated ,top. ])Tj
/T1_0 1 Tf
( )Tj
0 -2.562 TD
(Here, we typed in the expression )Tj
/T1_2 1 Tf
(\(2 3 4\))Tj
/T1_0 1 Tf
(, which is illegal. The Scheme system recognized it as a )Tj
0 -1.2 TD
(compound expression that's not a special form, so it attempted to interp\ret it as a procedure call, and )Tj
T*
(apply the result of the first subexpression to the results of the other \subexpressions. In this case, the first )Tj
0 -1.205 TD
(subexpression is )Tj
/T1_2 1 Tf
(2)Tj
/T1_0 1 Tf
(, which evaluates to )Tj
/T1_2 1 Tf
(2)Tj
/T1_0 1 Tf
(, which isn't a procedure at all. At that point, Scheme )Tj
0 -1.205 TD
(complained, telling us we'd tried to use )Tj
/T1_2 1 Tf
(2)Tj
/T1_0 1 Tf
( as a procedure, and switched to a "break loop" for debugging. )Tj
0 -2.562 TD
(The break loop presented the special debugging prompt )Tj
/T1_2 1 Tf
(break[1]>)Tj
/T1_0 1 Tf
(, asking what to do about it. We )Tj
0 -1.205 TD
(typed in the special command )Tj
/T1_2 1 Tf
(,toplevel)Tj
/T1_0 1 Tf
( to tell it to go back to normal interaction, and it did, )Tj
T*
(presenting us with a fresh )Tj
/T1_2 1 Tf
(Scheme>)Tj
/T1_0 1 Tf
( prompt. )Tj
0 -2.557 TD
(In your system, the prompts and commands are likely to be different. \(F\or example, special commands )Tj
0 -1.2 TD
(may start with a colon, rather than a comma, and have different names.\)\ Whatever they are, they'll be )Tj
T*
(simple, and you should learn to use them as soon as possible. See the do\cumentation for your system. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_82.html \(1 of 2\)11\/3/2006 9:04:19 PM)Tj
ET
EMC 

endstreamendobj3277 0 obj<</Length 2978>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recovering from Mista\kes)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 733.3192 Tm
(Here's another common mistake, which you will make pretty soon, so you s\hould try it and see what )Tj
0 -1.2 TD
(happens and how to get out of it: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>a-variable)Tj
0 -1.2 TD
(ERROR: unbound variable: a-variable)Tj
T*
(break[1]>,toplevel)Tj
T*
(Scheme>)Tj
/T1_0 1 Tf
0 -2.557 TD
(Here what happened is that we asked Scheme to evaluate the expression )Tj
/T1_1 1 Tf
(a-variable)Tj
/T1_0 1 Tf
(. Since )Tj
/T1_1 1 Tf
(a-)Tj
0 -1.205 TD
(variable)Tj
/T1_0 1 Tf
( is just a normal identifier, like a variable name, Scheme assumed it wa\s supposed to be a )Tj
0 -1.205 TD
(variable name, and that we were asking for its value. There wasn't a var\iable named )Tj
/T1_1 1 Tf
(a-variable)Tj
/T1_0 1 Tf
(, )Tj
0 -1.2 TD
(though, so Scheme complained. In Scheme terminology for giving a piece o\f memory a name, we hadn't )Tj
T*
(defined that variable and "bound" it to storage. Scheme couldn't find an\y storage by that name, much )Tj
T*
(less fetch its value. )Tj
0 -2.562 TD
(\(Your system may let you get away with using )Tj
/T1_1 1 Tf
(set!)Tj
/T1_0 1 Tf
( on an undefined variable, silently creating a )Tj
0 -1.2 TD
(binding automatically. This is not required by the Scheme standard, and \programs generally should )Tj
/T1_2 1 Tf
(not)Tj
/T1_0 1 Tf
( )Tj
T*
(do this.\) )Tj
0 -2.557 TD
(As before, we used the special escape command to abort the attempt to ev\aluate this broken expression, )Tj
0 -1.2 TD
(and get back to normal interaction with Scheme. )Tj
ET
0.5 0.5 0.5 rg
10 355.474 m
10 357.474 l
602 357.474 l
601 356.474 l
11 356.474 l
11 356.474 l
h
f
0.875 0.875 0.875 rg
602 357.474 m
602 355.474 l
10 355.474 l
11 356.474 l
601 356.474 l
601 356.474 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 336.4496 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 334.333 m
88.162 334.333 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 336.4496 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 334.333 m
143.378 334.333 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 336.4496 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 334.333 m
174.486 334.333 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 336.4496 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 334.333 m
200.932 334.333 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 336.4496 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 334.333 m
343.634 334.333 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 336.4496 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_82.html \(2 of 2\)11\/3/2006 9:04:19 PM)Tj
ET
EMC 

endstreamendobj3278 0 obj(An Introduction to Scheme and its Implementation - Recovering from Mistakes)endobj3279 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_82.html)/S 700 0 R>>endobj3280 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_82.html)endobj3281 0 obj(´Îï9∞Ò‰˘^ìÃÆ±tr)endobj3282 0 obj<</TS(D:20061104050419)/ID 3281 0 R/CT(text/html)/O[3256 0 R 3268 0 R]/S/SPS/T 3278 0 R/TID 3284 0 R/SI 3283 0 R>>endobj3283 0 obj<</TS(D:20061104050419)/AU 3280 0 R>>endobj3284 0 obj(5ëg¨O"pÊ„>=¥)endobj3285 0 obj<</Parent 710 0 R/Next 3311 0 R/Dest[3256 0 R/XYZ 0 792 null]/Prev 3253 0 R/SE 3255 0 R/Title(An Introduction to Scheme and its Implementation - Recovering from Mistakes)>>endobj3286 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3287 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 3288 0 R>>endobj3288 0 obj<</Annots 3291 0 R/Parent 3373 0 R/ID 3307 0 R/StructParents 146/Contents 3303 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3289 0 obj[3287 0 R]endobj3290 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3291 0 obj[3290 0 R 3292 0 R 3293 0 R 3294 0 R 3295 0 R 3297 0 R 3298 0 R 3299 0 R 3300 0 R 3301 0 R 3302 0 R]endobj3292 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3256 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_82.html)/S/URI>>/Border[0 0 0]>>endobj3293 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3314 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_84.html)/S/URI>>/Border[0 0 0]>>endobj3294 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3295 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3296 0 obj[3288 0 R/XYZ 0 731.2 null]endobj3297 0 obj<</Rect[10.0 693.431 204.799 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC89)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC89)/S/URI>>/Border[0 0 0]>>endobj3298 0 obj<</Rect[65.608 344.678 88.162 359.678]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3299 0 obj<</Rect[95.162 344.678 143.378 359.678]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3256 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_82.html)/S/URI>>/Border[0 0 0]>>endobj3300 0 obj<</Rect[150.378 344.678 174.486 359.678]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3314 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_84.html)/S/URI>>/Border[0 0 0]>>endobj3301 0 obj<</Rect[181.486 344.678 200.932 359.678]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3302 0 obj<</Rect[251.094 344.678 343.634 359.678]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3303 0 obj<</Length 3938>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Returns and Parenthes\es)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
204.799 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Returns and Parentheses)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(A common mistake in Scheme is to forget the closing parentheses of expre\ssions. If you forget a closing )Tj
0 -1.2 TD
(parentheses--usually because you need several to close nested expression\s--most systems will just hang, )Tj
T*
(waiting you to finish typing the expression. )Tj
0 -2.562 TD
(This is a feature, not a bug. It lets you put )Tj
/T1_2 1 Tf
(<RETURN>)Tj
/T1_0 1 Tf
(s \(line breaks\) in your input, to format the code on )Tj
0 -1.205 TD
(the screen as you type it in. When you type in the last closing expressi\on and hit )Tj
/T1_2 1 Tf
(<RETURN>)Tj
/T1_0 1 Tf
( again, )Tj
0 -1.2 TD
(Scheme recognizes that you've typed in a whole expression, and evaluates\ it and prints the result. )Tj
0 -2.562 TD
(So if you type in an expression and hit )Tj
/T1_2 1 Tf
(<RETURN>)Tj
/T1_0 1 Tf
(, and Scheme doesn't do anything, check to see if you )Tj
0 -1.205 TD
(closed all of the parentheses you opened. If not, just type in the missi\ng parenthesis and hit )Tj
/T1_2 1 Tf
(<RETURN>)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(again. )Tj
0 -2.557 TD
(\(It's also possible that in your system, you have to do something speci\al to get Scheme to evaluate an )Tj
0 -1.2 TD
(expression--like hitting a different key, or clicking on a button or a m\enu item. In such systems, )Tj
/T1_2 1 Tf
0 -1.205 TD
(<return>)Tj
/T1_0 1 Tf
( may be only for formatting the text you're inputting, and another key t\ells Scheme to go )Tj
0 -1.2 TD
(ahead and evaluate what you've typed.\) )Tj
ET
0.5 0.5 0.5 rg
10 368.078 m
10 370.078 l
602 370.078 l
601 369.078 l
11 369.078 l
11 369.078 l
h
f
0.875 0.875 0.875 rg
602 370.078 m
602 368.078 l
10 368.078 l
11 369.078 l
601 369.078 l
601 369.078 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 349.054 Tm
(Go to the )Tj
ET
0.706 w 
65.608 346.937 m
88.162 346.937 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 349.054 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 346.937 m
143.378 346.937 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 349.054 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 346.937 m
174.486 346.937 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 349.054 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 346.937 m
200.932 346.937 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 349.054 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 346.937 m
343.634 346.937 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 349.054 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_83.html11/3/2006 9:0\4:23 PM)Tj
ET
EMC 

endstreamendobj3304 0 obj(An Introduction to Scheme and its Implementation - Returns and Parentheses)endobj3305 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_83.html)/S 700 0 R>>endobj3306 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_83.html)endobj3307 0 obj(ÑÅ'kFﬁx.¯RáÚéwy)endobj3308 0 obj<</TS(D:20061104050423)/ID 3307 0 R/CT(text/html)/O[3288 0 R]/S/SPS/T 3304 0 R/TID 3310 0 R/SI 3309 0 R>>endobj3309 0 obj<</TS(D:20061104050423)/AU 3306 0 R>>endobj3310 0 obj(›π^WGπe™‹™¬hï)endobj3311 0 obj<</Parent 710 0 R/Next 3341 0 R/Dest[3288 0 R/XYZ 0 792 null]/Prev 3285 0 R/SE 3287 0 R/Title(An Introduction to Scheme and its Implementation - Returns and Parentheses)>>endobj3312 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3313 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 3314 0 R>>endobj3314 0 obj<</Annots 3317 0 R/Parent 3373 0 R/ID 3337 0 R/StructParents 147/Contents 3333 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3315 0 obj[3313 0 R]endobj3316 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3317 0 obj[3316 0 R 3318 0 R 3319 0 R 3320 0 R 3321 0 R 3323 0 R 3328 0 R 3329 0 R 3330 0 R 3331 0 R 3332 0 R]endobj3318 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3288 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_83.html)/S/URI>>/Border[0 0 0]>>endobj3319 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3344 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_85.html)/S/URI>>/Border[0 0 0]>>endobj3320 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3321 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3322 0 obj[3314 0 R/XYZ 0 731.2 null]endobj3323 0 obj<</Rect[10.0 693.431 167.08 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC90)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC90)/S/URI>>/Border[0 0 0]>>endobj3324 0 obj[3314 0 R/XYZ 0 671.815 null]endobj3325 0 obj[3314 0 R/XYZ 0 671.815 null]endobj3326 0 obj[3314 0 R/XYZ 0 671.815 null]endobj3327 0 obj[3314 0 R/XYZ 0 532.881 null]endobj3328 0 obj<</Rect[65.608 311.011 88.162 326.011]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3329 0 obj<</Rect[95.162 311.011 143.378 326.011]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3288 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_83.html)/S/URI>>/Border[0 0 0]>>endobj3330 0 obj<</Rect[150.378 311.011 174.486 326.011]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3344 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_85.html)/S/URI>>/Border[0 0 0]>>endobj3331 0 obj<</Rect[181.486 311.011 200.932 326.011]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3332 0 obj<</Rect[251.094 311.011 343.634 326.011]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3333 0 obj<</Length 4242>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Interrupting Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
167.08 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Interrupting Scheme)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(Inevitably, you'll sometimes code routines that get stuck in infinite lo\ops \(or infinite recursion\). You )Tj
0 -1.2 TD
(need to know how to stop such loops and get back to the normal Scheme in\teraction prompt. Scheme )Tj
T*
(systems generally allow you to "interrupt" what the system is doing, and\ get a new prompt. )Tj
0 -2.562 TD
(In most UNIX-based Scheme systems, you can use )Tj
/T1_2 1 Tf
(<ctrl>-C)Tj
/T1_0 1 Tf
(, i.e., hold down the CONTROL key and )Tj
0 -1.205 TD
(hit the )Tj
/T1_2 1 Tf
(c)Tj
/T1_0 1 Tf
( key, to send an interrupt. In other systems, there will be another keyb\oard command or a button )Tj
0 -1.2 TD
(or menu item you can click. Find out what the command is for your system\. You'll need it. )Tj
0 -2.557 TD
(In general, if the system hangs, you should check to see if you closed a\ll of the parentheses you opened--)Tj
0 -1.2 TD
(it may just be waiting for you to finish your input. If that doesn't wor\k, and you think the program is )Tj
T*
(stuck in an infinite loop, or some other computation you don't want to w\ait for, interrupt it with )Tj
/T1_2 1 Tf
0 -1.205 TD
(<CTRL>-C)Tj
/T1_0 1 Tf
( or the equivalent on your system. )Tj
0 -2.557 TD
(It's possible that even this won't work. After all, Scheme systems can h\ave bugs, too. In very unusual )Tj
0 -1.2 TD
(circumstances, you may have to kill the Scheme program more brutally. If\ you're using a window )Tj
0 -1.205 TD
(system, you may be able to just kill the window Scheme is running in. Un\der UNIX, you can use the )Tj
/T1_2 1 Tf
(ps)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(command to figure out the process ID of the Scheme process, and kill it \with the )Tj
/T1_2 1 Tf
(kill)Tj
/T1_0 1 Tf
( command. \(This )Tj
0 -1.205 TD
(may require the )Tj
/T1_2 1 Tf
(-9)Tj
/T1_0 1 Tf
( option.\) )Tj
ET
0.5 0.5 0.5 rg
10 334.411 m
10 336.411 l
602 336.411 l
601 335.411 l
11 335.411 l
11 335.411 l
h
f
0.875 0.875 0.875 rg
602 336.411 m
602 334.411 l
10 334.411 l
11 335.411 l
601 335.411 l
601 335.411 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 315.3866 Tm
(Go to the )Tj
ET
0.706 w 
65.608 313.27 m
88.162 313.27 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 315.3866 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 313.27 m
143.378 313.27 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 315.3866 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 313.27 m
174.486 313.27 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 315.3866 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 313.27 m
200.932 313.27 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 315.3866 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 313.27 m
343.634 313.27 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 315.3866 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_84.html11/3/2006 9:0\4:29 PM)Tj
ET
EMC 

endstreamendobj3334 0 obj(An Introduction to Scheme and its Implementation - Interrupting Scheme)endobj3335 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_84.html)/S 700 0 R>>endobj3336 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_84.html)endobj3337 0 obj(‡ıï5Å\nz?,ê¡hg)endobj3338 0 obj<</TS(D:20061104050429)/ID 3337 0 R/CT(text/html)/O[3314 0 R]/S/SPS/T 3334 0 R/TID 3340 0 R/SI 3339 0 R>>endobj3339 0 obj<</TS(D:20061104050429)/AU 3336 0 R>>endobj3340 0 obj(>∞tfL±!Ô8ô=)endobj3341 0 obj<</Parent 710 0 R/Next 3369 0 R/Dest[3314 0 R/XYZ 0 792 null]/Prev 3311 0 R/SE 3313 0 R/Title(An Introduction to Scheme and its Implementation - Interrupting Scheme)>>endobj3342 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3343 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 3344 0 R>>endobj3344 0 obj<</Annots 3347 0 R/Parent 3373 0 R/ID 3365 0 R/StructParents 148/Contents 3361 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3345 0 obj[3343 0 R]endobj3346 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3347 0 obj[3346 0 R 3348 0 R 3349 0 R 3350 0 R 3351 0 R 3353 0 R 3356 0 R 3357 0 R 3358 0 R 3359 0 R 3360 0 R]endobj3348 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3314 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_84.html)/S/URI>>/Border[0 0 0]>>endobj3349 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3372 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_86.html)/S/URI>>/Border[0 0 0]>>endobj3350 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3351 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3352 0 obj[3344 0 R/XYZ 0 731.2 null]endobj3353 0 obj<</Rect[10.0 693.431 207.465 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC91)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC91)/S/URI>>/Border[0 0 0]>>endobj3354 0 obj[3344 0 R/XYZ 0 671.815 null]endobj3355 0 obj[3344 0 R/XYZ 0 671.815 null]endobj3356 0 obj<</Rect[65.608 447.678 88.162 462.678]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3357 0 obj<</Rect[95.162 447.678 143.378 462.678]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3314 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_84.html)/S/URI>>/Border[0 0 0]>>endobj3358 0 obj<</Rect[150.378 447.678 174.486 462.678]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3372 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_86.html)/S/URI>>/Border[0 0 0]>>endobj3359 0 obj<</Rect[181.486 447.678 200.932 462.678]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3360 0 obj<</Rect[251.094 447.678 343.634 462.678]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3361 0 obj<</Length 3553>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Exiting Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
207.465 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Exiting \(Quitting\) Scheme)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(When you're through using Scheme interactively, you need to be able to g\et out of it. You give a )Tj
0 -1.2 TD
(command to tell the interactive Scheme system \(which is just a program\)\ to terminate. )Tj
0 -2.562 TD
(Most systems have a special command \(starting with comma or whatever th\e convention is\), like )Tj
/T1_2 1 Tf
(,)Tj
0 -1.205 TD
(exit)Tj
/T1_0 1 Tf
(. \(It might also be )Tj
/T1_2 1 Tf
(,quit)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(,halt)Tj
/T1_0 1 Tf
(, or )Tj
/T1_2 1 Tf
(,bye)Tj
/T1_0 1 Tf
(.\) There may be a Scheme procedure you can evaluate )Tj
T*
(to kill the system, by evaluating a procedure call expression in the nor\mal way, e.g., )Tj
/T1_2 1 Tf
(\(exit\))Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(\(halt\))Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
0 -1.205 TD
(\(quit\))Tj
/T1_0 1 Tf
(, or )Tj
/T1_2 1 Tf
(\(bye\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(In many systems \(especially under UNIX\), you can use an interrupt key \sequence to kill the system, if )Tj
0 -1.205 TD
(you're at the top-level. E.g., at the top-level prompt, )Tj
/T1_2 1 Tf
(<ctrl>-D)Tj
/T1_0 1 Tf
(, may do it. )Tj
ET
0.5 0.5 0.5 rg
10 471.078 m
10 473.078 l
602 473.078 l
601 472.078 l
11 472.078 l
11 472.078 l
h
f
0.875 0.875 0.875 rg
602 473.078 m
602 471.078 l
10 471.078 l
11 472.078 l
601 472.078 l
601 472.078 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 452.054 Tm
(Go to the )Tj
ET
0.706 w 
65.608 449.937 m
88.162 449.937 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 452.054 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 449.937 m
143.378 449.937 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 452.054 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 449.937 m
174.486 449.937 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 452.054 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 449.937 m
200.932 449.937 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 452.054 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 449.937 m
343.634 449.937 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 452.054 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_85.html11/3/2006 9:0\4:38 PM)Tj
ET
EMC 

endstreamendobj3362 0 obj(An Introduction to Scheme and its Implementation - Exiting Scheme)endobj3363 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_85.html)/S 700 0 R>>endobj3364 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_85.html)endobj3365 0 obj(»ZGc0NÀá⁄Yø)endobj3366 0 obj<</TS(D:20061104050438)/ID 3365 0 R/CT(text/html)/O[3344 0 R]/S/SPS/T 3362 0 R/TID 3368 0 R/SI 3367 0 R>>endobj3367 0 obj<</TS(D:20061104050438)/AU 3364 0 R>>endobj3368 0 obj(ö6ÆÍC¨‡ã6ì„"f)endobj3369 0 obj<</Parent 710 0 R/Next 3404 0 R/Dest[3344 0 R/XYZ 0 792 null]/Prev 3341 0 R/SE 3343 0 R/Title(An Introduction to Scheme and its Implementation - Exiting Scheme)>>endobj3370 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3371 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 3383 0 R/Type/MCR>><</MCID 0/Pg 3386 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 3372 0 R>>endobj3372 0 obj<</Annots 3376 0 R/Parent 3438 0 R/ID 3400 0 R/StructParents 149/Contents 3394 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3373 0 obj<</Parent 3384 0 R/Count 5/Type/Pages/Kids[3256 0 R 3268 0 R 3288 0 R 3314 0 R 3344 0 R]>>endobj3374 0 obj[3371 0 R]endobj3375 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3376 0 obj[3375 0 R 3377 0 R 3378 0 R 3379 0 R 3380 0 R 3382 0 R]endobj3377 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3344 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_85.html)/S/URI>>/Border[0 0 0]>>endobj3378 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3407 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_87.html)/S/URI>>/Border[0 0 0]>>endobj3379 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3380 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3381 0 obj[3372 0 R/XYZ 0 731.2 null]endobj3382 0 obj<</Rect[10.0 693.431 235.314 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC92)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC92)/S/URI>>/Border[0 0 0]>>endobj3383 0 obj<</Parent 3438 0 R/ID 3400 0 R/StructParents 150/Contents 3395 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3384 0 obj<</Parent 4700 0 R/Count 25/Type/Pages/Kids[2967 0 R 3020 0 R 3147 0 R 3257 0 R 3373 0 R]>>endobj3385 0 obj[3371 0 R]endobj3386 0 obj<</Annots 3389 0 R/Parent 3438 0 R/ID 3400 0 R/StructParents 151/Contents 3396 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3387 0 obj[3371 0 R]endobj3388 0 obj<</Rect[65.608 122.993 88.162 137.993]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3389 0 obj[3388 0 R 3390 0 R 3391 0 R 3392 0 R 3393 0 R]endobj3390 0 obj<</Rect[95.162 122.993 143.378 137.993]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3344 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_85.html)/S/URI>>/Border[0 0 0]>>endobj3391 0 obj<</Rect[150.378 122.993 174.486 137.993]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3407 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_87.html)/S/URI>>/Border[0 0 0]>>endobj3392 0 obj<</Rect[181.486 122.993 200.932 137.993]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3393 0 obj<</Rect[251.094 122.993 343.634 137.993]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3394 0 obj<</Length 3934>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Trying More Expressio\ns)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
235.314 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Trying Out More Expressions)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(Now that you're familiar with typing in erroneous expressions, let's get\ back to trying legal ones. )Tj
0 -2.557 TD
(If you've exited your Scheme system, fire it up again. )Tj
0 -2.562 TD
(Type in the addition expression )Tj
/T1_2 1 Tf
(\(+ 2 3\))Tj
/T1_0 1 Tf
(, and hit )Tj
/T1_2 1 Tf
(<return>)Tj
/T1_0 1 Tf
(. \(From now on, I'll skip saying "and hit )Tj
/T1_2 1 Tf
0 -1.205 TD
(<return>)Tj
/T1_0 1 Tf
(." I'll also stop showing the prompt Scheme gives you after printing the\ result of an )Tj
0 -1.2 TD
(expression.\) )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme>\(+ 2 3\))Tj
0 -1.2 TD
(5)Tj
/T1_0 1 Tf
0 -2.557 TD
(Again, Scheme evaluated the expression, printed the result, which was \(\a pointer to\) )Tj
/T1_2 1 Tf
(5)Tj
/T1_0 1 Tf
(, and gave you a )Tj
0 -1.2 TD
(prompt to type in something else. Notice that it didn't save the value a\nywhere. It just printed out the )Tj
T*
(result. )Tj
0 -2.562 TD
(The value we gave to )Tj
/T1_2 1 Tf
(myvar)Tj
/T1_0 1 Tf
( earlier is still there, though. We can ask Scheme what it is, just by t\yping )Tj
0 -1.2 TD
(in a variable reference expression, i.e., just the variable name. )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme>myvar)Tj
0 -1.2 TD
(10)Tj
/T1_0 1 Tf
0 -2.557 TD
(Scheme has kept track of the storage named )Tj
/T1_2 1 Tf
(myvar)Tj
/T1_0 1 Tf
(, and it evaluates the expression )Tj
/T1_2 1 Tf
(myvar)Tj
/T1_0 1 Tf
( by looking )Tj
0 -1.2 TD
(up the value. Then it prints out that result, and gives you another prom\pt, as it always does. )Tj
0 -2.562 TD
(To change the value stored in the binding of )Tj
/T1_2 1 Tf
(myvar)Tj
/T1_0 1 Tf
(, and look at the new value, just type in a )Tj
/T1_2 1 Tf
(set!)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(expression and then the name of the variable, like this: )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme>\(set! myvar 32\))Tj
0 -1.2 TD
(#void)Tj
T*
(Scheme>myvar)Tj
T*
(32)Tj
/T1_0 1 Tf
0 -2.557 TD
(You may see a different result for the )Tj
/T1_2 1 Tf
(set!)Tj
/T1_0 1 Tf
( expression. Standard Scheme doesn't specify the return )Tj
0 -1.205 TD
(value of )Tj
/T1_2 1 Tf
(set!)Tj
/T1_0 1 Tf
(, because you generally use it for its side-effect, not its result. As w\ith )Tj
/T1_2 1 Tf
(define)Tj
/T1_0 1 Tf
(, your )Tj
0 -1.2 TD
(system may return something different. It may also suppress the printing\ of this useless value, so you )Tj
T*
(may not see anything at all. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_86.html \(1 of 3\)11\/3/2006 9:04:47 PM)Tj
ET
EMC 

endstreamendobj3395 0 obj<</Length 3072>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Trying More Expressio\ns)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 743.3844 Tm
(In some Scheme systems, the value of a )Tj
/T1_1 1 Tf
(set!)Tj
/T1_0 1 Tf
( expression is the name of the variable being set, so you )Tj
0 -1.2 TD
(may see somthing like this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(set! myvar 32\))Tj
0 -1.2 TD
(myvar)Tj
T*
(Scheme>myvar)Tj
T*
(32)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(In other systems, it's something else, like the old value of the varia\ble you're clobbering.\) You should )Tj
0 -1.205 TD
(not depend on the value returned by the )Tj
/T1_1 1 Tf
(set!)Tj
/T1_0 1 Tf
( if you want your program to be portable. In the example )Tj
T*
(above, it doesn't really matter what result the )Tj
/T1_1 1 Tf
(set!)Tj
/T1_0 1 Tf
( returns, except that that's what gets printed out )Tj
0 -1.205 TD
(before you get a new prompt. What matters about )Tj
/T1_1 1 Tf
(set!)Tj
/T1_0 1 Tf
( is its )Tj
/T1_2 1 Tf
(effect)Tj
/T1_0 1 Tf
(, which is to update the value of the )Tj
0 -1.205 TD
(variable binding. As we can see, it had its effect--when we evaluate the\ expression )Tj
/T1_1 1 Tf
(myvar)Tj
/T1_0 1 Tf
(, it returns the )Tj
0 -1.205 TD
(new value, which is printed out: )Tj
/T1_1 1 Tf
(32)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(We can also use more complicated expressions--just about anything. Now w\e'll increment the variable )Tj
0 -1.2 TD
(by five, and again ask Scheme the value of the variable. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(set! myvar \(+ myvar 5\)\))Tj
0 -1.2 TD
(#void)Tj
0 -1.2 TD
(Scheme>myvar)Tj
0 -1.2 TD
(37)Tj
/T1_0 1 Tf
0 -2.552 TD
(Now let's define a procedure that expects a number as its argument, and \returns a number that's twice as )Tj
0 -1.205 TD
(big. Then we'll call it with the argument )Tj
/T1_1 1 Tf
(2)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(define \(double x\) \(+ x x\)\))Tj
0 -1.2 TD
(#void)Tj
T*
(Scheme>\(double 2\))Tj
T*
(4)Tj
/T1_0 1 Tf
0 -2.557 TD
(After evaluating the first expression, Scheme keeps track of the definit\ion of )Tj
/T1_1 1 Tf
(double)Tj
/T1_0 1 Tf
(. When we type in )Tj
0 -1.2 TD
(the second expression, Scheme calls that procedure, which returns a resu\lt, which Scheme prints out. )Tj
0 -2.562 TD
(Since Scheme keeps track of the variables and values we typed in earlier\, we can call )Tj
/T1_1 1 Tf
(double)Tj
/T1_0 1 Tf
( to double )Tj
0 -1.2 TD
(the value of myvar: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(double myvar\))Tj
0 -1.2 TD
(74)Tj
/T1_0 1 Tf
0 -2.557 TD
(We can define new procedures in terms of old ones. \(Actually, we did th\is when we defined )Tj
/T1_1 1 Tf
(double)Tj
/T1_0 1 Tf
(---)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_86.html \(2 of 3\)11\/3/2006 9:04:47 PM)Tj
ET
EMC 

endstreamendobj3396 0 obj<</Length 3445>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Trying More Expressio\ns)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9082 Tm
(it's defined in terms of )Tj
/T1_1 1 Tf
(+)Tj
/T1_0 1 Tf
(, which is predefined, i.e., Scheme knows that definition when it starts\ up.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(define \(quadruple x\) \(double \(double x\)\)\))Tj
0 -1.2 TD
(#void)Tj
T*
(Scheme>\(quadruple 15\))Tj
T*
(60)Tj
/T1_0 1 Tf
0 -2.557 TD
(Now try using the predefined Scheme procedure )Tj
/T1_1 1 Tf
(display)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(display "Hello, world!"\))Tj
0 -1.2 TD
(Hello, world!)Tj
T*
(#void)Tj
/T1_0 1 Tf
0 -2.557 TD
(Here )Tj
/T1_1 1 Tf
(display)Tj
/T1_0 1 Tf
( had the side-effect of printing )Tj
/T1_1 1 Tf
(Hello, world!)Tj
/T1_0 1 Tf
( to the screen, and returned the value )Tj
/T1_1 1 Tf
0 -1.205 TD
(void#)Tj
/T1_0 1 Tf
(, which was printed. )Tj
0 -2.557 TD
(What you see on the screen may vary in a couple of ways, neither of whic\h is worrisome. Your system )Tj
0 -1.205 TD
(may have printed the return value on the same line as the \(side-effect\)\ output of )Tj
/T1_1 1 Tf
(display)Tj
/T1_0 1 Tf
(, without a )Tj
T*
(linebreak. Since the main use of )Tj
/T1_1 1 Tf
(display)Tj
/T1_0 1 Tf
( is for its effect, its return value is undefined, so you may see )Tj
0 -1.205 TD
(something other than )Tj
/T1_1 1 Tf
(#void)Tj
/T1_0 1 Tf
(, or nothing at all. You might see this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(display "Hello, world!"\))Tj
0 -1.2 TD
(Hello, world!)Tj
T*
("Hello, world")Tj
/T1_0 1 Tf
0 -2.557 TD
(If you do, it means that in your system )Tj
/T1_1 1 Tf
(display)Tj
/T1_0 1 Tf
( returns the object you asked it to display. Then )Tj
0 -1.2 TD
(Scheme prints out that return value, with double quotes to tell you it's\ a string object. This shouldn't be )Tj
T*
(too surprising--remember that Scheme prints out the return values of exp\ressions after evaluating them. )Tj
0 -2.562 TD
(Now try )Tj
/T1_1 1 Tf
(display)Tj
/T1_0 1 Tf
(ing a number: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(display 322\))Tj
0 -1.2 TD
(322)Tj
T*
(#void)Tj
ET
0.5 0.5 0.5 rg
10 146.393 m
10 148.393 l
602 148.393 l
601 147.393 l
11 147.393 l
11 147.393 l
h
f
0.875 0.875 0.875 rg
602 148.393 m
602 146.393 l
10 146.393 l
11 147.393 l
601 147.393 l
601 147.393 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 127.369 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 125.252 m
88.162 125.252 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 127.369 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 125.252 m
143.378 125.252 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 127.369 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 125.252 m
174.486 125.252 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 127.369 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 125.252 m
200.932 125.252 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 127.369 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 125.252 m
343.634 125.252 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 127.369 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_86.html \(3 of 3\)11\/3/2006 9:04:47 PM)Tj
ET
EMC 

endstreamendobj3397 0 obj(An Introduction to Scheme and its Implementation - Trying More Expressions)endobj3398 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_86.html)/S 700 0 R>>endobj3399 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_86.html)endobj3400 0 obj(3»ñBàF>E∞ΩBD^0n)endobj3401 0 obj<</TS(D:20061104050447)/ID 3400 0 R/CT(text/html)/O[3372 0 R 3383 0 R 3386 0 R]/S/SPS/T 3397 0 R/TID 3403 0 R/SI 3402 0 R>>endobj3402 0 obj<</TS(D:20061104050447)/AU 3399 0 R>>endobj3403 0 obj(IdÅ∂Z#òw}ò~ ⁄±)endobj3404 0 obj<</Parent 710 0 R/Next 3434 0 R/Dest[3372 0 R/XYZ 0 792 null]/Prev 3369 0 R/SE 3371 0 R/Title(An Introduction to Scheme and its Implementation - Trying More Expressions)>>endobj3405 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3406 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 3417 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 3407 0 R>>endobj3407 0 obj<</Annots 3410 0 R/Parent 3438 0 R/ID 3430 0 R/StructParents 152/Contents 3425 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3408 0 obj[3406 0 R]endobj3409 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3410 0 obj[3409 0 R 3411 0 R 3412 0 R 3413 0 R 3414 0 R 3416 0 R]endobj3411 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3372 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_86.html)/S/URI>>/Border[0 0 0]>>endobj3412 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3437 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_88.html)/S/URI>>/Border[0 0 0]>>endobj3413 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3414 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3415 0 obj[3407 0 R/XYZ 0 731.2 null]endobj3416 0 obj<</Rect[10.0 693.431 218.239 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC93)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC93)/S/URI>>/Border[0 0 0]>>endobj3417 0 obj<</Annots 3420 0 R/Parent 3438 0 R/ID 3430 0 R/StructParents 153/Contents 3426 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3418 0 obj[3406 0 R]endobj3419 0 obj<</Rect[65.608 106.396 88.162 121.396]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3420 0 obj[3419 0 R 3421 0 R 3422 0 R 3423 0 R 3424 0 R]endobj3421 0 obj<</Rect[95.162 106.396 143.378 121.396]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3372 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_86.html)/S/URI>>/Border[0 0 0]>>endobj3422 0 obj<</Rect[150.378 106.396 174.486 121.396]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3437 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_88.html)/S/URI>>/Border[0 0 0]>>endobj3423 0 obj<</Rect[181.486 106.396 200.932 121.396]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3424 0 obj<</Rect[251.094 106.396 343.634 121.396]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3425 0 obj<</Length 3859>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Booleans and Conditio\nals)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
218.239 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Booleans and Conditionals)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7235 Tm
(In Scheme, falsity is represented by the value )Tj
/T1_2 1 Tf
(false)Tj
/T1_0 1 Tf
(, written )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
(. Conceptually, )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
( is a pointer to a )Tj
0 -1.2 TD
(special object, the )Tj
/T1_2 1 Tf
(false)Tj
/T1_0 1 Tf
( object. )Tj
/T1_2 1 Tf
0 -2.562 TD
(Predicates)Tj
/T1_0 1 Tf
( are procedures that return either )Tj
/T1_3 1 Tf
(#t)Tj
/T1_0 1 Tf
( or )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
(, and don't have side effects. Calling a predicate is )Tj
0 -1.2 TD
(like asking a true/false question--all you care about is a yes or no ans\wer. )Tj
0 -2.562 TD
(Try out the "greater-than" predicate )Tj
/T1_3 1 Tf
(>)Tj
/T1_0 1 Tf
(. )Tj
/T1_3 1 Tf
0 -2.562 TD
(Scheme>\(> 1 2\))Tj
0 -1.2 TD
(#f)Tj
/T1_0 1 Tf
0 -2.557 TD
(Here we told Scheme to apply the predicate procedure to 1 and 2; it retu\rned )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
( and Scheme printed )Tj
0 -1.2 TD
(that. )Tj
0 -2.562 TD
(The important thing about )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
( is its use in conditionals. If the first subexpression \(the )Tj
/T1_2 1 Tf
(condition)Tj
/T1_0 1 Tf
(\) of an )Tj
/T1_3 1 Tf
0 -1.205 TD
(if)Tj
/T1_0 1 Tf
( expression returns the value )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
(, the second subexpression is not evaluated, and the third one is; that \)Tj
0 -1.2 TD
(value is returned as the value of the if expression. )Tj
0 -2.562 TD
(Try just using the literal value )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
( as the first subexpression of an )Tj
/T1_3 1 Tf
(if)Tj
/T1_0 1 Tf
(, i.e., the "condition" that controls )Tj
0 -1.2 TD
(which branch is taken. )Tj
/T1_3 1 Tf
0 -2.562 TD
(Scheme>\(if #f 1 2\))Tj
0 -1.2 TD
(2)Tj
/T1_0 1 Tf
0 -2.557 TD
(Here the second subexpression was just the literal )Tj
/T1_3 1 Tf
(2)Tj
/T1_0 1 Tf
(, so 2 was returned. )Tj
0 -2.562 TD
(Now try it using the predicate )Tj
/T1_3 1 Tf
(>)Tj
/T1_0 1 Tf
( )Tj
/T1_3 1 Tf
0 -2.562 TD
(Scheme>\(if \(> 1 2\) 1 2\))Tj
0 -1.2 TD
(2)Tj
/T1_0 1 Tf
0 -2.552 TD
(This is clearer if we indent it like this, lining up the "then" part \(t\he )Tj
/T1_2 1 Tf
(consequent)Tj
/T1_0 1 Tf
(\) and the "else" part \(the )Tj
/T1_2 1 Tf
0 -1.2 TD
(alternative)Tj
/T1_0 1 Tf
(\) under the condition. )Tj
/T1_3 1 Tf
0 -2.562 TD
(Scheme>\(if \(> 1 2\))Tj
0 -1.2 TD
(           1)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_87.html \(1 of 2\)11\/3/2006 9:04:53 PM)Tj
ET
EMC 

endstreamendobj3426 0 obj<</Length 3393>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Booleans and Conditio\nals)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(           2\))Tj
0 -1.2 TD
(2)Tj
/T1_0 1 Tf
0 -2.552 TD
(This is the right way to indent code when writing a Scheme program in an\ editor, and most Scheme )Tj
0 -1.2 TD
(systems will let you indent code this way when using the system interact\ively--the you can hit )Tj
/T1_1 1 Tf
0 -1.205 TD
(<RETURN>)Tj
/T1_0 1 Tf
(, and type in extra spaces. Scheme won't try to evaluate the expression \until you write the )Tj
0 -1.205 TD
(last closing parenthesis and hit )Tj
/T1_1 1 Tf
(<RETURN>)Tj
/T1_0 1 Tf
(. This helps you format your code readably even when typing )Tj
0 -1.2 TD
(interactively, so that you can see what you're doing. )Tj
0 -2.562 TD
(The false value makes a conditional expression \(like an )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(\) go one way, and a true value will make it go )Tj
0 -1.205 TD
(another. In Scheme, )Tj
/T1_2 1 Tf
(any value except)Tj
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
( counts as true in conditionals. Try this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme> \(if 0 1 0\))Tj
/T1_0 1 Tf
0 -2.552 TD
(What result value does Scheme print? )Tj
0 -2.562 TD
(One special value is provided, called the )Tj
/T1_2 1 Tf
(true)Tj
/T1_0 1 Tf
( object, written )Tj
/T1_1 1 Tf
(#t)Tj
/T1_0 1 Tf
(. There's nothing very special about it, )Tj
0 -1.2 TD
(though--it's just a handy value to use when you want to return a true va\lue, making it clear that )Tj
/T1_2 1 Tf
(all)Tj
/T1_0 1 Tf
( you're )Tj
T*
(doing is returning a true value. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(if #t 1 2\))Tj
0 -1.2 TD
(1)Tj
0 -2.557 TD
(Scheme>\(if \(> 2 1\) 1 2\))Tj
0 -1.2 TD
(1)Tj
/T1_0 1 Tf
0 -2.557 TD
(Now let's interactively define the procedure )Tj
/T1_1 1 Tf
(min)Tj
/T1_0 1 Tf
(, and then call it: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme> \(define \(min a b\))Tj
0 -1.2 TD
(           \(if \(< a b\))Tj
T*
(               a)Tj
T*
(               b\)\))Tj
T*
(#void)Tj
T*
(Scheme> \(min 30 40\))Tj
T*
(30)Tj
ET
0.5 0.5 0.5 rg
10 129.796 m
10 131.796 l
602 131.796 l
601 130.796 l
11 130.796 l
11 130.796 l
h
f
0.875 0.875 0.875 rg
602 131.796 m
602 129.796 l
10 129.796 l
11 130.796 l
601 130.796 l
601 130.796 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 110.7712 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 108.654 m
88.162 108.654 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 110.7712 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 108.654 m
143.378 108.654 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 110.7712 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 108.654 m
174.486 108.654 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 110.7712 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 108.654 m
200.932 108.654 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 110.7712 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 108.654 m
343.634 108.654 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 110.7712 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_87.html \(2 of 2\)11\/3/2006 9:04:53 PM)Tj
ET
EMC 

endstreamendobj3427 0 obj(An Introduction to Scheme and its Implementation - Booleans and Conditionals)endobj3428 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_87.html)/S 700 0 R>>endobj3429 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_87.html)endobj3430 0 obj(~'ı?5\r’{ﬂƒ≠.=ò˜2)endobj3431 0 obj<</TS(D:20061104050453)/ID 3430 0 R/CT(text/html)/O[3407 0 R 3417 0 R]/S/SPS/T 3427 0 R/TID 3433 0 R/SI 3432 0 R>>endobj3432 0 obj<</TS(D:20061104050453)/AU 3429 0 R>>endobj3433 0 obj(—W›P§E5ŒÓ∑è1cˇ˛)endobj3434 0 obj<</Parent 710 0 R/Next 3465 0 R/Dest[3407 0 R/XYZ 0 792 null]/Prev 3404 0 R/SE 3406 0 R/Title(An Introduction to Scheme and its Implementation - Booleans and Conditionals)>>endobj3435 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3436 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 3448 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 3437 0 R>>endobj3437 0 obj<</Annots 3441 0 R/Parent 3548 0 R/ID 3461 0 R/StructParents 154/Contents 3456 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3438 0 obj<</Parent 3708 0 R/Count 5/Type/Pages/Kids[3372 0 R 3383 0 R 3386 0 R 3407 0 R 3417 0 R]>>endobj3439 0 obj[3436 0 R]endobj3440 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3441 0 obj[3440 0 R 3442 0 R 3443 0 R 3444 0 R 3445 0 R 3447 0 R]endobj3442 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3407 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_87.html)/S/URI>>/Border[0 0 0]>>endobj3443 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3468 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_89.html)/S/URI>>/Border[0 0 0]>>endobj3444 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3445 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3446 0 obj[3437 0 R/XYZ 0 731.2 null]endobj3447 0 obj<</Rect[10.0 693.431 101.56 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC94)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC94)/S/URI>>/Border[0 0 0]>>endobj3448 0 obj<</Annots 3451 0 R/Parent 3548 0 R/ID 3461 0 R/StructParents 155/Contents 3457 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3449 0 obj[3436 0 R]endobj3450 0 obj<</Rect[65.608 580.2 88.162 595.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3451 0 obj[3450 0 R 3452 0 R 3453 0 R 3454 0 R 3455 0 R]endobj3452 0 obj<</Rect[95.162 580.2 143.378 595.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3407 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_87.html)/S/URI>>/Border[0 0 0]>>endobj3453 0 obj<</Rect[150.378 580.2 174.486 595.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3468 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_89.html)/S/URI>>/Border[0 0 0]>>endobj3454 0 obj<</Rect[181.486 580.2 200.932 595.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3455 0 obj<</Rect[251.094 580.2 343.634 595.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3456 0 obj<</Length 3661>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Sequencing)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
101.56 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Sequencing)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(The Scheme system lets you type one expression, then it evaluates it, pr\ints the result, and prompts you )Tj
0 -1.2 TD
(for another expression. What if you want to type two or three expression\s and have them executed )Tj
0 -1.205 TD
(sequentially, i.e., in the written order? You can use a )Tj
/T1_2 1 Tf
(begin)Tj
/T1_0 1 Tf
( expression, which just sequences its )Tj
0 -1.2 TD
(subexpressions, and returns the value of the last subexpression in the s\equence. )Tj
0 -2.557 TD
(First let's define a flag variable, which we'll use to hold a boolean va\lue. )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme> \(define flag #f\))Tj
0 -1.2 TD
(#void)Tj
/T1_0 1 Tf
0 -2.557 TD
(Now a sequence to "toggle" \(reverse\) the value of the flag and return \the new value. If the flag holds )Tj
/T1_2 1 Tf
(#f)Tj
/T1_0 1 Tf
(, )Tj
0 -1.205 TD
(we set it to )Tj
/T1_2 1 Tf
(#t)Tj
/T1_0 1 Tf
(, and vice versa. )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme> \(begin \(if flag)Tj
0 -1.2 TD
(                   \(set! flag #f\))Tj
T*
(                   \(set! flag #t\)\))Tj
T*
(               flag\))Tj
T*
(#t)Tj
/T1_0 1 Tf
0 -2.557 TD
(This evaluated the )Tj
/T1_2 1 Tf
(if)Tj
/T1_0 1 Tf
( expression, which toggled the flag, and then the expression )Tj
/T1_2 1 Tf
(flag)Tj
/T1_0 1 Tf
(, which fetched )Tj
0 -1.205 TD
(the value of the variable )Tj
/T1_2 1 Tf
(flag)Tj
/T1_0 1 Tf
(, and returned that value. )Tj
0 -2.557 TD
(We can also write a procedure to do this, so that we don't have to write\ this expression out next time we )Tj
0 -1.205 TD
(want to do it. We won't need a )Tj
/T1_2 1 Tf
(begin)Tj
/T1_0 1 Tf
( here, because the body of a procedure is automatically treated )Tj
T*
(like a )Tj
/T1_2 1 Tf
(begin)Tj
/T1_0 1 Tf
(---the expressions are evaluated in order, and the value of the last one\ is returned as the )Tj
0 -1.2 TD
(return value of the procedure. )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme> \(define \(toggle-flag\))Tj
0 -1.2 TD
(           \(if flag)Tj
T*
(               \(set! flag #f\))Tj
T*
(               \(set! flag #t\)\))Tj
T*
(           flag\))Tj
T*
(#void)Tj
/T1_0 1 Tf
0 -2.552 TD
(Now try using it. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_88.html \(1 of 2\)11\/3/2006 9:05:04 PM)Tj
ET
EMC 

endstreamendobj3457 0 obj<</Length 1585>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Sequencing)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(Scheme>flag)Tj
0 -1.2 TD
(#t)Tj
T*
(Scheme>\(toggle-flag\))Tj
T*
(#f)Tj
T*
(Scheme>flag)Tj
T*
(#f)Tj
T*
(Scheme>\(toggle-flag\))Tj
T*
(#t)Tj
ET
0.5 0.5 0.5 rg
10 603.6 m
10 605.6 l
602 605.6 l
601 604.6 l
11 604.6 l
11 604.6 l
h
f
0.875 0.875 0.875 rg
602 605.6 m
602 603.6 l
10 603.6 l
11 604.6 l
601 604.6 l
601 604.6 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 584.5756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 582.459 m
88.162 582.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 584.5756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 582.459 m
143.378 582.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 584.5756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 582.459 m
174.486 582.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 584.5756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 582.459 m
200.932 582.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 584.5756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 582.459 m
343.634 582.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 584.5756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_88.html \(2 of 2\)11\/3/2006 9:05:04 PM)Tj
ET
EMC 

endstreamendobj3458 0 obj(An Introduction to Scheme and its Implementation - Sequencing)endobj3459 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_88.html)/S 700 0 R>>endobj3460 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_88.html)endobj3461 0 obj(‹6ê¶¸mÍ©8úRùn!è)endobj3462 0 obj<</TS(D:20061104050504)/ID 3461 0 R/CT(text/html)/O[3437 0 R 3448 0 R]/S/SPS/T 3458 0 R/TID 3464 0 R/SI 3463 0 R>>endobj3463 0 obj<</TS(D:20061104050504)/AU 3460 0 R>>endobj3464 0 obj(‰±™@¸Ï‘˚?åœ«C/±)endobj3465 0 obj<</Parent 710 0 R/Next 3491 0 R/Dest[3437 0 R/XYZ 0 792 null]/Prev 3434 0 R/SE 3436 0 R/Title(An Introduction to Scheme and its Implementation - Sequencing)>>endobj3466 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3467 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 3468 0 R>>endobj3468 0 obj<</Annots 3471 0 R/Parent 3548 0 R/ID 3487 0 R/StructParents 156/Contents 3483 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3469 0 obj[3467 0 R]endobj3470 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3471 0 obj[3470 0 R 3472 0 R 3473 0 R 3474 0 R 3475 0 R 3477 0 R 3478 0 R 3479 0 R 3480 0 R 3481 0 R 3482 0 R]endobj3472 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3437 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_88.html)/S/URI>>/Border[0 0 0]>>endobj3473 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3494 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_90.html)/S/URI>>/Border[0 0 0]>>endobj3474 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3475 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3476 0 obj[3468 0 R/XYZ 0 731.2 null]endobj3477 0 obj<</Rect[10.0 693.431 260.401 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC95)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC95)/S/URI>>/Border[0 0 0]>>endobj3478 0 obj<</Rect[65.608 639.415 88.162 654.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3479 0 obj<</Rect[95.162 639.415 143.378 654.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3437 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_88.html)/S/URI>>/Border[0 0 0]>>endobj3480 0 obj<</Rect[150.378 639.415 174.486 654.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3494 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_90.html)/S/URI>>/Border[0 0 0]>>endobj3481 0 obj<</Rect[181.486 639.415 200.932 654.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3482 0 obj<</Rect[251.094 639.415 343.634 654.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3483 0 obj<</Length 2442>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Other Flow-of-Control\ Structures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
260.401 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Other Flow-of-control Structures)Tj
ET
0.5 0.5 0.5 rg
10 662.815 m
10 664.815 l
602 664.815 l
601 663.815 l
11 663.815 l
11 663.815 l
h
f
0.875 0.875 0.875 rg
602 664.815 m
602 662.815 l
10 662.815 l
11 663.815 l
601 663.815 l
601 663.815 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 643.7909 Tm
(Go to the )Tj
ET
0.706 w 
65.608 641.674 m
88.162 641.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 643.7909 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 641.674 m
143.378 641.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 643.7909 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 641.674 m
174.486 641.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 643.7909 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 641.674 m
200.932 641.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 643.7909 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 641.674 m
343.634 641.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 643.7909 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_89.html11/3/2006 9:0\5:10 PM)Tj
ET
EMC 

endstreamendobj3484 0 obj(An Introduction to Scheme and its Implementation - Other Flow-of-Control Structures)endobj3485 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_89.html)/S 700 0 R>>endobj3486 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_89.html)endobj3487 0 obj(J˝sòﬁ2›?ÂRtì]ä–)endobj3488 0 obj<</TS(D:20061104050510)/ID 3487 0 R/CT(text/html)/O[3468 0 R]/S/SPS/T 3484 0 R/TID 3490 0 R/SI 3489 0 R>>endobj3489 0 obj<</TS(D:20061104050510)/AU 3486 0 R>>endobj3490 0 obj(ÅèçœÚªıﬂrœdß9±¨)endobj3491 0 obj<</Parent 710 0 R/Next 3517 0 R/Dest[3468 0 R/XYZ 0 792 null]/Prev 3465 0 R/SE 3467 0 R/Title(An Introduction to Scheme and its Implementation - Other Flow-of-Control Structures)>>endobj3492 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3493 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 3494 0 R>>endobj3494 0 obj<</Annots 3497 0 R/Parent 3548 0 R/ID 3513 0 R/StructParents 157/Contents 3509 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3495 0 obj[3493 0 R]endobj3496 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3497 0 obj[3496 0 R 3498 0 R 3499 0 R 3500 0 R 3501 0 R 3503 0 R 3504 0 R 3505 0 R 3506 0 R 3507 0 R 3508 0 R]endobj3498 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3468 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_89.html)/S/URI>>/Border[0 0 0]>>endobj3499 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3520 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_91.html)/S/URI>>/Border[0 0 0]>>endobj3500 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3501 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3502 0 obj[3494 0 R/XYZ 0 731.2 null]endobj3503 0 obj<</Rect[10.0 695.625 86.384 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC96)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC96)/S/URI>>/Border[0 0 0]>>endobj3504 0 obj<</Rect[65.608 641.825 88.162 656.825]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3505 0 obj<</Rect[95.162 641.825 143.378 656.825]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3468 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_89.html)/S/URI>>/Border[0 0 0]>>endobj3506 0 obj<</Rect[150.378 641.825 174.486 656.825]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3520 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_91.html)/S/URI>>/Border[0 0 0]>>endobj3507 0 obj<</Rect[181.486 641.825 200.932 656.825]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3508 0 obj<</Rect[251.094 641.825 343.634 656.825]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3509 0 obj<</Length 2436>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Using cond)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.176 w 
10 696.405 m
52.784 696.405 l
S
0.706 w 
52.784 697.816 m
86.384 697.816 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 699.933 Tm
(Using )Tj
/T1_2 1 Tf
(cond)Tj
ET
0.5 0.5 0.5 rg
10 665.225 m
10 667.225 l
602 667.225 l
601 666.225 l
11 666.225 l
11 666.225 l
h
f
0.875 0.875 0.875 rg
602 667.225 m
602 665.225 l
10 665.225 l
11 666.225 l
601 666.225 l
601 666.225 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 646.2004 Tm
(Go to the )Tj
ET
65.608 644.084 m
88.162 644.084 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 646.2004 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 644.084 m
143.378 644.084 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 646.2004 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 644.084 m
174.486 644.084 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 646.2004 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 644.084 m
200.932 644.084 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 646.2004 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 644.084 m
343.634 644.084 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 646.2004 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_90.html11/3/2006 9:0\5:19 PM)Tj
ET
EMC 

endstreamendobj3510 0 obj(An Introduction to Scheme and its Implementation - Using cond)endobj3511 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_90.html)/S 700 0 R>>endobj3512 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_90.html)endobj3513 0 obj(?úG‹v#ñõI:êçÆA)endobj3514 0 obj<</TS(D:20061104050519)/ID 3513 0 R/CT(text/html)/O[3494 0 R]/S/SPS/T 3510 0 R/TID 3516 0 R/SI 3515 0 R>>endobj3515 0 obj<</TS(D:20061104050519)/AU 3512 0 R>>endobj3516 0 obj(Ûb+ÜI∫±CÔ∑k)endobj3517 0 obj<</Parent 710 0 R/Next 3544 0 R/Dest[3494 0 R/XYZ 0 792 null]/Prev 3491 0 R/SE 3493 0 R/Title(An Introduction to Scheme and its Implementation - Using cond)>>endobj3518 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3519 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 3520 0 R>>endobj3520 0 obj<</Annots 3523 0 R/Parent 3548 0 R/ID 3540 0 R/StructParents 158/Contents 3536 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 1287 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3521 0 obj[3519 0 R]endobj3522 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3523 0 obj[3522 0 R 3524 0 R 3525 0 R 3526 0 R 3527 0 R 3529 0 R 3530 0 R 3531 0 R 3532 0 R 3533 0 R 3534 0 R 3535 0 R]endobj3524 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3494 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_90.html)/S/URI>>/Border[0 0 0]>>endobj3525 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3547 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_92.html)/S/URI>>/Border[0 0 0]>>endobj3526 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3527 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3528 0 obj[3520 0 R/XYZ 0 731.2 null]endobj3529 0 obj<</Rect[10.0 695.625 127.46 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC97)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC97)/S/URI>>/Border[0 0 0]>>endobj3530 0 obj<</Rect[298.134 538.025 415.58 553.025]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(4bÙµ–¨ZäŸxpñæSEC24)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_23.html#SEC24)/S/URI>>/Border[0 0 0]>>endobj3531 0 obj<</Rect[65.608 484.225 88.162 499.225]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3532 0 obj<</Rect[95.162 484.225 143.378 499.225]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3494 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_90.html)/S/URI>>/Border[0 0 0]>>endobj3533 0 obj<</Rect[150.378 484.225 174.486 499.225]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3547 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_92.html)/S/URI>>/Border[0 0 0]>>endobj3534 0 obj<</Rect[181.486 484.225 200.932 499.225]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3535 0 obj<</Rect[251.094 484.225 343.634 499.225]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3536 0 obj<</Length 3152>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Using and and or)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.176 w 
10 696.405 m
52.784 696.405 l
S
0.706 w 
52.784 697.816 m
77.984 697.816 l
S
1.176 w 
77.984 696.405 m
110.66 696.405 l
S
0.706 w 
110.66 697.816 m
127.46 697.816 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 699.933 Tm
(Using )Tj
/T1_2 1 Tf
(and)Tj
/T1_1 1 Tf
( and )Tj
/T1_2 1 Tf
(or)Tj
0 0 0 rg
/T1_3 1 Tf
0 -2.7 TD
(==================================================================)Tj
0 -1.2 TD
(This is the end of Hunk B)Tj
0 -2.4 TD
(At this point, you should go back to the previous chapter and)Tj
0 -1.2 TD
(read Hunk C before returning here and continuing this tutorial.)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Go BACK to read Hunk C, which starts at section )Tj
ET
298.134 540.284 m
415.58 540.284 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 298.134 542.4004 Tm
(Comments \(Hunk C\))Tj
0 0 0 rg
(.\) )Tj
ET
0.5 0.5 0.5 rg
10 507.625 m
10 509.625 l
602 509.625 l
601 508.625 l
11 508.625 l
11 508.625 l
h
f
0.875 0.875 0.875 rg
602 509.625 m
602 507.625 l
10 507.625 l
11 508.625 l
601 508.625 l
601 508.625 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 488.6004 Tm
(Go to the )Tj
ET
65.608 486.484 m
88.162 486.484 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 488.6004 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 486.484 m
143.378 486.484 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 488.6004 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 486.484 m
174.486 486.484 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 488.6004 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 486.484 m
200.932 486.484 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 488.6004 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 486.484 m
343.634 486.484 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 488.6004 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_91.html11/3/2006 9:0\5:27 PM)Tj
ET
EMC 

endstreamendobj3537 0 obj(An Introduction to Scheme and its Implementation - Using and and or)endobj3538 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_91.html)/S 700 0 R>>endobj3539 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_91.html)endobj3540 0 obj(o{ïbWc'7¥¥YÉ/)endobj3541 0 obj<</TS(D:20061104050527)/ID 3540 0 R/CT(text/html)/O[3520 0 R]/S/SPS/T 3537 0 R/TID 3543 0 R/SI 3542 0 R>>endobj3542 0 obj<</TS(D:20061104050527)/AU 3539 0 R>>endobj3543 0 obj(?¥°r<Ø›÷˛¶¶õèi)endobj3544 0 obj<</Parent 710 0 R/Next 3594 0 R/Dest[3520 0 R/XYZ 0 792 null]/Prev 3517 0 R/SE 3519 0 R/Title(An Introduction to Scheme and its Implementation - Using and and or)>>endobj3545 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3546 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 3558 0 R/Type/MCR>><</MCID 0/Pg 3562 0 R/Type/MCR>><</MCID 0/Pg 3564 0 R/Type/MCR>><</MCID 0/Pg 3568 0 R/Type/MCR>><</MCID 0/Pg 3571 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 3547 0 R>>endobj3547 0 obj<</Annots 3551 0 R/Parent 3572 0 R/ID 3590 0 R/StructParents 159/Contents 3581 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3548 0 obj<</Parent 3708 0 R/Count 5/Type/Pages/Kids[3437 0 R 3448 0 R 3468 0 R 3494 0 R 3520 0 R]>>endobj3549 0 obj[3546 0 R]endobj3550 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3551 0 obj[3550 0 R 3552 0 R 3553 0 R 3554 0 R 3555 0 R 3557 0 R]endobj3552 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3520 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_91.html)/S/URI>>/Border[0 0 0]>>endobj3553 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3597 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_93.html)/S/URI>>/Border[0 0 0]>>endobj3554 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3555 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3556 0 obj[3547 0 R/XYZ 0 731.2 null]endobj3557 0 obj<</Rect[10.0 693.431 249.658 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC98)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC98)/S/URI>>/Border[0 0 0]>>endobj3558 0 obj<</Parent 3572 0 R/ID 3590 0 R/StructParents 160/Contents 3582 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3559 0 obj[3546 0 R]endobj3560 0 obj<</Limits[96 127]/Nums[96 2384 0 R 97 2388 0 R 98 2410 0 R 99 2436 0 R 100 2448 0 R 101 2471 0 R 102 2499 0 R 103 2526 0 R 104 2537 0 R 105 2559 0 R 106 2595 0 R 107 2608 0 R 108 2610 0 R 109 2631 0 R 110 2662 0 R 111 2675 0 R 112 2697 0 R 113 2707 0 R 114 2731 0 R 115 2742 0 R 116 2766 0 R 117 2779 0 R 118 2781 0 R 119 2784 0 R 120 2807 0 R 121 2817 0 R 122 2819 0 R 123 2840 0 R 124 2856 0 R 125 2877 0 R 126 2904 0 R 127 2919 0 R]>>endobj3561 0 obj<</Limits[128 192]/Nums[]>>endobj3562 0 obj<</Parent 3572 0 R/ID 3590 0 R/StructParents 161/Contents 3583 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3563 0 obj[3546 0 R]endobj3564 0 obj<</Parent 3572 0 R/ID 3590 0 R/StructParents 162/Contents 3584 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3565 0 obj[3546 0 R]endobj3566 0 obj[3564 0 R/XYZ 0 238.059 null]endobj3567 0 obj[3564 0 R/XYZ 0 135.059 null]endobj3568 0 obj<</Parent 3572 0 R/ID 3590 0 R/StructParents 163/Contents 3585 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3569 0 obj[3546 0 R]endobj3570 0 obj[3568 0 R/XYZ 0 111.93 null]endobj3571 0 obj<</Annots 3575 0 R/Parent 3616 0 R/ID 3590 0 R/StructParents 164/Contents 3586 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3572 0 obj<</Parent 3708 0 R/Count 5/Type/Pages/Kids[3547 0 R 3558 0 R 3562 0 R 3564 0 R 3568 0 R]>>endobj3573 0 obj[3546 0 R]endobj3574 0 obj<</Rect[297.35 566.796 441.228 581.796]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‹}ˇp`‚A‰ZÙ˘ÎÿûSEC37)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_35.html#SEC37)/S/URI>>/Border[0 0 0]>>endobj3575 0 obj[3574 0 R 3576 0 R 3577 0 R 3578 0 R 3579 0 R 3580 0 R]endobj3576 0 obj<</Rect[65.608 512.996 88.162 527.996]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3577 0 obj<</Rect[95.162 512.996 143.378 527.996]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3520 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_91.html)/S/URI>>/Border[0 0 0]>>endobj3578 0 obj<</Rect[150.378 512.996 174.486 527.996]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3597 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_93.html)/S/URI>>/Border[0 0 0]>>endobj3579 0 obj<</Rect[181.486 512.996 200.932 527.996]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3580 0 obj<</Rect[251.094 512.996 343.634 527.996]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3581 0 obj<</Length 4659>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Making Some Objects)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
249.658 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Making Some Objects \(Hunk D\))Tj
0 0 0 rg
/T1_2 1 Tf
14 0 0 14 10 659.7235 Tm
(==================================================================)Tj
0 -1.2 TD
(Hunk D starts here:)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
(I've been talking about "objects," but most of the objects we've seen do\n't have interesting structure. )Tj
0 -2.557 TD
(One of the most important kinds object in Scheme is the )Tj
/T1_3 1 Tf
(pair)Tj
/T1_0 1 Tf
(, which you can create with the built-in )Tj
0 -1.205 TD
(procedure )Tj
/T1_2 1 Tf
(cons)Tj
/T1_0 1 Tf
(. A pair is a simple kind of structured object, like a Pascal record or \a C struct. It has )Tj
0 -1.205 TD
(two fields, called the )Tj
/T1_3 1 Tf
(car)Tj
/T1_0 1 Tf
( and the )Tj
/T1_3 1 Tf
(cdr)Tj
/T1_0 1 Tf
(, and you can extract their values with the standard procedures )Tj
/T1_2 1 Tf
(car)Tj
/T1_0 1 Tf
( )Tj
T*
(and )Tj
/T1_2 1 Tf
(cdr)Tj
/T1_0 1 Tf
(. )Tj
/T1_2 1 Tf
0 -2.562 TD
(cons)Tj
/T1_0 1 Tf
( takes two arguments, which it uses as the initial values of the car and\ cdr fields of the pair it )Tj
0 -1.205 TD
(creates. \()Tj
/T1_2 1 Tf
(cons)Tj
/T1_0 1 Tf
( is called that because it )Tj
/T1_2 1 Tf
(cons)Tj
/T1_0 1 Tf
(tructs a pair; the name is short because it's a common )Tj
0 -1.205 TD
(operation. In Lisp, pairs are called "cons cells" because you make them \with )Tj
/T1_2 1 Tf
(cons)Tj
/T1_0 1 Tf
(.\) )Tj
0 -2.557 TD
(I'll show you some simple examples of playing with pairs, just to show y\ou what they are. Be warned )Tj
0 -1.2 TD
(that these are )Tj
/T1_3 1 Tf
(bad)Tj
/T1_0 1 Tf
( examples, in that there are usually cleaner ways to do things, which we\'ll discuss later )Tj
T*
(when we get to lists. \(Lists are made of pairs.\) )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme>\(cons 1 2\))Tj
0 -1.2 TD
(\(1 . 2\))Tj
/T1_0 1 Tf
0 -2.557 TD
(What happened here was that the call to )Tj
/T1_2 1 Tf
(cons)Tj
/T1_0 1 Tf
( created a pair, and returned \(a pointer to\) it. Scheme )Tj
0 -1.2 TD
(printed out a textual representation of the pair, showing the values of \its car and cdr fields, separated by )Tj
T*
(a dot and enclosed in parentheses. )Tj
0 -2.557 TD
(\(The printed representation looks sort of like a Scheme expression, bec\ause of the parentheses, but it's )Tj
0 -1.2 TD
(not--it's just the way Scheme prints this kind of data structure. We're \looking at the )Tj
/T1_3 1 Tf
(value)Tj
/T1_0 1 Tf
( returned by the )Tj
0 -1.205 TD
(expression )Tj
/T1_2 1 Tf
(\(cons 1 2\))Tj
/T1_0 1 Tf
(. Don't be confused by the similarity between written Scheme expressions\ and )Tj
0 -1.2 TD
(the textual representation of data structures--they're very different th\ings.\) )Tj
0 -2.557 TD
(We didn't do anything with the pair except let Scheme print it, so we've\ lost it--we didn't save a pointer )Tj
0 -1.2 TD
(to it, so we can't refer to it. \(The garbage collector will take back i\ts space, so we don't have to worry )Tj
T*
(that we've lost storage space.\) )Tj
0 -2.562 TD
(Let's try again, defining \(and binding\) a variable, and initializing i\t with the pointer that )Tj
/T1_2 1 Tf
(cons)Tj
/T1_0 1 Tf
( returns. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_92.html \(1 of 6\)11\/3/2006 9:05:32 PM)Tj
ET
EMC 

endstreamendobj3582 0 obj<</Length 3108>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Making Some Objects)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 745.517 Tm
(Scheme>\(define my-pair \(cons 1 2\)\))Tj
0 -1.2 TD
(#void)Tj
0 -2.4 TD
(Scheme>my-pair)Tj
0 -1.2 TD
(\(1 . 2\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Now try extracting the values of the pair's fields, using )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(\(In Scheme, )Tj
/T1_1 1 Tf
(\(car foo\))Tj
/T1_0 1 Tf
( is equivalent to C's )Tj
/T1_1 1 Tf
(foo->car)Tj
/T1_0 1 Tf
(, dereferencing a pointer to an object and )Tj
0 -1.205 TD
(extracting the value of the )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( field. Likewise, )Tj
/T1_1 1 Tf
(\(cdr foo\))Tj
/T1_0 1 Tf
( is like )Tj
/T1_1 1 Tf
(foo->cdr)Tj
/T1_0 1 Tf
(. The operators that )Tj
0 -1.2 TD
(access fields of a pair are just procedures.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(car my-pair\))Tj
0 -1.2 TD
(1)Tj
0 -2.4 TD
(Scheme>\(cdr my-pair\))Tj
0 -1.2 TD
(2)Tj
/T1_0 1 Tf
0 -2.552 TD
(We don't need to use any special pointer syntax to dereference the point\er to the pair---)Tj
/T1_2 1 Tf
(car)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(cdr)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
0 -1.2 TD
(expect)Tj
/T1_0 1 Tf
( a pointer, and return the field values of the pair it points to. )Tj
/T1_1 1 Tf
0 -2.562 TD
(car)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
( only work on pairs. If you try to take the car or cdr of anything else,\ you'll get a runtime )Tj
0 -1.2 TD
(type error. )Tj
0 -2.557 TD
(Try it: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(car #t\))Tj
0 -1.2 TD
(ERROR: attempt to take the car of a non-pair #t)Tj
T*
(break>,top)Tj
T*
(Scheme>)Tj
/T1_0 1 Tf
0 -2.552 TD
(The messages you'll see vary from system to system, but the basic idea i\s the same. We tried to take the )Tj
/T1_1 1 Tf
0 -1.205 TD
(car)Tj
/T1_0 1 Tf
( of the boolean )Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
(, which makes no sense because it has no car field--it doesn't have )Tj
/T1_2 1 Tf
(any)Tj
/T1_0 1 Tf
( fields. )Tj
0 -1.205 TD
(Scheme told us it didn't work, and gave us a break prompt for sorting it\ out. Then we just used the )Tj
/T1_1 1 Tf
(,top)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(command \(or whatever works on your system\) to tell Scheme to give up o\n evaluating that expression )Tj
T*
(and go back to normal interaction. )Tj
/T1_1 1 Tf
0 -2.562 TD
(car)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
( don't work on the empty list. The empty list doesn't have car and cdr f\ields. \(This may be )Tj
0 -1.205 TD
(surprising to Lisp programmers, who expect the empty list to behave like\ Lisp's )Tj
/T1_1 1 Tf
(nil)Tj
/T1_0 1 Tf
(. It doesn't, in this )Tj
0 -1.2 TD
(respect.\) )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_92.html \(2 of 6\)11\/3/2006 9:05:32 PM)Tj
ET
EMC 

endstreamendobj3583 0 obj<</Length 2603>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Making Some Objects)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9082 Tm
(Scheme also supplies procedures to change the values of a pair's fields,\ called )Tj
/T1_1 1 Tf
(set-car!)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(set-)Tj
0 -1.205 TD
(cdr!)Tj
/T1_0 1 Tf
(. They take two arguments, a pair and a value for the field being set. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(set-car! my-pair 4\))Tj
0 -1.2 TD
(#void)Tj
0 -2.4 TD
(Scheme>my-pair)Tj
0 -1.2 TD
(\(4 . 2\))Tj
0 -2.4 TD
(Scheme>\(set-cdr! my-pair 5\))Tj
0 -1.2 TD
(#void)Tj
0 -2.4 TD
(Scheme>my-pair)Tj
0 -1.2 TD
(\(4 . 5\))Tj
/T1_0 1 Tf
0 -2.557 TD
(The value of the variable )Tj
/T1_1 1 Tf
(my-pair)Tj
/T1_0 1 Tf
( hasn't actually changed, even though it prints differently. )Tj
/T1_1 1 Tf
(my-pair)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(still holds a pointer to the same object, the pair we created with )Tj
/T1_1 1 Tf
(cons)Tj
/T1_0 1 Tf
(. What )Tj
/T1_2 1 Tf
(has)Tj
/T1_0 1 Tf
( changed is the )Tj
/T1_2 1 Tf
(contents )Tj
0 -1.2 TD
(of)Tj
/T1_0 1 Tf
( that object. Its fields are like variable bindings, in that they can ho\ld \(pointers to\) any kind of object, )Tj
T*
(and we've assigned new values to them. \(They're )Tj
/T1_2 1 Tf
(value cells)Tj
/T1_0 1 Tf
(.\) )Tj
0 -2.557 TD
(We can refer to the same object by another name if we just define anothe\r variable and initialize it with )Tj
/T1_1 1 Tf
0 -1.205 TD
(my-pair)Tj
/T1_0 1 Tf
('s value. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme> \(define same-pair my-pair\))Tj
0 -1.2 TD
(#void)Tj
0 -2.4 TD
(Scheme>same-pair)Tj
0 -1.2 TD
(\(4 . 5\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Now suppose we assign a new value to the car of the pair, referring to i\t via )Tj
/T1_1 1 Tf
(my-pair)Tj
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(set-car! my-pair 6\))Tj
0 -1.2 TD
(#void)Tj
0 -2.4 TD
(Scheme>my-pair)Tj
0 -1.2 TD
(\(6 . 5\))Tj
0 -2.4 TD
(Scheme>same-pair)Tj
0 -1.2 TD
(\(6 . 5\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that the change is visible through )Tj
/T1_1 1 Tf
(same-pair)Tj
/T1_0 1 Tf
( as well as )Tj
/T1_1 1 Tf
(my-pair)Tj
/T1_0 1 Tf
(, because we've changed the )Tj
0 -1.2 TD
(object that both of them point to. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_92.html \(3 of 6\)11\/3/2006 9:05:32 PM)Tj
ET
EMC 

endstreamendobj3584 0 obj<</Length 2894>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Making Some Objects)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 743.5038 Tm
(Now let's make another pair with the same field values. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(define different-pair \(cons 6 5\)\))Tj
0 -1.2 TD
(different-pair)Tj
0 -2.4 TD
(Scheme>different-pair)Tj
0 -1.2 TD
(\(6 . 5\))Tj
0 -2.4 TD
(Scheme>my-pair)Tj
0 -1.2 TD
(\(6 . 5\))Tj
0 -2.4 TD
(Scheme>same-pair)Tj
0 -1.2 TD
(\(6 . 5\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Notice that we have two different pairs, but Scheme prints them out the \same way, because it just shows )Tj
0 -1.2 TD
(us the )Tj
/T1_2 1 Tf
(structure)Tj
/T1_0 1 Tf
( of data structures. We can't tell that they're different just by lookin\g at the printed )Tj
0 -1.205 TD
(output. From the printed representation, we can't tell whether or not )Tj
/T1_1 1 Tf
(my-pair)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(same-pair)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
T*
(different-pair)Tj
/T1_0 1 Tf
( hold the same values. )Tj
0 -2.562 TD
(Scheme provides a predicate procedure, )Tj
/T1_1 1 Tf
(eq?)Tj
/T1_0 1 Tf
(, to tell whether two objects are the exact same object. )Tj
/T1_1 1 Tf
T*
(Scheme>\(eq? my-pair same-pair\))Tj
0 -1.2 TD
(#t)Tj
T*
(Scheme>\(eq? my-pair different-pair\))Tj
T*
(#f)Tj
T*
(Scheme>\(eq? same-pair different-pair\))Tj
T*
(#f)Tj
0 -2.557 TD
(eq?)Tj
/T1_0 1 Tf
( tests object )Tj
/T1_2 1 Tf
(identity)Tj
/T1_0 1 Tf
(, like pointer comparisons in C \(using )Tj
/T1_1 1 Tf
(==)Tj
/T1_0 1 Tf
(\) or Pascal \(using )Tj
/T1_1 1 Tf
(=)Tj
/T1_0 1 Tf
(\). )Tj
T*
(It may be confusing, but in programming language terminology, two object\s are called )Tj
/T1_2 1 Tf
(identical)Tj
/T1_0 1 Tf
( only if )Tj
0 -1.2 TD
(they are the very same object, not just two objects that look alike, lik\e "identical" twins. When the )Tj
T*
(government issues "identity" cards, this is the kind of "identity" we're\ talking about. Two so-called )Tj
T*
(identical twins have different identities, because they're actually diff\erent people. A pointer is like a a )Tj
T*
(social security number, because it uniquely identifies a particular indi\vidual object. )Tj
0 -2.557 TD
(Scheme also has a test to see whether objects "look the same," that is, \have the same structure. It's called )Tj
/T1_1 1 Tf
0 -1.205 TD
(equal?)Tj
/T1_0 1 Tf
(. We call this a )Tj
/T1_2 1 Tf
(structural equivalence)Tj
/T1_0 1 Tf
( test. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(equal? my-pair same-pair\))Tj
0 -1.2 TD
(#t)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_92.html \(4 of 6\)11\/3/2006 9:05:32 PM)Tj
ET
EMC 

endstreamendobj3585 0 obj<</Length 3294>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Making Some Objects)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(Scheme>\(equal? my-pair different-pair\))Tj
0 -1.2 TD
(#t)Tj
T*
(Scheme>\(equal? same-pair different-pair\))Tj
T*
(#t)Tj
0 -2.557 TD
(different-pair)Tj
/T1_0 1 Tf
( is )Tj
/T1_1 1 Tf
(equal?)Tj
/T1_0 1 Tf
( to )Tj
/T1_1 1 Tf
(my-pair)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(same-pair)Tj
/T1_0 1 Tf
( because it refers to the same kind of )Tj
0 -1.205 TD
(object, and its field values are )Tj
/T1_1 1 Tf
(equal?)Tj
/T1_0 1 Tf
(. Notice that that's a recursive definition, which we'll discuss )Tj
0 -1.2 TD
(more when we get to lists. )Tj
0 -2.562 TD
(If we didn't have )Tj
/T1_1 1 Tf
(eq?)Tj
/T1_0 1 Tf
(, we could still figure out whether two objects were exactly the same ob\ject, by )Tj
0 -1.2 TD
(changing one and seeing if the other changed, too. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(set-car! my-pair 4\))Tj
0 -1.2 TD
(#void)Tj
0 -2.4 TD
(Scheme>my-pair)Tj
0 -1.2 TD
(\(4 . 5\))Tj
0 -2.4 TD
(Scheme>same-pair)Tj
0 -1.2 TD
(\(4 . 5\))Tj
0 -2.4 TD
(Scheme>different-pair)Tj
0 -1.2 TD
(\(6 . 5\) )Tj
/T1_0 1 Tf
0 -2.557 TD
(Now I should warn you about )Tj
/T1_1 1 Tf
(set-car!)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(set-cdr!)Tj
/T1_0 1 Tf
(. The reason we put an exclamation point in )Tj
0 -1.2 TD
(the name of a procedure that side-effects data is because it's dangerous\. If you have two pointers to the )Tj
T*
(same data from different places, i.e., different variable bindings or da\ta structures, it's hard to reason )Tj
T*
(about how changes from one of those places affect things at the other pl\ace. )Tj
0 -2.557 TD
(In normal Scheme programming style, it is very common to create new data\ structures that have pointers )Tj
0 -1.2 TD
(to other data structures, or parts of data structures. If you modify a s\hared part of one data structure, it )Tj
T*
(will affect the other data structure that shares that part. This can be \very confusing, and leads to subtle )Tj
T*
(bugs. )Tj
0 -2.557 TD
(You should only use side effects when you have a very good reason to, an\d make it clear that that's what )Tj
0 -1.2 TD
(you're doing. Later examples will show how to program in a style that us\es very few side effects, and )Tj
T*
(only where they make sense. )Tj
0 -2.562 TD
(Notice that )Tj
/T1_1 1 Tf
(cons)Tj
/T1_0 1 Tf
( is )Tj
/T1_2 1 Tf
(not)Tj
/T1_0 1 Tf
( considered a side-effecting operation, because it returns a )Tj
/T1_2 1 Tf
(new)Tj
/T1_0 1 Tf
( object that has )Tj
0 -1.205 TD
(never been seen before. Somewhere in the implementation of the language,\ )Tj
/T1_1 1 Tf
(cons)Tj
/T1_0 1 Tf
( side-effects memory )Tj
0 -1.2 TD
(to initialize it, but you don't see that--from your program's point of v\iew, you're getting a )Tj
/T1_2 1 Tf
(new)Tj
/T1_0 1 Tf
( piece of )Tj
T*
(memory that magically has values in place. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_92.html \(5 of 6\)11\/3/2006 9:05:32 PM)Tj
ET
EMC 

endstreamendobj3586 0 obj<</Length 2225>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Making Some Objects)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 743.5712 Tm
(Creating a pair doesn't modify any data structure that already exists, s\o the installation of its initial )Tj
0 -1.2 TD
(values is not considered a side-effect. )Tj
/T1_1 1 Tf
0 -2.562 TD
(==================================================================)Tj
0 -1.2 TD
(This is the end of Hunk D.)Tj
0 -2.4 TD
(At this point, you should go back to the previous chapter and)Tj
0 -1.2 TD
(read Hunk E before returning here and continuing this tutorial.)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Go BACK to read Hunk E, which starts at section )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
297.35 569.054 m
441.228 569.054 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 297.35 571.1712 Tm
(The Empty List \(Hunk E\))Tj
0 0 0 rg
(.\) )Tj
ET
0.5 0.5 0.5 rg
10 536.396 m
10 538.396 l
602 538.396 l
601 537.396 l
11 537.396 l
11 537.396 l
h
f
0.875 0.875 0.875 rg
602 538.396 m
602 536.396 l
10 536.396 l
11 537.396 l
601 537.396 l
601 537.396 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 517.3712 Tm
(Go to the )Tj
ET
65.608 515.254 m
88.162 515.254 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 517.3712 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 515.254 m
143.378 515.254 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 517.3712 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 515.254 m
174.486 515.254 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 517.3712 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 515.254 m
200.932 515.254 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 517.3712 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 515.254 m
343.634 515.254 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 517.3712 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_92.html \(6 of 6\)11\/3/2006 9:05:32 PM)Tj
ET
EMC 

endstreamendobj3587 0 obj(An Introduction to Scheme and its Implementation - Making Some Objects)endobj3588 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_92.html)/S 700 0 R>>endobj3589 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_92.html)endobj3590 0 obj(ºj\rﬁl¨V£¥T-%«)endobj3591 0 obj<</TS(D:20061104050532)/ID 3590 0 R/CT(text/html)/O[3547 0 R 3558 0 R 3562 0 R 3564 0 R 3568 0 R 3571 0 R]/S/SPS/T 3587 0 R/TID 3593 0 R/SI 3592 0 R>>endobj3592 0 obj<</TS(D:20061104050532)/AU 3589 0 R>>endobj3593 0 obj(√Ü«\\§K‹äŒü=”—]])endobj3594 0 obj<</Parent 710 0 R/Next 3640 0 R/Dest[3547 0 R/XYZ 0 792 null]/Prev 3544 0 R/SE 3546 0 R/Title(An Introduction to Scheme and its Implementation - Making Some Objects)>>endobj3595 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3596 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 3608 0 R/Type/MCR>><</MCID 0/Pg 3610 0 R/Type/MCR>><</MCID 0/Pg 3613 0 R/Type/MCR>><</MCID 0/Pg 3615 0 R/Type/MCR>><</MCID 0/Pg 3618 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 3597 0 R>>endobj3597 0 obj<</Annots 3600 0 R/Parent 3616 0 R/ID 3636 0 R/StructParents 165/Contents 3627 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R/T1_4 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3598 0 obj[3596 0 R]endobj3599 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3600 0 obj[3599 0 R 3601 0 R 3602 0 R 3603 0 R 3604 0 R 3606 0 R]endobj3601 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3547 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_92.html)/S/URI>>/Border[0 0 0]>>endobj3602 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3643 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_94.html)/S/URI>>/Border[0 0 0]>>endobj3603 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3604 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3605 0 obj[3597 0 R/XYZ 0 731.2 null]endobj3606 0 obj<</Rect[10.0 693.431 117.698 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC99)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC99)/S/URI>>/Border[0 0 0]>>endobj3607 0 obj[3597 0 R/XYZ 0 602.415 null]endobj3608 0 obj<</Parent 3616 0 R/ID 3636 0 R/StructParents 166/Contents 3628 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3609 0 obj[3596 0 R]endobj3610 0 obj<</Parent 3616 0 R/ID 3636 0 R/StructParents 167/Contents 3629 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3611 0 obj[3596 0 R]endobj3612 0 obj[3610 0 R/XYZ 0 624.933 null]endobj3613 0 obj<</Parent 3616 0 R/ID 3636 0 R/StructParents 168/Contents 3630 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3614 0 obj[3596 0 R]endobj3615 0 obj<</Parent 3687 0 R/ID 3636 0 R/StructParents 169/Contents 3631 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3616 0 obj<</Parent 3708 0 R/Count 5/Type/Pages/Kids[3571 0 R 3597 0 R 3608 0 R 3610 0 R 3613 0 R]>>endobj3617 0 obj[3596 0 R]endobj3618 0 obj<</Annots 3621 0 R/Parent 3687 0 R/ID 3636 0 R/StructParents 170/Contents 3632 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3619 0 obj[3596 0 R]endobj3620 0 obj<</Rect[298.904 504.852 520.916 519.852]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∆ã¸ó©0»¶M†ó$`OSEC54)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_47.html#SEC54)/S/URI>>/Border[0 0 0]>>endobj3621 0 obj[3620 0 R 3622 0 R 3623 0 R 3624 0 R 3625 0 R 3626 0 R]endobj3622 0 obj<</Rect[65.608 451.052 88.162 466.052]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3623 0 obj<</Rect[95.162 451.052 143.378 466.052]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3547 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_92.html)/S/URI>>/Border[0 0 0]>>endobj3624 0 obj<</Rect[150.378 451.052 174.486 466.052]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3643 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_94.html)/S/URI>>/Border[0 0 0]>>endobj3625 0 obj<</Rect[181.486 451.052 200.932 466.052]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3626 0 obj<</Rect[251.094 451.052 343.634 466.052]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3627 0 obj<</Length 4674>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Lists)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
117.698 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Lists \(Hunk F\))Tj
0 0 0 rg
/T1_2 1 Tf
14 0 0 14 10 659.7235 Tm
(==================================================================)Tj
0 -1.2 TD
(Hunk F starts here:)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
(We usually use pairs in Scheme in a particular, stereotyped way, to buil\d )Tj
/T1_3 1 Tf
(lists)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Pairs are really like binary tree nodes--you )Tj
/T1_3 1 Tf
(can)Tj
/T1_0 1 Tf
( use the car and cdr fields in the same ways. The )Tj
/T1_3 1 Tf
(normal)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(way of using them treats the car and the cdr differently, however. )Tj
0 -2.557 TD
(The cdr field of a pair is used to hold a pointer to another pair, or a \pointer to the empty list, i.e., a null )Tj
0 -1.2 TD
(pointer. This lets you string pairs to gether to make linked lists of pa\irs. The car fields of the pairs hold )Tj
T*
(pointers to any kind of object you want to put in a list. )Tj
0 -2.557 TD
(We can therefore define the term )Tj
/T1_3 1 Tf
(list)Tj
/T1_0 1 Tf
( recursively as )Tj
/T1_4 1 Tf
7 0 0 7 35.713 396.7235 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 396.7235 Tm
(an empty list, i.e., the null pointer object )Tj
/T1_2 1 Tf
(\(\))Tj
/T1_0 1 Tf
(, )Tj
/T1_3 1 Tf
(or)Tj
/T1_0 1 Tf
( )Tj
/T1_4 1 Tf
7 0 0 7 35.713 379.8562 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 379.8562 Tm
(a pair whose )Tj
/T1_2 1 Tf
(cdr)Tj
/T1_0 1 Tf
( value is a list. )Tj
-2.857 -2.557 Td
(Think about this, and make sure that you understand why this covers all \null-terminated lists strung )Tj
0 -1.205 TD
(together by the )Tj
/T1_2 1 Tf
(cdr)Tj
/T1_0 1 Tf
(s, and nothing else. Lists of this form are also called )Tj
/T1_3 1 Tf
(proper)Tj
/T1_0 1 Tf
( lists, and that's usually )Tj
0 -1.2 TD
(what we mean when we say "list." The important fact about a proper list \is that it is a linear sequence of )Tj
T*
(pairs )Tj
/T1_3 1 Tf
(ending with the empty list)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(We usually think of lists as holding a sequence of values--we ignore the\ actual pairs, and think about )Tj
0 -1.205 TD
(their )Tj
/T1_2 1 Tf
(cdr)Tj
/T1_0 1 Tf
( values. )Tj
0 -2.557 TD
(Because this is how lists are usually used, Scheme has a special way of \printing lists. In the earlier )Tj
0 -1.205 TD
(examples, I showed that the result of )Tj
/T1_2 1 Tf
(\(cons 1 2\))Tj
/T1_0 1 Tf
( prints as )Tj
/T1_2 1 Tf
(\(1 . 2\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(You might think that the result of )Tj
/T1_2 1 Tf
(\(cons 1 \(cons 2 '\(\)\)\))Tj
/T1_0 1 Tf
( would print as \(1 . \(2 . '\(\)\)\), but it )Tj
0 -1.205 TD
(doesn't. It prints as )Tj
/T1_2 1 Tf
(\(1 2\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(The reason is that when Scheme encounters a pair whose )Tj
/T1_2 1 Tf
(cdr)Tj
/T1_0 1 Tf
( points to another pair or the empty list, it )Tj
0 -1.205 TD
(assumes you want to think of it as a list of pairs strung together by th\e )Tj
/T1_2 1 Tf
(cdr)Tj
/T1_0 1 Tf
(s, and it only shows you the )Tj
/T1_2 1 Tf
0 -1.205 TD
(car)Tj
/T1_0 1 Tf
( values. This is because we usually ignore the actual structure of a lis\t--the sequence of pairs--and )Tj
0 -1.2 TD
(think about the values the list holds. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_93.html \(1 of 6\)11\/3/2006 9:05:39 PM)Tj
ET
EMC 

endstreamendobj3628 0 obj<</Length 2265>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Lists)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 743.317 Tm
(Try this in your system: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>'\(\))Tj
0 -1.2 TD
(\(\))Tj
T*
(Scheme>\(cons 1 '\(\)\))Tj
T*
(\(1\))Tj
T*
(Scheme>\(cons 1 \(cons 2 '\(\)\)\))Tj
T*
(\(1 2\))Tj
T*
(Scheme>\(cons 1 \(cons 2 \(cons 3 '\(\)\)\)\))Tj
T*
(\(1 2 3\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that the data structure that prints as )Tj
/T1_1 1 Tf
(\(1 2 3\))Tj
/T1_0 1 Tf
( is really a binary tree, and we )Tj
/T1_2 1 Tf
(could)Tj
/T1_0 1 Tf
( draw it like )Tj
0 -1.2 TD
(this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(      \\)Tj
0 -1.2 TD
(       \\)Tj
T*
(        +---+---+)Tj
T*
(        | * | * |)Tj
T*
(        +/--+---\\)Tj
T*
(        /        \\)Tj
T*
(       1          +---+---+)Tj
T*
(                  | * | * |)Tj
T*
(                  +/--+---\\)Tj
T*
(                  /        \\)Tj
T*
(                 2          +---+---+)Tj
T*
(                            | * | * |)Tj
T*
(                            +/--+---+)Tj
T*
(                            /)Tj
T*
(                           3)Tj
/T1_0 1 Tf
0 -2.552 TD
(We generally wouldn't, though, because we think of it as a sequence of n\umbers, and the pairs are just )Tj
0 -1.2 TD
(there to string them together in order. We'd draw it more like this, usi\ng the box-and-arrow notation )Tj
0 -1.2 TD
(from the previous chapter: )Tj
/T1_1 1 Tf
0 -2.562 TD
(       +---+---+    +---+---+   +---+---+)Tj
0 -1.2 TD
(   --->| * | *-+--->| * | *-+-->| * | * |)Tj
T*
(       +-+-+---+    +-+-+---+   +-+-+---*)Tj
T*
(         |            |           |)Tj
T*
(         |            |           |)Tj
T*
(         1            2           3)Tj
/T1_0 1 Tf
0 -2.552 TD
(We've really just rotated the picture 45 degrees, so that "down and to t\he right" in the tree goes straight )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_93.html \(2 of 6\)11\/3/2006 9:05:39 PM)Tj
ET
EMC 

endstreamendobj3629 0 obj<</Length 3554>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Lists)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(right, and looks more like "next" in a linear list. )Tj
0 -2.557 TD
(\(The arrow coming in from the left represents the pointer value that wa\s returned, which the read-eval-)Tj
0 -1.205 TD
(print loop handed to )Tj
/T1_1 1 Tf
(write)Tj
/T1_0 1 Tf
( so that we could see the printed representation of the data structure.\)\ )Tj
0 -2.557 TD
(Drawing things this way lets us show shared structure, if a list overlap\s with another list, e.g, if one list )Tj
0 -1.2 TD
(joins with the other because some car in each list points at the same ob\ject. )Tj
0 -2.562 TD
(Note that a list of this form always ends with a pair whose )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
( is )Tj
/T1_1 1 Tf
(\(\))Tj
/T1_0 1 Tf
(, \(i.e., the empty list, a.k.a. the null )Tj
0 -1.2 TD
(pointer\). )Tj
0 -2.562 TD
(If we had forgotten that, we might have tried to construct the list this\ way, with the innermost )Tj
/T1_1 1 Tf
(cons)Tj
/T1_0 1 Tf
( just )Tj
0 -1.2 TD
(consing two numbers together: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(cons 1 \(cons 2 3\)\))Tj
0 -1.2 TD
(\(1 2 . 3\))Tj
/T1_0 1 Tf
0 -2.552 TD
(This is a common beginning mistake. We have constructed an )Tj
/T1_2 1 Tf
(improper list)Tj
/T1_0 1 Tf
(---one which is not null-)Tj
0 -1.205 TD
(terminated. It doesn't end with )Tj
/T1_1 1 Tf
(\(\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(We could draw the list this way: )Tj
/T1_1 1 Tf
0 -2.562 TD
(      +---+---+      +---+---+  )Tj
0 -1.2 TD
(  --->| * | *-+----->| * | *-+---->3)Tj
T*
(      +-+-+---+      +-+-+---+)Tj
T*
(        |              |    )Tj
T*
(       \\|/            \\|/  )Tj
T*
(        1              2 )Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice the dot in )Tj
/T1_1 1 Tf
(\(1 2 . 3\))Tj
/T1_0 1 Tf
(---that's like the dot in )Tj
/T1_1 1 Tf
(\(2 . 3\))Tj
/T1_0 1 Tf
(, saying that the cdr of a pair points to )Tj
/T1_1 1 Tf
(3)Tj
/T1_0 1 Tf
(, )Tj
0 -1.205 TD
(not another pair or )Tj
/T1_1 1 Tf
('\(\))Tj
/T1_0 1 Tf
(. That is, it's an )Tj
/T1_2 1 Tf
(improper list)Tj
/T1_0 1 Tf
(, not just a list of pairs. It doesn't fit the recursive )Tj
0 -1.2 TD
(definition of a list, because when we get to the second pair, its cdr is\n't a list--it's an integer. )Tj
0 -2.557 TD
(Scheme printed out the first part of the list as though it were a normal\ )Tj
/T1_2 1 Tf
(cdr)Tj
/T1_0 1 Tf
(-linked list, but when it got to )Tj
0 -1.2 TD
(the end, it couldn't do that, so it used "dot notation." )Tj
0 -2.557 TD
(You generally shouldn't need to worry about dot notation, because you sh\ould use normal lists, not )Tj
0 -1.2 TD
(improper list. But if you see an unexpected dot when Scheme prints out a\ data structure, it's a good )Tj
0 -1.205 TD
(guess that you used )Tj
/T1_1 1 Tf
(cons)Tj
/T1_0 1 Tf
( and gave it a non-list as its second argument--something besides anothe\r pair )Tj
0 -1.205 TD
(or )Tj
/T1_1 1 Tf
(\(\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Scheme provides a handy procedure that creates proper lists, called )Tj
/T1_1 1 Tf
(list)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
(list)Tj
/T1_0 1 Tf
( can take any number )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_93.html \(3 of 6\)11\/3/2006 9:05:39 PM)Tj
ET
EMC 

endstreamendobj3630 0 obj<</Length 2773>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Lists)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 751.369 Tm
(of arguments, and constructs a proper list with those elements in that o\rder. You don't have to remember )Tj
0 -1.205 TD
(to supply the empty list---)Tj
/T1_1 1 Tf
(list)Tj
/T1_0 1 Tf
( automatically terminates the list that way. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(list 1 2 3 4\))Tj
0 -1.2 TD
(\(1 2 3 4\))Tj
/T1_0 1 Tf
0 -2.552 TD
(We could draw the result like this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(    +---+---+      +---+---+      +---+---+      +---+---+)Tj
0 -1.2 TD
(--->| * | *-+----->| * | *-+----->| * | *-+----->| * | * |)Tj
T*
(    +-+-+---+      +-+-+---+      +-+-+---+      +-+-+---+)Tj
T*
(      |              |              |              |)Tj
T*
(     \\|/            \\|/            \\|/            \\|/)Tj
T*
(      1              2              3              4)Tj
/T1_0 1 Tf
0 -2.557 TD
(Like any other procedure, )Tj
/T1_1 1 Tf
(list)Tj
/T1_0 1 Tf
( can be used with arguments that are procedure calls, such as calls to )Tj
/T1_1 1 Tf
0 -1.205 TD
(list)Tj
/T1_0 1 Tf
( itself. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(list \(list 1 2\) \(list 3 4\)\))Tj
0 -1.2 TD
(\(\(1 2\) \(3 4\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(We can draw the result like this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(    +---+---+                     +---+---+)Tj
0 -1.2 TD
(--->| * | *-+-------------------->| * | * |)Tj
T*
(    +-+-+---+                     +-+-+---+ )Tj
T*
(      |                             | )Tj
T*
(     \\|/                           \\|/ )Tj
T*
(    +---+---+      +---+---+      +---+---+      +---+---+)Tj
T*
(    | * | *-+----->| * | * |      | * | *-+----->| * | * |)Tj
T*
(    +-+-+---+      +-+-+---+      +-+-+---+      +-+-+---+)Tj
T*
(      |              |              |              |)Tj
T*
(     \\|/            \\|/            \\|/            \\|/)Tj
T*
(      1              2              3              4)Tj
/T1_0 1 Tf
0 -2.552 TD
(While Scheme prints lists in normal list notation when it can \(and only\ uses dot notation when it has to\), )Tj
0 -1.2 TD
(it can read either one. )Tj
0 -2.562 TD
(We can type in literal lists using the )Tj
/T1_1 1 Tf
(quote)Tj
/T1_0 1 Tf
( special form, which just returns a list of the form we typed: )Tj
/T1_1 1 Tf
T*
(Scheme>\(quote \(1 2 3 4\)\))Tj
0 -1.2 TD
(\(1 2 3 4\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_93.html \(4 of 6\)11\/3/2006 9:05:39 PM)Tj
ET
EMC 

endstreamendobj3631 0 obj<</Length 3147>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Lists)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 734.4994 Tm
(Since Scheme can read dot notation, we can do this in an equivalent way,\ using parentheses around the )Tj
0 -1.2 TD
(contents of each pair, and a dot to separate the car and cdr values: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme> \(quote \(1 . \(2 . \(3 . \( 4 . \(\)\)\)\)\)\))Tj
0 -1.2 TD
(\(1 2 3 4\))Tj
/T1_0 1 Tf
0 -2.557 TD
(The difference between )Tj
/T1_1 1 Tf
(list)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(quote)Tj
/T1_0 1 Tf
( is that )Tj
/T1_1 1 Tf
(list)Tj
/T1_0 1 Tf
( is just a procedure, and each time you call it, it )Tj
0 -1.205 TD
(creates a new list. The arguments to )Tj
/T1_1 1 Tf
(list)Tj
/T1_0 1 Tf
( can be any expressions you like, and their results are what's )Tj
0 -1.2 TD
(put in the list. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(list \(double 1\) \(double 2\) \(double 3\) \(double 4\)\))Tj
0 -1.2 TD
(\(2 4 6 8\))Tj
/T1_0 1 Tf
0 -2.557 TD
(On the other hand, )Tj
/T1_1 1 Tf
(quote)Tj
/T1_0 1 Tf
( is a special form. It always takes exactly takes one argument, which is\ )Tj
/T1_2 1 Tf
(not )Tj
0 -1.2 TD
(evaluated at all)Tj
/T1_0 1 Tf
(---it's just a textual representation of a data structure. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(quote \(double 1\)\))Tj
0 -1.2 TD
(\(double 1\))Tj
/T1_0 1 Tf
0 -2.557 TD
(What happened here is that quote just returned a data structure, the lis\t )Tj
/T1_1 1 Tf
(\(double 1\))Tj
/T1_0 1 Tf
(. It did not try to )Tj
0 -1.2 TD
(interpret it as an expression and give its value. )Tj
0 -2.562 TD
(\(The first item in the list is the )Tj
/T1_2 1 Tf
(symbol)Tj
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
(double)Tj
/T1_0 1 Tf
(. A symbol is just another kind of data object, roughly )Tj
0 -1.2 TD
(like a string, which we'll discuss later. It's not the same thing as a v\ariable, even though it prints like a )Tj
T*
(variable name.\) )Tj
0 -2.557 TD
(Quoting is so common that Scheme provides a special bit of syntactic sug\ar to make it easier. Instead of )Tj
0 -1.205 TD
(writing out )Tj
/T1_1 1 Tf
(\(quote)Tj
/T1_0 1 Tf
( before an expression, and a closing parenthesis after, you can just use\ the special )Tj
0 -1.205 TD
(character )Tj
/T1_1 1 Tf
(')Tj
/T1_0 1 Tf
(. Whatever follows should be the textual representation of a data struct\ure, and Scheme )Tj
0 -1.2 TD
(constructs that literal data structure. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>'\(1 2 3 4\))Tj
0 -1.2 TD
(\(1 2 3 4\))Tj
0 -2.4 TD
(Scheme>'\(\(1 2\) \(3 4\) \(5 6\)\))Tj
0 -1.2 TD
(\(\(1 2\) \(3 4\) \(5 6\)\))Tj
0 -2.4 TD
(Scheme>'\(#f #t\))Tj
0 -1.2 TD
(\(#f #t\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Notice that you only need one quote character at the beginning of a whol\e literal--you don't need to )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_93.html \(5 of 6\)11\/3/2006 9:05:39 PM)Tj
ET
EMC 

endstreamendobj3632 0 obj<</Length 2417>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Lists)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.2277 Tm
(separately quote the subparts, and you shouldn't. )Tj
0 -2.557 TD
(Later, I'll talk about quoting things besides lists. Quoted lists are en\ough for now--we'll use them a lot in )Tj
0 -1.2 TD
(examples. )Tj
/T1_1 1 Tf
0 -2.557 TD
([ Should demonstrate list, length, append, reverse, and member here, com\bining them in various ways. ])Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
0 -2.562 TD
(==================================================================)Tj
0 -1.2 TD
(This is the end of Hunk F.)Tj
0 -2.4 TD
(At this point, you should go back to the previous chapter and)Tj
0 -1.2 TD
(read Hunk G before returning here and continuing this tutorial.)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Go BACK to read Hunk G, which starts at section )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
298.904 507.111 m
520.916 507.111 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 298.904 509.2277 Tm
(Type and Equality Predicates \(Hunk G\))Tj
0 0 0 rg
(.\) )Tj
ET
0.5 0.5 0.5 rg
10 474.452 m
10 476.452 l
602 476.452 l
601 475.452 l
11 475.452 l
11 475.452 l
h
f
0.875 0.875 0.875 rg
602 476.452 m
602 474.452 l
10 474.452 l
11 475.452 l
601 475.452 l
601 475.452 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 455.4277 Tm
(Go to the )Tj
ET
65.608 453.311 m
88.162 453.311 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 455.4277 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 453.311 m
143.378 453.311 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 455.4277 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 453.311 m
174.486 453.311 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 455.4277 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 453.311 m
200.932 453.311 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 455.4277 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 453.311 m
343.634 453.311 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 455.4277 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_93.html \(6 of 6\)11\/3/2006 9:05:39 PM)Tj
ET
EMC 

endstreamendobj3633 0 obj(An Introduction to Scheme and its Implementation - Lists)endobj3634 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_93.html)/S 700 0 R>>endobj3635 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_93.html)endobj3636 0 obj(òZè+áI⁄øWº÷i‰osë)endobj3637 0 obj<</TS(D:20061104050539)/ID 3636 0 R/CT(text/html)/O[3597 0 R 3608 0 R 3610 0 R 3613 0 R 3615 0 R 3618 0 R]/S/SPS/T 3633 0 R/TID 3639 0 R/SI 3638 0 R>>endobj3638 0 obj<</TS(D:20061104050539)/AU 3635 0 R>>endobj3639 0 obj(<G∞'-ò¶…DxëUò˝u#)endobj3640 0 obj<</Parent 710 0 R/Next 3672 0 R/Dest[3597 0 R/XYZ 0 792 null]/Prev 3594 0 R/SE 3596 0 R/Title(An Introduction to Scheme and its Implementation - Lists)>>endobj3641 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3642 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 3653 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 3643 0 R>>endobj3643 0 obj<</Annots 3646 0 R/Parent 3687 0 R/ID 3668 0 R/StructParents 171/Contents 3663 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3644 0 obj[3642 0 R]endobj3645 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3646 0 obj[3645 0 R 3647 0 R 3648 0 R 3649 0 R 3650 0 R 3652 0 R]endobj3647 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3597 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_93.html)/S/URI>>/Border[0 0 0]>>endobj3648 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3675 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_95.html)/S/URI>>/Border[0 0 0]>>endobj3649 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3650 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3651 0 obj[3643 0 R/XYZ 0 731.2 null]endobj3652 0 obj<</Rect[10.0 689.877 253.432 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC100)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC100)/S/URI>>/Border[0 0 0]>>endobj3653 0 obj<</Annots 3656 0 R/Parent 3687 0 R/ID 3668 0 R/StructParents 172/Contents 3664 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3654 0 obj[3642 0 R]endobj3655 0 obj<</Rect[50.0 411.667 176.756 426.667]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(—I∆ÀèßEπMòÒ~n?•SEC101)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_95.html#SEC101)/S/URI>>/Border[0 0 0]>>endobj3656 0 obj[3655 0 R 3657 0 R 3658 0 R 3659 0 R 3660 0 R 3661 0 R 3662 0 R]endobj3657 0 obj<</Rect[50.0 392.867 195.432 407.867]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(çkÓ\\0Sß∏√YÈŸm∫jSEC102)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_96.html#SEC102)/S/URI>>/Border[0 0 0]>>endobj3658 0 obj<</Rect[65.608 339.067 88.162 354.067]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3659 0 obj<</Rect[95.162 339.067 143.378 354.067]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3597 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_93.html)/S/URI>>/Border[0 0 0]>>endobj3660 0 obj<</Rect[150.378 339.067 174.486 354.067]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3675 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_95.html)/S/URI>>/Border[0 0 0]>>endobj3661 0 obj<</Rect[181.486 339.067 200.932 354.067]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3662 0 obj<</Rect[251.094 339.067 343.634 354.067]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3663 0 obj<</Length 3715>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Using Predicates)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
253.432 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Using Predicates \(Hunk H\))Tj
0 0 0 rg
/T1_2 1 Tf
14 0 0 14 10 655.8466 Tm
(==================================================================)Tj
0 -1.2 TD
(Hunk H starts here:)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
(Suppose we want to sum a list of numbers. )Tj
0 -2.562 TD
(We can write a procedure )Tj
/T1_2 1 Tf
(list-sum)Tj
/T1_0 1 Tf
( to do that, like this: )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme> \(define \(list-sum lis\))Tj
0 -1.2 TD
(           \(if \(null? lis\)   ; if empty list?)Tj
T*
(               0             ; then sum is zero)Tj
T*
(               \(+ \(car lis\)  ; else sum is car plus the)Tj
T*
(                  \(list-sum \(cdr lis\)\)\)\)\) ; sum of rest of list)Tj
T*
(#void)Tj
/T1_0 1 Tf
0 -2.552 TD
(Try typing in this example, or cutting and pasting it from this file int\o your running Scheme system. \(If )Tj
0 -1.2 TD
(you're reading this in a web browser, that should be easy--just cut the \text from the browser window, and )Tj
T*
(paste it into your Scheme window at the prompt.\) Cutting and pasting is\ a lot easier than typing in the )Tj
T*
(whole thing! )Tj
0 -2.562 TD
(This procedure accepts one argument, )Tj
/T1_2 1 Tf
(lis)Tj
/T1_0 1 Tf
(, which should be a list. It checks to see whether the list is )Tj
0 -1.205 TD
(empty, i.e., a null pointer, using the predicate )Tj
/T1_2 1 Tf
(null?)Tj
/T1_0 1 Tf
(. If so, it returns )Tj
/T1_2 1 Tf
(0)Tj
/T1_0 1 Tf
( as the sum of the elements in the )Tj
0 -1.2 TD
(list. )Tj
0 -2.562 TD
(If the list is not empty, the sum of the elements is the sum of the )Tj
/T1_2 1 Tf
(car)Tj
/T1_0 1 Tf
( value, plus the sum of the )Tj
0 -1.205 TD
(elements in the rest of the list. In that case, )Tj
/T1_2 1 Tf
(list-sum)Tj
/T1_0 1 Tf
( takes the car of the list and the )Tj
/T1_2 1 Tf
(list-sum)Tj
/T1_0 1 Tf
( of )Tj
0 -1.2 TD
(the rest of the list, adds them together, and returns the result. )Tj
0 -2.557 TD
(Try calling this procedure with some lists of numbers, e.g., )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme>\(list-sum '\(1 2 3\)\))Tj
0 -1.2 TD
(6)Tj
T*
(Scheme>\(list-sum '\(4 5 6\)\))Tj
T*
(15)Tj
T*
(Scheme>\(list-sum \(cons 1 \(cons 2 \(cons 3 '\(\)\)\)\)\))Tj
T*
(6)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_94.html \(1 of 2\)11\/3/2006 9:05:45 PM)Tj
ET
EMC 

endstreamendobj3664 0 obj<</Length 3115>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Using Predicates)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 744.1096 Tm
(The addition procedure )Tj
/T1_1 1 Tf
(+)Tj
/T1_0 1 Tf
( works with floating-point numbers, not just integers, so we can call li\st-sum )Tj
0 -1.2 TD
(with a list of floats as well as integers. \(As in most languages, float\ing point numbers are written with a )Tj
T*
(period to represent the decimal point. Note that there is )Tj
/T1_2 1 Tf
(no space)Tj
/T1_0 1 Tf
( between the digits and the decimal )Tj
T*
(point, so that Scheme won't confuse this with dot notation for lists.\) \)Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(list-sum '\(1 2.2 3.3\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(We can modify )Tj
/T1_1 1 Tf
(list-sum)Tj
/T1_0 1 Tf
( to print out its argument at each call. Then we can watch the recursion\: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme> \(define \(list-sum lis\))Tj
0 -1.2 TD
(           \(display "in list-sum, lis is: "\))Tj
T*
(           \(display lis\))Tj
T*
(           \(newline\)      ; write a linebreak )Tj
T*
(           \(if \(null? lis\)   ; if empty list?)Tj
T*
(               0             ; then sum is zero)Tj
T*
(               \(+ \(car lis\)  ; else it's car plus the)Tj
T*
(                  \(list-sum \(cdr lis\)\)\)\)\) ; sum of rest of list)Tj
T*
(#void)Tj
/T1_3 1 Tf
7 0 0 7 35.713 416.0423 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
50 413.925 m
176.756 413.925 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 416.0423 Tm
(Using Type Predicates)Tj
0 0 0 rg
(: Checking an object's type )Tj
/T1_3 1 Tf
7 0 0 7 35.713 397.2422 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 395.125 m
195.432 395.125 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 397.2422 Tm
(Using Equality Predicates)Tj
0 0 0 rg
(: Checking whether objects are "the same" )Tj
ET
0.5 0.5 0.5 rg
10 362.467 m
10 364.467 l
602 364.467 l
601 363.467 l
11 363.467 l
11 363.467 l
h
f
0.875 0.875 0.875 rg
602 364.467 m
602 362.467 l
10 362.467 l
11 363.467 l
601 363.467 l
601 363.467 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 343.4423 Tm
(Go to the )Tj
ET
65.608 341.325 m
88.162 341.325 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 343.4423 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 341.325 m
143.378 341.325 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 343.4423 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 341.325 m
174.486 341.325 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 343.4423 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 341.325 m
200.932 341.325 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 343.4423 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 341.325 m
343.634 341.325 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 343.4423 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_94.html \(2 of 2\)11\/3/2006 9:05:45 PM)Tj
ET
EMC 

endstreamendobj3665 0 obj(An Introduction to Scheme and its Implementation - Using Predicates)endobj3666 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_94.html)/S 700 0 R>>endobj3667 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_94.html)endobj3668 0 obj(8 ˜€ÃÉ±j!¯\\^Y4 )endobj3669 0 obj<</TS(D:20061104050545)/ID 3668 0 R/CT(text/html)/O[3643 0 R 3653 0 R]/S/SPS/T 3665 0 R/TID 3671 0 R/SI 3670 0 R>>endobj3670 0 obj<</TS(D:20061104050545)/AU 3667 0 R>>endobj3671 0 obj(èØï¿;xZÚC_ÑNÎ∫Ÿy)endobj3672 0 obj<</Parent 710 0 R/Next 3704 0 R/Dest[3643 0 R/XYZ 0 792 null]/Prev 3640 0 R/SE 3642 0 R/Title(An Introduction to Scheme and its Implementation - Using Predicates)>>endobj3673 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3674 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 3686 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 3675 0 R>>endobj3675 0 obj<</Annots 3678 0 R/Parent 3687 0 R/ID 3700 0 R/StructParents 173/Contents 3695 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R/T1_4 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3676 0 obj[3674 0 R]endobj3677 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3678 0 obj[3677 0 R 3679 0 R 3680 0 R 3681 0 R 3682 0 R 3684 0 R]endobj3679 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3643 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_94.html)/S/URI>>/Border[0 0 0]>>endobj3680 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3707 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_96.html)/S/URI>>/Border[0 0 0]>>endobj3681 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3682 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3683 0 obj[3675 0 R/XYZ 0 731.2 null]endobj3684 0 obj<</Rect[10.0 693.431 183.266 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC101)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC101)/S/URI>>/Border[0 0 0]>>endobj3685 0 obj[3675 0 R/XYZ 0 671.815 null]endobj3686 0 obj<</Annots 3690 0 R/Parent 3780 0 R/ID 3700 0 R/StructParents 174/Contents 3696 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3687 0 obj<</Parent 3708 0 R/Count 5/Type/Pages/Kids[3615 0 R 3618 0 R 3643 0 R 3653 0 R 3675 0 R]>>endobj3688 0 obj[3674 0 R]endobj3689 0 obj<</Rect[65.608 369.598 88.162 384.598]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3690 0 obj[3689 0 R 3691 0 R 3692 0 R 3693 0 R 3694 0 R]endobj3691 0 obj<</Rect[95.162 369.598 143.378 384.598]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3643 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_94.html)/S/URI>>/Border[0 0 0]>>endobj3692 0 obj<</Rect[150.378 369.598 174.486 384.598]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3707 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_96.html)/S/URI>>/Border[0 0 0]>>endobj3693 0 obj<</Rect[181.486 369.598 200.932 384.598]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3694 0 obj<</Rect[251.094 369.598 343.634 384.598]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3695 0 obj<</Length 4355>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Using Type Predicates\)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
183.266 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Using Type Predicates)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7235 Tm
(We can easily write a procedure )Tj
/T1_2 1 Tf
(pair-tree-sum)Tj
/T1_0 1 Tf
( to give us the sum of a binary tree of integers, )Tj
0 -1.2 TD
(whose interior nodes are pairs and whose leaves are the integers. )Tj
/T1_3 1 Tf
0 -2.557 TD
([ blah blah blah... rewrite some of the following, simplifying to only h\andle trees, not proper lists. ])Tj
/T1_0 1 Tf
( )Tj
0 -2.557 TD
(Our notion of a "pair tree" is a binary tree of pairs. Here we're doing \something a little strange, because )Tj
0 -1.205 TD
(in general we're improper lists. We'll regard the )Tj
/T1_2 1 Tf
(car)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(cdr)Tj
/T1_0 1 Tf
( fields of a pair as the "left child" and )Tj
0 -1.2 TD
("right child" fields of a tree node. A proper list wouldn't be a pair tr\ee, because it the last pair in the list )Tj
T*
(would point to the empty list object, not a number. )Tj
0 -2.557 TD
(\(Later, I'll show a record facility that allows us to build "tree node"\ records that are not pairs. That's )Tj
0 -1.2 TD
(nicer, because it doesn't confuse pairs' roles in improper lists with th\eir roles in trees. For now, we'll )Tj
T*
(stick with pairs, because the point of this example is recursion, not th\e details of records.\) )Tj
0 -2.557 TD
(Just as we did for proper lists, we start by characterizing this data st\ructure recursively. We'll consider )Tj
0 -1.2 TD
(any subtree of a pair-tree to be a pair-tree. This includes the leaves, \e.g., the numbers in a tree of )Tj
0 -1.2 TD
(numbers. \(This is analogous to the way we considered the empty list to \be a kind of list in the recursive )Tj
0 -1.2 TD
(characterization of lists.\) )Tj
0 -2.557 TD
(A pair tree is either )Tj
/T1_4 1 Tf
7 0 0 7 35.713 293.6561 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 293.6561 Tm
(a leaf \(not a pair\), )Tj
/T1_3 1 Tf
(or)Tj
/T1_0 1 Tf
( )Tj
/T1_4 1 Tf
7 0 0 7 35.713 276.8562 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 276.8562 Tm
(a pair, whose car and cdr values are pair-trees. )Tj
-2.857 -2.557 Td
(Our recursive summing procedure will have to deal with these two cases: \)Tj
/T1_4 1 Tf
7 0 0 7 35.713 205.2561 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 205.2561 Tm
(a numbers, i.e., leaves of a tree of numbers, and )Tj
/T1_4 1 Tf
7 0 0 7 35.713 188.4561 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 188.4561 Tm
(pairs, in which case it should sum the left and right subtrees, and add \those sums together. )Tj
-2.857 -2.557 Td
(The first case is the base case for the recursion. The sum of a leaf is \the numeric of that leaf. )Tj
0 -2.557 TD
(The second case is the recursive case, where we have a subtree to sum. )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme>\(define \(pair-tree-sum pair-tree\))Tj
0 -1.2 TD
(          \(cond \(\(number? pair-tree\))Tj
T*
(                 pair-tree\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_95.html \(1 of 2\)11\/3/2006 9:05:54 PM)Tj
ET
EMC 

endstreamendobj3696 0 obj<</Length 2780>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Using Type Predicates\)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(                \(else)Tj
0 -1.2 TD
(                 \(+ \(pair-tree-sum \(car pair-tree\)\))Tj
T*
(                    \(pair-tree-sum \(cdr pair-tree\)\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Try this out, and make sure you understand why it works. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(pair-tree-sum 1\))Tj
0 -1.2 TD
(1)Tj
T*
(Scheme>\(pair-tree-sum '\(1 . 2\)\))Tj
T*
(3)Tj
T*
(Scheme>\(pair-tree-sum '\(\(40 . 30\) . \(20 . 10\)\)\))Tj
T*
(100)Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice how simple )Tj
/T1_1 1 Tf
(pair-tree-sum)Tj
/T1_0 1 Tf
( is, and how it depends on getting the base case for the recursion )Tj
0 -1.2 TD
(right. If we hadn't considered the leaves to be pair-trees in their own \right, it would have gotten much )Tj
T*
(uglier. For example, if we'd "bottomed out" at pairs whose left and righ\t children weren't both pairs, )Tj
T*
(we'd have had more cases to deal with--cases where one child is a leaf b\ut the other's not. )Tj
0 -2.562 TD
(Add )Tj
/T1_1 1 Tf
(display)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(newline)Tj
/T1_0 1 Tf
( expressions at the beginning of )Tj
/T1_1 1 Tf
(pair-tree-sum)Tj
/T1_0 1 Tf
(, as we did for )Tj
/T1_1 1 Tf
(list-)Tj
0 -1.205 TD
(sum)Tj
/T1_0 1 Tf
(, and try it out again. Be sure you understand the output in terms of th\e recursive call pattern. )Tj
ET
0.5 0.5 0.5 rg
10 392.998 m
10 394.998 l
602 394.998 l
601 393.998 l
11 393.998 l
11 393.998 l
h
f
0.875 0.875 0.875 rg
602 394.998 m
602 392.998 l
10 392.998 l
11 393.998 l
601 393.998 l
601 393.998 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 373.9734 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 371.857 m
88.162 371.857 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 373.9734 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 371.857 m
143.378 371.857 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 373.9734 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 371.857 m
174.486 371.857 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 373.9734 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 371.857 m
200.932 371.857 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 373.9734 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 371.857 m
343.634 371.857 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 373.9734 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_95.html \(2 of 2\)11\/3/2006 9:05:54 PM)Tj
ET
EMC 

endstreamendobj3697 0 obj(An Introduction to Scheme and its Implementation - Using Type Predicates)endobj3698 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_95.html)/S 700 0 R>>endobj3699 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_95.html)endobj3700 0 obj(—I∆ÀèßEπMòÒ~n?•)endobj3701 0 obj<</TS(D:20061104050554)/ID 3700 0 R/CT(text/html)/O[3675 0 R 3686 0 R]/S/SPS/T 3697 0 R/TID 3703 0 R/SI 3702 0 R>>endobj3702 0 obj<</TS(D:20061104050554)/AU 3699 0 R>>endobj3703 0 obj(Ü \rãç1xui\\⁄FUc)endobj3704 0 obj<</Parent 710 0 R/Next 3736 0 R/Dest[3675 0 R/XYZ 0 792 null]/Prev 3672 0 R/SE 3674 0 R/Title(An Introduction to Scheme and its Implementation - Using Type Predicates)>>endobj3705 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3706 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 3718 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 3707 0 R>>endobj3707 0 obj<</Annots 3711 0 R/Parent 3780 0 R/ID 3732 0 R/StructParents 175/Contents 3727 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3708 0 obj<</Parent 4700 0 R/Count 25/Type/Pages/Kids[3438 0 R 3548 0 R 3572 0 R 3616 0 R 3687 0 R]>>endobj3709 0 obj[3706 0 R]endobj3710 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3711 0 obj[3710 0 R 3712 0 R 3713 0 R 3714 0 R 3715 0 R 3717 0 R]endobj3712 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3675 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_95.html)/S/URI>>/Border[0 0 0]>>endobj3713 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3739 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_97.html)/S/URI>>/Border[0 0 0]>>endobj3714 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3715 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3716 0 obj[3707 0 R/XYZ 0 731.2 null]endobj3717 0 obj<</Rect[10.0 693.431 208.402 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC102)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC102)/S/URI>>/Border[0 0 0]>>endobj3718 0 obj<</Annots 3721 0 R/Parent 3780 0 R/ID 3732 0 R/StructParents 176/Contents 3728 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3719 0 obj[3706 0 R]endobj3720 0 obj<</Rect[293.458 342.0 511.214 357.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D([Dd˙7¸…A∂Û-rudSEC57)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_50.html#SEC57)/S/URI>>/Border[0 0 0]>>endobj3721 0 obj[3720 0 R 3722 0 R 3723 0 R 3724 0 R 3725 0 R 3726 0 R]endobj3722 0 obj<</Rect[65.608 288.2 88.162 303.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3723 0 obj<</Rect[95.162 288.2 143.378 303.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3675 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_95.html)/S/URI>>/Border[0 0 0]>>endobj3724 0 obj<</Rect[150.378 288.2 174.486 303.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3739 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_97.html)/S/URI>>/Border[0 0 0]>>endobj3725 0 obj<</Rect[181.486 288.2 200.932 303.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3726 0 obj<</Rect[251.094 288.2 343.634 303.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3727 0 obj<</Length 4321>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Using Equality Predic\ates)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
208.402 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Using Equality Predicates)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7235 Tm
(Suppose that Scheme didn't provide the predicate )Tj
/T1_2 1 Tf
(equal?)Tj
/T1_0 1 Tf
( to do structural comparisons. We could write )Tj
0 -1.2 TD
(our own, because we have other type and equality predicates. )Tj
0 -2.557 TD
(Let's write a simplified version of equal that works for lists, includin\g nested lists. We'll consider objects )Tj
0 -1.205 TD
(to be )Tj
/T1_2 1 Tf
(our-equal?)Tj
/T1_0 1 Tf
( if they are either )Tj
/T1_3 1 Tf
7 0 0 7 35.713 554.3888 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 554.3888 Tm
(exactly the same objects or equivalent numbers, i.e., they're )Tj
/T1_2 1 Tf
(eqv?)Tj
/T1_0 1 Tf
(, or )Tj
/T1_3 1 Tf
7 0 0 7 35.713 537.5214 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 537.5214 Tm
(if they're both pairs whose cars are )Tj
/T1_2 1 Tf
(our-equal?)Tj
/T1_0 1 Tf
( and whose cdrs are also )Tj
/T1_2 1 Tf
(our-equal?)Tj
/T1_0 1 Tf
(. )Tj
-2.857 -2.557 Td
(That is, we'll test lists recursively for structural equivalence, "botto\ming out" when we hit something )Tj
T*
(that's not a pair. This is pretty much what the standard Scheme predicat\e )Tj
/T1_2 1 Tf
(equal?)Tj
/T1_0 1 Tf
( does, except that it )Tj
0 -1.2 TD
(can handle structured data types besides pairs. \(For example, it consid\ers two strings with the same )Tj
0 -1.205 TD
(character sequence )Tj
/T1_2 1 Tf
(equal?)Tj
/T1_0 1 Tf
(, even if they're two different objects.\) )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme>\(define \(our-equal? a b\))Tj
0 -1.2 TD
(          \(cond \(\(eqv? a b\))Tj
T*
(                 #t\))Tj
T*
(                \(\(and \(pair? a\))Tj
T*
(                      \(pair? b\))Tj
T*
(                      \(our-equal? \(car a\) \(car b\)\))Tj
T*
(                      \(our-equal? \(cdr a\) \(cdr b\)\)\))Tj
T*
(                 #t\))Tj
T*
(                \(else)Tj
T*
(                 #f\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(This procedure checks the easy case first \(which is usually a good idea\\): if two objects are )Tj
/T1_2 1 Tf
(eqv?)Tj
/T1_0 1 Tf
(, they're )Tj
0 -1.205 TD
(also )Tj
/T1_2 1 Tf
(our-equal?)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Otherwise, they're only )Tj
/T1_2 1 Tf
(our-equal?)Tj
/T1_0 1 Tf
( if they're both pairs and their cars are equal and their cdrs are )Tj
0 -1.205 TD
(equal. Notice the use of )Tj
/T1_2 1 Tf
(and)Tj
/T1_0 1 Tf
( here. We first check to see that they're pairs, and then take their car\s and )Tj
0 -1.2 TD
(cdrs and compare those. If they're not pairs, we won't ever take their c\ars and cdrs. \(If we did, it would )Tj
0 -1.205 TD
(be an error, but we rely on the fact that )Tj
/T1_2 1 Tf
(and)Tj
/T1_0 1 Tf
( tests things sequentially and stops when one test fails.\) )Tj
0 -2.557 TD
(Try it out: )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme>\(our-equal? '\(\) '\(\)\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_96.html \(1 of 2\)11\/3/2006 9:06:00 PM)Tj
ET
EMC 

endstreamendobj3728 0 obj<</Length 2521>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Using Equality Predic\ates)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(#t)Tj
0 -1.2 TD
(Scheme>\(our-equal? 1 1\))Tj
T*
(#t)Tj
T*
(Scheme>\(our-equal? 1 2\))Tj
T*
(#f)Tj
T*
(Scheme>\(our-equal? '\(1\) '\(1\)\))Tj
T*
(#t)Tj
T*
(Scheme>\(our-equal? '\(1\) '\(\)\))Tj
T*
(#f)Tj
T*
(Scheme>\(our-equal? '\(1 \(2\)\) '\(1 \(2\)\)\))Tj
T*
(#t)Tj
T*
(Scheme>\(our-equal? '\(\(\(3\) 2\) 1\) '\(\(\(3\) 2\) \(1\)\)\))Tj
T*
(#f)Tj
T*
(Scheme>\(our-equal? '\(\(#f . #t\) . \(#f . #t\)\))Tj
T*
(                   '\(\(#f . #t\) . \(#f . #t\)\)\))Tj
T*
(#t)Tj
0 -2.557 TD
(==================================================================)Tj
0 -1.2 TD
(This is the end of Hunk H)Tj
0 -2.4 TD
(At this point, you should go back to the previous chapter and)Tj
0 -1.2 TD
(read Hunk I before returning here and continuing this tutorial.)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Go BACK to read Hunk I, which starts at section )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
293.458 344.259 m
511.214 344.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 293.458 346.3755 Tm
(Choosing Equality Predicates \(Hunk I\))Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 311.6 m
10 313.6 l
602 313.6 l
601 312.6 l
11 312.6 l
11 312.6 l
h
f
0.875 0.875 0.875 rg
602 313.6 m
602 311.6 l
10 311.6 l
11 312.6 l
601 312.6 l
601 312.6 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 292.5756 Tm
(Go to the )Tj
ET
65.608 290.459 m
88.162 290.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 292.5756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 290.459 m
143.378 290.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 292.5756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 290.459 m
174.486 290.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 292.5756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 290.459 m
200.932 290.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 292.5756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 290.459 m
343.634 290.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 292.5756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_96.html \(2 of 2\)11\/3/2006 9:06:00 PM)Tj
ET
EMC 

endstreamendobj3729 0 obj(An Introduction to Scheme and its Implementation - Using Equality Predicates)endobj3730 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_96.html)/S 700 0 R>>endobj3731 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_96.html)endobj3732 0 obj(çkÓ Sß∏√YÈŸm∫j)endobj3733 0 obj<</TS(D:20061104050600)/ID 3732 0 R/CT(text/html)/O[3707 0 R 3718 0 R]/S/SPS/T 3729 0 R/TID 3735 0 R/SI 3734 0 R>>endobj3734 0 obj<</TS(D:20061104050600)/AU 3731 0 R>>endobj3735 0 obj(¨f¬j—t›Æ§/;√ ò%)endobj3736 0 obj<</Parent 710 0 R/Next 3763 0 R/Dest[3707 0 R/XYZ 0 792 null]/Prev 3704 0 R/SE 3706 0 R/Title(An Introduction to Scheme and its Implementation - Using Equality Predicates)>>endobj3737 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3738 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 3739 0 R>>endobj3739 0 obj<</Annots 3742 0 R/Parent 3780 0 R/ID 3759 0 R/StructParents 177/Contents 3755 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 1287 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3740 0 obj[3738 0 R]endobj3741 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3742 0 obj[3741 0 R 3743 0 R 3744 0 R 3745 0 R 3746 0 R 3748 0 R 3749 0 R 3750 0 R 3751 0 R 3752 0 R 3753 0 R 3754 0 R]endobj3743 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3707 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_96.html)/S/URI>>/Border[0 0 0]>>endobj3744 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3766 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_98.html)/S/URI>>/Border[0 0 0]>>endobj3745 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3746 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3747 0 obj[3739 0 R/XYZ 0 731.2 null]endobj3748 0 obj<</Rect[10.0 689.634 460.75 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC103)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC103)/S/URI>>/Border[0 0 0]>>endobj3749 0 obj<</Rect[298.904 426.296 418.646 441.296]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ÿ1´‘?jµ3ÓF'‹˘èÆ¯SEC67)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_60.html#SEC67)/S/URI>>/Border[0 0 0]>>endobj3750 0 obj<</Rect[65.608 372.496 88.162 387.496]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3751 0 obj<</Rect[95.162 372.496 143.378 387.496]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3707 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_96.html)/S/URI>>/Border[0 0 0]>>endobj3752 0 obj<</Rect[150.378 372.496 174.486 387.496]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3766 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_98.html)/S/URI>>/Border[0 0 0]>>endobj3753 0 obj<</Rect[181.486 372.496 200.932 387.496]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3754 0 obj<</Rect[251.094 372.496 343.634 387.496]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3755 0 obj<</Length 3409>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Local Variables)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
163.003 690.33 l
S
0.977 w 
163.003 692.284 m
197.895 692.284 l
S
1.628 w 
197.895 690.33 m
460.75 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Local Variables, )Tj
/T1_2 1 Tf
(let)Tj
/T1_1 1 Tf
(, and Lexical Scope \(Hunk J\))Tj
0 0 0 rg
/T1_3 1 Tf
14 0 0 14 10 655.604 Tm
(==================================================================)Tj
0 -1.2 TD
(Hunk J starts here:)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
([ to be written ] )Tj
/T1_3 1 Tf
0 -2.562 TD
(==================================================================)Tj
0 -1.2 TD
(This is the end of Hunk J)Tj
0 -2.4 TD
(At this point, you should go back to the previous chapter and)Tj
0 -1.2 TD
(read Hunk K before returning here and continuing this tutorial.)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Go BACK to read Hunk K, which starts at section )Tj
ET
0.706 w 
298.904 428.555 m
418.646 428.555 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 298.904 430.6714 Tm
(Procedures \(Hunk K\))Tj
0 0 0 rg
(.\) )Tj
ET
0.5 0.5 0.5 rg
10 395.896 m
10 397.896 l
602 397.896 l
601 396.896 l
11 396.896 l
11 396.896 l
h
f
0.875 0.875 0.875 rg
602 397.896 m
602 395.896 l
10 395.896 l
11 396.896 l
601 396.896 l
601 396.896 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 376.8714 Tm
(Go to the )Tj
ET
65.608 374.755 m
88.162 374.755 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 376.8714 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 374.755 m
143.378 374.755 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 376.8714 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 374.755 m
174.486 374.755 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 376.8714 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 374.755 m
200.932 374.755 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 376.8714 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 374.755 m
343.634 374.755 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 376.8714 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_97.html11/3/2006 9:0\6:10 PM)Tj
ET
EMC 

endstreamendobj3756 0 obj(An Introduction to Scheme and its Implementation - Local Variables)endobj3757 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_97.html)/S 700 0 R>>endobj3758 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_97.html)endobj3759 0 obj(‚ÊzTÜ˙zIÂt%u∏)endobj3760 0 obj<</TS(D:20061104050610)/ID 3759 0 R/CT(text/html)/O[3739 0 R]/S/SPS/T 3756 0 R/TID 3762 0 R/SI 3761 0 R>>endobj3761 0 obj<</TS(D:20061104050610)/AU 3758 0 R>>endobj3762 0 obj(c*góNÀp6˚&ê‹S…)endobj3763 0 obj<</Parent 710 0 R/Next 3805 0 R/Dest[3739 0 R/XYZ 0 792 null]/Prev 3736 0 R/SE 3738 0 R/Title(An Introduction to Scheme and its Implementation - Local Variables)>>endobj3764 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3765 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 3779 0 R/Type/MCR>><</MCID 0/Pg 3782 0 R/Type/MCR>><</MCID 0/Pg 3784 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 3766 0 R>>endobj3766 0 obj<</Annots 3769 0 R/Parent 3780 0 R/ID 3799 0 R/StructParents 178/Contents 3792 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 737 0 R/T1_4 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3767 0 obj[3765 0 R]endobj3768 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3769 0 obj[3768 0 R 3770 0 R 3771 0 R 3772 0 R 3773 0 R 3775 0 R 3776 0 R 3778 0 R]endobj3770 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3739 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_97.html)/S/URI>>/Border[0 0 0]>>endobj3771 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3808 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_99.html)/S/URI>>/Border[0 0 0]>>endobj3772 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3773 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3774 0 obj[3766 0 R/XYZ 0 731.2 null]endobj3775 0 obj<</Rect[10.0 689.877 575.507 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC104)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC104)/S/URI>>/Border[0 0 0]>>endobj3776 0 obj<</Rect[10.0 664.615 88.6046 685.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC104)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC104)/S/URI>>/Border[0 0 0]>>endobj3777 0 obj[3766 0 R/XYZ 0 398.677 null]endobj3778 0 obj<</Rect[10.0 379.908 186.852 397.062]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC105)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC105)/S/URI>>/Border[0 0 0]>>endobj3779 0 obj<</Parent 3821 0 R/ID 3799 0 R/StructParents 179/Contents 3793 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3780 0 obj<</Parent 4042 0 R/Count 5/Type/Pages/Kids[3686 0 R 3707 0 R 3718 0 R 3739 0 R 3766 0 R]>>endobj3781 0 obj[3765 0 R]endobj3782 0 obj<</Parent 3821 0 R/ID 3799 0 R/StructParents 180/Contents 3794 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3783 0 obj[3765 0 R]endobj3784 0 obj<</Annots 3787 0 R/Parent 3821 0 R/ID 3799 0 R/StructParents 181/Contents 3795 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3785 0 obj[3765 0 R]endobj3786 0 obj<</Rect[65.608 611.465 88.162 626.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3787 0 obj[3786 0 R 3788 0 R 3789 0 R 3790 0 R 3791 0 R]endobj3788 0 obj<</Rect[95.162 611.465 143.378 626.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3739 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_97.html)/S/URI>>/Border[0 0 0]>>endobj3789 0 obj<</Rect[150.378 611.465 174.486 626.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3808 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_99.html)/S/URI>>/Border[0 0 0]>>endobj3790 0 obj<</Rect[181.486 611.465 200.932 626.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3791 0 obj<</Rect[251.094 611.465 343.634 626.465]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3792 0 obj<</Length 4013>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Using Procedures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
580.896 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Using First-Class, Higher-Order, and Anonymous Procedures )Tj
ET
10 665.068 m
88.605 665.068 l
S
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 669.9534 Tm
(\(Hunk L\))Tj
0 0 0 rg
/T1_2 1 Tf
14 0 0 14 10 630.5851 Tm
(==================================================================)Tj
0 -1.2 TD
(Hunk L starts here:)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
(In this section, we'll play with Scheme's procedures, to illustrate )Tj
/T1_3 1 Tf
7 0 0 7 35.713 525.4525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_4 1 Tf
14 0 0 14 50 525.4525 Tm
(first class procedures)Tj
/T1_0 1 Tf
(, which are normal data objects in the language, )Tj
/T1_3 1 Tf
7 0 0 7 35.713 508.6525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_4 1 Tf
14 0 0 14 50 508.6525 Tm
(higher order procedures)Tj
/T1_0 1 Tf
(, which can take procedures as arguments and return them as values, and \)Tj
/T1_3 1 Tf
7 0 0 7 35.713 491.8525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_4 1 Tf
14 0 0 14 50 491.8525 Tm
(anonymous procedures)Tj
/T1_0 1 Tf
(, which can be created and referred to via pointers, without giving them\ )Tj
0 -1.2 TD
(names. )Tj
-2.857 -2.557 Td
(I'll just briefly demonstrate those ideas for now; later programming exa\mples will show how they're )Tj
T*
(really useful. )Tj
ET
1.357 w 
10 380.452 m
186.852 380.452 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 384.5227 Tm
(First-Class Procedures)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 346.2679 Tm
(Scheme procedures are first-class objects in the language; you refer to \a procedure in the same way you )Tj
T*
(refer to any other object, via a pointer. A "procedure name" is really j\ust a variable name, and you can )Tj
T*
(do the same things with "procedure" variables as with any other variable\. There's really only one kind of )Tj
T*
(variable in Scheme, and it's type is "pointer to anything." )Tj
0 -2.557 TD
(When we "define a procedure" in Scheme, we're really just defining a var\iable and giving it an initial )Tj
0 -1.2 TD
(value that's \(a pointer to\) a procedure object. )Tj
0 -2.557 TD
(The procedure defining syntax with parentheses around the procedure name\ \(and argument names\) is )Tj
0 -1.2 TD
(really just syntactic sugar, i.e., a convenient way of writing something\ that you could do in another way. )Tj
0 -2.557 TD
(For example, )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme>\(define \(double x\))Tj
0 -1.2 TD
(          \(+ x x\)\))Tj
T*
(#void)Tj
/T1_0 1 Tf
0 -2.552 TD
(is )Tj
/T1_4 1 Tf
(exactly)Tj
/T1_0 1 Tf
( equivalent to )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_98.html \(1 of 4\)11\/3/2006 9:06:16 PM)Tj
ET
EMC 

endstreamendobj3793 0 obj<</Length 3435>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Using Procedures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 743.8005 Tm
(Scheme>\(define double)Tj
0 -1.2 TD
(               \(lambda \(x\))Tj
T*
(                  \(+ x x\)\))Tj
T*
(#void)Tj
/T1_0 1 Tf
0 -2.552 TD
(Try this latter version in your system. Notice that what you're doing is\ just defining a variable named )Tj
/T1_1 1 Tf
0 -1.205 TD
(double)Tj
/T1_0 1 Tf
( and initializing it with the result of the second expression, a )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression. )Tj
/T1_1 1 Tf
0 -2.562 TD
(lambda)Tj
/T1_0 1 Tf
( is the real procedure-creating operation. It's a special form, because \it lets you define a new )Tj
0 -1.205 TD
(procedure rather than calling an existing procedure in the normal way. )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( creates a procedure )Tj
0 -1.2 TD
(object and returns a pointer to it. )Tj
0 -2.562 TD
(\(The predicate )Tj
/T1_1 1 Tf
(procedure?)Tj
/T1_0 1 Tf
( can be used to tell if an object is a procedure.\) )Tj
T*
(You can call the )Tj
/T1_1 1 Tf
(double)Tj
/T1_0 1 Tf
( procedure created this way in exactly the same way as one created with \the )Tj
0 -1.2 TD
(sugared procedure-definition syntax. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(double 3\))Tj
0 -1.2 TD
(6)Tj
/T1_0 1 Tf
0 -2.557 TD
(Recall how procedure calls really work. When you call a named procedure,\ e.g., )Tj
/T1_1 1 Tf
(\(double 3\))Tj
/T1_0 1 Tf
(, the )Tj
0 -1.2 TD
(procedure name is really just a reference to a variable. The first posit\ion in the procedure call form is )Tj
0 -1.205 TD
(just an expression that's evaluated like any other. In this case, we're \using the name )Tj
/T1_1 1 Tf
(double)Tj
/T1_0 1 Tf
( as an )Tj
0 -1.205 TD
(expression, effectively saying "look up the value of )Tj
/T1_1 1 Tf
(double)Tj
/T1_0 1 Tf
(." )Tj
0 -2.557 TD
(Try this )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>double)Tj
0 -1.2 TD
(#<procedure>)Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that we didn't put parentheses around )Tj
/T1_1 1 Tf
(double)Tj
/T1_0 1 Tf
(, so we're not calling it--we're fetching the value of )Tj
0 -1.205 TD
(the variable )Tj
/T1_1 1 Tf
(double)Tj
/T1_0 1 Tf
(. What you see on your screen may vary, but it's your system's printed )Tj
0 -1.2 TD
(representation of a procedure object. Take a look at it, because you'll \want to be able to recognize )Tj
T*
(procedure objects in data structures. )Tj
0 -2.557 TD
(\(The printed representation may include the name of the procedure; don'\t be misled by this. Procedures )Tj
0 -1.2 TD
(don't really have names--they're just data objects you can have pointers\ to, as I'll explain shortly. Your )Tj
T*
(system your system may put a name inside the procedure when you use the \procedure definition syntax, )Tj
T*
(but it's just an annotation saying what the procedure's )Tj
/T1_2 1 Tf
(original)Tj
/T1_0 1 Tf
( name was--i.e., when it was first defined.\) )Tj
0 -2.557 TD
(We can call a procedure in other ways, though--the first subexpression o\f a procedure call can be any )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_98.html \(2 of 4\)11\/3/2006 9:06:16 PM)Tj
ET
EMC 

endstreamendobj3794 0 obj<</Length 3184>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Using Procedures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(expression we want, as long as it returns a procedure. That expression i\s evaluated just like the argument )Tj
0 -1.2 TD
(expressions--after it and the argument expresssions are evalutated, the \resulting procedure is called with )Tj
T*
(those argument values. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(define list-holding-double \(list double\)\))Tj
0 -1.2 TD
(#void)Tj
0 -2.4 TD
(Scheme>list-holding-double)Tj
0 -1.2 TD
(\(#<procedure>\))Tj
0 -2.4 TD
(Scheme>\(\(car list-holding-double\) 5\))Tj
0 -1.2 TD
(10)Tj
/T1_0 1 Tf
0 -2.557 TD
(What we did here was to create a list holding the procedure formerly kno\wn as )Tj
/T1_1 1 Tf
(double)Tj
/T1_0 1 Tf
(, and looked at )Tj
0 -1.205 TD
(that list. Then we called that procedure by using the expression )Tj
/T1_1 1 Tf
(\(car list-holding-double\))Tj
/T1_0 1 Tf
( as )Tj
0 -1.2 TD
(its "name." )Tj
0 -2.557 TD
(What this shows is that procedures are really )Tj
/T1_2 1 Tf
(anonymous)Tj
/T1_0 1 Tf
(, that is, a procedure doesn't have a name in a )Tj
0 -1.2 TD
(direct sense. There are just expressions we can refer to it by, if those\ expressions result in pointers to the )Tj
T*
(procedure. )Tj
0 -2.562 TD
(We can create procedures without normal names at all, by just using )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
(. Let's create another )Tj
0 -1.205 TD
(doubling procedure by just evaluating a )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(lambda \(x\) \(+ x x\)\))Tj
0 -1.2 TD
(#<procedure>)Tj
/T1_0 1 Tf
0 -2.557 TD
(The )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression just created a procedure and returned a pointer to it, and S\cheme displayed it )Tj
0 -1.2 TD
(however your system does it. We didn't keep a pointer to the procedure, \so we can't call it now. The )Tj
T*
(procedure is gone and the garbage collector will clean it up. )Tj
0 -2.557 TD
(We could try again, creating a procedure and keeping a pointer to it in \a named variable. More )Tj
0 -1.2 TD
(interestingly, we can just hand the pointer to a procedure call, and cal\l it without ever giving it a name. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(\(lambda \(x\) \(+ x x\)\) 6\))Tj
0 -1.2 TD
(12)Tj
/T1_0 1 Tf
0 -2.552 TD
(It may not look like it, but this is just a procedure call expression, w\here the "name" of the procedure is a )Tj
/T1_1 1 Tf
0 -1.205 TD
(lambda)Tj
/T1_0 1 Tf
( expression to create the procedure we need, and its argument is 6. Note\ the nesting of )Tj
0 -1.205 TD
(parentheses--this is just like )Tj
/T1_1 1 Tf
(\(double 6\))Tj
/T1_0 1 Tf
(, except that we give the "definition" of the procedure to call, )Tj
0 -1.2 TD
(instead of its name. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_98.html \(3 of 4\)11\/3/2006 9:06:16 PM)Tj
ET
EMC 

endstreamendobj3795 0 obj<</Length 2070>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Using Procedures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9082 Tm
(Later we'll show why using )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( directly is often much more convenient than having to name all of )Tj
0 -1.205 TD
(our procedures. I'll also explain why )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( is the most important special form in Scheme--it is so )Tj
0 -1.2 TD
(powerful that most of the special forms can easily be translated into it\. )Tj
0 -2.557 TD
(\(You might be concerned that creating a procedure and just using it onc\e is very expensive, but it turns )Tj
0 -1.2 TD
(out not to be--I'll explain that later, too. For now, don't worry about \it.\) )Tj
ET
0.5 0.5 0.5 rg
10 634.865 m
10 636.865 l
602 636.865 l
601 635.865 l
11 635.865 l
11 635.865 l
h
f
0.875 0.875 0.875 rg
602 636.865 m
602 634.865 l
10 634.865 l
11 635.865 l
601 635.865 l
601 635.865 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 615.8408 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 613.724 m
88.162 613.724 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 615.8408 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 613.724 m
143.378 613.724 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 615.8408 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 613.724 m
174.486 613.724 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 615.8408 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 613.724 m
200.932 613.724 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 615.8408 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 613.724 m
343.634 613.724 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 615.8408 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_98.html \(4 of 4\)11\/3/2006 9:06:16 PM)Tj
ET
EMC 

endstreamendobj3796 0 obj(An Introduction to Scheme and its Implementation - Using Procedures)endobj3797 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_98.html)/S 700 0 R>>endobj3798 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_98.html)endobj3799 0 obj(≈	ÇÈ£Á¡.C™†ƒà} )endobj3800 0 obj<</TS(D:20061104050616)/ID 3799 0 R/CT(text/html)/O[3766 0 R 3779 0 R 3782 0 R 3784 0 R]/S/SPS/T 3796 0 R/TID 3802 0 R/SI 3801 0 R>>endobj3801 0 obj<</TS(D:20061104050616)/AU 3798 0 R>>endobj3802 0 obj(g8Æ®bEéebGı¬Í#f)endobj3803 0 obj<</Limits[(http://www.federated.com/~jim/schintro-v14/schintro_4.html)(http://www.federated.com/~jim/schintro-v14/schintro_68.html)]/Names[800 0 R 802 0 R 1941 0 R 1943 0 R 1968 0 R 1970 0 R 1995 0 R 1997 0 R 2022 0 R 2024 0 R 2050 0 R 2052 0 R 2078 0 R 2080 0 R 2154 0 R 2156 0 R 2184 0 R 2186 0 R 2211 0 R 2213 0 R 2245 0 R 2247 0 R 833 0 R 835 0 R 2273 0 R 2275 0 R 2306 0 R 2308 0 R 2332 0 R 2334 0 R 2363 0 R 2365 0 R 2401 0 R 2403 0 R 2427 0 R 2429 0 R 2461 0 R 2463 0 R 2490 0 R 2492 0 R 2517 0 R 2519 0 R 2549 0 R 2551 0 R 860 0 R 862 0 R 2586 0 R 2588 0 R 2622 0 R 2624 0 R 2653 0 R 2655 0 R 2688 0 R 2690 0 R 2721 0 R 2723 0 R 2753 0 R 2755 0 R 2798 0 R 2800 0 R 2831 0 R 2833 0 R 2867 0 R 2869 0 R]>>endobj3804 0 obj<</Limits[(http://www.federated.com/~jim/schintro-v14/schintro_69.html)(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)]/Names[2895 0 R 2897 0 R 900 0 R 902 0 R 2930 0 R 2932 0 R 2958 0 R 2960 0 R 2999 0 R 3001 0 R 3032 0 R 3034 0 R 3059 0 R 3061 0 R 3086 0 R 3088 0 R 3112 0 R 3114 0 R 3138 0 R 3140 0 R 3175 0 R 3177 0 R 944 0 R 946 0 R 3217 0 R 3219 0 R 3248 0 R 3250 0 R 3280 0 R 3282 0 R 3306 0 R 3308 0 R 3336 0 R 3338 0 R 3364 0 R 3366 0 R 3399 0 R 3401 0 R 3429 0 R 3431 0 R 3460 0 R 3462 0 R 3486 0 R 3488 0 R 971 0 R 973 0 R 3512 0 R 3514 0 R 3539 0 R 3541 0 R 3589 0 R 3591 0 R 3635 0 R 3637 0 R 3667 0 R 3669 0 R 3699 0 R 3701 0 R 3731 0 R 3733 0 R 3758 0 R 3760 0 R 3798 0 R 3800 0 R 3835 0 R 3837 0 R 703 0 R 705 0 R]>>endobj3805 0 obj<</Parent 710 0 R/Next 3840 0 R/Dest[3766 0 R/XYZ 0 792 null]/Prev 3763 0 R/SE 3765 0 R/Title(An Introduction to Scheme and its Implementation - Using Procedures)>>endobj3806 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3807 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 3818 0 R/Type/MCR>><</MCID 0/Pg 3820 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 3808 0 R>>endobj3808 0 obj<</Annots 3811 0 R/Parent 3821 0 R/ID 3836 0 R/StructParents 182/Contents 3830 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3809 0 obj[3807 0 R]endobj3810 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3811 0 obj[3810 0 R 3812 0 R 3813 0 R 3814 0 R 3815 0 R 3817 0 R]endobj3812 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3766 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_98.html)/S/URI>>/Border[0 0 0]>>endobj3813 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3843 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_100.html)/S/URI>>/Border[0 0 0]>>endobj3814 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3815 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3816 0 obj[3808 0 R/XYZ 0 731.2 null]endobj3817 0 obj<</Rect[10.0 693.431 346.598 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC106)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC106)/S/URI>>/Border[0 0 0]>>endobj3818 0 obj<</Parent 3821 0 R/ID 3836 0 R/StructParents 183/Contents 3831 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3819 0 obj[3807 0 R]endobj3820 0 obj<</Annots 3824 0 R/Parent 3887 0 R/ID 3836 0 R/StructParents 184/Contents 3832 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3821 0 obj<</Parent 4042 0 R/Count 5/Type/Pages/Kids[3779 0 R 3782 0 R 3784 0 R 3808 0 R 3818 0 R]>>endobj3822 0 obj[3807 0 R]endobj3823 0 obj<</Rect[301.242 143.256 518.438 158.324]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(:’Z\\pˆdê‚Òi_\r6SEC71)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_64.html#SEC71)/S/URI>>/Border[0 0 0]>>endobj3824 0 obj[3823 0 R 3825 0 R 3826 0 R 3827 0 R 3828 0 R 3829 0 R]endobj3825 0 obj<</Rect[65.608 89.4565 88.162 104.456]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3826 0 obj<</Rect[95.162 89.4565 143.378 104.456]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3766 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_98.html)/S/URI>>/Border[0 0 0]>>endobj3827 0 obj<</Rect[150.378 89.4565 174.486 104.456]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3843 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_100.html)/S/URI>>/Border[0 0 0]>>endobj3828 0 obj<</Rect[181.486 89.4565 200.932 104.456]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3829 0 obj<</Rect[251.094 89.4565 343.634 104.456]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3830 0 obj<</Length 4456>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Using and Writing Hig\her-Order Procedures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
346.598 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Using and Writing Higher-Order Procedures)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(A )Tj
/T1_2 1 Tf
(higher-order)Tj
/T1_0 1 Tf
( procedure is one that can take procedures as arguments and/or return th\em as values. We )Tj
0 -1.2 TD
(can use that to write general procedures that do a basic kind of thing, \and take arguments that specialize )Tj
T*
(their behavior. The arguments are themselves procedures, which will do s\pecialized things withing the )Tj
T*
(general pattern that the general procedure implements. )Tj
0 -2.557 TD
(Here's a simple example. )Tj
0 -2.562 TD
(Scheme provides a procedure )Tj
/T1_3 1 Tf
(display)Tj
/T1_0 1 Tf
(, which can write textual representation of a data object on the )Tj
0 -1.2 TD
(screen, much like the way the read-eval-print loop displays results of e\xpressions you type in. \(This is a )Tj
T*
(very handy procedure for debugging, as well as for programs that interac\t with users.\) )Tj
0 -2.562 TD
(Suppose, though, that you want to display a list of objects, not just on\e. You want a routine )Tj
/T1_3 1 Tf
(list-)Tj
0 -1.205 TD
(display)Tj
/T1_0 1 Tf
( to iterate over a list, and display each item in it. The obvious way to\ write it is to just call )Tj
/T1_3 1 Tf
T*
(display)Tj
/T1_0 1 Tf
( from inside your )Tj
/T1_3 1 Tf
(list-display)Tj
/T1_0 1 Tf
( routine. )Tj
0 -2.562 TD
(\(Actually, )Tj
/T1_3 1 Tf
(display)Tj
/T1_0 1 Tf
( can display a list of items, but it puts parentheses around the items i\n the list. Let's )Tj
0 -1.205 TD
(suppose we don't want those parentheses around the )Tj
/T1_3 1 Tf
(display)Tj
/T1_0 1 Tf
(ed items. Writing our own )Tj
/T1_3 1 Tf
(list-)Tj
0 -1.205 TD
(display)Tj
/T1_0 1 Tf
( will give us the freedom to make it do whatever we want it to, rather t\han what )Tj
/T1_3 1 Tf
(display)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(does automatically for lists.\) )Tj
0 -2.557 TD
(Here's a version like that: )Tj
/T1_3 1 Tf
0 -2.562 TD
(Scheme>\(define \(list-display lis\))Tj
0 -1.2 TD
(          \(if \(null? lis\))Tj
T*
(              #f)Tj
T*
(              \(begin \(display \(car lis\)\))Tj
T*
(                     \(list-display \(cdr lis\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(I've written this procedure recursively, because it's easy to use recurs\ion over lists--usually it's easier )Tj
0 -1.2 TD
(than using an iteration construct. This procedure checks to see if the l\ist it got was empty, and if so, it )Tj
T*
(returns #f. \(That's a reasonable value to return from a procedure that'\s used for effect, rather than for )Tj
T*
(value.\) Otherwise, it displays the first item, and then calls itself re\cursively to display the rest of the list. )Tj
0 -1.205 TD
(I used a )Tj
/T1_3 1 Tf
(begin)Tj
/T1_0 1 Tf
( to sequence the displaying and the recursive call. )Tj
0 -2.562 TD
(It would be cleaner to use )Tj
/T1_3 1 Tf
(cond)Tj
/T1_0 1 Tf
(, so here's an equivalent version using )Tj
/T1_3 1 Tf
(cond)Tj
/T1_0 1 Tf
(: )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_99.html \(1 of 3\)11\/3/2006 9:06:24 PM)Tj
ET
EMC 

endstreamendobj3831 0 obj<</Length 3204>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Using and Writing Hig\her-Order Procedures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(Scheme>\(define \(list-display lis\))Tj
0 -1.2 TD
(          \(cond \(\(null? lis\))Tj
T*
(                 #f\))Tj
T*
(                \(else)Tj
T*
(                 \(display \(car lis\)\))Tj
T*
(                 \(list-display \(cdr lis\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that this is a two-branch conditional, but we use )Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
( instead of )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( because a )Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
( branch can )Tj
0 -1.2 TD
(be a sequence. \(We need a sequence because we want to use display to cr\eate a side-effect, i.e., writing )Tj
T*
(to the user's screen, as well as calling list-display recursively to do \the rest of the work.\) )Tj
0 -2.557 TD
(Now try it out: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(list-display '\(1 2 3\)\))Tj
0 -1.2 TD
(123#f)Tj
/T1_0 1 Tf
0 -2.552 TD
(What happened here is that it displayed each item in the list as it was \evaluated, and then Scheme )Tj
0 -1.205 TD
(printed out the return value, )Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(This works, but the procedure is not very general. Iterating over lists \is very common, so it would be )Tj
0 -1.2 TD
(nice to have a more general procedure that iterates over lists, and appl\ies whatever procedure you want. )Tj
0 -2.557 TD
(We can modify our procedure to do this. Instead of taking just a list ar\gument, it can take an argument )Tj
0 -1.2 TD
(that's a procedure, and apply that procedure to each element of the list\. )Tj
0 -2.562 TD
(We'll call our procedure )Tj
/T1_1 1 Tf
(list-each)Tj
/T1_0 1 Tf
(, because it iterates over a list and does whatever you want to each )Tj
0 -1.2 TD
(element. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(define \(list-each proc lis\))Tj
0 -1.2 TD
(          \(cond \(\(null? lis\))Tj
T*
(                 #f\))Tj
T*
(                \(else)Tj
T*
(                 \(proc \(car lis\)\))Tj
T*
(                 \(list-each proc \(cdr lis\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(The only change we made was to add an argument )Tj
/T1_1 1 Tf
(proc)Tj
/T1_0 1 Tf
(, to accept \(a pointer to\) a procedure, and to )Tj
0 -1.205 TD
(change the call to )Tj
/T1_1 1 Tf
(display)Tj
/T1_0 1 Tf
( into a call to )Tj
/T1_1 1 Tf
(proc)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Remember that procedure names are really just names of variables that ho\ld pointers to procedures, so )Tj
0 -1.205 TD
(this works---)Tj
/T1_1 1 Tf
(\(proc \(car lis\)\))Tj
/T1_0 1 Tf
( is just a combination whose first expression is )Tj
/T1_1 1 Tf
(proc)Tj
/T1_0 1 Tf
(, which looks )Tj
0 -1.205 TD
(up the value of the local variable )Tj
/T1_1 1 Tf
(proc)Tj
/T1_0 1 Tf
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_99.html \(2 of 3\)11\/3/2006 9:06:24 PM)Tj
ET
EMC 

endstreamendobj3832 0 obj<</Length 3870>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Using and Writing Hig\her-Order Procedures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.6364 Tm
(Now we can call this general procedure with the argument )Tj
/T1_1 1 Tf
(display)Tj
/T1_0 1 Tf
(, to tell it to )Tj
/T1_1 1 Tf
(display)Tj
/T1_0 1 Tf
( each thing )Tj
0 -1.2 TD
(in the list. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(list-each display '\(1 2 3\)\))Tj
0 -1.2 TD
(123#f)Tj
/T1_0 1 Tf
0 -2.552 TD
(But maybe this isn't what we want. We might want to print each item, and\ then a newline \(go to the next )Tj
0 -1.205 TD
(line\), to spread things out vertically. We could write a procedure )Tj
/T1_1 1 Tf
(display-with-newline)Tj
/T1_0 1 Tf
( to do )Tj
T*
(that, but it's easier just to use a )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression to create the procedure we need. )Tj
0 -2.557 TD
(Try this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(list-each \(lambda \(x\))Tj
0 -1.2 TD
(                     \(display x\))Tj
T*
(                     \(newline\)\))Tj
T*
(                  '\(1 2 3\)\))Tj
T*
(1)Tj
T*
(2)Tj
T*
(3)Tj
T*
(#void)Tj
/T1_0 1 Tf
0 -2.557 TD
(The )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression creates a one-argument procedure that will )Tj
/T1_1 1 Tf
(display)Tj
/T1_0 1 Tf
( its argument and then )Tj
0 -1.205 TD
(call )Tj
/T1_1 1 Tf
(newline)Tj
/T1_0 1 Tf
(. We pass the procedure that results from this )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( directly to )Tj
/T1_1 1 Tf
(list-each)Tj
/T1_0 1 Tf
(, without )Tj
0 -1.2 TD
(ever giving it a name, or saving a pointer to it anywhere. \(After list-\each is through with it, the )Tj
T*
(procedure will become garbage and its space can be reclaimed by the garb\age collector.\) )Tj
0 -2.562 TD
(\(Scheme has a standard procedure similar to our )Tj
/T1_1 1 Tf
(list-each)Tj
/T1_0 1 Tf
(, but more general, called )Tj
/T1_1 1 Tf
(for-each)Tj
/T1_0 1 Tf
(.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(==================================================================)Tj
0 -1.2 TD
(This is the end of Hunk L)Tj
0 -2.4 TD
(At this point, you should go back to the previous chapter and)Tj
0 -1.2 TD
(read Hunk M before returning here and continuing this tutorial.)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.557 TD
(\(Go BACK to read Hunk M, which starts at section )Tj
ET
0 0 1 RG
0.428 w 10 M 0 j 0 J []0 d 
301.242 146.347 m
351.642 146.347 l
S
0.706 w 
351.642 145.515 m
518.438 145.515 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 301.242 147.632 Tm
(lambda)Tj
/T1_0 1 Tf
( and Lexical Scope \(Hunk M\))Tj
0 0 0 rg
(.\) )Tj
ET
0.5 0.5 0.5 rg
10 112.856 m
10 114.856 l
602 114.856 l
601 113.856 l
11 113.856 l
11 113.856 l
h
f
0.875 0.875 0.875 rg
602 114.856 m
602 112.856 l
10 112.856 l
11 113.856 l
601 113.856 l
601 113.856 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 93.832 Tm
(Go to the )Tj
ET
65.608 91.715 m
88.162 91.715 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 93.832 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 91.715 m
143.378 91.715 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 93.832 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 91.715 m
174.486 91.715 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 93.832 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 91.715 m
200.932 91.715 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 93.832 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 91.715 m
343.634 91.715 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 93.832 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_99.html \(3 of 3\)11\/3/2006 9:06:24 PM)Tj
ET
EMC 

endstreamendobj3833 0 obj(An Introduction to Scheme and its Implementation - Using and Writing Higher-Order Procedures)endobj3834 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_99.html)/S 700 0 R>>endobj3835 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_99.html)endobj3836 0 obj(,FÚf†[ö≈3àpK	;ÀÎ)endobj3837 0 obj<</TS(D:20061104050624)/ID 3836 0 R/CT(text/html)/O[3808 0 R 3818 0 R 3820 0 R]/S/SPS/T 3833 0 R/TID 3839 0 R/SI 3838 0 R>>endobj3838 0 obj<</TS(D:20061104050624)/AU 3835 0 R>>endobj3839 0 obj(LﬁNÆvÒÿBl”ky+')endobj3840 0 obj<</Parent 710 0 R/Next 3883 0 R/Dest[3808 0 R/XYZ 0 792 null]/Prev 3805 0 R/SE 3807 0 R/Title(An Introduction to Scheme and its Implementation - Using and Writing Higher-Order Procedures)>>endobj3841 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3842 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 3855 0 R/Type/MCR>><</MCID 0/Pg 3860 0 R/Type/MCR>><</MCID 0/Pg 3862 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 3843 0 R>>endobj3843 0 obj<</Annots 3846 0 R/Parent 3887 0 R/ID 3879 0 R/StructParents 185/Contents 3872 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3844 0 obj[3842 0 R]endobj3845 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3846 0 obj[3845 0 R 3847 0 R 3848 0 R 3849 0 R 3850 0 R 3852 0 R 3854 0 R]endobj3847 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3808 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_99.html)/S/URI>>/Border[0 0 0]>>endobj3848 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3886 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_101.html)/S/URI>>/Border[0 0 0]>>endobj3849 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3850 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3851 0 obj[3843 0 R/XYZ 0 731.2 null]endobj3852 0 obj<</Rect[10.0 689.877 405.31 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC107)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC107)/S/URI>>/Border[0 0 0]>>endobj3853 0 obj[3843 0 R/XYZ 0 598.538 null]endobj3854 0 obj<</Rect[10.0 579.769 228.158 596.923]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC108)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC108)/S/URI>>/Border[0 0 0]>>endobj3855 0 obj<</Annots 3859 0 R/Parent 3887 0 R/ID 3879 0 R/StructParents 186/Contents 3873 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R/T1_3 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3856 0 obj[3842 0 R]endobj3857 0 obj[3855 0 R/XYZ 0 279.796 null]endobj3858 0 obj<</Rect[10.0 261.026 203.878 278.18]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC109)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC109)/S/URI>>/Border[0 0 0]>>endobj3859 0 obj[3858 0 R]endobj3860 0 obj<</Parent 3887 0 R/ID 3879 0 R/StructParents 187/Contents 3874 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3861 0 obj[3842 0 R]endobj3862 0 obj<</Annots 3866 0 R/Parent 3887 0 R/ID 3879 0 R/StructParents 188/Contents 3875 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3863 0 obj[3842 0 R]endobj3864 0 obj[3862 0 R/XYZ 0 401.659 null]endobj3865 0 obj<</Rect[10.0 382.889 308.878 400.043]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC110)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC110)/S/URI>>/Border[0 0 0]>>endobj3866 0 obj[3865 0 R 3867 0 R 3868 0 R 3869 0 R 3870 0 R 3871 0 R]endobj3867 0 obj<</Rect[65.608 293.074 88.162 308.074]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3868 0 obj<</Rect[95.162 293.074 143.378 308.074]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3808 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_99.html)/S/URI>>/Border[0 0 0]>>endobj3869 0 obj<</Rect[150.378 293.074 174.486 308.074]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3886 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_101.html)/S/URI>>/Border[0 0 0]>>endobj3870 0 obj<</Rect[181.486 293.074 200.932 308.074]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3871 0 obj<</Rect[251.094 293.074 343.634 308.074]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3872 0 obj<</Length 4333>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Interactively Changin\g a Program)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
405.31 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Interactively Changing a Program \(Hunk N\))Tj
0 0 0 rg
/T1_2 1 Tf
14 0 0 14 10 655.8466 Tm
(==================================================================)Tj
0 -1.2 TD
(Hunk N starts here:)Tj
T*
(==================================================================)Tj
ET
1.357 w 
10 580.313 m
228.158 580.313 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 584.3842 Tm
(Replacing Procedure Values)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 546.1294 Tm
(Earlier we showed how to replace normal data values in variable bindings\, using the side-effecting )Tj
0 -1.205 TD
(special form )Tj
/T1_2 1 Tf
(set!)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(We can also change procedure values. One way of doing this is just to ch\ange the value of the procedure )Tj
0 -1.2 TD
(variable. \(Remember that a "named" procedure is really just a first-cla\ss procedure object that happens )Tj
T*
(to be referred to via a pointer stored in a variable binding.\) )Tj
0 -2.562 TD
(Just as we changed the value of the variable )Tj
/T1_2 1 Tf
(myvar)Tj
/T1_0 1 Tf
( using )Tj
/T1_2 1 Tf
(set!)Tj
/T1_0 1 Tf
(, we can change the value of the )Tj
0 -1.205 TD
(procedure variable )Tj
/T1_2 1 Tf
(quadruple)Tj
/T1_0 1 Tf
(. Try this: )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme>\(quadruple 3\))Tj
0 -1.2 TD
(12)Tj
T*
(Scheme>\(set! quadruple double\))Tj
T*
(#<procedure>)Tj
T*
(Scheme>\(quadruple 3\))Tj
T*
(6)Tj
/T1_0 1 Tf
0 -2.557 TD
(What happened here is that when we evaluated the expression )Tj
/T1_2 1 Tf
(\(set! quadruple double\))Tj
/T1_0 1 Tf
( it just )Tj
0 -1.205 TD
(did the usual thing )Tj
/T1_2 1 Tf
(set!)Tj
/T1_0 1 Tf
( does when both of its arguments are variables--it computed the value of\ the )Tj
T*
(expression on the right, in this case by fetching the value from the bin\ding of )Tj
/T1_2 1 Tf
(double)Tj
/T1_0 1 Tf
(, and stored it into )Tj
0 -1.205 TD
(the \(binding of\) the variable on the left. In this case, the value of \)Tj
/T1_2 1 Tf
(double)Tj
/T1_0 1 Tf
( is \(a pointer\) to a procedure--)Tj
0 -1.205 TD
(the one that we created when we )Tj
/T1_2 1 Tf
(define)Tj
/T1_0 1 Tf
('d )Tj
/T1_2 1 Tf
(double)Tj
/T1_0 1 Tf
(. This pointer was copied into )Tj
/T1_2 1 Tf
(quadruple)Tj
/T1_0 1 Tf
(, so )Tj
0 -1.2 TD
(that it now contains a pointer to the very same procedure. )Tj
0 -2.562 TD
(Calling )Tj
/T1_2 1 Tf
(quadruple)Tj
/T1_0 1 Tf
( now has the same effect as calling )Tj
/T1_2 1 Tf
(double)Tj
/T1_0 1 Tf
(, because either way, a pointer is )Tj
0 -1.2 TD
(fetched from the variable, and whatever it procedure it points to is cal\led. )Tj
0 -2.557 TD
(Note that while this illustrates how Scheme works, and we'll show why it\'s handy later, it's not usually a )Tj
0 -1.205 TD
(great idea to go around changing the values of procedure variables by si\de-effecting them with )Tj
/T1_2 1 Tf
(set!)Tj
/T1_0 1 Tf
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_100.html \(1 of 4\)1\1/3/2006 9:06:30 PM)Tj
ET
EMC 

endstreamendobj3873 0 obj<</Length 3997>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Interactively Changin\g a Program)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Usually, once a program has been developed, you don't want to clobber na\med procedures, because it )Tj
0 -1.2 TD
(makes the code hard to understand--you don't want your finished program \to go around changing the )Tj
T*
(meaning of procedure names as it runs. You normally want to be able to l\ook at your program and see )Tj
T*
(the definitions, and not have to worry that some other part of the progr\am may change the procedures at )Tj
T*
(odd moments. )Tj
0 -2.557 TD
(During interactive development of a program, however, it's often very co\nvenient to be able to change a )Tj
0 -1.2 TD
(procedure's behavior at will. We're not really modifying a procedure, th\ough--we're changing a variable )Tj
T*
(binding's value to affect which procedure is called. We don't have to ac\tually modify any procedure )Tj
T*
(objects, because we can replace a pointer to one procedure with a pointe\r to another. )Tj
0 -2.562 TD
(Usually you'll want to do this by )Tj
/T1_1 1 Tf
(redefining)Tj
/T1_0 1 Tf
( the procedure with another )Tj
/T1_2 1 Tf
(define)Tj
/T1_0 1 Tf
( expression. )Tj
T*
(For example, suppose we want to restore the old behavior of )Tj
/T1_2 1 Tf
(quadruple)Tj
/T1_0 1 Tf
(, which we foolishly )Tj
0 -1.205 TD
(clobbered above. We can simply )Tj
/T1_2 1 Tf
(define)Tj
/T1_0 1 Tf
( it again, the old way: )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme>\(define \(quadruple x\) \(double \(double x\)\)\))Tj
0 -1.2 TD
(#void)Tj
/T1_0 1 Tf
0 -2.557 TD
(In a finished program, you generally shouldn't have multiple definitions\ of the same thing--a )Tj
/T1_2 1 Tf
(define)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(form should define something that doesn't change during program executio\n. If you want to change the )Tj
0 -1.205 TD
(state of a binding, use )Tj
/T1_2 1 Tf
(set!)Tj
/T1_0 1 Tf
( to make it clear that's what's going on, and put a comment at the defin\ition )Tj
0 -1.2 TD
(of the variable warning that it is likely to be changed at runtime. )Tj
0 -2.562 TD
(Most interactive Scheme systems let you )Tj
/T1_2 1 Tf
(define)Tj
/T1_0 1 Tf
( the same variables multiple times, though, so that you )Tj
0 -1.2 TD
(can change things during program development. \(Note that we're talking \about redefining the same )Tj
T*
(program variable here, not defining different variables with the same na\me in different scopes.\) )Tj
ET
0 0 1 RG
1.357 w 10 M 0 j 0 J []0 d 
10 261.571 m
203.878 261.571 l
S
0 0 1 rg
BT
/T1_3 1 Tf
16.1538 0 0 16.1538 10 265.6414 Tm
(Loading Code from a File)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 227.3866 Tm
(When you're actually developing a program, you often want to save the te\xt in a file, rather than just )Tj
T*
(typing it in and losing it when you exit the Scheme system. )Tj
0 -2.557 TD
(The simplest way of doing this is to use an editor in one window and Sch\eme in another. From the )Tj
0 -1.205 TD
(editor, save your program text into a file, and then load it into Scheme\ with the )Tj
/T1_2 1 Tf
(load)Tj
/T1_0 1 Tf
( procedure. )Tj
/T1_2 1 Tf
(load)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(takes a string as an argument, which is the name of the file to load, an\d reads it in just as though you had )Tj
T*
(typed it in by hand, at the prompt. \(A string literal is written with d\ouble quotes around it; there'll be )Tj
T*
(more about strings more later.\) )Tj
0 -2.562 TD
(Type the following text into your editor and save it into a file named )Tj
/T1_2 1 Tf
(triple.scm)Tj
/T1_0 1 Tf
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_100.html \(2 of 4\)1\1/3/2006 9:06:30 PM)Tj
ET
EMC 

endstreamendobj3874 0 obj<</Length 3188>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Interactively Changin\g a Program)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(\(define \(triple x\))Tj
0 -1.2 TD
(   \(+ x \(+ x x\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Now, at the Scheme prompt, load the file and call the procedure: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(load "triple.scm"\))Tj
0 -1.2 TD
(loading...triple...done)Tj
T*
(Scheme>\(triple 3\))Tj
T*
(9)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Notice that in the above example, there's no connection between the st\ring we used to name the file, )Tj
/T1_1 1 Tf
0 -1.205 TD
("triple.scm")Tj
/T1_0 1 Tf
(, and the name of the procedure, )Tj
/T1_1 1 Tf
(triple)Tj
/T1_0 1 Tf
(. We just chose to call the file )Tj
/T1_1 1 Tf
("triple.)Tj
0 -1.205 TD
(scm")Tj
/T1_0 1 Tf
( to remind us what's in it.\) )Tj
0 -2.557 TD
(Usually, when you're developing a program, you should put only a few def\initions in a file--maybe just )Tj
0 -1.2 TD
(one. This lets you change small parts of your program, saved the changed\ file, and reload the file to )Tj
0 -1.2 TD
(change the definitions in your running Scheme system. )Tj
0 -2.557 TD
(Good editors also have packages that allow you to run Scheme and use an \editor command to send the )Tj
0 -1.2 TD
(contents of a file \(or a selected region of a file\) to Scheme, as thou\gh you'd typed it in. \(Emacs has )Tj
T*
(excellent facilities for this.\) )Tj
0 -2.557 TD
(If you're using a graphical user interface, you may be able to simply cu\t text from your editor, and paste )Tj
0 -1.2 TD
(it into the window you have Scheme running in, so that it appears to Sch\eme as though you'd just typed )Tj
T*
(it in. )Tj
0 -2.557 TD
(Be careful about reloading definitions. When you load a file, the Scheme\ system will reuse the same top-)Tj
0 -1.2 TD
(level bindings, and reinitialize them. In general, new objects will be c\onstructed, even if the textual )Tj
T*
(definitions haven't changed. )Tj
0 -2.557 TD
(For example, suppose we have the following code in a file, which we've a\lready loaded once: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define my-list \(list 1 2\)\))Tj
0 -2.4 TD
(\(define my-other-list \(cdr my-list\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(If we reload this file, all three definitions will be processed again. A\ new list will be constructed and the )Tj
0 -1.205 TD
(existing binding of )Tj
/T1_1 1 Tf
(my-list)Tj
/T1_0 1 Tf
( will be updated to point at the new list. )Tj
0 -2.562 TD
(Likewise, the existing binding of )Tj
/T1_1 1 Tf
(my-other-list)Tj
/T1_0 1 Tf
( will be updated with the )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
( of that new list. Each )Tj
0 -1.2 TD
(time we reload the file, we'll recreate the intended data structure, inc\luding the sharing relationship )Tj
T*
(between the two lists. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_100.html \(3 of 4\)1\1/3/2006 9:06:30 PM)Tj
ET
EMC 

endstreamendobj3875 0 obj<</Length 3864>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Interactively Changin\g a Program)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 734.8386 Tm
(But now consider what happens if this code is spread across two files, w\ith the definition of )Tj
/T1_1 1 Tf
(my-)Tj
0 -1.205 TD
(other-list)Tj
/T1_0 1 Tf
( in a different file, which we don't reload. If we just reload the first\ definition, then the )Tj
0 -1.205 TD
(binding )Tj
/T1_1 1 Tf
(my-other-list)Tj
/T1_0 1 Tf
( will still refer to the )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
( of the )Tj
/T1_2 1 Tf
(old)Tj
/T1_0 1 Tf
( list, not the new one. If your code )Tj
0 -1.2 TD
(depends on the two lists sharing structure, it not behave as expected, b\ecause the two variables' bindings )Tj
T*
(will refer to distinct lists. )Tj
0 -2.557 TD
(Procedures can cause the same sorts of problems. If you have a pointer t\o a procedure in a data structure, )Tj
0 -1.2 TD
(and then you redefine the procedure by modifying the definition and relo\ading it, a )Tj
/T1_2 1 Tf
(new)Tj
/T1_0 1 Tf
( procedure object )Tj
T*
(will be created, but the old data structure will still hold a pointer to\ the old procedure object. )Tj
0 -2.557 TD
(In general, you should be careful to recreate any data structures holdin\g procedures if you redefine those )Tj
0 -1.2 TD
(procedures. This is usually easy, if you reload the code that creates th\e data structures, after reloading )Tj
T*
(the new definitions of the procedures. )Tj
0 -2.557 TD
(Notice that this is )Tj
/T1_2 1 Tf
(not)Tj
/T1_0 1 Tf
( necessary if you just call top-level procedures \(or look up variable v\alues\) in the )Tj
0 -1.205 TD
(usual way. For example, given our earlier definitions of )Tj
/T1_2 1 Tf
(double)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(quadruple)Tj
/T1_0 1 Tf
(, changing )Tj
/T1_1 1 Tf
(double)Tj
/T1_0 1 Tf
( )Tj
T*
(affects )Tj
/T1_1 1 Tf
(quadruple)Tj
/T1_0 1 Tf
( immediately. Every time we call )Tj
/T1_1 1 Tf
(quadruple)Tj
/T1_0 1 Tf
(, it fetches the )Tj
/T1_2 1 Tf
(current)Tj
/T1_0 1 Tf
( value of the )Tj
0 -1.205 TD
(binding of )Tj
/T1_1 1 Tf
(double)Tj
/T1_0 1 Tf
(, which ensures that it sees the most recent version. We can reload the \code for )Tj
/T1_1 1 Tf
0 -1.205 TD
(double)Tj
/T1_0 1 Tf
(, without reloading the code for )Tj
/T1_1 1 Tf
(quadruple)Tj
/T1_0 1 Tf
(. )Tj
ET
0 0 1 RG
1.357 w 10 M 0 j 0 J []0 d 
10 383.434 m
308.878 383.434 l
S
0 0 1 rg
BT
/T1_3 1 Tf
16.1538 0 0 16.1538 10 387.5044 Tm
(Loading and Running Whole Programs)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 349.2496 Tm
([ to be written ] )Tj
ET
0.5 0.5 0.5 rg
10 316.474 m
10 318.474 l
602 318.474 l
601 317.474 l
11 317.474 l
11 317.474 l
h
f
0.875 0.875 0.875 rg
602 318.474 m
602 316.474 l
10 316.474 l
11 317.474 l
601 317.474 l
601 317.474 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 297.4496 Tm
(Go to the )Tj
ET
0.706 w 
65.608 295.333 m
88.162 295.333 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 297.4496 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 295.333 m
143.378 295.333 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 297.4496 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 295.333 m
174.486 295.333 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 297.4496 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 295.333 m
200.932 295.333 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 297.4496 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 295.333 m
343.634 295.333 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 297.4496 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_100.html \(4 of 4\)1\1/3/2006 9:06:30 PM)Tj
ET
EMC 

endstreamendobj3876 0 obj(An Introduction to Scheme and its Implementation - Interactively Changing a Program)endobj3877 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_100.html)/S 700 0 R>>endobj3878 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_100.html)endobj3879 0 obj(π,ã’…6~|7´ò\r`-)endobj3880 0 obj<</TS(D:20061104050630)/ID 3879 0 R/CT(text/html)/O[3843 0 R 3855 0 R 3860 0 R 3862 0 R]/S/SPS/T 3876 0 R/TID 3882 0 R/SI 3881 0 R>>endobj3881 0 obj<</TS(D:20061104050630)/AU 3878 0 R>>endobj3882 0 obj(√Ö=ÂA\)<‡sˇ“£2ÑÉ)endobj3883 0 obj<</Parent 710 0 R/Next 3915 0 R/Dest[3843 0 R/XYZ 0 792 null]/Prev 3840 0 R/SE 3842 0 R/Title(An Introduction to Scheme and its Implementation - Interactively Changing a Program)>>endobj3884 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3885 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 3886 0 R>>endobj3886 0 obj<</Annots 3890 0 R/Parent 3966 0 R/ID 3911 0 R/StructParents 189/Contents 3907 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3887 0 obj<</Parent 4042 0 R/Count 5/Type/Pages/Kids[3820 0 R 3843 0 R 3855 0 R 3860 0 R 3862 0 R]>>endobj3888 0 obj[3885 0 R]endobj3889 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3890 0 obj[3889 0 R 3891 0 R 3892 0 R 3893 0 R 3894 0 R 3896 0 R 3898 0 R 3899 0 R 3900 0 R 3901 0 R 3902 0 R 3903 0 R 3904 0 R 3905 0 R 3906 0 R]endobj3891 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3843 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_100.html)/S/URI>>/Border[0 0 0]>>endobj3892 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3918 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_102.html)/S/URI>>/Border[0 0 0]>>endobj3893 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3894 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3895 0 obj[3886 0 R/XYZ 0 731.2 null]endobj3896 0 obj<</Rect[10.0 689.877 293.306 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC111)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC111)/S/URI>>/Border[0 0 0]>>endobj3897 0 obj[3886 0 R/XYZ 0 320.938 null]endobj3898 0 obj<</Rect[50.0 148.938 89.676 163.938]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(\\—’ ¨$Úó7J´CR¥SEC112)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_102.html#SEC112)/S/URI>>/Border[0 0 0]>>endobj3899 0 obj<</Rect[50.0 130.138 99.014 145.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(◊á¥◊ÕŸµK∫”gÈäáÄSEC113)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_103.html#SEC113)/S/URI>>/Border[0 0 0]>>endobj3900 0 obj<</Rect[50.0 111.338 107.54 126.338]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(U*⁄|˙˝Ò∏ê‚ù‹˚“HÄSEC114)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_104.html#SEC114)/S/URI>>/Border[0 0 0]>>endobj3901 0 obj<</Rect[50.0 92.5385 77.23 107.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(òZè+áI⁄øWº÷i‰osëSEC99)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_93.html#SEC99)/S/URI>>/Border[0 0 0]>>endobj3902 0 obj<</Rect[65.608 38.7385 88.162 53.7385]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3903 0 obj<</Rect[95.162 38.7385 143.378 53.7385]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3843 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_100.html)/S/URI>>/Border[0 0 0]>>endobj3904 0 obj<</Rect[150.378 38.7385 174.486 53.7385]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3918 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_102.html)/S/URI>>/Border[0 0 0]>>endobj3905 0 obj<</Rect[181.486 38.7385 200.932 53.7385]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3906 0 obj<</Rect[251.094 38.7385 343.634 53.7385]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3907 0 obj<</Length 5417>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Some Other Useful Dat\a Types)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
293.306 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Some Other Useful Data Types)Tj
0 0 0 rg
/T1_2 1 Tf
14 0 0 14 10 655.914 Tm
([ Parts of this should probably be moved into the previous chapter, and \new examples put in this )Tj
0 -1.2 TD
(section. ])Tj
/T1_0 1 Tf
( )Tj
0 -2.557 TD
(Scheme has several important kinds of data objects that are useful in pr\ogramming in general, and )Tj
0 -1.2 TD
(particularly for writing an interpreter, as we'll do in the next chapter\. These include character strings, )Tj
T*
(symbols, and lists. )Tj
0 -2.557 TD
(Scheme has two data types that represent sequences of characters, called\ )Tj
/T1_2 1 Tf
(strings)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(symbols)Tj
/T1_0 1 Tf
(. Strings are )Tj
0 -1.2 TD
(pretty much like character strings in most programming languages--they r\epresent a sequence of text )Tj
T*
(characters. Symbols are sort of like strings, but have a very special pr\operty--there's only one symbol )Tj
T*
(object with any particular sequence of characters. )Tj
0 -2.557 TD
(Symbols have a special role in the implementation of Scheme, because the\y're part of the normal )Tj
0 -1.2 TD
(representation of source code; symbols are used to represent names of va\riables, procedures, special )Tj
T*
(forms, and macros. They're really just a kind of data object, though--yo\u can use them in your programs, )Tj
T*
(whether or not you want to represent code. )Tj
0 -2.557 TD
(Lists are used in interpreters and compilers to represent compound expre\ssions in the source code; )Tj
0 -1.2 TD
(nested expressions are generally represented by nested lists. )Tj
0 -2.557 TD
(More generally, there's a category of Scheme data structures called )Tj
/T1_2 1 Tf
(s-expressions)Tj
/T1_0 1 Tf
(, which consist of basic )Tj
0 -1.2 TD
(types including symbols, strings, numbers, booleans, and characters, and\ list of those simple types, or )Tj
T*
(lists of such lists. )Tj
0 -2.557 TD
("S-expression" is short for "symbolic expression," but it's something of\ a misnomer. An )Tj
/T1_2 1 Tf
(expression)Tj
/T1_0 1 Tf
( is )Tj
0 -1.2 TD
(really a piece of a program. An "s-expression " is just a data structure\, which may or may not represent )Tj
T*
(an expression in a programming language, although interpreters and compi\lers often happen to use them )Tj
T*
(that way. )Tj
/T1_3 1 Tf
7 0 0 7 35.713 153.314 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
50 151.197 m
89.676 151.197 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 153.314 Tm
(Strings)Tj
0 0 0 rg
(: Character Strings )Tj
/T1_3 1 Tf
7 0 0 7 35.713 134.514 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 132.397 m
99.014 132.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 134.514 Tm
(Symbols)Tj
0 0 0 rg
(: Symbols are like Strings, but Unique )Tj
/T1_3 1 Tf
7 0 0 7 35.713 115.714 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 113.597 m
107.54 113.597 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 115.714 Tm
(Identifiers)Tj
0 0 0 rg
(: A Note on Identifiers )Tj
/T1_3 1 Tf
7 0 0 7 35.713 96.914 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 94.797 m
77.23 94.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 96.914 Tm
(Lists)Tj
0 0 0 rg
(: Lists )Tj
ET
0.5 0.5 0.5 rg
10 62.138 m
10 64.138 l
602 64.138 l
601 63.138 l
11 63.138 l
11 63.138 l
h
f
0.875 0.875 0.875 rg
602 64.138 m
602 62.138 l
10 62.138 l
11 63.138 l
601 63.138 l
601 63.138 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 43.114 Tm
(Go to the )Tj
ET
65.608 40.997 m
88.162 40.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 43.114 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 40.997 m
143.378 40.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 43.114 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 40.997 m
174.486 40.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 43.114 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 40.997 m
200.932 40.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 43.114 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 40.997 m
343.634 40.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 43.114 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_101.html11/3/2006 9:\06:55 PM)Tj
ET
EMC 

endstreamendobj3908 0 obj(An Introduction to Scheme and its Implementation - Some Other Useful Data Types)endobj3909 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_101.html)/S 700 0 R>>endobj3910 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_101.html)endobj3911 0 obj(=€∑‰[Œ‰yMèÃaMs)endobj3912 0 obj<</TS(D:20061104050655)/ID 3911 0 R/CT(text/html)/O[3886 0 R]/S/SPS/T 3908 0 R/TID 3914 0 R/SI 3913 0 R>>endobj3913 0 obj<</TS(D:20061104050655)/AU 3910 0 R>>endobj3914 0 obj(c⁄ƒZ∏CVSä>ìQ¿ﬁ)endobj3915 0 obj<</Parent 710 0 R/Next 3951 0 R/Dest[3886 0 R/XYZ 0 792 null]/Prev 3883 0 R/SE 3885 0 R/Title(An Introduction to Scheme and its Implementation - Some Other Useful Data Types)>>endobj3916 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3917 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 3929 0 R/Type/MCR>><</MCID 0/Pg 3931 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 3918 0 R>>endobj3918 0 obj<</Annots 3921 0 R/Parent 3966 0 R/ID 3947 0 R/StructParents 190/Contents 3941 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3919 0 obj[3917 0 R]endobj3920 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3921 0 obj[3920 0 R 3922 0 R 3923 0 R 3924 0 R 3925 0 R 3927 0 R]endobj3922 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3886 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_101.html)/S/URI>>/Border[0 0 0]>>endobj3923 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3954 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_103.html)/S/URI>>/Border[0 0 0]>>endobj3924 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3925 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3926 0 obj[3918 0 R/XYZ 0 731.2 null]endobj3927 0 obj<</Rect[10.0 693.431 65.65 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC112)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC112)/S/URI>>/Border[0 0 0]>>endobj3928 0 obj[3918 0 R/XYZ 0 671.815 null]endobj3929 0 obj<</Parent 3966 0 R/ID 3947 0 R/StructParents 191/Contents 3942 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3930 0 obj[3917 0 R]endobj3931 0 obj<</Annots 3936 0 R/Parent 3966 0 R/ID 3947 0 R/StructParents 192/Contents 3943 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3932 0 obj[3917 0 R]endobj3933 0 obj<</Limits[128 159]/Nums[128 2939 0 R 129 2968 0 R 130 2978 0 R 131 2980 0 R 132 2985 0 R 133 3008 0 R 134 3021 0 R 135 3041 0 R 136 3068 0 R 137 3095 0 R 138 3121 0 R 139 3148 0 R 140 3184 0 R 141 3195 0 R 142 3226 0 R 143 3237 0 R 144 3258 0 R 145 3269 0 R 146 3289 0 R 147 3315 0 R 148 3345 0 R 149 3374 0 R 150 3385 0 R 151 3387 0 R 152 3408 0 R 153 3418 0 R 154 3439 0 R 155 3449 0 R 156 3469 0 R 157 3495 0 R 158 3521 0 R 159 3549 0 R]>>endobj3934 0 obj<</Limits[160 224]/Nums[]>>endobj3935 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3936 0 obj[3935 0 R 3937 0 R 3938 0 R 3939 0 R 3940 0 R]endobj3937 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3886 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_101.html)/S/URI>>/Border[0 0 0]>>endobj3938 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3954 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_103.html)/S/URI>>/Border[0 0 0]>>endobj3939 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3940 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3941 0 obj<</Length 4178>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Strings)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
65.65 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Strings)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(Character strings in Scheme are written between double quotes. For examp\le, suppose we want an object )Tj
0 -1.2 TD
(that represents the text "Hello world!" We can just write that in a prog\ram, in between double quotes: )Tj
/T1_2 1 Tf
0 -1.205 TD
("Hello, world!")Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(You can use a string as an expression--the value of a string is the stri\ng itself, just as the value of an )Tj
0 -1.2 TD
(integer is the integer itself. Like numeric literals and booleans, strin\gs are "self-evaluating," which just )Tj
T*
(means that if you have an expression in your program that consists of ju\st a string, Scheme assumes you )Tj
T*
(mean the value to be literally that string. There's nothing deep about t\his--it just turns out to be handy, )Tj
T*
(because it makes it easy to use strings as literals. )Tj
0 -2.562 TD
(Try typing the string )Tj
/T1_2 1 Tf
("Hello, world.")Tj
/T1_0 1 Tf
( at the Scheme prompt. )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme>"Hello, world!")Tj
0 -1.2 TD
("Hello, world!")Tj
/T1_0 1 Tf
0 -2.552 TD
(What happened here is that Scheme recognized the sequence of characters \between double quotes as a )Tj
0 -1.2 TD
(string literal. The value of a literal string expression \(in double quo\tes\) is a \(pointer to\) a string object. A )Tj
T*
(string object is a normal first-class object like a pair or a number, co\nceptually like an array that can )Tj
T*
(only hold characters. )Tj
0 -2.557 TD
(This value is what scheme printed out. The standard printed representati\on of a string object is the )Tj
0 -1.2 TD
(sequence of characters, with double quotes around it. )Tj
0 -2.557 TD
(So what happened here is that Scheme read the sequence of characters in \double quotes, constructed an )Tj
0 -1.2 TD
(array-like object of type string, then printed out the printed represent\ation of that object. )Tj
0 -2.557 TD
(If you want to print out a string, but without the double quotes, you ca\n use the standard procedure )Tj
/T1_2 1 Tf
0 -1.205 TD
(display)Tj
/T1_0 1 Tf
(. If you pass )Tj
/T1_2 1 Tf
(display)Tj
/T1_0 1 Tf
( a string, it just prints out the characters in the string, without any \)Tj
0 -1.2 TD
(double quotes. )Tj
/T1_2 1 Tf
0 -2.562 TD
(display)Tj
/T1_0 1 Tf
( is useful in programs that print information out for normal users. Anot\her useful procedure is )Tj
/T1_2 1 Tf
0 -1.205 TD
(newline)Tj
/T1_0 1 Tf
(, which prints a newline character, ending a line and starting a new one\. )Tj
0 -2.562 TD
(Try typing a )Tj
/T1_2 1 Tf
(\(display "Hello, world!"\) \(newline\))Tj
/T1_0 1 Tf
( at the Scheme prompt. What you get )Tj
0 -1.2 TD
(may look like this: )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_102.html \(1 of 3\)1\1/3/2006 9:07:01 PM)Tj
ET
EMC 

endstreamendobj3942 0 obj<</Length 3314>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Strings)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(Scheme>\(display "Hello, world!"\) \(newline\))Tj
0 -1.2 TD
(Hello, world!)Tj
T*
(#void)Tj
/T1_0 1 Tf
0 -2.557 TD
(You might see something slightly different on your screen, depending on \the return value of )Tj
/T1_1 1 Tf
(newline)Tj
/T1_0 1 Tf
(, )Tj
0 -1.2 TD
(which is unspecified in the Scheme standard. )Tj
0 -2.562 TD
(If you type in an expression using a string literal like )Tj
/T1_1 1 Tf
("foo")Tj
/T1_0 1 Tf
( at the Scheme prompt, Scheme may )Tj
0 -1.2 TD
(construct a new string object with that character sequence each time. )Tj
0 -2.557 TD
(Try this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(define foo1 "foo"\))Tj
0 -1.2 TD
(#void)Tj
T*
(Scheme>\(define foo2 "foo"\))Tj
T*
(#void)Tj
T*
(Scheme>foo1)Tj
T*
("foo")Tj
T*
(Scheme>foo2)Tj
T*
("foo")Tj
T*
(Scheme>\(eq? foo1 foo2\))Tj
T*
(#f)Tj
T*
(Scheme>\(equal? foo1 foo2\))Tj
T*
(#t)Tj
/T1_0 1 Tf
0 -2.557 TD
(For each of the )Tj
/T1_1 1 Tf
(define)Tj
/T1_0 1 Tf
( forms, Scheme has constructed a string with the character sequence )Tj
/T1_1 1 Tf
(f)Tj
/T1_0 1 Tf
(-)Tj
/T1_1 1 Tf
(o)Tj
/T1_0 1 Tf
(-)Tj
/T1_1 1 Tf
(o)Tj
/T1_0 1 Tf
(, and )Tj
0 -1.2 TD
(saved it in a new variable binding. When we ask the value of each variab\le, Scheme prints out the usual )Tj
T*
(text representation of the string. The printed representations are the s\ame, since each string has the same )Tj
0 -1.205 TD
(structure, but they're two different objects--when we ask if they're )Tj
/T1_1 1 Tf
(eq?)Tj
/T1_0 1 Tf
(, i.e., the very same object, the )Tj
0 -1.205 TD
(answer is no \()Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
(\). )Tj
0 -2.562 TD
(It's possible that in your system the )Tj
/T1_1 1 Tf
(eq?)Tj
/T1_0 1 Tf
( comparison will return )Tj
/T1_1 1 Tf
(#t)Tj
/T1_0 1 Tf
(, because Scheme implementations )Tj
0 -1.2 TD
(are allowed to use pointers to the same string if you type in two string\s with the same character )Tj
0 -1.205 TD
(sequence. For that reason, you should be careful not to depend on whethe\r Scheme strings are )Tj
/T1_1 1 Tf
(eq?)Tj
/T1_0 1 Tf
(; you )Tj
T*
(should only distinguish whether they're )Tj
/T1_1 1 Tf
(equal?)Tj
/T1_0 1 Tf
(. You can also use the predicate )Tj
/T1_1 1 Tf
(string-equal?)Tj
/T1_0 1 Tf
( if )Tj
0 -1.2 TD
(you know the arguments are supposed to be strings. This has the advantag\e of signaling an error if the )Tj
T*
(arguments are of unexpected type. )Tj
0 -2.557 TD
(Strings can be used as one-dimensional arrays \(vectors\) of characters.\ There are procedures for )Tj
0 -1.2 TD
(accessing their elements by an integer index, extracting substrings give\n two indices, and so on. )Tj
ET
0.5 0.5 0.5 rg
10 50.061 m
10 52.061 l
602 52.061 l
601 51.061 l
11 51.061 l
11 51.061 l
h
f
0.875 0.875 0.875 rg
602 52.061 m
602 50.061 l
10 50.061 l
11 51.061 l
601 51.061 l
601 51.061 l
h
f
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_102.html \(2 of 3\)1\1/3/2006 9:07:01 PM)Tj
ET
EMC 

endstreamendobj3943 0 obj<</Length 1208>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Strings)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_102.html \(3 of 3\)1\1/3/2006 9:07:01 PM)Tj
ET
EMC 

endstreamendobj3944 0 obj(An Introduction to Scheme and its Implementation - Strings)endobj3945 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_102.html)/S 700 0 R>>endobj3946 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_102.html)endobj3947 0 obj(.—’ ¨$Úó7J´CR¥)endobj3948 0 obj<</TS(D:20061104050701)/ID 3947 0 R/CT(text/html)/O[3918 0 R 3929 0 R 3931 0 R]/S/SPS/T 3944 0 R/TID 3950 0 R/SI 3949 0 R>>endobj3949 0 obj<</TS(D:20061104050701)/AU 3946 0 R>>endobj3950 0 obj(#±<PPZ›JºâT˝√∑)endobj3951 0 obj<</Parent 710 0 R/Next 3986 0 R/Dest[3918 0 R/XYZ 0 792 null]/Prev 3915 0 R/SE 3917 0 R/Title(An Introduction to Scheme and its Implementation - Strings)>>endobj3952 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3953 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 3965 0 R/Type/MCR>><</MCID 0/Pg 3968 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 3954 0 R>>endobj3954 0 obj<</Annots 3957 0 R/Parent 3966 0 R/ID 3982 0 R/StructParents 193/Contents 3976 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3955 0 obj[3953 0 R]endobj3956 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3957 0 obj[3956 0 R 3958 0 R 3959 0 R 3960 0 R 3961 0 R 3963 0 R]endobj3958 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3918 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_102.html)/S/URI>>/Border[0 0 0]>>endobj3959 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3989 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_104.html)/S/URI>>/Border[0 0 0]>>endobj3960 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3961 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3962 0 obj[3954 0 R/XYZ 0 731.2 null]endobj3963 0 obj<</Rect[10.0 693.431 77.3292 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC113)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC113)/S/URI>>/Border[0 0 0]>>endobj3964 0 obj[3954 0 R/XYZ 0 671.815 null]endobj3965 0 obj<</Parent 4036 0 R/ID 3982 0 R/StructParents 194/Contents 3977 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3966 0 obj<</Parent 4042 0 R/Count 5/Type/Pages/Kids[3886 0 R 3918 0 R 3929 0 R 3931 0 R 3954 0 R]>>endobj3967 0 obj[3953 0 R]endobj3968 0 obj<</Annots 3971 0 R/Parent 4036 0 R/ID 3982 0 R/StructParents 195/Contents 3978 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3969 0 obj[3953 0 R]endobj3970 0 obj<</Rect[65.608 209.398 88.162 224.398]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3971 0 obj[3970 0 R 3972 0 R 3973 0 R 3974 0 R 3975 0 R]endobj3972 0 obj<</Rect[95.162 209.398 143.378 224.398]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3918 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_102.html)/S/URI>>/Border[0 0 0]>>endobj3973 0 obj<</Rect[150.378 209.398 174.486 224.398]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3989 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_104.html)/S/URI>>/Border[0 0 0]>>endobj3974 0 obj<</Rect[181.486 209.398 200.932 224.398]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3975 0 obj<</Rect[251.094 209.398 343.634 224.398]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3976 0 obj<</Length 4078>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Symbols)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
77.329 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Symbols)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(Symbols are like strings, in that they have a character sequence. Symbol\s are different, however, in that )Tj
/T1_2 1 Tf
0 -1.2 TD
(only one)Tj
/T1_0 1 Tf
( symbol object can have any given character sequence. The character sequ\ence is called the )Tj
T*
(symbol's )Tj
/T1_2 1 Tf
(print name)Tj
/T1_0 1 Tf
(. A print name is )Tj
/T1_2 1 Tf
(not)Tj
/T1_0 1 Tf
( the same thing as a variable name, however--it's just the )Tj
T*
(character sequence that identifies a particular unique symbol. It's call\ed the print name because that's )Tj
0 -1.205 TD
(what's printed out when you )Tj
/T1_3 1 Tf
(display)Tj
/T1_0 1 Tf
( the object \(or )Tj
/T1_3 1 Tf
(write)Tj
/T1_0 1 Tf
( it\). )Tj
0 -2.557 TD
(Unlike strings, booleans, and numbers, symbols are )Tj
/T1_2 1 Tf
(not)Tj
/T1_0 1 Tf
( self-evaluating. To refer to a literal symbol, you )Tj
0 -1.2 TD
(have to )Tj
/T1_2 1 Tf
(quote)Tj
/T1_0 1 Tf
( it. Since print names of symbols look just like variable names, you hav\e to tell Scheme )Tj
T*
(which you mean. )Tj
0 -2.562 TD
(If we type in the character sequence )Tj
/T1_3 1 Tf
(f)Tj
/T1_0 1 Tf
( )Tj
/T1_3 1 Tf
(o)Tj
/T1_0 1 Tf
( )Tj
/T1_3 1 Tf
(o)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(without)Tj
/T1_0 1 Tf
( double quotes around it, Scheme assumes we mean to )Tj
0 -1.205 TD
(refer to a )Tj
/T1_2 1 Tf
(variable)Tj
/T1_0 1 Tf
( named )Tj
/T1_3 1 Tf
(foo)Tj
/T1_0 1 Tf
(, not the unique symbol whose print name is )Tj
/T1_3 1 Tf
(foo)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(In interpreters and compilers, symbol objects are often used as variable\ names, and Scheme treats them )Tj
0 -1.2 TD
(specially. If we just type in a character string that's a symbol print n\ame, and hit return, Scheme assumes )Tj
T*
(that we are asking for the value of the binding of the variable with tha\t name--if there is one. )Tj
/T1_3 1 Tf
0 -2.562 TD
(Scheme>\(define foo 10\))Tj
0 -1.2 TD
(#void)Tj
0 -2.4 TD
(Scheme>foo)Tj
0 -1.2 TD
(10)Tj
/T1_0 1 Tf
0 -2.552 TD
(If we quote the symbol name with the single quote character, Scheme inte\rprets that as meaning we want )Tj
0 -1.205 TD
(the )Tj
/T1_2 1 Tf
(symbol object)Tj
/T1_0 1 Tf
( )Tj
/T1_3 1 Tf
(foo)Tj
/T1_0 1 Tf
(. )Tj
/T1_3 1 Tf
0 -2.562 TD
(Scheme>'foo)Tj
0 -1.2 TD
(foo)Tj
/T1_0 1 Tf
0 -2.557 TD
(Since we've already defined \(and bound\) the variables )Tj
/T1_3 1 Tf
(foo1)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(foo2)Tj
/T1_0 1 Tf
(, we can ask Scheme to look up )Tj
0 -1.2 TD
(their values. )Tj
/T1_3 1 Tf
0 -2.562 TD
(Scheme>foo1)Tj
0 -1.2 TD
("foo")Tj
T*
(Scheme>foo2)Tj
T*
("foo")Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_103.html \(1 of 3\)1\1/3/2006 9:07:07 PM)Tj
ET
EMC 

endstreamendobj3977 0 obj<</Length 3741>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Symbols)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 748.054 Tm
(Here we've typed in the names that we gave to variables earlier, and Sch\eme looked up the values of the )Tj
0 -1.2 TD
(variables. )Tj
0 -2.557 TD
(As we've seen before, this doesn't work if there isn't a bound variable \by that name. Symbols can be used )Tj
0 -1.2 TD
(as variable names, if you define the variable, but by default a symbol i\s just an object with a particular )Tj
T*
(print name that identifies it. )Tj
0 -2.562 TD
(If we want to refer to the )Tj
/T1_1 1 Tf
(symbol object)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
(, rather than using foo as a variable name, we can )Tj
/T1_1 1 Tf
(quote)Tj
/T1_0 1 Tf
( it, )Tj
0 -1.205 TD
(using the special quote character )Tj
/T1_2 1 Tf
(')Tj
/T1_0 1 Tf
(. This tells Scheme )Tj
/T1_1 1 Tf
(not)Tj
/T1_0 1 Tf
( to evaluate the following expression, but to )Tj
0 -1.2 TD
(treat it as literal data. )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme> 'foo)Tj
0 -1.2 TD
(foo)Tj
/T1_0 1 Tf
0 -2.557 TD
(When you type )Tj
/T1_2 1 Tf
('foo)Tj
/T1_0 1 Tf
(, you're telling Scheme you want a pointer to the symbol whose print nam\e is )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
(. )Tj
0 -1.205 TD
(It doesn't matter whether there's a variable named )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
( or what its current value is---)Tj
/T1_2 1 Tf
('foo)Tj
/T1_0 1 Tf
( means a )Tj
0 -1.205 TD
(pointer to the unique symbol object whose print name is )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
(, which has nothing to do with any variable )Tj
/T1_2 1 Tf
T*
(foo)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(The first time you type in a symbol name, Scheme constructs a symbol obj\ect with that character )Tj
0 -1.2 TD
(sequence, and puts it in a special table. If you later type in a symbol \name with the same character )Tj
T*
(sequence, Scheme notices that it's the same sequence. Instead of constru\cting a new object, as it would )Tj
T*
(for a string, it just finds the old one in the table, and uses that--it \gives you a pointer to the same object, )Tj
T*
(instead of a pointer to a new one. )Tj
0 -2.557 TD
(Try this: )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme>\(define bar1 'bar\))Tj
0 -1.2 TD
(#void)Tj
T*
(Scheme>\(define bar2 'bar\))Tj
T*
(#void)Tj
T*
(Scheme>\(eq? bar1 bar2\))Tj
T*
(#t)Tj
/T1_0 1 Tf
0 -2.552 TD
(Here, when we typed in the first definition, Scheme created a symbol obj\ect with the character sequence )Tj
/T1_2 1 Tf
0 -1.205 TD
(b)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(a)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(r)Tj
/T1_0 1 Tf
(, and added it to its table of existing symbols, as well as putting a po\inter to it in the new variable )Tj
T*
(binding )Tj
/T1_2 1 Tf
(bar1)Tj
/T1_0 1 Tf
(. When we typed in the second definition, Scheme noticed that there was \already a symbol )Tj
0 -1.205 TD
(object named )Tj
/T1_2 1 Tf
(bar)Tj
/T1_0 1 Tf
(, and put a pointer to that same object in )Tj
/T1_2 1 Tf
(bar2)Tj
/T1_0 1 Tf
( as well. )Tj
0 -2.562 TD
(When we asked Scheme if the values of )Tj
/T1_2 1 Tf
(bar1)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(bar2)Tj
/T1_0 1 Tf
( referred to the same object, the answer was )Tj
0 -1.205 TD
(yes \()Tj
/T1_2 1 Tf
(#t)Tj
/T1_0 1 Tf
(\)---they both referred to the unique symbol )Tj
/T1_2 1 Tf
(bar)Tj
/T1_0 1 Tf
(; there is only one symbol by that name. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_103.html \(2 of 3\)1\1/3/2006 9:07:07 PM)Tj
ET
EMC 

endstreamendobj3978 0 obj<</Length 4178>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Symbols)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 749.7126 Tm
(The big advantage of symbols over strings is that comparing them is very\ fast. If you want to know if )Tj
0 -1.205 TD
(two strings have the same character sequence, you can use )Tj
/T1_1 1 Tf
(equal?)Tj
/T1_0 1 Tf
(, which will compare their )Tj
0 -1.2 TD
(characters until it either finds a mismatch or reaches the ends of both \strings. )Tj
0 -2.562 TD
(With symbols, you can use )Tj
/T1_1 1 Tf
(equal?)Tj
/T1_0 1 Tf
(, but you can get the same results using )Tj
/T1_1 1 Tf
(eq?)Tj
/T1_0 1 Tf
(, which is faster. Recall )Tj
0 -1.205 TD
(that )Tj
/T1_1 1 Tf
(eq?)Tj
/T1_0 1 Tf
( just compares the pointers to two objects, to see if they're actually t\he same object. For )Tj
0 -1.2 TD
(symbols, this works to compare the print names, too, because two symbols\ can have the same name only )Tj
0 -1.205 TD
(if they're the same object. You don't have to worry about symbols being \)Tj
/T1_1 1 Tf
(equal?)Tj
/T1_0 1 Tf
( but not )Tj
/T1_1 1 Tf
(eq?)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(This makes symbols good for use as keys in data structures. For example,\ you can zip through a list )Tj
0 -1.205 TD
(looking for a symbol, using )Tj
/T1_1 1 Tf
(eq?)Tj
/T1_0 1 Tf
(, and all it has to do is compare pointers, not character sequences. )Tj
0 -2.557 TD
(Another advantage of symbols is that only one copy of its character sequ\ence is actually stored, and all )Tj
0 -1.2 TD
(occurrences of the same symbol are represented as pointers to the same o\bject. Each additional )Tj
T*
(occurrence of symbol thus only costs storage for a pointer. )Tj
0 -2.557 TD
(If you're doing text processing in Scheme, e.g., writing a word processo\r, you probably want to use )Tj
0 -1.2 TD
(strings, not symbols. Strings support more operations that make it conve\nient to concatenate them, )Tj
T*
(modify them, etc. )Tj
0 -2.557 TD
(Symbols are mainly used as key values in data structures, which happen t\o have a convenient human-)Tj
0 -1.2 TD
(readable printed representation. )Tj
0 -2.562 TD
(If you need to convert between strings and symbols, you can use )Tj
/T1_1 1 Tf
(string->symbol)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(symbol-)Tj
0 -1.205 TD
(>string)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
(string->symbol)Tj
/T1_0 1 Tf
( takes a string and returns the unique symbol with that print name, if )Tj
0 -1.2 TD
(there is one. \(If there's not, and the string is a legal symbol print n\ame, it creates one and returns it.\) )Tj
/T1_1 1 Tf
0 -1.205 TD
(symbol->string)Tj
/T1_0 1 Tf
( takes a symbol and returns a string representing its print name. \(Ther\e is no )Tj
0 -1.2 TD
(guarantee as to whether it always returns the same string object for a g\iven symbol, or a copy with the )Tj
T*
(same sequence of characters.\) )Tj
ET
0.5 0.5 0.5 rg
10 232.798 m
10 234.798 l
602 234.798 l
601 233.798 l
11 233.798 l
11 233.798 l
h
f
0.875 0.875 0.875 rg
602 234.798 m
602 232.798 l
10 232.798 l
11 233.798 l
601 233.798 l
601 233.798 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 213.7735 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 211.657 m
88.162 211.657 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 213.7735 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 211.657 m
143.378 211.657 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 213.7735 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 211.657 m
174.486 211.657 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 213.7735 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 211.657 m
200.932 211.657 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 213.7735 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 211.657 m
343.634 211.657 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 213.7735 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_103.html \(3 of 3\)1\1/3/2006 9:07:07 PM)Tj
ET
EMC 

endstreamendobj3979 0 obj(An Introduction to Scheme and its Implementation - Symbols)endobj3980 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_103.html)/S 700 0 R>>endobj3981 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_103.html)endobj3982 0 obj(◊á¥◊ÕŸµK∫”gÈäáÄ)endobj3983 0 obj<</TS(D:20061104050707)/ID 3982 0 R/CT(text/html)/O[3954 0 R 3965 0 R 3968 0 R]/S/SPS/T 3979 0 R/TID 3985 0 R/SI 3984 0 R>>endobj3984 0 obj<</TS(D:20061104050707)/AU 3981 0 R>>endobj3985 0 obj(0¬áØ{\\ÂOuWnZ‘)endobj3986 0 obj<</Parent 710 0 R/Next 4019 0 R/Dest[3954 0 R/XYZ 0 792 null]/Prev 3951 0 R/SE 3953 0 R/Title(An Introduction to Scheme and its Implementation - Symbols)>>endobj3987 0 obj<</TextDecorationType/Underline/O/Layout>>endobj3988 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 4002 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 3989 0 R>>endobj3989 0 obj<</Annots 3992 0 R/Parent 4036 0 R/ID 4015 0 R/StructParents 196/Contents 4010 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj3990 0 obj[3988 0 R]endobj3991 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj3992 0 obj[3991 0 R 3993 0 R 3994 0 R 3995 0 R 3996 0 R 3998 0 R]endobj3993 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3954 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_103.html)/S/URI>>/Border[0 0 0]>>endobj3994 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4022 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_105.html)/S/URI>>/Border[0 0 0]>>endobj3995 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj3996 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj3997 0 obj[3989 0 R/XYZ 0 731.2 null]endobj3998 0 obj<</Rect[10.0 695.8 146.906 710.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC114)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC114)/S/URI>>/Border[0 0 0]>>endobj3999 0 obj[3989 0 R/XYZ 0 674.4 null]endobj4000 0 obj<</Limits[(:’Z\\pˆdê‚Òi_\r6IDX72)(a©¶%ùa§Zc—∫ß˜òSEC73)]/Names[]>>endobj4001 0 obj<</Limits[(fo\\\\Öq0v%O›/!Í¿VÀIDX88)(õªÖ\(ùO¯»'≈´ÍIDX29)]/Names[]>>endobj4002 0 obj<</Annots 4005 0 R/Parent 4036 0 R/ID 4015 0 R/StructParents 197/Contents 4011 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4003 0 obj[3988 0 R]endobj4004 0 obj<</Rect[65.608 458.454 88.162 473.454]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4005 0 obj[4004 0 R 4006 0 R 4007 0 R 4008 0 R 4009 0 R]endobj4006 0 obj<</Rect[95.162 458.454 143.378 473.454]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3954 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_103.html)/S/URI>>/Border[0 0 0]>>endobj4007 0 obj<</Rect[150.378 458.454 174.486 473.454]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4022 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_105.html)/S/URI>>/Border[0 0 0]>>endobj4008 0 obj<</Rect[181.486 458.454 200.932 473.454]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4009 0 obj<</Rect[251.094 458.454 343.634 473.454]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4010 0 obj<</Length 5578>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Identifiers)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.176 w 
10 696.405 m
146.906 696.405 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 699.933 Tm
(A Note on Identifiers)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.687 TD
(When you type in a string, e.g., )Tj
/T1_2 1 Tf
("This here is a string, you know.")Tj
/T1_0 1 Tf
(, you can type in )Tj
0 -1.2 TD
(pretty much whatever you want, as long as it's between double quotes and\ doesn't have double quotes or )Tj
T*
(nonprinting characters in the middle. \(You can have strings with double\ quotes in them, but you have to )Tj
T*
(use a special escape sequence trick.\) )Tj
0 -2.557 TD
(When you type in a symbol, on the other hand, you have to be a little mo\re careful--some character )Tj
0 -1.205 TD
(sequences count as symbol names, but others don't. For example, the char\acter sequence )Tj
/T1_2 1 Tf
(1)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(2)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(3)Tj
/T1_0 1 Tf
( doesn't )Tj
0 -1.205 TD
(count as a symbol )Tj
/T1_2 1 Tf
(123)Tj
/T1_0 1 Tf
(, because it's a number. Character sequences with spaces, parentheses, a\nd single )Tj
0 -1.2 TD
(quotes in them are also a no-no, because those characters have special m\eaning when reading and )Tj
T*
(writing the printed representations of Scheme data structures. )Tj
0 -2.557 TD
(A symbol name has to start with an "extended alphabatic" character--that\ a letter or any of a fairly large )Tj
0 -1.2 TD
(set of printing characters, followed by a string of other extended alpha\betic characters or digits. \(The )Tj
0 -1.205 TD
(extended alphabetic characters are )Tj
/T1_2 1 Tf
(a)Tj
/T1_0 1 Tf
(-)Tj
/T1_2 1 Tf
(z)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(A)Tj
/T1_0 1 Tf
(-)Tj
/T1_2 1 Tf
(Z)Tj
/T1_0 1 Tf
(, and these: )Tj
/T1_2 1 Tf
(+ - . * / < = > ! ? : $ % _ & ~ )Tj
0 -1.205 TD
(^)Tj
/T1_0 1 Tf
(.\) )Tj
0 -2.557 TD
(For example, the following are all symbols: )Tj
/T1_3 1 Tf
7 0 0 7 35.713 350.7712 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_2 1 Tf
14 0 0 14 50 350.7712 Tm
(x)Tj
/T1_0 1 Tf
( )Tj
/T1_3 1 Tf
7 0 0 7 35.713 333.9038 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_2 1 Tf
14 0 0 14 50 333.9038 Tm
(thursdays-total*3)Tj
/T1_0 1 Tf
( )Tj
/T1_3 1 Tf
7 0 0 7 35.713 317.0364 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_2 1 Tf
14 0 0 14 50 317.0364 Tm
(am_is_are_was_were_be_being_been)Tj
/T1_0 1 Tf
( )Tj
/T1_3 1 Tf
7 0 0 7 35.713 300.169 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_2 1 Tf
14 0 0 14 50 300.169 Tm
(able-was-I-ere-I-saw-elba)Tj
/T1_0 1 Tf
( )Tj
/T1_3 1 Tf
7 0 0 7 35.713 283.3016 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_2 1 Tf
14 0 0 14 50 283.3016 Tm
(floppy_drive-3.5)Tj
/T1_0 1 Tf
( )Tj
/T1_3 1 Tf
7 0 0 7 35.713 266.4342 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_2 1 Tf
14 0 0 14 50 266.4342 Tm
(fourscore-and-7-years-ago)Tj
/T1_0 1 Tf
( )Tj
/T1_3 1 Tf
7 0 0 7 35.713 249.5668 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_2 1 Tf
14 0 0 14 50 249.5668 Tm
(x-15+three-times-thirty-seven)Tj
/T1_0 1 Tf
( )Tj
/T1_3 1 Tf
7 0 0 7 35.713 232.6994 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_2 1 Tf
14 0 0 14 50 232.6994 Tm
(=1)Tj
/T1_0 1 Tf
( )Tj
/T1_3 1 Tf
7 0 0 7 35.713 215.832 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_2 1 Tf
14 0 0 14 50 215.832 Tm
(lhs=>rhs)Tj
/T1_0 1 Tf
( )Tj
/T1_3 1 Tf
7 0 0 7 35.713 198.9646 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_2 1 Tf
14 0 0 14 50 198.9646 Tm
(x+/-3%)Tj
/T1_0 1 Tf
( )Tj
-2.857 -2.557 Td
(There is a slight restriction that you can't use a symbol name that star\ts with a character that could begin )Tj
0 -1.205 TD
(a literal number. This includes not only digits, but )Tj
/T1_2 1 Tf
(+)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(-)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(.)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(#)Tj
/T1_0 1 Tf
(. A special exception to this is that )Tj
/T1_2 1 Tf
(+)Tj
/T1_0 1 Tf
(, )Tj
0 -1.205 TD
(and )Tj
/T1_2 1 Tf
(-)Tj
/T1_0 1 Tf
(, by themselves, are symbols, and so is )Tj
/T1_2 1 Tf
(...)Tj
/T1_0 1 Tf
( \(the ellipsis identifier used in macros\). )Tj
0 -2.557 TD
(Scheme identifiers \(variable names and special form names and keywords\)\ have almost the same )Tj
0 -1.2 TD
(restrictions as Scheme symbol object character sequences, and it's no co\incidence. Most )Tj
T*
(implementations of Scheme happen to be written in Scheme, and symbol obj\ects are used in the )Tj
T*
(interpreter or compiler to represent variable names. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_104.html \(1 of 2\)1\1/3/2006 9:07:14 PM)Tj
ET
EMC 

endstreamendobj4011 0 obj<</Length 2950>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Identifiers)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 737.4298 Tm
(Don't read too much into this, however: it's easy to write a Scheme inte\rpreter or compiler in Scheme, )Tj
0 -1.2 TD
(and that )Tj
/T1_1 1 Tf
(is)Tj
/T1_0 1 Tf
( why the rules for symbol names are the same as the rules for variable n\ames, but symbols and )Tj
T*
(variables are very, very different things. A symbol is just a data objec\t, like a string, that has the special )Tj
T*
(property of being unique. You can use symbols like any other data object\, as part of any data structure. )Tj
0 -2.557 TD
(It just happens that interpreters and compilers generally use symbol obj\ects to represent the names of )Tj
0 -1.2 TD
(variables and whatnot, so it's )Tj
/T1_1 1 Tf
(convenient)Tj
/T1_0 1 Tf
( that the rules for symbol object names are the same as the rules )Tj
T*
(for identifiers in the language--but there is no other connection. )Tj
0 -2.557 TD
(Symbols are )Tj
/T1_1 1 Tf
(not)Tj
/T1_0 1 Tf
( necessarily variable names, they're just a kind of data object \(like s\trings\) that happen to )Tj
0 -1.2 TD
(get used that way, by )Tj
/T1_1 1 Tf
(some)Tj
/T1_0 1 Tf
( programs \(interpreters and compilers\). )Tj
/T1_1 1 Tf
(Your)Tj
/T1_0 1 Tf
( programs can use them any way )Tj
T*
(you choose. \(Sorry to be repetitive on this point, but confusing symbol\s and variables is one of the most )Tj
T*
(common and avoidable problems in learning Scheme. It's worse in Lisp, wh\ere symbols and variables do )Tj
T*
(have a deep connection, but not an obvious one.\) )Tj
ET
0.5 0.5 0.5 rg
10 481.854 m
10 483.854 l
602 483.854 l
601 482.854 l
11 482.854 l
11 482.854 l
h
f
0.875 0.875 0.875 rg
602 483.854 m
602 481.854 l
10 481.854 l
11 482.854 l
601 482.854 l
601 482.854 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 462.8298 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 460.713 m
88.162 460.713 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 462.8298 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 460.713 m
143.378 460.713 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 462.8298 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 460.713 m
174.486 460.713 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 462.8298 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 460.713 m
200.932 460.713 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 462.8298 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 460.713 m
343.634 460.713 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 462.8298 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_104.html \(2 of 2\)1\1/3/2006 9:07:14 PM)Tj
ET
EMC 

endstreamendobj4012 0 obj(An Introduction to Scheme and its Implementation - Identifiers)endobj4013 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_104.html)/S 700 0 R>>endobj4014 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_104.html)endobj4015 0 obj(U*⁄|˙˝Ò∏ê‚ù‹˚“HÄ)endobj4016 0 obj<</TS(D:20061104050714)/ID 4015 0 R/CT(text/html)/O[3989 0 R 4002 0 R]/S/SPS/T 4012 0 R/TID 4018 0 R/SI 4017 0 R>>endobj4017 0 obj<</TS(D:20061104050714)/AU 4014 0 R>>endobj4018 0 obj(BUßÚ∞	õø'V^±M†°)endobj4019 0 obj<</Parent 710 0 R/Next 4071 0 R/Dest[3989 0 R/XYZ 0 792 null]/Prev 3986 0 R/SE 3988 0 R/Title(An Introduction to Scheme and its Implementation - Identifiers)>>endobj4020 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4021 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 4035 0 R/Type/MCR>><</MCID 0/Pg 4041 0 R/Type/MCR>><</MCID 0/Pg 4046 0 R/Type/MCR>><</MCID 0/Pg 4050 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 4022 0 R>>endobj4022 0 obj<</Annots 4025 0 R/Parent 4036 0 R/ID 4067 0 R/StructParents 198/Contents 4059 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4023 0 obj[4021 0 R]endobj4024 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4025 0 obj[4024 0 R 4026 0 R 4027 0 R 4028 0 R 4029 0 R 4031 0 R 4033 0 R]endobj4026 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3989 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_104.html)/S/URI>>/Border[0 0 0]>>endobj4027 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4074 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html)/S/URI>>/Border[0 0 0]>>endobj4028 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4029 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4030 0 obj[4022 0 R/XYZ 0 731.2 null]endobj4031 0 obj<</Rect[10.0 693.431 97.0692 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC115)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC115)/S/URI>>/Border[0 0 0]>>endobj4032 0 obj[4022 0 R/XYZ 0 133.011 null]endobj4033 0 obj<</Rect[10.0 116.611 148.474 131.611]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC116)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC116)/S/URI>>/Border[0 0 0]>>endobj4034 0 obj[4022 0 R/XYZ 0 95.211 null]endobj4035 0 obj<</Annots 4040 0 R/Parent 4091 0 R/ID 4067 0 R/StructParents 199/Contents 4060 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4036 0 obj<</Parent 4042 0 R/Count 5/Type/Pages/Kids[3965 0 R 3968 0 R 3989 0 R 4002 0 R 4022 0 R]>>endobj4037 0 obj[4021 0 R]endobj4038 0 obj[4035 0 R/XYZ 0 190.344 null]endobj4039 0 obj<</Rect[10.0 173.944 141.474 188.944]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC117)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC117)/S/URI>>/Border[0 0 0]>>endobj4040 0 obj[4039 0 R]endobj4041 0 obj<</Parent 4091 0 R/ID 4067 0 R/StructParents 200/Contents 4061 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4042 0 obj<</Parent 4700 0 R/Count 25/Type/Pages/Kids[3780 0 R 3821 0 R 3887 0 R 3966 0 R 4036 0 R]>>endobj4043 0 obj[4021 0 R]endobj4044 0 obj[4041 0 R/XYZ 0 309.13 null]endobj4045 0 obj[4041 0 R/XYZ 0 309.13 null]endobj4046 0 obj<</Parent 4091 0 R/ID 4067 0 R/StructParents 201/Contents 4062 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4047 0 obj[4021 0 R]endobj4048 0 obj[4046 0 R/XYZ 0 504.863 null]endobj4049 0 obj[4046 0 R/XYZ 0 504.863 null]endobj4050 0 obj<</Annots 4053 0 R/Parent 4091 0 R/ID 4067 0 R/StructParents 202/Contents 4063 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4051 0 obj[4021 0 R]endobj4052 0 obj<</Rect[298.904 438.13 439.268 453.13]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(˛&‚!—IPÍ\\0[[‚Xè”SEC80)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_73.html#SEC80)/S/URI>>/Border[0 0 0]>>endobj4053 0 obj[4052 0 R 4054 0 R 4055 0 R 4056 0 R 4057 0 R 4058 0 R]endobj4054 0 obj<</Rect[65.608 384.33 88.162 399.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4055 0 obj<</Rect[95.162 384.33 143.378 399.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[3989 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_104.html)/S/URI>>/Border[0 0 0]>>endobj4056 0 obj<</Rect[150.378 384.33 174.486 399.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4074 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html)/S/URI>>/Border[0 0 0]>>endobj4057 0 obj<</Rect[181.486 384.33 200.932 399.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4058 0 obj<</Rect[251.094 384.33 343.634 399.33]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4059 0 obj<</Length 4034>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Lists Again)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
97.069 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Lists Again)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(Suppose we want to make a list of symbols whose print names are the Engl\ish words for the first five )Tj
0 -1.2 TD
(integers. We could do it using quoting, of course, like this: )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme>\(define firstfive '\(one two three four five\)\))Tj
0 -1.2 TD
(#void)Tj
T*
(Scheme>firstfive)Tj
T*
(\(one two three four five\))Tj
/T1_0 1 Tf
0 -2.557 TD
(We don't have to quote each symbol individually. Within a )Tj
/T1_2 1 Tf
(quote)Tj
/T1_0 1 Tf
( expression, everything is assumed to )Tj
0 -1.2 TD
(be literal data, not expressions to evaluate. )Tj
0 -2.562 TD
(We could also do it by calling )Tj
/T1_2 1 Tf
(list)Tj
/T1_0 1 Tf
( to construct the list, and handing it each of the five symbols as )Tj
0 -1.2 TD
(literals. To do that, we have to quote them, so that Scheme won't think \we're referring to variables )Tj
0 -1.205 TD
(named )Tj
/T1_2 1 Tf
(one)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(two)Tj
/T1_0 1 Tf
(, etc. )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme>\(define firstfive \(list 'one 'two 'three 'four 'five\)\))Tj
0 -1.2 TD
(#void)Tj
T*
(Scheme>firstfive)Tj
T*
(\(one two three four five\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Since )Tj
/T1_2 1 Tf
(list)Tj
/T1_0 1 Tf
( is a procedure, its argument expressions are evaluated. We use a )Tj
/T1_2 1 Tf
(quote)Tj
/T1_0 1 Tf
( around each )Tj
0 -1.2 TD
(expression, so that it will return a pointer to the appropriate symbol, \rather than the value of the variable )Tj
T*
(by the same name. )Tj
0 -2.557 TD
(This works whether or not there )Tj
/T1_3 1 Tf
(is)Tj
/T1_0 1 Tf
( a variable by that name, because names of symbols and names of )Tj
0 -1.2 TD
(variables are completely different things. )Tj
0 -2.562 TD
(For example, even after evaluating the above expressions, attempting to \evaluate the expression )Tj
/T1_2 1 Tf
(four)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(will be an error, unless we've defined a variable named )Tj
/T1_2 1 Tf
(four)Tj
/T1_0 1 Tf
(. The existence of a symbol with a given )Tj
0 -1.2 TD
(print name doesn't say anything about the existence of a variable with t\hat name. )Tj
ET
1.176 w 
10 117.216 m
148.474 117.216 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14 0 0 14 10 120.744 Tm
(Heterogeneous Lists)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(Since Scheme is dynamically typed, we can put any kind of object in a li\st. So far, we've made a list of )Tj
0 -1.2 TD
(integers and a list of symbols. We can also make a list of different kin\ds of things, such as a list of )Tj
T*
(integers, symbols, and lists. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_105.html \(1 of 5\)1\1/3/2006 9:07:19 PM)Tj
ET
EMC 

endstreamendobj4060 0 obj<</Length 3672>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Lists Again)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 743.7192 Tm
(Scheme>\(define mixed5 '\(one 2 \(three and a\) "four" 5\)\))Tj
0 -1.2 TD
(#void)Tj
T*
(Scheme>mixed5)Tj
T*
(\(one 2 \(three and a\) "four" 5\) )Tj
/T1_0 1 Tf
0 -2.552 TD
(Here we've constructed a mixed list whose first element is a symbol, the\ second is an integer, the third is )Tj
0 -1.2 TD
(a list of symbols, the fourth is a string, and the fifth is another inte\ger. \(The technical term for a mixed )Tj
T*
(list is a "heterogeneous list."\) )Tj
0 -2.557 TD
(We can draw it like this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(       +-----+)Tj
0 -1.2 TD
(mixed5 |  +--+-->+---+---+  +---+---+  +---+---+  +---+---+  +---+---+)Tj
T*
(       +-----+   | + | +-+->| + | +-+->| + | +-+->| + | +-+->| + | * |)Tj
T*
(                 +-+-+---+  +-+-+---+  +-+-+---+  +-+-+---+  +-+-+---+)Tj
T*
(                   |          |          |          |          |)Tj
T*
(                  \\|/        \\|/         |         \\|/        \\|/)Tj
T*
(                  one         2          |        "four"       5)Tj
T*
(                                         |)Tj
T*
(                                        \\|/)Tj
T*
(                                       +---+---+  +---+---+  +---+---+)Tj
T*
(                                       | + | +-+->| + | +-+->| + | * |)Tj
T*
(                                       +-+-+---+  +-+-+---+  +-+-+---+)Tj
T*
(                                         |          |          |)Tj
T*
(                                        \\|/        \\|/        \\|/)Tj
T*
(                                       three       and         a)Tj
/T1_0 1 Tf
0 -3.757 TD
(Notice that we draw the symbols \()Tj
/T1_1 1 Tf
(one)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(three)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(and)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
(\) as simple sequences of characters. This is )Tj
0 -1.2 TD
(just a drawing convention. They're really objects, like pairs are. We dr\aw strings similarly, but with )Tj
T*
(double quotes around them. Don't be fooled--these are objects on the hea\p, too. We just draw them this )Tj
T*
(way to keep the picture from getting cluttered up. )Tj
ET
0 0 1 RG
1.176 w 10 M 0 j 0 J []0 d 
10 174.549 m
141.474 174.549 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14 0 0 14 10 178.0766 Tm
(Operations on Lists)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.687 TD
(We've already seen two list-processing procedures that you'll use a lot,\ )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( takes a )Tj
0 -1.205 TD
(pointer to a pair, and extracts the value of its first \()Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
(\) field. )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
( takes a pointer to a pair and returns )Tj
T*
(the value of its second \()Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
(\) field. )Tj
0 -2.562 TD
(\(It might have been better if )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( had been called )Tj
/T1_1 1 Tf
(first)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
( had been called )Tj
/T1_1 1 Tf
(rest)Tj
/T1_0 1 Tf
(, since that's )Tj
0 -1.2 TD
(more suggestive of how they're used: a pointer to the first item in a li\st, and a pointer to the pair that )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_105.html \(2 of 5\)1\1/3/2006 9:07:19 PM)Tj
ET
EMC 

endstreamendobj4061 0 obj<</Length 3418>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Lists Again)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(heads the rest of the list.\) )Tj
0 -2.562 TD
(Given our list stored in )Tj
/T1_1 1 Tf
(mixed5)Tj
/T1_0 1 Tf
(, we can extract parts of the list using )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(car mixed5\))Tj
0 -1.2 TD
(one)Tj
T*
(Scheme>\(cdr mixed5\))Tj
T*
(\(2 \(three and a\) "four" five\))Tj
/T1_0 1 Tf
0 -2.557 TD
(By using )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
( multiple times, we can extract things beyond the first element. For exa\mple, )Tj
0 -1.205 TD
(taking the )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
( of the )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
( of a list skips the first two elements, and returns the rest: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(cdr \(cdr mixed5\)\))Tj
0 -1.2 TD
(\(\(three and a\) "four" 5\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Taking the car of that list \(that is, the )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( of the )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
( of the )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
(\) returns the first item in that list: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(car \(cdr \(cdr mixed5\)\)\))Tj
0 -1.2 TD
(\(three and a\))Tj
/T1_0 1 Tf
0 -2.552 TD
(We can keep doing this, for example taking the second element of that su\blist by taking the car of its )Tj
0 -1.2 TD
(cdr. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(car \(cdr \(car \(cdr \(cdr mixed5\)\)\)\)\))Tj
0 -1.2 TD
(and)Tj
/T1_0 1 Tf
0 -2.552 TD
(This starts to get tedious and confusing--too many nestings of procedure\s that do too little at each step--)Tj
0 -1.2 TD
(so Scheme provides a handful of procedures that do two list operations a\t a whack. The two most )Tj
0 -1.205 TD
(important ones are )Tj
/T1_1 1 Tf
(cadr)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(cddr)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(cadr)Tj
/T1_0 1 Tf
( takes the )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( of the )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
(, which gives you the second item in the list. )Tj
/T1_1 1 Tf
(cddr)Tj
/T1_0 1 Tf
( takes the )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
( of the )Tj
/T1_1 1 Tf
0 -1.205 TD
(cdr)Tj
/T1_0 1 Tf
(, skipping the first two pairs in a list and returning the rest of the l\ist. )Tj
0 -2.557 TD
(This lets us do the same thing we did above, a little more concisely and\ readably: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(cadr \(car \(cddr mixed5\)\)\))Tj
0 -1.2 TD
(and)Tj
/T1_0 1 Tf
0 -2.552 TD
(With a little practice, it's not hard to read a few nested expressions l\ike this. In this example, taking the )Tj
/T1_1 1 Tf
0 -1.205 TD
(cddr)Tj
/T1_0 1 Tf
( of )Tj
/T1_1 1 Tf
(mixed5)Tj
/T1_0 1 Tf
( skips down the list two places, giving us the list that starts with the\ sublist we want. )Tj
0 -1.205 TD
(Then taking the )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( of that gives us the sublist itself off the front of that list, and tak\ing the )Tj
/T1_1 1 Tf
(cadr)Tj
/T1_0 1 Tf
( of )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_105.html \(3 of 5\)1\1/3/2006 9:07:19 PM)Tj
ET
EMC 

endstreamendobj4062 0 obj<</Length 4881>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Lists Again)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(that gives us the second item in the sublist. )Tj
0 -2.562 TD
(Of course, even if Scheme didn't provide )Tj
/T1_1 1 Tf
(cadr)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
(, you could write them yourself in terms of )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(and )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
(: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(cadr x\))Tj
0 -1.2 TD
(   \(car \(cdr x\)\)\))Tj
0 -2.4 TD
(\(define \(cddr x\))Tj
0 -1.2 TD
(   \(cdr \(cdr x\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Scheme actually provides predefined list operations for all combinations\ of up to four )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
('s and )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
('s. )Tj
0 -1.205 TD
(For example, )Tj
/T1_1 1 Tf
(cadadr)Tj
/T1_0 1 Tf
( takes the )Tj
/T1_1 1 Tf
(cadr)Tj
/T1_0 1 Tf
( of the )Tj
/T1_1 1 Tf
(cadr)Tj
/T1_0 1 Tf
(. \(The naming scheme is that the pattern of )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
('s and )Tj
/T1_1 1 Tf
0 -1.205 TD
(d)Tj
/T1_0 1 Tf
('s reflects the equivalent nesting of calls to )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
(.\) )Tj
0 -2.557 TD
(You probably won't want to bother with most of those, because the names \aren't very intuitive. Two )Tj
0 -1.205 TD
(procedures that are worth knowing are )Tj
/T1_1 1 Tf
(list-ref)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(list-tail)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(list-ref)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(list)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(n)Tj
/T1_1 1 Tf
(\))Tj
/T1_0 1 Tf
( extracts the )Tj
/T1_2 1 Tf
(n)Tj
/T1_0 1 Tf
(th element of a list )Tj
/T1_1 1 Tf
(list)Tj
/T1_0 1 Tf
(, which is equivalent to )Tj
/T1_2 1 Tf
(n-1)Tj
/T1_0 1 Tf
( applications of )Tj
/T1_1 1 Tf
0 -1.205 TD
(cdr)Tj
/T1_0 1 Tf
( followed by )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
(. For example, )Tj
/T1_1 1 Tf
(\(list-ref '\(a b c d e\) 3\))Tj
/T1_0 1 Tf
( is equivalent to )Tj
/T1_1 1 Tf
(\(car )Tj
0 -1.205 TD
(\(cdr \(cdr '\(a b c d e\)\)\)\))Tj
/T1_0 1 Tf
(, and returns )Tj
/T1_1 1 Tf
(d)Tj
/T1_0 1 Tf
(.\) )Tj
0 -2.562 TD
(In effect, you can index into a list as though it were an array, using )Tj
/T1_1 1 Tf
(list-ref)Tj
/T1_0 1 Tf
(. \(Of course, the access )Tj
0 -1.2 TD
(time for an element of a list is linear in the index of the element. If \you need constant-time access, you )Tj
T*
(can use vectors, i.e., one-dimensional arrays.\) Notice that the numberi\ng is zero-based, which is why )Tj
/T1_1 1 Tf
0 -1.205 TD
(\(list-ref lis 3\))Tj
/T1_0 1 Tf
( returns the )Tj
/T1_2 1 Tf
(fourth)Tj
/T1_0 1 Tf
( element of a )Tj
/T1_1 1 Tf
(lis)Tj
/T1_0 1 Tf
(. This is consistent with the indexing of )Tj
T*
(vectors, which are also zero-based, as well as reflecting the number of \)Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
( operations. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(list-tail)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(list)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(n)Tj
/T1_1 1 Tf
(\))Tj
/T1_0 1 Tf
( skips the first )Tj
/T1_2 1 Tf
(n)Tj
/T1_0 1 Tf
( elements of a list and returns a pointer to the rest, which is )Tj
0 -1.205 TD
(equivalent to repeated applications of )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
(. \(This is standard R4RS Scheme, but not IEEE Scheme. If )Tj
0 -1.205 TD
(your Scheme doesn't provide )Tj
/T1_1 1 Tf
(list-tail)Tj
/T1_0 1 Tf
(, you can easily write your own.\) )Tj
0 -2.557 TD
(These two procedures can make it much clearer what you're doing when you\ extract elements from )Tj
0 -1.205 TD
(nested lists. Suppose that we have a list )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(, which is a triply-nested list--a list of lists of lists, and we )Tj
0 -1.2 TD
(want to extract the second element of the bottom-level list that is the \third element of the middle-level )Tj
T*
(list that is the fourth element of the outermost list. )Tj
0 -2.562 TD
(We could write )Tj
/T1_1 1 Tf
(\(car \(cdr \(car \(cdr \(cdr \(car \(cdr \(cdr \(cdr foo\)\)\)\)\)\)\)\)\\))Tj
/T1_0 1 Tf
(, )Tj
0 -1.205 TD
(but that's pretty hard to read. If we use )Tj
/T1_1 1 Tf
(cadr)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(caddr)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(cadddr)Tj
/T1_0 1 Tf
(, we can make it somewhat more )Tj
0 -1.205 TD
(readable by using one function call at each level of structure: )Tj
/T1_1 1 Tf
(\(cadr \(caddr \(cadddr foo\)\)\))Tj
/T1_0 1 Tf
(. )Tj
T*
(But it's still clearer to write )Tj
/T1_1 1 Tf
(\(list-ref \(list-ref \(list-ref foo 4\) 3\) 2\))Tj
/T1_0 1 Tf
( )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_105.html \(4 of 5\)1\1/3/2006 9:07:19 PM)Tj
ET
EMC 

endstreamendobj4063 0 obj<</Length 2963>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Lists Again)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(or \(indented\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(list-ref \(list-ref \(list-ref foo 4\))Tj
0 -1.2 TD
(                    3\))Tj
T*
(          2\))Tj
0 -2.557 TD
(list-ref)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(list-tail)Tj
/T1_0 1 Tf
( are much more convenient than things like )Tj
/T1_1 1 Tf
(caddr)Tj
/T1_0 1 Tf
( when the indexes into )Tj
0 -1.205 TD
(a list vary at run time. For example, we might use an index variable )Tj
/T1_1 1 Tf
(i)Tj
/T1_0 1 Tf
( \(or some other expression that )Tj
0 -1.205 TD
(returns an integer\) to pick out the )Tj
/T1_2 1 Tf
(i)Tj
/T1_0 1 Tf
(th member of a list: )Tj
/T1_1 1 Tf
(\(list-ref foo i\))Tj
/T1_0 1 Tf
(. Writing this with )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(and )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
( would require writing a loop or recursion to perform )Tj
/T1_2 1 Tf
(n-1)Tj
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
('s and a )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(==================================================================)Tj
0 -1.2 TD
(This is the end of Hunk N)Tj
0 -2.4 TD
(At this point, you should go back to the previous chapter and)Tj
0 -1.2 TD
(read Hunk O before returning here and continuing this tutorial.)Tj
T*
(==================================================================)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Go BACK to read Hunk O, which starts at section )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
298.904 440.389 m
439.268 440.389 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 298.904 442.506 Tm
(Tail Recursion \(Hunk O\))Tj
0 0 0 rg
(.\) )Tj
ET
0.5 0.5 0.5 rg
10 407.73 m
10 409.73 l
602 409.73 l
601 408.73 l
11 408.73 l
11 408.73 l
h
f
0.875 0.875 0.875 rg
602 409.73 m
602 407.73 l
10 407.73 l
11 408.73 l
601 408.73 l
601 408.73 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 388.706 Tm
(Go to the )Tj
ET
65.608 386.589 m
88.162 386.589 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 388.706 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 386.589 m
143.378 386.589 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 388.706 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 386.589 m
174.486 386.589 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 388.706 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 386.589 m
200.932 386.589 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 388.706 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 386.589 m
343.634 386.589 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 388.706 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_105.html \(5 of 5\)1\1/3/2006 9:07:19 PM)Tj
ET
EMC 

endstreamendobj4064 0 obj(An Introduction to Scheme and its Implementation - Lists Again)endobj4065 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_105.html)/S 700 0 R>>endobj4066 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_105.html)endobj4067 0 obj(aÇÛXíS&É∆‡˙¬≠OB€)endobj4068 0 obj<</TS(D:20061104050719)/ID 4067 0 R/CT(text/html)/O[4022 0 R 4035 0 R 4041 0 R 4046 0 R 4050 0 R]/S/SPS/T 4064 0 R/TID 4070 0 R/SI 4069 0 R>>endobj4069 0 obj<</TS(D:20061104050719)/AU 4066 0 R>>endobj4070 0 obj(‘£ßº=ƒ∑˛tkL·Öw˙)endobj4071 0 obj<</Parent 710 0 R/Next 4135 0 R/Dest[4022 0 R/XYZ 0 792 null]/Prev 4019 0 R/SE 4021 0 R/Title(An Introduction to Scheme and its Implementation - Lists Again)>>endobj4072 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4073 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 4090 0 R/Type/MCR>><</MCID 0/Pg 4098 0 R/Type/MCR>><</MCID 0/Pg 4106 0 R/Type/MCR>><</MCID 0/Pg 4115 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 4074 0 R>>endobj4074 0 obj<</Annots 4077 0 R/Parent 4091 0 R/ID 4131 0 R/StructParents 203/Contents 4123 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R/T1_4 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4075 0 obj[4073 0 R]endobj4076 0 obj<</Rect[59.467 751.884 79.9099 765.48]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4077 0 obj[4076 0 R 4078 0 R 4079 0 R 4080 0 R 4081 0 R 4083 0 R 4085 0 R 4087 0 R]endobj4078 0 obj<</Rect[86.2547 751.884 129.958 765.48]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4022 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_105.html)/S/URI>>/Border[0 0 0]>>endobj4079 0 obj<</Rect[136.302 751.884 158.154 765.48]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4138 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_107.html)/S/URI>>/Border[0 0 0]>>endobj4080 0 obj<</Rect[164.499 751.884 182.124 765.48]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4081 0 obj<</Rect[227.591 751.884 311.469 765.48]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4082 0 obj[4074 0 R/XYZ 0 735.206 null]endobj4083 0 obj<</Rect[9.06398 697.751 339.085 716.228]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC118)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC118)/S/URI>>/Border[0 0 0]>>endobj4084 0 obj[4074 0 R/XYZ 0 395.795 null]endobj4085 0 obj<</Rect[9.06398 378.783 196.992 394.331]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC119)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC119)/S/URI>>/Border[0 0 0]>>endobj4086 0 obj[4074 0 R/XYZ 0 74.8809 null]endobj4087 0 obj<</Rect[9.06398 57.6853 139.874 73.4167]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC120)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC120)/S/URI>>/Border[0 0 0]>>endobj4088 0 obj[4074 0 R/XYZ 0 38.0931 null]endobj4089 0 obj[4074 0 R/XYZ 0 38.0931 null]endobj4090 0 obj<</Annots 4095 0 R/Parent 4165 0 R/ID 4131 0 R/StructParents 204/Contents 4124 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4091 0 obj<</Parent 4410 0 R/Count 5/Type/Pages/Kids[4035 0 R 4041 0 R 4046 0 R 4050 0 R 4074 0 R]>>endobj4092 0 obj[4073 0 R]endobj4093 0 obj[4090 0 R/XYZ 0 719.011 null]endobj4094 0 obj<</Rect[9.06398 704.146 31.9052 717.742]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC121)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC121)/S/URI>>/Border[0 0 0]>>endobj4095 0 obj[4094 0 R 4097 0 R]endobj4096 0 obj[4090 0 R/XYZ 0 196.378 null]endobj4097 0 obj<</Rect[9.06398 181.513 69.9739 195.109]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC122)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC122)/S/URI>>/Border[0 0 0]>>endobj4098 0 obj<</Annots 4102 0 R/Parent 4165 0 R/ID 4131 0 R/StructParents 205/Contents 4125 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 737 0 R/T1_4 1287 0 R/T1_5 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4099 0 obj[4073 0 R]endobj4100 0 obj[4098 0 R/XYZ 0 169.546 null]endobj4101 0 obj<</Rect[9.06398 152.35 226.934 168.081]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC123)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC123)/S/URI>>/Border[0 0 0]>>endobj4102 0 obj[4101 0 R]endobj4103 0 obj[4098 0 R/XYZ 0 132.758 null]endobj4104 0 obj[4098 0 R/XYZ 0 132.758 null]endobj4105 0 obj[4098 0 R/XYZ 0 37.2826 null]endobj4106 0 obj<</Annots 4109 0 R/Parent 4165 0 R/ID 4131 0 R/StructParents 206/Contents 4126 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R/T1_2 736 0 R/T1_3 828 0 R/T1_4 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4107 0 obj[4073 0 R]endobj4108 0 obj<</Rect[9.06398 751.725 155.857 765.48]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC124)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC124)/S/URI>>/Border[0 0 0]>>endobj4109 0 obj[4108 0 R 4112 0 R]endobj4110 0 obj[4106 0 R/XYZ 0 732.328 null]endobj4111 0 obj[4106 0 R/XYZ 0 243.651 null]endobj4112 0 obj<</Rect[9.06398 228.628 148.243 242.383]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC125)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC125)/S/URI>>/Border[0 0 0]>>endobj4113 0 obj[4106 0 R/XYZ 0 209.231 null]endobj4114 0 obj[4106 0 R/XYZ 0 209.231 null]endobj4115 0 obj<</Annots 4118 0 R/Parent 4165 0 R/ID 4131 0 R/StructParents 207/Contents 4127 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4116 0 obj[4073 0 R]endobj4117 0 obj<</Rect[59.467 221.797 79.9099 235.393]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4118 0 obj[4117 0 R 4119 0 R 4120 0 R 4121 0 R 4122 0 R]endobj4119 0 obj<</Rect[86.2547 221.797 129.958 235.393]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4022 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_105.html)/S/URI>>/Border[0 0 0]>>endobj4120 0 obj<</Rect[136.302 221.797 158.154 235.393]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4138 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_107.html)/S/URI>>/Border[0 0 0]>>endobj4121 0 obj<</Rect[164.499 221.797 182.124 235.393]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4122 0 obj<</Rect[227.591 221.797 311.469 235.393]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4123 0 obj<</Length 5197>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Basic Programming Exa\mples)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 755.8499 Tm
(Go to the )Tj
ET
0 0 1 RG
0.64 w 10 M 0 j 0 J []0 d 
59.467 753.931 m
79.91 753.931 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 59.467 755.8499 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
86.255 753.931 m
129.958 753.931 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 86.2547 755.8499 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
136.302 753.931 m
158.154 753.931 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 136.3023 755.8499 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
164.499 753.931 m
182.124 753.931 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 164.4986 755.8499 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
227.591 753.931 m
311.469 753.931 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 227.5911 755.8499 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
9.064 741.551 m
9.064 743.364 l
602.936 743.364 l
602.03 742.457 l
9.97 742.457 l
9.97 742.457 l
h
f
0.875 0.875 0.875 rg
602.936 743.364 m
602.936 741.551 l
9.064 741.551 l
9.97 742.457 l
602.03 742.457 l
602.03 742.457 l
h
f
1.476 w 
9.064 698.162 m
339.085 698.162 l
S
0 0 1 rg
BT
/T1_1 1 Tf
17.5702 0 0 17.5702 9.064 702.5893 Tm
(Basic Programming Examples \(Hunk P\))Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 666.9671 Tm
([ From here on, the text is not structured as a type-along tutorial inte\rleaved with Chapter 2. However, it's a good )Tj
0 -1.2 TD
(idea to experiment with the examples interactively in a running Scheme s\ystem . ] In this section, I'll give a few )Tj
T*
(simple examples of Scheme programming, mostly using recursion to manipul\ate lists without side effects. \(Later, )Tj
T*
(I'll revisit some of these examples, and show how to implement them more\ efficiently, using tail recursion, but still )Tj
T*
(without side effects.\) )Tj
0 -2.557 TD
(I'll show how to implement simple versions of some standard Scheme proce\dures; this may help you understand )Tj
0 -1.2 TD
(what those procedures do, and how to use them. \(Later, I'll return to s\ome of these examples and show how to )Tj
T*
(implement more general versions.\) I'll also give some examples that are\n't standard Scheme procedures, but )Tj
T*
(illustrate common idioms. )Tj
0 -2.557 TD
(Some of these examples use higher-order procedures--procedures which ope\rate on procedures--and toward the end )Tj
0 -1.2 TD
(of the section, I'll discuss )Tj
/T1_2 1 Tf
(currying)Tj
/T1_0 1 Tf
(, a technique for creating specialized versions of procedures in a parti\cular )Tj
T*
(context. )Tj
0 -2.557 TD
(You should get used to thinking recursively, and avoiding side effects m\ost of the time. It's often easier to write )Tj
0 -1.2 TD
(things recursively than using normal loops and side effects. )Tj
ET
1.23 w 
9.064 379.276 m
196.992 379.276 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14.6418 0 0 14.6418 9.064 382.9655 Tm
(An Error Signaling Routine)Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 348.2915 Tm
(It's often useful to put error-checking code in your procedures, to make\ sure that their arguments satisfy whatever )Tj
T*
(preconditions they need to operate correctly. )Tj
0 -2.557 TD
(In a dynamically-typed language, this is often good for making sure that\ you detect errors where pass values to a )Tj
0 -1.2 TD
(procedure that can't handle arguments of those types. Usually when you d\o that, you'll find out soon enough, )Tj
0 -1.205 TD
(because you'll perform an illegal operation \(like taking the )Tj
/T1_3 1 Tf
(car)Tj
/T1_0 1 Tf
( of a number\), and Scheme will detect the error and )Tj
0 -1.2 TD
(tell you. )Tj
0 -2.557 TD
(Scheme doesn't yet have a standard error signaling routine, but we will \use one that many systems provide, called )Tj
/T1_3 1 Tf
0 -1.205 TD
(error)Tj
/T1_0 1 Tf
(. )Tj
/T1_3 1 Tf
(error)Tj
/T1_0 1 Tf
( takes any number of arguments, )Tj
/T1_3 1 Tf
(display)Tj
/T1_0 1 Tf
(s them to tell the user what went wrong, and signals an )Tj
0 -1.2 TD
(error. \(In most interactive Scheme systems, you'll get a break prompt l\ike the one you get when Scheme itself )Tj
T*
(detects an error.\) )Tj
0 -2.562 TD
([ If your system doesn't have )Tj
/T1_3 1 Tf
(error)Tj
/T1_0 1 Tf
(, you'll get an error signaled anyway, in the form of an unbound variabl\e )Tj
0 -1.205 TD
(exception when you try to call )Tj
/T1_3 1 Tf
(error)Tj
/T1_0 1 Tf
(! ] )Tj
/T1_2 1 Tf
0 -2.557 TD
([ moved example code for length, append, reverse from here to an earlier\ section ])Tj
/T1_0 1 Tf
( )Tj
ET
0.738 w 
9.064 59.838 m
35.419 59.838 l
S
1.23 w 
35.419 58.362 m
69.593 58.362 l
S
0.738 w 
69.593 59.838 m
139.874 59.838 l
S
0 0 1 rg
BT
/T1_4 1 Tf
14.6418 0 0 14.6418 9.064 62.0515 Tm
(map)Tj
/T1_1 1 Tf
( and )Tj
/T1_4 1 Tf
(for-each)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_106.html \(1 of 5\)1\1/3/2006 9:07:29 PM)Tj
ET
EMC 

endstreamendobj4124 0 obj<</Length 4059>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Basic Programming Exa\mples)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 755.7888 Tm
(map)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(for-each)Tj
/T1_0 1 Tf
( are used to apply a procedure to elements of lists. They're good for co\ding repetitive )Tj
0 -1.2 TD
(operations over sets of objects. )Tj
ET
0 0 1 RG
0.64 w 10 M 0 j 0 J []0 d 
9.064 706.133 m
31.905 706.133 l
S
0 0 1 rg
BT
/T1_2 1 Tf
12.6896 0 0 12.6896 9.064 708.0512 Tm
(map)Tj
0 0 0 rg
/T1_1 1 Tf
0 -2.7 TD
(map)Tj
/T1_0 1 Tf
( takes a procedure and applies it to the elements of a list \(or corresp\onding elements of a set of lists\), returning )Tj
0 -1.2 TD
(a list of results. )Tj
0 -2.562 TD
(For example, if we want to double the elements of a list, we can use )Tj
/T1_1 1 Tf
(map)Tj
/T1_0 1 Tf
( and the )Tj
/T1_1 1 Tf
(double)Tj
/T1_0 1 Tf
( procedure we defined )Tj
0 -1.2 TD
(earlier: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(map double '\(1 2 3\)\))Tj
0 -1.2 TD
(\(2 4 6\))Tj
/T1_0 1 Tf
0 -2.557 TD
(If the procedure we're calling takes more than one argument, we can pass\ two lists of arguments to )Tj
/T1_1 1 Tf
(map)Tj
/T1_0 1 Tf
(. For )Tj
0 -1.2 TD
(example, if we want to add corresponding elements of two lists, and get \back a corresponding list of their sums, we )Tj
T*
(can do this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(map + '\(1 2 3\) '\(4 5 6\)\))Tj
0 -1.2 TD
(\(5 7 9\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Right now, we'll just write a simplified version of )Tj
/T1_1 1 Tf
(map)Tj
/T1_0 1 Tf
(, which takes one list of values and applies a one-argument )Tj
0 -1.2 TD
(procedure to them. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(map proc lis\))Tj
0 -1.2 TD
(   \(cond \(\(null? lis\))Tj
T*
(          '\(\)\))Tj
T*
(         \(\(pair? lis\))Tj
T*
(          \(cons \(proc \(car lis\)\))Tj
T*
(                \(map proc \(cdr lis\)\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that )Tj
/T1_1 1 Tf
(map)Tj
/T1_0 1 Tf
( may construct a list of results front-to-back, or back-to-front, depend\ing on the order of the )Tj
0 -1.205 TD
(evaluation of the arguments to )Tj
/T1_1 1 Tf
(cons)Tj
/T1_0 1 Tf
(. That is, it may apply the )Tj
/T1_1 1 Tf
(map)Tj
/T1_0 1 Tf
(ped procedure on the way down during )Tj
0 -1.2 TD
(recursion, or on the way back up. \(This is allowed by the Scheme standa\rd--the order of the results in the resulting )Tj
T*
(list corresponds to the ordering of the argument list\(s\), but the dyna\mic order of applications is not specified.\) )Tj
ET
9.064 183.499 m
69.974 183.499 l
S
0 0 1 rg
BT
/T1_2 1 Tf
12.6896 0 0 12.6896 9.064 185.4181 Tm
(for-each)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.7 TD
(Like )Tj
/T1_1 1 Tf
(map)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(for-each)Tj
/T1_0 1 Tf
( applies a procedure to each element of a list, or to corresponding elem\ents of a set of lists. )Tj
0 -1.205 TD
(Unlike )Tj
/T1_1 1 Tf
(map)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(for-each)Tj
/T1_0 1 Tf
( discards the values returned by all of the applications except the last\, and returns the last )Tj
0 -1.205 TD
(value. \(The applications are also guaranteed to occur in front-to-back \list order.\) This is sort of like what a )Tj
/T1_1 1 Tf
(begin)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(expression does, except that the "subexpressions" are not textually writ\ten out--they're applications of a first-class )Tj
T*
(procedure to list items. )Tj
0 -2.562 TD
(Like )Tj
/T1_1 1 Tf
(begin)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(for-each)Tj
/T1_0 1 Tf
( is used to execute expressions in sequence, for effect rather than valu\e, except that the )Tj
0 -1.2 TD
(last value may be useful. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_106.html \(2 of 5\)1\1/3/2006 9:07:29 PM)Tj
ET
EMC 

endstreamendobj4125 0 obj<</Length 4512>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Basic Programming Exa\mples)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 742.31 Tm
(Here's a simplified version of )Tj
/T1_1 1 Tf
(for-each)Tj
/T1_0 1 Tf
(, which we'll call )Tj
/T1_1 1 Tf
(for-each1)Tj
/T1_0 1 Tf
(. It takes exactly one procedure, assumed )Tj
0 -1.2 TD
(to be a procedure of one argument, and one list. It applies the procedur\e to each of the elements of the list in turn, )Tj
T*
(and returns the result of the last application. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(for-each1 proc lis\))Tj
0 -1.2 TD
(   \(cond \(\(null? \(cdr lis\)\)  ; one-element list?)Tj
T*
(          \(proc \(car lis\)\)\))Tj
0 -1.2 TD
(         \(else)Tj
0 -1.2 TD
(          \(proc \(car lis\)\))Tj
0 -1.2 TD
(          \(for-each1 proc \(cdr lis\)\)\)\)\)  )Tj
/T1_0 1 Tf
0 -2.552 TD
(Notice that this is a little different from our usual recursive list tra\versal, where the first thing we do is check )Tj
0 -1.205 TD
(whether the list is empty. )Tj
/T1_1 1 Tf
(for-each)Tj
/T1_0 1 Tf
( makes no sense for an empty list, since it must return the value of the\ last )Tj
0 -1.2 TD
(application. )Tj
0 -2.562 TD
(Since )Tj
/T1_1 1 Tf
(for-each)Tj
/T1_0 1 Tf
( must take a list of one or more items, the base case for the recursion \is when we hit a )Tj
/T1_2 1 Tf
(one-)Tj
0 -1.2 TD
(element)Tj
/T1_0 1 Tf
( list, rather than an empty list. The recursive case is when we have a l\ist that's got )Tj
/T1_2 1 Tf
(more than one)Tj
/T1_0 1 Tf
( element. )Tj
T*
(Anything else is an error due to bad input. )Tj
0 -2.557 TD
(We can characterize this kind of data structure recursively, almost the \same way as the normal definition of a proper )Tj
0 -1.2 TD
(list: )Tj
0 -2.557 TD
(A list-of-one-or-more-elements is )Tj
/T1_3 1 Tf
6.3448 0 0 6.3448 32.3702 364.7636 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
12.6896 0 0 12.6896 45.3199 364.7636 Tm
(a list of one element, i.e., a pair whose cdr is null, or )Tj
/T1_3 1 Tf
6.3448 0 0 6.3448 32.3702 349.5361 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
12.6896 0 0 12.6896 45.3199 349.5361 Tm
(a list of more than one element, i.e., a pair whose cdr is a list-of-one\-or-more-elements. )Tj
-2.857 -2.562 Td
(The code for )Tj
/T1_1 1 Tf
(for-each1)Tj
/T1_0 1 Tf
( directly reflects this characterization of the data it's expected to ha\ndle. The base case )Tj
0 -1.2 TD
(comes first, and then the recursive case. )Tj
0 -2.562 TD
(If )Tj
/T1_1 1 Tf
(for-each1)Tj
/T1_0 1 Tf
( encounters a nonlist or an empty list, it will signal an error immediat\ely, because both branches )Tj
0 -1.2 TD
(assume that they're operating on a pair, and attept to take the car of i\t, which is an error for anything but a pair. If )Tj
/T1_1 1 Tf
0 -1.205 TD
(for-each1)Tj
/T1_0 1 Tf
( encounters an improper list, it will likewise signal an error at the fi\rst )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
( that doesn't refer to pair. )Tj
0 -2.557 TD
(As usual, this is what we want--the recursive structure of the data stru\cture we're operating on is reflected directly )Tj
0 -1.2 TD
(in the structure of the recursive code, and unexpected data cause errors\ to be signaled immediately. )Tj
ET
0 0 1 RG
0.738 w 10 M 0 j 0 J []0 d 
9.064 154.502 m
61.775 154.502 l
S
1.23 w 
61.775 153.027 m
95.949 153.027 l
S
0.738 w 
95.949 154.502 m
139.874 154.502 l
S
1.23 w 
139.874 153.027 m
226.934 153.027 l
S
0 0 1 rg
BT
/T1_4 1 Tf
14.6418 0 0 14.6418 9.064 156.7163 Tm
(member)Tj
/T1_5 1 Tf
( and )Tj
/T1_4 1 Tf
(assoc)Tj
/T1_5 1 Tf
(, and friends)Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 121.7979 Tm
(The standard Scheme procedures )Tj
/T1_1 1 Tf
(member)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(assoc)Tj
/T1_0 1 Tf
( are used for searching lists. I'll show how they can be )Tj
T*
(implemented in Scheme, even though every Scheme system includes them. )Tj
0 -2.562 TD
(Each of these procedures has two alternative versions, which use differe\nt equality tests \()Tj
/T1_1 1 Tf
(eq?)Tj
/T1_0 1 Tf
( or )Tj
/T1_1 1 Tf
(eqv?)Tj
/T1_0 1 Tf
(\) when )Tj
0 -1.2 TD
(searching for an item in list. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_106.html \(3 of 5\)1\1/3/2006 9:07:29 PM)Tj
ET
EMC 

endstreamendobj4126 0 obj<</Length 4730>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Basic Programming Exa\mples)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 1 RG
0.64 w 10 M 0 j 0 J []0 d 
9.064 753.711 m
54.746 753.711 l
S
1.066 w 
54.746 752.432 m
61.802 752.432 l
S
0.64 w 
61.802 753.711 m
92.257 753.711 l
S
1.066 w 
92.257 752.432 m
125.402 752.432 l
S
0.64 w 
125.402 753.711 m
155.857 753.711 l
S
0 0 1 rg
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 755.63 Tm
(member)Tj
/T1_2 1 Tf
(, )Tj
/T1_1 1 Tf
(memq)Tj
/T1_2 1 Tf
(, and )Tj
/T1_1 1 Tf
(memv)Tj
0 0 0 rg
/T1_3 1 Tf
0 -2.7 TD
(member)Tj
/T1_0 1 Tf
( searches a list for an item, and returns the remainder of the list star\ting at the point where that item is )Tj
0 -1.205 TD
(found. \(That is, it returns the pair whose )Tj
/T1_3 1 Tf
(car)Tj
/T1_0 1 Tf
( refers to the item.\) It returns )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
( if the item is not in the list. )Tj
0 -2.562 TD
(For example, )Tj
/T1_3 1 Tf
(\(member 3 '\(1 4 3 2\)\))Tj
/T1_0 1 Tf
( returns )Tj
/T1_3 1 Tf
(\(3 2\))Tj
/T1_0 1 Tf
(, and )Tj
/T1_3 1 Tf
(\(member 'foo '\(bar baz quux\)\))Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(returns )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Lists are often used as an implementation of sets, and )Tj
/T1_3 1 Tf
(member)Tj
/T1_0 1 Tf
( serves nicely as a test of set membership. If an item )Tj
0 -1.205 TD
(is not found, it returns )Tj
/T1_3 1 Tf
(#f)Tj
/T1_0 1 Tf
(, and if it is, it returns a pair. Since a pair is a true value, the res\ult of )Tj
/T1_3 1 Tf
(member)Tj
/T1_0 1 Tf
( can be used )Tj
0 -1.2 TD
(like a boolean in a conditional. )Tj
0 -2.557 TD
(Since member returns the "rest" of a list, starting with the point where\ the item is found, it can also be particularly )Tj
0 -1.2 TD
(useful with ordered lists, by skipping past all of the elements up to so\me desired point, and returning the rest. )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define \(member thing lis\))Tj
0 -1.2 TD
(   \(if \(null? lis\))Tj
T*
(       #f)Tj
T*
(       \(if \(equal? \(car lis\) thing\))Tj
T*
(           lis)Tj
T*
(           \(member thing \(cdr lis\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Note that )Tj
/T1_3 1 Tf
(member)Tj
/T1_0 1 Tf
( uses the )Tj
/T1_3 1 Tf
(equal?)Tj
/T1_0 1 Tf
( test \(data structure equivalence\) when searching. This makes sense in\ )Tj
0 -1.2 TD
(situations where you want same-structured data structures to count as "t\he same." \(For example, if you're searching )Tj
T*
(a list of lists, and you want a sublist that has the same structure as t\he target list to count as "the same."\) Note that if )Tj
0 -1.205 TD
(the elements of the list are circular data structures, )Tj
/T1_3 1 Tf
(member)Tj
/T1_0 1 Tf
( may loop infinitely. )Tj
0 -2.562 TD
(If you want to search for a particular object, you should use )Tj
/T1_3 1 Tf
(memq?)Tj
/T1_0 1 Tf
(, which is like )Tj
/T1_3 1 Tf
(member)Tj
/T1_0 1 Tf
( except that it uses the )Tj
/T1_3 1 Tf
0 -1.205 TD
(eq?)Tj
/T1_0 1 Tf
( test, and may be much faster. )Tj
0 -2.557 TD
(If the list may include numbers, and you want copies of the same number \to count as "the same", you should use )Tj
/T1_3 1 Tf
0 -1.205 TD
(memv)Tj
/T1_0 1 Tf
(. )Tj
ET
9.064 230.614 m
47.133 230.614 l
S
1.066 w 
47.133 229.335 m
54.188 229.335 l
S
0.64 w 
54.188 230.614 m
84.643 230.614 l
S
1.066 w 
84.643 229.335 m
117.788 229.335 l
S
0.64 w 
117.788 230.614 m
148.243 230.614 l
S
0 0 1 rg
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 232.5327 Tm
(assoc)Tj
/T1_2 1 Tf
(, )Tj
/T1_1 1 Tf
(assq)Tj
/T1_2 1 Tf
(, and )Tj
/T1_1 1 Tf
(assv)Tj
0 0 0 rg
/T1_3 1 Tf
0 -2.7 TD
(assoc)Tj
/T1_0 1 Tf
( is used to search a special kind of nested list called an )Tj
/T1_4 1 Tf
(association)Tj
/T1_0 1 Tf
( list. Association lists are often used to )Tj
0 -1.2 TD
(represent small tables. )Tj
0 -2.557 TD
(An association list is a list of lists. Each sublist represents an assoc\iation between a key and a list of values. The car )Tj
0 -1.2 TD
(of the list is taken as the key field, but the whole list of values is r\eturned. )Tj
0 -2.557 TD
(\(Typically, an association list is used as a simple table to map keys t\o single values. In that case, you must )Tj
0 -1.205 TD
(remember to take the )Tj
/T1_3 1 Tf
(cadr)Tj
/T1_0 1 Tf
( of the sublist that )Tj
/T1_3 1 Tf
(assoc)Tj
/T1_0 1 Tf
( returns.\) )Tj
0 -2.557 TD
(Some example uses: )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_106.html \(4 of 5\)1\1/3/2006 9:07:29 PM)Tj
ET
EMC 

endstreamendobj4127 0 obj<</Length 3733>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Basic Programming Exa\mples)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 755.1036 Tm
(Scheme>\(assoc 'julie '\(\(paul august 22\) \(julie feb 9\) \(veronique \march 28\)\)\))Tj
0 -1.2 TD
(\(julie feb 9\))Tj
0 -2.4 TD
(Scheme>\(assoc 'key2 '\(\(key1 val1\) \(key2 val2\) \(key0 val0\)\)\))Tj
0 -1.2 TD
(\(key2 val2\))Tj
0 -2.4 TD
(Scheme>\(cadr \(assoc 'key2 '\(\(key1 val1\) \(key2 val2\) \(key0 val0\)\\)\)\))Tj
0 -1.2 TD
(val2)Tj
0 -2.4 TD
(Scheme>\(assoc '\(feb 9\))Tj
0 -1.2 TD
(              '\(\(\(aug 1\) maggie phil\) \(\(feb 9\) jim heloise\) \(\(\jan 6\) declan\)\)\))Tj
T*
(\(\(feb 9\) jim heloise\))Tj
/T1_0 1 Tf
0 -2.552 TD
(And the code: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(assoc thing alist\))Tj
0 -1.2 TD
(   \(if \(null? alist\))Tj
T*
(       #f)Tj
T*
(       \(if \(equal? \(car \(car alist\)\) thing\))Tj
T*
(           \(car alist\))Tj
T*
(           \(assoc thing \(cdr alist\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that the basic pattern of recursion here is the same as for trave\rsing other proper lists. The Like )Tj
/T1_1 1 Tf
(member)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
0 -1.205 TD
(assoc)Tj
/T1_0 1 Tf
( uses the )Tj
/T1_1 1 Tf
(equal?)Tj
/T1_0 1 Tf
( test when searching a list. This is what you want if \(and only if\) yo\u want same-)Tj
0 -1.2 TD
(structured data structures to count as "the same." )Tj
/T1_1 1 Tf
0 -2.562 TD
(assq)Tj
/T1_0 1 Tf
( is like )Tj
/T1_1 1 Tf
(assoc)Tj
/T1_0 1 Tf
(, but uses the )Tj
/T1_1 1 Tf
(eq?)Tj
/T1_0 1 Tf
( test. This is the most commonly-used routine for searching association \lists, )Tj
0 -1.205 TD
(because symbols are commonly used as keys for association lists. \(The n\ame )Tj
/T1_1 1 Tf
(assq)Tj
/T1_0 1 Tf
( suggests "associate using the )Tj
/T1_1 1 Tf
0 -1.205 TD
(eq?)Tj
/T1_0 1 Tf
( test."\) )Tj
0 -2.562 TD
(If the keys may be numbers, )Tj
/T1_1 1 Tf
(assv?)Tj
/T1_0 1 Tf
( should probably be used instead. It considers )Tj
/T1_1 1 Tf
(=)Tj
/T1_0 1 Tf
( numbers the same, but )Tj
0 -1.205 TD
(otherwise tests object identity, like )Tj
/T1_1 1 Tf
(eq?)Tj
/T1_0 1 Tf
(. \(The name )Tj
/T1_1 1 Tf
(assv)Tj
/T1_0 1 Tf
( suggests "associate using the )Tj
/T1_1 1 Tf
(eqv?)Tj
/T1_0 1 Tf
( test."\) )Tj
ET
0.5 0.5 0.5 rg
9.064 243.007 m
9.064 244.82 l
602.936 244.82 l
602.03 243.913 l
9.97 243.913 l
9.97 243.913 l
h
f
0.875 0.875 0.875 rg
602.936 244.82 m
602.936 243.007 l
9.064 243.007 l
9.97 243.913 l
602.03 243.913 l
602.03 243.913 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 225.7632 Tm
(Go to the )Tj
ET
0 0 1 RG
0.64 w 10 M 0 j 0 J []0 d 
59.467 223.845 m
79.91 223.845 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 59.467 225.7632 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
86.255 223.845 m
129.958 223.845 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 86.2547 225.7632 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
136.302 223.845 m
158.154 223.845 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 136.3023 225.7632 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
164.499 223.845 m
182.124 223.845 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 164.4986 225.7632 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
227.591 223.845 m
311.469 223.845 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 227.5911 225.7632 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_106.html \(5 of 5\)1\1/3/2006 9:07:29 PM)Tj
ET
EMC 

endstreamendobj4128 0 obj(An Introduction to Scheme and its Implementation - Basic Programming Examples)endobj4129 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_106.html)/S 700 0 R>>endobj4130 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_106.html)endobj4131 0 obj(`æß\)¯Á8;∏úÆI7~)endobj4132 0 obj<</TS(D:20061104050729)/ID 4131 0 R/CT(text/html)/O[4074 0 R 4090 0 R 4098 0 R 4106 0 R 4115 0 R]/S/SPS/T 4128 0 R/TID 4134 0 R/SI 4133 0 R>>endobj4133 0 obj<</TS(D:20061104050729)/AU 4130 0 R>>endobj4134 0 obj(´`À¬ 5,‰®{´·d)endobj4135 0 obj<</Parent 710 0 R/Next 4161 0 R/Dest[4074 0 R/XYZ 0 792 null]/Prev 4071 0 R/SE 4073 0 R/Title(An Introduction to Scheme and its Implementation - Basic Programming Examples)>>endobj4136 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4137 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 4138 0 R>>endobj4138 0 obj<</Annots 4141 0 R/Parent 4165 0 R/ID 4157 0 R/StructParents 208/Contents 4153 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4139 0 obj[4137 0 R]endobj4140 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4141 0 obj[4140 0 R 4142 0 R 4143 0 R 4144 0 R 4145 0 R 4147 0 R 4148 0 R 4149 0 R 4150 0 R 4151 0 R 4152 0 R]endobj4142 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4074 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html)/S/URI>>/Border[0 0 0]>>endobj4143 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4164 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_108.html)/S/URI>>/Border[0 0 0]>>endobj4144 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4145 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4146 0 obj[4138 0 R/XYZ 0 731.2 null]endobj4147 0 obj<</Rect[10.0 689.877 224.355 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC126)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC126)/S/URI>>/Border[0 0 0]>>endobj4148 0 obj<</Rect[65.608 496.738 88.162 511.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4149 0 obj<</Rect[95.162 496.738 143.378 511.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4074 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html)/S/URI>>/Border[0 0 0]>>endobj4150 0 obj<</Rect[150.378 496.738 174.486 511.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4164 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_108.html)/S/URI>>/Border[0 0 0]>>endobj4151 0 obj<</Rect[181.486 496.738 200.932 511.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4152 0 obj<</Rect[251.094 496.738 343.634 511.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4153 0 obj<</Length 3099>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Procedural Abstractio\n)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
224.355 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Procedural Abstraction)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 655.914 Tm
(Scheme's main abstraction mechanism is )Tj
/T1_2 1 Tf
(procedural abstraction)Tj
/T1_0 1 Tf
(; we define procedures that represent )Tj
0 -1.2 TD
(common operations, and "specialize" those procedures by passing argument\s: by passing different )Tj
T*
(arguments,w we can make the same routine do somewhat different things, d\epending on the particular )Tj
T*
(data it encounters at run time. )Tj
0 -2.557 TD
(Since Scheme procedures are first-class data objects, we can customize p\rocedures in terms of other )Tj
0 -1.2 TD
(procedures. We can write a general procedure with a "hole" in it, to be \specialized by another procedure. )Tj
ET
0.5 0.5 0.5 rg
10 520.138 m
10 522.138 l
602 522.138 l
601 521.138 l
11 521.138 l
11 521.138 l
h
f
0.875 0.875 0.875 rg
602 522.138 m
602 520.138 l
10 520.138 l
11 521.138 l
601 521.138 l
601 521.138 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 501.114 Tm
(Go to the )Tj
ET
0.706 w 
65.608 498.997 m
88.162 498.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 501.114 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 498.997 m
143.378 498.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 501.114 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 498.997 m
174.486 498.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 501.114 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 498.997 m
200.932 498.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 501.114 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 498.997 m
343.634 498.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 501.114 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_107.html11/3/2006 9:\07:39 PM)Tj
ET
EMC 

endstreamendobj4154 0 obj(An Introduction to Scheme and its Implementation - Procedural Abstraction)endobj4155 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_107.html)/S 700 0 R>>endobj4156 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_107.html)endobj4157 0 obj(!†˝ì1¬Ñ®∏¡Ø‰Å)endobj4158 0 obj<</TS(D:20061104050739)/ID 4157 0 R/CT(text/html)/O[4138 0 R]/S/SPS/T 4154 0 R/TID 4160 0 R/SI 4159 0 R>>endobj4159 0 obj<</TS(D:20061104050739)/AU 4156 0 R>>endobj4160 0 obj(0,~Q∑Í	\\îJ^ã)endobj4161 0 obj<</Parent 710 0 R/Next 4201 0 R/Dest[4138 0 R/XYZ 0 792 null]/Prev 4135 0 R/SE 4137 0 R/Title(An Introduction to Scheme and its Implementation - Procedural Abstraction)>>endobj4162 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4163 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 4176 0 R/Type/MCR>><</MCID 0/Pg 4178 0 R/Type/MCR>><</MCID 0/Pg 4180 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 4164 0 R>>endobj4164 0 obj<</Annots 4168 0 R/Parent 4234 0 R/ID 4195 0 R/StructParents 209/Contents 4188 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4165 0 obj<</Parent 4410 0 R/Count 5/Type/Pages/Kids[4090 0 R 4098 0 R 4106 0 R 4115 0 R 4138 0 R]>>endobj4166 0 obj[4163 0 R]endobj4167 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4168 0 obj[4167 0 R 4169 0 R 4170 0 R 4171 0 R 4172 0 R 4174 0 R]endobj4169 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4138 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_107.html)/S/URI>>/Border[0 0 0]>>endobj4170 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4204 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_109.html)/S/URI>>/Border[0 0 0]>>endobj4171 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4172 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4173 0 obj[4164 0 R/XYZ 0 731.2 null]endobj4174 0 obj<</Rect[10.0 693.431 202.118 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC127)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC127)/S/URI>>/Border[0 0 0]>>endobj4175 0 obj[4164 0 R/XYZ 0 671.815 null]endobj4176 0 obj<</Parent 4234 0 R/ID 4195 0 R/StructParents 210/Contents 4189 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4177 0 obj[4163 0 R]endobj4178 0 obj<</Parent 4234 0 R/ID 4195 0 R/StructParents 211/Contents 4190 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4179 0 obj[4163 0 R]endobj4180 0 obj<</Annots 4183 0 R/Parent 4234 0 R/ID 4195 0 R/StructParents 212/Contents 4191 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4181 0 obj[4163 0 R]endobj4182 0 obj<</Rect[65.608 248.648 88.162 263.648]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4183 0 obj[4182 0 R 4184 0 R 4185 0 R 4186 0 R 4187 0 R]endobj4184 0 obj<</Rect[95.162 248.648 143.378 263.648]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4138 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_107.html)/S/URI>>/Border[0 0 0]>>endobj4185 0 obj<</Rect[150.378 248.648 174.486 263.648]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4204 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_109.html)/S/URI>>/Border[0 0 0]>>endobj4186 0 obj<</Rect[181.486 248.648 200.932 263.648]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4187 0 obj<</Rect[251.094 248.648 343.634 263.648]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4188 0 obj<</Length 4417>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Procedure Specializat\ion)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
202.118 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Procedure Specialization)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(Suppose that we are writing a program where we need to take a list of nu\mbers and produce a )Tj
0 -1.2 TD
(corresponding lists with numbers ten times as big. )Tj
0 -2.562 TD
(Notice that we already have a procedure, )Tj
/T1_2 1 Tf
(map)Tj
/T1_0 1 Tf
(, that can iterate over a list, apply a function to each item, )Tj
0 -1.205 TD
(and return the list of function values. We also have a multiplication pr\ocedure, )Tj
/T1_2 1 Tf
(*)Tj
/T1_0 1 Tf
( that can multiply )Tj
0 -1.2 TD
(numbers by any value we want. )Tj
0 -2.562 TD
(We can't just write )Tj
/T1_2 1 Tf
(\(map * some-list\))Tj
/T1_0 1 Tf
(, though, because when )Tj
/T1_2 1 Tf
(map)Tj
/T1_0 1 Tf
( iterates over a single list, it )Tj
0 -1.205 TD
(expects a procedure that takes exactly one argument, and )Tj
/T1_2 1 Tf
(*)Tj
/T1_0 1 Tf
( takes )Tj
/T1_3 1 Tf
(two)Tj
/T1_0 1 Tf
( arguments. Somehow, we need to )Tj
T*
(supply the argument )Tj
/T1_2 1 Tf
(10)Tj
/T1_0 1 Tf
( to each of the calls )Tj
/T1_2 1 Tf
(map)Tj
/T1_0 1 Tf
( makes to )Tj
/T1_2 1 Tf
(*)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(What we need is a one-argument function that multiplies its argument by \ten. We could define our own )Tj
0 -1.205 TD
(multiplication-by-ten procedure, )Tj
/T1_2 1 Tf
(*10)Tj
/T1_0 1 Tf
(, and then use )Tj
/T1_2 1 Tf
(map)Tj
/T1_0 1 Tf
( to apply it to the elements of )Tj
/T1_2 1 Tf
(some-list)Tj
/T1_0 1 Tf
(. )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(*10 number\))Tj
0 -1.2 TD
(   \(* 10 number\)\))Tj
0 -2.4 TD
(\(map *10 some-list\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Here we've specialized )Tj
/T1_2 1 Tf
(*)Tj
/T1_0 1 Tf
( to create )Tj
/T1_2 1 Tf
(*10)Tj
/T1_0 1 Tf
(---we've taken a function with some number of arguments, and )Tj
0 -1.2 TD
(produced a function with fewer arguments, which is equivalent to calling\ the original procedure with the )Tj
T*
(missing argument always the same. )Tj
0 -2.562 TD
(If )Tj
/T1_2 1 Tf
(*10)Tj
/T1_0 1 Tf
( is only used in one place, there's really no need to create a named pro\cedure--we can just use a )Tj
/T1_2 1 Tf
0 -1.205 TD
(lambda)Tj
/T1_0 1 Tf
( expression to create the procedure where we need it, at the call to map\: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(map \(lambda \(number\))Tj
0 -1.2 TD
(        \(* 10 number\)\))Tj
T*
(     some-list\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Here we create an anonymous procedure that multiplies its argument by 10\, and pass that procedure and )Tj
0 -1.205 TD
(a list to )Tj
/T1_2 1 Tf
(map)Tj
/T1_0 1 Tf
(, which will map the procedure over the list and return the correspondin\g list of results. )Tj
0 -2.557 TD
(It is often a good idea to design procedures with specialization in mind\. )Tj
0 -2.562 TD
(Consider )Tj
/T1_2 1 Tf
(assoc)Tj
/T1_0 1 Tf
(, which has variants )Tj
/T1_2 1 Tf
(assq)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(assv)Tj
/T1_0 1 Tf
(; the only difference between them is what )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_108.html \(1 of 4\)1\1/3/2006 9:07:49 PM)Tj
ET
EMC 

endstreamendobj4189 0 obj<</Length 4165>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Procedure Specializat\ion)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(comparison operator they use. )Tj
0 -2.562 TD
(Likewise, )Tj
/T1_1 1 Tf
(member)Tj
/T1_0 1 Tf
( has variants )Tj
/T1_1 1 Tf
(memq)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(memv)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Consider the similarities between )Tj
/T1_1 1 Tf
(member)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(memv)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(memq)Tj
/T1_0 1 Tf
(. All of them do almost the same thing, )Tj
0 -1.2 TD
(with the difference being which equality test they use during a search. \)Tj
0 -2.562 TD
(We can define a general procedure, )Tj
/T1_1 1 Tf
(mem)Tj
/T1_0 1 Tf
(, which expresses the similarities between these procedures, and )Tj
0 -1.205 TD
(then specialize that procedure. That is, in writing )Tj
/T1_1 1 Tf
(mem)Tj
/T1_0 1 Tf
(, we'll leave a "hole" for the comparison operator. )Tj
0 -1.205 TD
(That hole is just an argument. Our general procedure will look like )Tj
/T1_1 1 Tf
(member)Tj
/T1_0 1 Tf
(, except that it will take an )Tj
0 -1.2 TD
(argument saying which test to use. In Scheme, this is easy--we can simpl\y hand it a first-class procedure )Tj
0 -1.205 TD
(like )Tj
/T1_1 1 Tf
(equal?)Tj
/T1_0 1 Tf
( or )Tj
/T1_1 1 Tf
(eq?)Tj
/T1_0 1 Tf
(, or any other test we want to use, and have it call that procedure to p\erform the )Tj
0 -1.2 TD
(test. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(mem test-proc thing lis\))Tj
0 -1.2 TD
(   \(if \(null? lis\))Tj
T*
(       #f)Tj
T*
(       \(if \(test-proc \(car lis\) thing\))Tj
T*
(           lis)Tj
T*
(           \(mem test-proc thing \(cdr lis\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(To get the effect of )Tj
/T1_1 1 Tf
(\(member some-key some-list\))Tj
/T1_0 1 Tf
(, we can write )Tj
/T1_1 1 Tf
(\(mem equal? some-)Tj
0 -1.205 TD
(key some-list\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Note that here we're not calling )Tj
/T1_1 1 Tf
(equal?)Tj
/T1_0 1 Tf
( directly--we're just passing the value of the variable )Tj
/T1_1 1 Tf
(equal?)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(\(i.e., the procedure first-class procedure object )Tj
/T1_1 1 Tf
(equal?)Tj
/T1_0 1 Tf
(\) to )Tj
/T1_1 1 Tf
(mem)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
(mem)Tj
/T1_0 1 Tf
( receives this value when the )Tj
0 -1.205 TD
(argument variable )Tj
/T1_1 1 Tf
(test-proc)Tj
/T1_0 1 Tf
( is bound, and can call it by that name. )Tj
0 -2.562 TD
(\(In the )Tj
/T1_1 1 Tf
(*10)Tj
/T1_0 1 Tf
( example, we specialized )Tj
/T1_1 1 Tf
(*)Tj
/T1_0 1 Tf
( with data--the number )Tj
/T1_1 1 Tf
(10)Tj
/T1_0 1 Tf
(---but here we're specializing )Tj
/T1_1 1 Tf
(mem)Tj
/T1_0 1 Tf
( with )Tj
0 -1.2 TD
(a procedure. The same technique works, because procedures are data objec\ts, and can be passed as )Tj
T*
(arguments like any other data, then called as procedures.\) )Tj
0 -2.562 TD
(If Scheme didn't provide )Tj
/T1_1 1 Tf
(member)Tj
/T1_0 1 Tf
(, we could easily define it by specializing )Tj
/T1_1 1 Tf
(mem)Tj
/T1_0 1 Tf
(---we simply define )Tj
/T1_1 1 Tf
0 -1.205 TD
(member)Tj
/T1_0 1 Tf
( to call )Tj
/T1_1 1 Tf
(mem)Tj
/T1_0 1 Tf
(, but always pass )Tj
/T1_1 1 Tf
(equal?)Tj
/T1_0 1 Tf
( as the first argument: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(member thing lis\))Tj
0 -1.2 TD
(   \(mem equal? thing lis\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Likewise, we could define )Tj
/T1_1 1 Tf
(memq)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(memv)Tj
/T1_0 1 Tf
( by specializing )Tj
/T1_1 1 Tf
(mem)Tj
/T1_0 1 Tf
( with )Tj
/T1_1 1 Tf
(eq?)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(eqv?)Tj
/T1_0 1 Tf
(, respectively. )Tj
0 -2.557 TD
(This kind of function specialization is particularly useful when you hav\e a pattern for a procedure, but )Tj
0 -1.2 TD
(may need arbitrary variants of it in the future. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_108.html \(2 of 4\)1\1/3/2006 9:07:49 PM)Tj
ET
EMC 

endstreamendobj4190 0 obj<</Length 3358>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Procedure Specializat\ion)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 734.1646 Tm
(For example, suppose you want to search a list of lists, and you want yo\ur search routine to return the )Tj
0 -1.2 TD
(first sublist whose first two elements match a particular two-element li\st. \(This might be an ordered list )Tj
T*
(of birthdays, and you could be searching for the part of the list that s\tarts with a particular month of a )Tj
T*
(particular year.\) )Tj
0 -2.562 TD
(You might search the list for any list whose first elements are )Tj
/T1_1 1 Tf
(1964)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(December)Tj
/T1_0 1 Tf
(, by handing it a )Tj
0 -1.205 TD
(target list )Tj
/T1_1 1 Tf
(\(1964 December\))Tj
/T1_0 1 Tf
(, like this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(mem-first-two? '\(1964 December\))Tj
0 -1.2 TD
(                '\(\(1961 January 15 "Susan"\))Tj
T*
(                  \(1964 March 28 "Edward"\))Tj
T*
(                  \(1964 March 29 "Selena"\))Tj
T*
(                  \(1964 December 31 "Anton"\))Tj
T*
(                  \(1965 January 8 "Booker"\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(and get back the result )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(\(1964 December 31 "Anton"\))Tj
0 -1.2 TD
( \(1965 January 8 "Booker"\)\)\)\))Tj
0 -2.557 TD
(member)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(memq)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(memv)Tj
/T1_0 1 Tf
( are useless for this, but it's pretty easy with )Tj
/T1_1 1 Tf
(mem)Tj
/T1_0 1 Tf
(. First we define a match )Tj
0 -1.2 TD
(predicate for our purpose: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(first-two-eqv? target thing\))Tj
0 -1.2 TD
(   \(and \(eqv? \(car target\) \(car thing\)\))Tj
T*
(        \(eqv? \(cadr target\) \(cadr thing\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Then we curry )Tj
/T1_1 1 Tf
(mem)Tj
/T1_0 1 Tf
( with that predicate to create our search procedure: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(mem-first-two? thing lis\))Tj
0 -1.2 TD
(   \(mem first-two-eqv? thing lis\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(If )Tj
/T1_1 1 Tf
(first-two-eqv?)Tj
/T1_0 1 Tf
( is only likely to be used in )Tj
/T1_1 1 Tf
(mem-first-two)Tj
/T1_0 1 Tf
(, we can put it inside )Tj
/T1_1 1 Tf
(mem-)Tj
0 -1.205 TD
(first-two)Tj
/T1_0 1 Tf
(, as a local procedure, instead of leaving it hanging out where it can b\e called from other )Tj
0 -1.2 TD
(procedures. This is a good idea for a procedure that is so specialized t\hat it's unlikely to be useful in any )Tj
T*
(other way--especially if you're sure it works for what you designed it f\or, but think it may be tricky to )Tj
0 -1.205 TD
(use for slightly different purposes. \(For example, we've chosen to use \the )Tj
/T1_1 1 Tf
(eqv?)Tj
/T1_0 1 Tf
( test for matching list )Tj
0 -1.2 TD
(elements, but for some purposes this might be the wrong choice.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(mem-first-two thing lis\))Tj
0 -1.2 TD
(   \(let \(\(first-two-eqv? \(lambda \(target thing\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_108.html \(3 of 4\)1\1/3/2006 9:07:49 PM)Tj
ET
EMC 

endstreamendobj4191 0 obj<</Length 3091>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Procedure Specializat\ion)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 752.8255 Tm
(                            \(and \(eqv? \(car target\) \(car thing\)\))Tj
0 -1.2 TD
(                                 \(eqv? \(cadr target\) \(cadr thing\)\)\\)\)\)\))Tj
T*
(      \(mem first-two-eqv? thing lis\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(In this routine, )Tj
/T1_1 1 Tf
(first-two-eqv?)Tj
/T1_0 1 Tf
( is only called from one place--the call to )Tj
/T1_1 1 Tf
(mem)Tj
/T1_0 1 Tf
(. Rather than defining )Tj
0 -1.205 TD
(it as a named procedure, using )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
(, we can simply use the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression at the )Tj
0 -1.2 TD
(one place the procedure is needed: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(mem-first-two thing lis\))Tj
0 -1.2 TD
(   \(mem \(lambda \(target thing\))Tj
T*
(           \(and \(eqv? \(car target\) \(car thing\)\))Tj
T*
(                \(eqv? \(cadr target\) \(cadr thing\)\)\)\))Tj
T*
(        target)Tj
T*
(        lis\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(This idiom is very common in situations where you need a small procedure\ in exactly one place. )Tj
0 -2.562 TD
(Likewise, if )Tj
/T1_1 1 Tf
(mem-first-two)Tj
/T1_0 1 Tf
( itself is only useful in one place, it would be reasonable to avoid )Tj
0 -1.205 TD
(making it a procedure at all, and instead to simply call )Tj
/T1_1 1 Tf
(mem)Tj
/T1_0 1 Tf
( from that place: )Tj
/T1_1 1 Tf
0 -2.562 TD
(...)Tj
0 -1.2 TD
(\(mem \(lambda \(target thing\))Tj
T*
(        \(and \(eqv? \(car target\) \(car thing\)\))Tj
T*
(             \(eqv? \(cadr target\) \(cadr thing\)\)\)\))Tj
T*
(     target)Tj
T*
(     lis\))Tj
T*
(...)Tj
ET
0.5 0.5 0.5 rg
10 272.048 m
10 274.048 l
602 274.048 l
601 273.048 l
11 273.048 l
11 273.048 l
h
f
0.875 0.875 0.875 rg
602 274.048 m
602 272.048 l
10 272.048 l
11 273.048 l
601 273.048 l
601 273.048 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 253.0233 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 250.906 m
88.162 250.906 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 253.0233 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 250.906 m
143.378 250.906 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 253.0233 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 250.906 m
174.486 250.906 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 253.0233 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 250.906 m
200.932 250.906 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 253.0233 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 250.906 m
343.634 250.906 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 253.0233 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_108.html \(4 of 4\)1\1/3/2006 9:07:49 PM)Tj
ET
EMC 

endstreamendobj4192 0 obj(An Introduction to Scheme and its Implementation - Procedure Specialization)endobj4193 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_108.html)/S 700 0 R>>endobj4194 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_108.html)endobj4195 0 obj(L µXï—w&|dﬁÍ¨a)endobj4196 0 obj<</TS(D:20061104050749)/ID 4195 0 R/CT(text/html)/O[4164 0 R 4176 0 R 4178 0 R 4180 0 R]/S/SPS/T 4192 0 R/TID 4198 0 R/SI 4197 0 R>>endobj4197 0 obj<</TS(D:20061104050749)/AU 4194 0 R>>endobj4198 0 obj(÷Îf+ñ◊‡ó‡	kŒÛ‚)endobj4199 0 obj<</Limits[(ºj\rﬁl¨V£¥T-%«)(K¯^¬F8%]m¯ìÕ~©∏)]/Names[3590 0 R 3591 0 R 5714 0 R 5715 0 R 3759 0 R 3760 0 R 1916 0 R 1917 0 R 4733 0 R 4734 0 R 3000 0 R 3001 0 R 4865 0 R 4866 0 R 2155 0 R 2156 0 R 3337 0 R 3338 0 R 3911 0 R 3912 0 R 4226 0 R 4227 0 R 5281 0 R 5282 0 R 2959 0 R 2960 0 R 4583 0 R 4584 0 R 1320 0 R 1321 0 R 4157 0 R 4158 0 R 1040 0 R 1041 0 R 1456 0 R 1457 0 R 2931 0 R 2932 0 R 1007 0 R 1008 0 R 3836 0 R 3837 0 R 1718 0 R 1719 0 R 3947 0 R 3948 0 R 1658 0 R 1659 0 R 3400 0 R 3401 0 R 1418 0 R 1419 0 R 2896 0 R 2897 0 R 3668 0 R 3669 0 R 2491 0 R 2492 0 R 1996 0 R 1997 0 R 2722 0 R 2723 0 R 3513 0 R 3514 0 R 3139 0 R 3140 0 R 1969 0 R 1970 0 R 2307 0 R 2308 0 R 5580 0 R 5581 0 R 1193 0 R 1194 0 R 4377 0 R 4378 0 R 5307 0 R 5308 0 R 3487 0 R 3488 0 R 2832 0 R 2833 0 R]>>endobj4200 0 obj<</Limits[(L µXï—w&|dﬁÍ¨a)(®l<¯wÊ±d≥i∞9©™µ)]/Names[4195 0 R 4196 0 R 4260 0 R 4261 0 R 3176 0 R 3177 0 R 4015 0 R 4016 0 R 1535 0 R 1536 0 R 1625 0 R 1626 0 R 3113 0 R 3114 0 R 2274 0 R 2275 0 R 2550 0 R 2551 0 R 2212 0 R 2213 0 R 4131 0 R 4132 0 R 4067 0 R 4068 0 R 2799 0 R 2800 0 R 5633 0 R 5634 0 R 5838 0 R 5839 0 R 3249 0 R 3250 0 R 1482 0 R 1483 0 R 4932 0 R 4933 0 R 6144 0 R 6145 0 R 4672 0 R 4673 0 R 1070 0 R 1071 0 R 3540 0 R 3541 0 R 972 0 R 973 0 R 3430 0 R 3431 0 R 3060 0 R 3061 0 R 4343 0 R 4344 0 R 1358 0 R 1359 0 R 3218 0 R 3219 0 R 801 0 R 802 0 R 3307 0 R 3308 0 R 2868 0 R 2869 0 R 4451 0 R 4452 0 R 4316 0 R 4317 0 R 4635 0 R 4636 0 R 3732 0 R 3733 0 R 5126 0 R 5127 0 R 5740 0 R 5741 0 R 2246 0 R 2247 0 R 3636 0 R 3637 0 R 742 0 R 743 0 R 2402 0 R 2403 0 R 1818 0 R 1819 0 R 2364 0 R 2365 0 R 4789 0 R 4790 0 R 4609 0 R 4610 0 R 2518 0 R 2519 0 R 5057 0 R 5058 0 R 2623 0 R 2624 0 R]>>endobj4201 0 obj<</Parent 710 0 R/Next 4230 0 R/Dest[4164 0 R/XYZ 0 792 null]/Prev 4161 0 R/SE 4163 0 R/Title(An Introduction to Scheme and its Implementation - Procedure Specialization)>>endobj4202 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4203 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 4204 0 R>>endobj4204 0 obj<</Annots 4207 0 R/Parent 4234 0 R/ID 4226 0 R/StructParents 213/Contents 4222 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4205 0 obj[4203 0 R]endobj4206 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4207 0 obj[4206 0 R 4208 0 R 4209 0 R 4210 0 R 4211 0 R 4213 0 R 4217 0 R 4218 0 R 4219 0 R 4220 0 R 4221 0 R]endobj4208 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4164 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_108.html)/S/URI>>/Border[0 0 0]>>endobj4209 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4233 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_110.html)/S/URI>>/Border[0 0 0]>>endobj4210 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4211 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4212 0 obj[4204 0 R/XYZ 0 731.2 null]endobj4213 0 obj<</Rect[10.0 693.431 193.104 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC128)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC128)/S/URI>>/Border[0 0 0]>>endobj4214 0 obj[4204 0 R/XYZ 0 671.815 null]endobj4215 0 obj[4204 0 R/XYZ 0 671.815 null]endobj4216 0 obj[4204 0 R/XYZ 0 671.815 null]endobj4217 0 obj<</Rect[65.608 639.415 88.162 654.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4218 0 obj<</Rect[95.162 639.415 143.378 654.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4164 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_108.html)/S/URI>>/Border[0 0 0]>>endobj4219 0 obj<</Rect[150.378 639.415 174.486 654.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4233 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_110.html)/S/URI>>/Border[0 0 0]>>endobj4220 0 obj<</Rect[181.486 639.415 200.932 654.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4221 0 obj<</Rect[251.094 639.415 343.634 654.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4222 0 obj<</Length 2421>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Procedure Composition\)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
193.104 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Procedure Composition)Tj
ET
0.5 0.5 0.5 rg
10 662.815 m
10 664.815 l
602 664.815 l
601 663.815 l
11 663.815 l
11 663.815 l
h
f
0.875 0.875 0.875 rg
602 664.815 m
602 662.815 l
10 662.815 l
11 663.815 l
601 663.815 l
601 663.815 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 643.7909 Tm
(Go to the )Tj
ET
0.706 w 
65.608 641.674 m
88.162 641.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 643.7909 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 641.674 m
143.378 641.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 643.7909 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 641.674 m
174.486 641.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 643.7909 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 641.674 m
200.932 641.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 643.7909 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 641.674 m
343.634 641.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 643.7909 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_109.html11/3/2006 9:\07:59 PM)Tj
ET
EMC 

endstreamendobj4223 0 obj(An Introduction to Scheme and its Implementation - Procedure Composition)endobj4224 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_109.html)/S 700 0 R>>endobj4225 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_109.html)endobj4226 0 obj(=>Æ'´0"±B∫_˛ò)endobj4227 0 obj<</TS(D:20061104050759)/ID 4226 0 R/CT(text/html)/O[4204 0 R]/S/SPS/T 4223 0 R/TID 4229 0 R/SI 4228 0 R>>endobj4228 0 obj<</TS(D:20061104050759)/AU 4225 0 R>>endobj4229 0 obj(8\\“Ùã‘¢in≤4#≠∏\n)endobj4230 0 obj<</Parent 710 0 R/Next 4264 0 R/Dest[4204 0 R/XYZ 0 792 null]/Prev 4201 0 R/SE 4203 0 R/Title(An Introduction to Scheme and its Implementation - Procedure Composition)>>endobj4231 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4232 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 4245 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 4233 0 R>>endobj4233 0 obj<</Annots 4237 0 R/Parent 4324 0 R/ID 4260 0 R/StructParents 214/Contents 4255 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4234 0 obj<</Parent 4410 0 R/Count 5/Type/Pages/Kids[4164 0 R 4176 0 R 4178 0 R 4180 0 R 4204 0 R]>>endobj4235 0 obj[4232 0 R]endobj4236 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4237 0 obj[4236 0 R 4238 0 R 4239 0 R 4240 0 R 4241 0 R 4243 0 R]endobj4238 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4204 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_109.html)/S/URI>>/Border[0 0 0]>>endobj4239 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4267 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_111.html)/S/URI>>/Border[0 0 0]>>endobj4240 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4241 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4242 0 obj[4233 0 R/XYZ 0 731.2 null]endobj4243 0 obj<</Rect[10.0 693.431 77.3131 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC129)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC129)/S/URI>>/Border[0 0 0]>>endobj4244 0 obj[4233 0 R/XYZ 0 636.015 null]endobj4245 0 obj<</Annots 4249 0 R/Parent 4324 0 R/ID 4260 0 R/StructParents 215/Contents 4256 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 2791 0 R/T1_4 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4246 0 obj[4232 0 R]endobj4247 0 obj[4245 0 R/XYZ 0 405.859 null]endobj4248 0 obj<</Rect[10.0 383.536 225.46 403.92]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC130)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC130)/S/URI>>/Border[0 0 0]>>endobj4249 0 obj[4248 0 R 4250 0 R 4251 0 R 4252 0 R 4253 0 R 4254 0 R]endobj4250 0 obj<</Rect[65.608 329.197 88.162 344.197]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4251 0 obj<</Rect[95.162 329.197 143.378 344.197]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4204 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_109.html)/S/URI>>/Border[0 0 0]>>endobj4252 0 obj<</Rect[150.378 329.197 174.486 344.197]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4267 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_111.html)/S/URI>>/Border[0 0 0]>>endobj4253 0 obj<</Rect[181.486 329.197 200.932 344.197]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4254 0 obj<</Rect[251.094 329.197 343.634 344.197]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4255 0 obj<</Length 4368>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Currying)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
77.313 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Currying)Tj
0 0 0 rg
/T1_2 1 Tf
14 0 0 14 10 659.7909 Tm
([ ugh... need to decide what's technically currying and what isn't... an\d provide a precise definition.] )Tj
/T1_0 1 Tf
0 -2.557 TD
(Above I showed that we can "specialize" a procedure by having it take an\ argument that specifies an )Tj
0 -1.2 TD
(action to take. It is often useful to have a procedure that can create p\rocedures of some general type, )Tj
T*
(producing a specialized procedure each time it's called. )Tj
0 -2.562 TD
(For example, rather than having to specialize )Tj
/T1_3 1 Tf
(mem)Tj
/T1_0 1 Tf
( by hand, we can provide a procedure that automates )Tj
0 -1.205 TD
(the process. This procedure )Tj
/T1_3 1 Tf
(make-mem-proc)Tj
/T1_0 1 Tf
( will take a comparison routine as an argument, and )Tj
0 -1.205 TD
(return a specialized version of )Tj
/T1_3 1 Tf
(mem)Tj
/T1_0 1 Tf
( that uses that procedure. )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define \(make-mem-proc pred?\))Tj
0 -1.2 TD
(   \(lambda \(target lis\))Tj
T*
(      \(mem pred? target lis\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Each time this procedure is called, it will bind its argument variable )Tj
/T1_3 1 Tf
(pred?)Tj
/T1_0 1 Tf
(, and create a new procedure )Tj
0 -1.205 TD
(that will call )Tj
/T1_3 1 Tf
(mem)Tj
/T1_0 1 Tf
(. Each new procedure will "remember" the binding of pred? that was creat\ed for it, so )Tj
0 -1.2 TD
(each one can do something different. )Tj
0 -2.562 TD
(Now we can define )Tj
/T1_3 1 Tf
(member)Tj
/T1_0 1 Tf
(, )Tj
/T1_3 1 Tf
(memv)Tj
/T1_0 1 Tf
(, and )Tj
/T1_3 1 Tf
(memq)Tj
/T1_0 1 Tf
(, by using this procedure to create three new procedures, )Tj
0 -1.205 TD
(each with its own captured binding of )Tj
/T1_3 1 Tf
(pred?)Tj
/T1_0 1 Tf
(. )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define member \(make-mem-proc equal?\)\))Tj
0 -1.2 TD
(\(define memq   \(make-mem-proc eq?\)\))Tj
T*
(\(define memv   \(make-mem-proc eqv?\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(\(Notice that we're using plain variable definition syntax here. We're j\ust defining variables )Tj
/T1_3 1 Tf
(member)Tj
/T1_0 1 Tf
(, )Tj
/T1_3 1 Tf
0 -1.205 TD
(memq)Tj
/T1_0 1 Tf
(, and )Tj
/T1_3 1 Tf
(memv)Tj
/T1_0 1 Tf
(, and initializing them with procedures \(closures\) returned by )Tj
/T1_3 1 Tf
(make-mem-proc)Tj
/T1_0 1 Tf
(.\) )Tj
0 -2.562 TD
(Of course, if we only use )Tj
/T1_3 1 Tf
(mem)Tj
/T1_0 1 Tf
( in this way, then we don't actually need separate )Tj
/T1_3 1 Tf
(mem)Tj
/T1_0 1 Tf
( and and )Tj
/T1_3 1 Tf
(make-)Tj
0 -1.205 TD
(mem-proc)Tj
/T1_0 1 Tf
( procedures. We can just write )Tj
/T1_3 1 Tf
(make-mem-proc)Tj
/T1_0 1 Tf
( using a lambda expression that's )Tj
0 -1.205 TD
(equivalent to )Tj
/T1_3 1 Tf
(mem)Tj
/T1_0 1 Tf
(: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define \(make-mem-proc pred?\))Tj
0 -1.2 TD
(   \(letrec \(\(mem-proc \(lambda \(thing lis\))Tj
T*
(                         \(if \(null? lis\))Tj
T*
(                             #f)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_110.html \(1 of 2\)1\1/3/2006 9:08:04 PM)Tj
ET
EMC 

endstreamendobj4256 0 obj<</Length 3897>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Currying)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(                             \(if \(pred? \(car lis\) thing\))Tj
0 -1.2 TD
(                                 lis)Tj
T*
(                                 \(mem-proc pred? thing \(cdr lis\)\)\)\)\\)\)\))Tj
T*
(      mem-proc\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Here I've used a )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
( so that the procedure will be able to call itself recursively. Each tim\e we call )Tj
/T1_1 1 Tf
0 -1.205 TD
(make-mem-proc)Tj
/T1_0 1 Tf
(, it will bind its argument )Tj
/T1_1 1 Tf
(pred?)Tj
/T1_0 1 Tf
(, initializing it with the procedure argument we )Tj
0 -1.205 TD
(pass. Then it will bind )Tj
/T1_1 1 Tf
(mem-proc)Tj
/T1_0 1 Tf
( and create the specialized procedure using )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
(. Note that the )Tj
T*
(bindings of both )Tj
/T1_1 1 Tf
(pred?)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(mem-proc)Tj
/T1_0 1 Tf
( will be remembered by the closure created by )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
(. This )Tj
0 -1.2 TD
(allows the new closure to see both the predicate it should use, and itse\lf, so that it can call itself )Tj
T*
(recursively. )Tj
/T1_2 1 Tf
0 -2.562 TD
([ A picture would be nice here, showing what we get when we define )Tj
/T1_3 1 Tf
(mem)Tj
/T1_2 1 Tf
(, )Tj
/T1_3 1 Tf
(memq)Tj
/T1_2 1 Tf
(, and )Tj
/T1_3 1 Tf
(memv)Tj
/T1_2 1 Tf
( using )Tj
/T1_3 1 Tf
0 -1.205 TD
(make-mem-proc)Tj
/T1_2 1 Tf
(... three variable bindings, holding three closures, each of which is cl\osed in an )Tj
0 -1.205 TD
(environment with its own binding of )Tj
/T1_3 1 Tf
(mem-proc)Tj
/T1_2 1 Tf
( scoped inside its own binding of )Tj
/T1_3 1 Tf
(pred?)Tj
/T1_2 1 Tf
(. ])Tj
/T1_0 1 Tf
( There are )Tj
0 -1.205 TD
(two advantages to coding )Tj
/T1_1 1 Tf
(make-mem-proc)Tj
/T1_0 1 Tf
( this way. One is that it avoids cluttering up our code with )Tj
0 -1.205 TD
(a definition of )Tj
/T1_1 1 Tf
(mem)Tj
/T1_0 1 Tf
( that's external to )Tj
/T1_1 1 Tf
(make-mem-proc)Tj
/T1_0 1 Tf
(. )Tj
/T1_2 1 Tf
([ another advantage is that a good compiler )Tj
0 -1.205 TD
(will be able to optimize the code better, because it can tell that the v\alue of a bindings of )Tj
/T1_3 1 Tf
(pred?)Tj
/T1_2 1 Tf
( or )Tj
/T1_3 1 Tf
T*
(mem-proc)Tj
/T1_2 1 Tf
( will never change once the binding is created. It may use that informat\ion to generate better )Tj
0 -1.2 TD
(code... ] )Tj
ET
0 0 1 RG
1.628 w 10 M 0 j 0 J []0 d 
10 383.989 m
225.46 383.989 l
S
0 0 1 rg
BT
/T1_4 1 Tf
19.3846 0 0 19.3846 10 388.8736 Tm
(Discussion and Review)Tj
ET
0.5 0.5 0.5 rg
10 352.597 m
10 354.597 l
602 354.597 l
601 353.597 l
11 353.597 l
11 353.597 l
h
f
0.875 0.875 0.875 rg
602 354.597 m
602 352.597 l
10 352.597 l
11 353.597 l
601 353.597 l
601 353.597 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 333.5727 Tm
(Go to the )Tj
ET
0.706 w 
65.608 331.456 m
88.162 331.456 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 333.5727 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 331.456 m
143.378 331.456 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 333.5727 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 331.456 m
174.486 331.456 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 333.5727 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 331.456 m
200.932 331.456 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 333.5727 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 331.456 m
343.634 331.456 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 333.5727 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_110.html \(2 of 2\)1\1/3/2006 9:08:04 PM)Tj
ET
EMC 

endstreamendobj4257 0 obj(An Introduction to Scheme and its Implementation - Currying)endobj4258 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_110.html)/S 700 0 R>>endobj4259 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_110.html)endobj4260 0 obj(Pc]•`\rS≠uíJVU)endobj4261 0 obj<</TS(D:20061104050804)/ID 4260 0 R/CT(text/html)/O[4233 0 R 4245 0 R]/S/SPS/T 4257 0 R/TID 4263 0 R/SI 4262 0 R>>endobj4262 0 obj<</TS(D:20061104050804)/AU 4259 0 R>>endobj4263 0 obj(y¥&0¸\\!MC}:\(e\()endobj4264 0 obj<</Parent 710 0 R/Next 4290 0 R/Dest[4233 0 R/XYZ 0 792 null]/Prev 4230 0 R/SE 4232 0 R/Title(An Introduction to Scheme and its Implementation - Currying)>>endobj4265 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4266 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 4267 0 R>>endobj4267 0 obj<</Annots 4270 0 R/Parent 4324 0 R/ID 4286 0 R/StructParents 216/Contents 4282 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4268 0 obj[4266 0 R]endobj4269 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4270 0 obj[4269 0 R 4271 0 R 4272 0 R 4273 0 R 4274 0 R 4276 0 R 4277 0 R 4278 0 R 4279 0 R 4280 0 R 4281 0 R]endobj4271 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4233 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_110.html)/S/URI>>/Border[0 0 0]>>endobj4272 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4293 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_112.html)/S/URI>>/Border[0 0 0]>>endobj4273 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4274 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4275 0 obj[4267 0 R/XYZ 0 731.2 null]endobj4276 0 obj<</Rect[10.0 683.954 261.854 709.723]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC131)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC131)/S/URI>>/Border[0 0 0]>>endobj4277 0 obj<</Rect[65.608 469.01 88.162 484.01]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4278 0 obj<</Rect[95.162 469.01 143.378 484.01]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4233 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_110.html)/S/URI>>/Border[0 0 0]>>endobj4279 0 obj<</Rect[150.378 469.01 174.486 484.01]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4293 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_112.html)/S/URI>>/Border[0 0 0]>>endobj4280 0 obj<</Rect[181.486 469.01 200.932 484.01]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4281 0 obj<</Rect[251.094 469.01 343.634 484.01]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4282 0 obj<</Length 2929>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Writing an Interprete\r)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
2.081 w 
10 684.255 m
261.854 684.255 l
S
0 0 1 rg
BT
/T1_1 1 Tf
24.7692 0 0 24.7692 10 690.4968 Tm
(Writing an Interpreter)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 649.4525 Tm
(In this chapter, I'll show a simple interpreter for a subset of Scheme, \written in Scheme. )Tj
0 -2.557 TD
(I'll start out with a very simple interpreter for a tiny subset of Schem\e, which only understands simple )Tj
0 -1.2 TD
(arithmetic expressions. )Tj
0 -2.557 TD
(Then I'll improve the interpreter in variety of ways. )Tj
0 -2.562 TD
(In a later chapter, we'll return to this interpreter and add macros, )Tj
/T1_2 1 Tf
([ blah blah blah... ])Tj
/T1_0 1 Tf
(. )Tj
ET
0.5 0.5 0.5 rg
10 492.41 m
10 494.41 l
602 494.41 l
601 493.41 l
11 493.41 l
11 493.41 l
h
f
0.875 0.875 0.875 rg
602 494.41 m
602 492.41 l
10 492.41 l
11 493.41 l
601 493.41 l
601 493.41 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 473.3851 Tm
(Go to the )Tj
ET
0.706 w 
65.608 471.268 m
88.162 471.268 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 473.3851 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 471.268 m
143.378 471.268 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 473.3851 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 471.268 m
174.486 471.268 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 473.3851 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 471.268 m
200.932 471.268 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 473.3851 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 471.268 m
343.634 471.268 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 473.3851 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_111.html11/3/2006 9:\08:15 PM)Tj
ET
EMC 

endstreamendobj4283 0 obj(An Introduction to Scheme and its Implementation - Writing an Interpreter)endobj4284 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_111.html)/S 700 0 R>>endobj4285 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_111.html)endobj4286 0 obj(›Ä2ˇÈ?s√V5\(tR)endobj4287 0 obj<</TS(D:20061104050815)/ID 4286 0 R/CT(text/html)/O[4267 0 R]/S/SPS/T 4283 0 R/TID 4289 0 R/SI 4288 0 R>>endobj4288 0 obj<</TS(D:20061104050815)/AU 4285 0 R>>endobj4289 0 obj(…}qdπÑ1ƒÇÖˇM)endobj4290 0 obj<</Parent 710 0 R/Next 4320 0 R/Dest[4267 0 R/XYZ 0 792 null]/Prev 4264 0 R/SE 4266 0 R/Title(An Introduction to Scheme and its Implementation - Writing an Interpreter)>>endobj4291 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4292 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 4303 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 4293 0 R>>endobj4293 0 obj<</Annots 4296 0 R/Parent 4324 0 R/ID 4316 0 R/StructParents 217/Contents 4311 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4294 0 obj[4292 0 R]endobj4295 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4296 0 obj[4295 0 R 4297 0 R 4298 0 R 4299 0 R 4300 0 R 4302 0 R]endobj4297 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4267 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_111.html)/S/URI>>/Border[0 0 0]>>endobj4298 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4323 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_113.html)/S/URI>>/Border[0 0 0]>>endobj4299 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4300 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4301 0 obj[4293 0 R/XYZ 0 731.2 null]endobj4302 0 obj<</Rect[10.0 689.877 292.182 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC132)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC132)/S/URI>>/Border[0 0 0]>>endobj4303 0 obj<</Annots 4306 0 R/Parent 4324 0 R/ID 4316 0 R/StructParents 218/Contents 4312 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4304 0 obj[4292 0 R]endobj4305 0 obj<</Rect[65.608 407.071 88.162 422.071]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4306 0 obj[4305 0 R 4307 0 R 4308 0 R 4309 0 R 4310 0 R]endobj4307 0 obj<</Rect[95.162 407.071 143.378 422.071]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4267 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_111.html)/S/URI>>/Border[0 0 0]>>endobj4308 0 obj<</Rect[150.378 407.071 174.486 422.071]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4323 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_113.html)/S/URI>>/Border[0 0 0]>>endobj4309 0 obj<</Rect[181.486 407.071 200.932 422.071]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4310 0 obj<</Rect[251.094 407.071 343.634 422.071]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4311 0 obj<</Length 5059>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Interpretation and Co\mpilation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
292.182 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Interpretation and Compilation)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 655.914 Tm
(Programming languages are usually implemented by interpreters or compile\rs, or some mix of both. In )Tj
0 -1.2 TD
(reality, almost all language implementations are a mix of both, to at le\ast a small degree, and the line )Tj
T*
(between them is surprisingly fuzzy. )Tj
0 -2.557 TD
(A pure interpreter reads the source text of a program, analyzes it, and \executes it as it goes. This is )Tj
0 -1.2 TD
(usually very slow--the interpreter spends a lot of time analyzing string\s of characters to figure out what )Tj
T*
(they mean. A pure interpreter must recognize and analyze each expression\ in the source text each time it )Tj
T*
(is encountered, so that it knows what to do next. This is pretty much ho\w most command shell )Tj
T*
(languages work, including UNIX shells and Tcl. )Tj
0 -2.557 TD
(A pure compiler reads the source text of a program, and translates it in\to machine code that will have the )Tj
0 -1.2 TD
(effect of executing the program when it is run. A big advantage of compi\lers is that they can read )Tj
T*
(through and analyze the source program )Tj
/T1_2 1 Tf
(once)Tj
/T1_0 1 Tf
(, and generate code that you can run to give the same effect )Tj
T*
(as interpreting the program. Rather than analyzing each expression each \time they encounter it, )Tj
T*
(compilers do the analysis once, but record the actions an interpreter )Tj
/T1_2 1 Tf
(would)Tj
/T1_0 1 Tf
( take at that point in the )Tj
T*
(program. )Tj
0 -2.557 TD
(In effect, a compiler is a weird kind of interpreter, which "pretends" t\o interpret the program, and )Tj
0 -1.2 TD
(records what an interpreter would do. It then goes through its record of\ actions the interpreter would )Tj
T*
(take, and spits out instructions whose effect is the same as what the in\terpreter would have done. Most )Tj
T*
(of the decision-making that the interpreter does--like figuring out that\ an expression is an assignment )Tj
T*
(expression, or a procedure call--can be done at compile time, because th\e expression is the same each )Tj
T*
(time it's encountered in running the program. )Tj
0 -2.557 TD
(The compiler's job is to do the work that's always the same, and spit ou\t instructions that will do the )Tj
0 -1.2 TD
("real work" that can only be done at runtime, because it depends on the \actual data that the program is )Tj
0 -1.205 TD
(manipulating. For example, an )Tj
/T1_3 1 Tf
(if)Tj
/T1_0 1 Tf
( statement is always an )Tj
/T1_3 1 Tf
(if)Tj
/T1_0 1 Tf
( statement each time it's encountered, so )Tj
0 -1.2 TD
(that analysis can be done once. But which branch will be taken depends o\n the runtime value of an )Tj
0 -1.2 TD
(expression, so the compiler must emit code to test the value of the expr\ession, and take the appropriate )Tj
T*
(branch. )Tj
0 -2.557 TD
(Most real interpreters are somewhere in between pure interpreters and co\mpilers. They read through the )Tj
0 -1.2 TD
(source code for a program once, and translate it into an "intermediate r\epresentation" that's easier to )Tj
T*
(work with--a data structure of some kind--and then interpret that. Rathe\r than stepping through strings of )Tj
T*
(source text, they step through a data structure that represents that sou\rce text in a more convenient form, )Tj
T*
(which is much faster to operate on. That is, they do some analysis once,\ while converting the source text )Tj
T*
(into a data structure, and the rest as they execute the program by stepp\ing through the data structure. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_112.html \(1 of 2\)1\1/3/2006 9:08:21 PM)Tj
ET
EMC 

endstreamendobj4312 0 obj<</Length 3034>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Interpretation and Co\mpilation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 734.2466 Tm
(There are four good reasons for using a Scheme interpreter as an example\ Scheme program: )Tj
1.607 -2.557 Td
(1.  )Tj
(A simple interpreter really is simple, but it can show off some of the h\andy features of Scheme. )Tj
1.25 -1.2 Td
(It's a good example of Scheme programming. )Tj
-1.25 -1.2 Td
(2.  )Tj
(Most serious programs include some kind of command interpreter, so every\ programmer should )Tj
1.25 -1.2 Td
(know how to write a decent one. Often, the command interpreter has a tre\mendous impact on the )Tj
0 -1.2 TD
(usability and power of a system, and too many programs have bad ones. )Tj
-1.25 -1.2 Td
(3.  )Tj
(Understanding how a Scheme interpreter works may clarify language issues\. It gives you a nice, )Tj
1.25 -1.2 Td
(concrete understanding of what Scheme does when it encounters an express\ion, so you know )Tj
T*
(what your programs will do--for example, it'll be obvious when you need \a quote, or parentheses, )Tj
T*
(and when you don't. )Tj
-1.25 -1.2 Td
(4.  )Tj
(Every programmer should understand the basics of how a compiler works. U\nderstanding a )Tj
1.25 -1.2 Td
(Scheme interpreter gets you half-way to understanding a Scheme compiler.\ A Scheme compiler )Tj
T*
(is really very much like a Scheme interpreter--it analyzes Scheme expres\sions and figures out )Tj
T*
(what to do. The main difference between an interpreter and a compiler is\ just that when an )Tj
T*
(interpreter figures out what to do, it does it immediately, while a comp\iler records what to do )Tj
T*
(when you run the program later. )Tj
ET
0.5 0.5 0.5 rg
10 430.471 m
10 432.471 l
602 432.471 l
601 431.471 l
11 431.471 l
11 431.471 l
h
f
0.875 0.875 0.875 rg
602 432.471 m
602 430.471 l
10 430.471 l
11 431.471 l
601 431.471 l
601 431.471 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 411.4466 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 409.33 m
88.162 409.33 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 411.4466 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 409.33 m
143.378 409.33 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 411.4466 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 409.33 m
174.486 409.33 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 411.4466 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 409.33 m
200.932 409.33 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 411.4466 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 409.33 m
343.634 409.33 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 411.4466 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_112.html \(2 of 2\)1\1/3/2006 9:08:21 PM)Tj
ET
EMC 

endstreamendobj4313 0 obj(An Introduction to Scheme and its Implementation - Interpretation and Compilation)endobj4314 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_112.html)/S 700 0 R>>endobj4315 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_112.html)endobj4316 0 obj(ÜıLjÕ3‡áwîä≤)endobj4317 0 obj<</TS(D:20061104050821)/ID 4316 0 R/CT(text/html)/O[4293 0 R 4303 0 R]/S/SPS/T 4313 0 R/TID 4319 0 R/SI 4318 0 R>>endobj4318 0 obj<</TS(D:20061104050821)/AU 4315 0 R>>endobj4319 0 obj(º,$'çÔuuS õ≠Ù@•)endobj4320 0 obj<</Parent 710 0 R/Next 4347 0 R/Dest[4293 0 R/XYZ 0 792 null]/Prev 4290 0 R/SE 4292 0 R/Title(An Introduction to Scheme and its Implementation - Interpretation and Compilation)>>endobj4321 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4322 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 4323 0 R>>endobj4323 0 obj<</Annots 4327 0 R/Parent 4400 0 R/ID 4343 0 R/StructParents 219/Contents 4339 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4324 0 obj<</Parent 4410 0 R/Count 5/Type/Pages/Kids[4233 0 R 4245 0 R 4267 0 R 4293 0 R 4303 0 R]>>endobj4325 0 obj[4322 0 R]endobj4326 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4327 0 obj[4326 0 R 4328 0 R 4329 0 R 4330 0 R 4331 0 R 4333 0 R 4334 0 R 4335 0 R 4336 0 R 4337 0 R 4338 0 R]endobj4328 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4293 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_112.html)/S/URI>>/Border[0 0 0]>>endobj4329 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4350 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_114.html)/S/URI>>/Border[0 0 0]>>endobj4330 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4331 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4332 0 obj[4323 0 R/XYZ 0 731.2 null]endobj4333 0 obj<</Rect[10.0 689.877 323.469 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC133)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC133)/S/URI>>/Border[0 0 0]>>endobj4334 0 obj<</Rect[65.608 343.271 88.162 358.271]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4335 0 obj<</Rect[95.162 343.271 143.378 358.271]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4293 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_112.html)/S/URI>>/Border[0 0 0]>>endobj4336 0 obj<</Rect[150.378 343.271 174.486 358.271]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4350 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_114.html)/S/URI>>/Border[0 0 0]>>endobj4337 0 obj<</Rect[181.486 343.271 200.932 358.271]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4338 0 obj<</Rect[251.094 343.271 343.634 358.271]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4339 0 obj<</Length 3985>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Implementing a Simple\ Interpreter)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
323.469 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Implementing a Simple Interpreter)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 655.914 Tm
(In this section, we'll use Scheme to implement an interpreter for a tiny\ subset of Scheme--just simple )Tj
0 -1.2 TD
(arithemetic expressions. The interpreter we'll show is simple, but it's \a real interpreter--it works on the )Tj
T*
(same principles as many real Scheme systems. In the next chapter, we'll \show how a slightly more )Tj
T*
(complicated interpreter which implements most of Scheme's important feat\ures, and the skeleton of a )Tj
T*
(compiler for Scheme. )Tj
0 -2.557 TD
(The interpreter is a good example for learning Scheme programming, becau\se it makes heavy use of )Tj
0 -1.2 TD
(recursion--the processes of reading and evaluation are naturally recursi\ve. As you'll see, the code is also )Tj
T*
(an example of mostly-functional programming \(with very few side effects\\); using recursion in the )Tj
T*
(natural way avoids the need for side effects, because data structures ar\e generally created at the right )Tj
T*
(times, rather than being created too early and having to be updated late\r. )Tj
0 -2.562 TD
(Our interpreter will use Scheme's built-in )Tj
/T1_2 1 Tf
(read)Tj
/T1_0 1 Tf
( procedure to accept input in the form of )Tj
/T1_3 1 Tf
(s-expressions)Tj
/T1_0 1 Tf
(, i.)Tj
0 -1.2 TD
(e., expressions represented as standard Scheme data structures such as s\ymbols, numbers, and possibly )Tj
T*
(nested lists of those constituents. [Recall that...] S-expressions can b\e simple, as in the case of symbols, )Tj
T*
(or complex, as in the case of nested lists. )Tj
ET
0.5 0.5 0.5 rg
10 366.671 m
10 368.671 l
602 368.671 l
601 367.671 l
11 367.671 l
11 367.671 l
h
f
0.875 0.875 0.875 rg
602 368.671 m
602 366.671 l
10 366.671 l
11 367.671 l
601 367.671 l
601 367.671 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 347.6466 Tm
(Go to the )Tj
ET
0.706 w 
65.608 345.53 m
88.162 345.53 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 347.6466 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 345.53 m
143.378 345.53 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 347.6466 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 345.53 m
174.486 345.53 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 347.6466 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 345.53 m
200.932 345.53 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 347.6466 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 345.53 m
343.634 345.53 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 347.6466 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_113.html11/3/2006 9:\08:27 PM)Tj
ET
EMC 

endstreamendobj4340 0 obj(An Introduction to Scheme and its Implementation - Implementing a Simple Interpreter)endobj4341 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_113.html)/S 700 0 R>>endobj4342 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_113.html)endobj4343 0 obj(ÅÔrÂH˚íÓR‡ÚõI∞…)endobj4344 0 obj<</TS(D:20061104050827)/ID 4343 0 R/CT(text/html)/O[4323 0 R]/S/SPS/T 4340 0 R/TID 4346 0 R/SI 4345 0 R>>endobj4345 0 obj<</TS(D:20061104050827)/AU 4342 0 R>>endobj4346 0 obj(ÑtØ‘ôä˚€ΩuÌóvnÔ8)endobj4347 0 obj<</Parent 710 0 R/Next 4381 0 R/Dest[4323 0 R/XYZ 0 792 null]/Prev 4320 0 R/SE 4322 0 R/Title(An Introduction to Scheme and its Implementation - Implementing a Simple Interpreter)>>endobj4348 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4349 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 4361 0 R/Type/MCR>><</MCID 0/Pg 4363 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 4350 0 R>>endobj4350 0 obj<</Annots 4353 0 R/Parent 4400 0 R/ID 4377 0 R/StructParents 220/Contents 4371 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4351 0 obj[4349 0 R]endobj4352 0 obj<</Rect[62.5812 750.726 84.0947 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4353 0 obj[4352 0 R 4354 0 R 4355 0 R 4356 0 R 4357 0 R 4359 0 R]endobj4354 0 obj<</Rect[90.7717 750.726 136.763 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4323 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_113.html)/S/URI>>/Border[0 0 0]>>endobj4355 0 obj<</Rect[143.44 750.726 166.436 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4384 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_115.html)/S/URI>>/Border[0 0 0]>>endobj4356 0 obj<</Rect[173.113 750.726 191.662 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4357 0 obj<</Rect[239.51 750.726 327.781 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4358 0 obj[4350 0 R/XYZ 0 733.175 null]endobj4359 0 obj<</Rect[9.53865 697.148 197.893 713.51]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC134)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC134)/S/URI>>/Border[0 0 0]>>endobj4360 0 obj[4350 0 R/XYZ 0 676.53 null]endobj4361 0 obj<</Parent 4400 0 R/ID 4377 0 R/StructParents 221/Contents 4372 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4362 0 obj[4349 0 R]endobj4363 0 obj<</Annots 4366 0 R/Parent 4400 0 R/ID 4377 0 R/StructParents 222/Contents 4373 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4364 0 obj[4349 0 R]endobj4365 0 obj<</Rect[62.5812 744.199 84.0947 758.507]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4366 0 obj[4365 0 R 4367 0 R 4368 0 R 4369 0 R 4370 0 R]endobj4367 0 obj<</Rect[90.7717 744.199 136.763 758.507]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4323 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_113.html)/S/URI>>/Border[0 0 0]>>endobj4368 0 obj<</Rect[143.44 744.199 166.436 758.507]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4384 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_115.html)/S/URI>>/Border[0 0 0]>>endobj4369 0 obj<</Rect[173.113 744.199 191.662 758.507]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4370 0 obj<</Rect[239.51 744.199 327.781 758.507]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4371 0 obj<</Length 4921>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - The Read-Eval-Print L\oop)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(Go to the )Tj
ET
0 0 1 RG
0.673 w 10 M 0 j 0 J []0 d 
62.581 752.88 m
84.095 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 62.5812 754.8994 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
90.772 752.88 m
136.763 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 90.7717 754.8994 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
143.44 752.88 m
166.436 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 143.4404 754.8994 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
173.113 752.88 m
191.662 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 173.1132 754.8994 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
239.51 752.88 m
327.781 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 239.5099 754.8994 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
9.539 739.852 m
9.539 741.759 l
602.461 741.759 l
601.507 740.805 l
10.493 740.805 l
10.493 740.805 l
h
f
0.875 0.875 0.875 rg
602.461 741.759 m
602.461 739.852 l
9.539 739.852 l
10.493 740.805 l
601.507 740.805 l
601.507 740.805 l
h
f
1.294 w 
9.539 697.667 m
197.893 697.667 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 701.5499 Tm
(The Read-Eval-Print Loop)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 665.0599 Tm
(\(This section could be skimmed if you're not interested in the read-eva\l-print-loop, which is just a simple )Tj
0 -1.2 TD
(command interpreter that acts as a "front end" to the evaluator.\) )Tj
0 -2.557 TD
(When you're interacting with Scheme by typing text, you're interacting w\ith a Scheme procedure called the )Tj
/T1_2 1 Tf
0 -1.2 TD
(read-eval-print)Tj
/T1_0 1 Tf
( loop. This procedure just loops, accepting one command at a time, execu\ting it, and printing )Tj
T*
(the result. )Tj
0 -2.557 TD
(The three steps at each iteration of the loop are: )Tj
1.607 -2.562 Td
(1.  )Tj
(calling )Tj
/T1_3 1 Tf
(read)Tj
/T1_0 1 Tf
( to read the characters that make up a textual expression expression fro\m the keyboard )Tj
1.25 -1.2 Td
(input buffer, and construct a data structure to represent it, )Tj
-1.25 -1.205 Td
(2.  )Tj
(calling )Tj
/T1_3 1 Tf
(eval)Tj
/T1_0 1 Tf
( to evaluate the expression--intuitively, )Tj
/T1_3 1 Tf
(eval)Tj
/T1_0 1 Tf
( "figures out what the expression means," )Tj
1.25 -1.2 Td
(and "does what it says to do," returning the value of the expression--an\d )Tj
-1.25 -1.205 Td
(3.  )Tj
(calling )Tj
/T1_3 1 Tf
(write)Tj
/T1_0 1 Tf
( to print a textual representation of the resulting from )Tj
/T1_3 1 Tf
(eval)Tj
/T1_0 1 Tf
(, so that the user can see it. )Tj
-1.607 -2.557 Td
(\(More generally, we might read expressions from a file rather than the \keyboard buffer. We'll ignore that for )Tj
0 -1.2 TD
(now.\) )Tj
0 -2.557 TD
(You can write your own read-eval-print loop for your own programs, so th\at users can type in expressions, )Tj
0 -1.2 TD
(and you can interpret them any way you want. Later, I'll show how to wri\te an evaluator, and this will come )Tj
0 -1.205 TD
(in handy. You can start up your read-eval-print loop \(by typing in )Tj
/T1_3 1 Tf
(\(rep-loop\))Tj
/T1_0 1 Tf
(\), and it will take over from )Tj
0 -1.2 TD
(the normal Scheme read-eval-print loop, interpreting expressions your wa\y. )Tj
0 -2.557 TD
(Here's a very simple read-eval-print loop: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define \(rep-loop\))Tj
0 -1.2 TD
(   \(display "repl>"\)      ; print a prompt)Tj
T*
(   \(write \(eval \(read\)\)\)  ; read expr., pass to eval, write result\)Tj
T*
(   \(rep-loop\)\)            ; loop \(tail-recursive call\) to do it aga\in)Tj
/T1_0 1 Tf
0 -2.557 TD
(\(Notice that the expression )Tj
/T1_3 1 Tf
(\(write \(eval \(read\)\)\))Tj
/T1_0 1 Tf
( does things in the proper read-eval-print order, )Tj
0 -1.2 TD
(because the argument to each procedure call is computed before the actua\l call. In Scheme, as in most )Tj
T*
(languages, nested procedure calls expressions are done "from the inside \out."\) )Tj
0 -2.557 TD
(I've coded the iteration recursively, rather than using a looping constr\uct. The procedure is tail-recursive, )Tj
0 -1.2 TD
(since all it does at the end is call itself. Remember that Scheme is sma\rt about this kind of recursion, and )Tj
T*
(won't build up procedure activation information on the stack and cause a\ stack overflow. You can do tail )Tj
T*
(recursion all day. Since nothing happens in a given call to the procedur\e after the tail-call, Scheme can avoid )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_114.html \(1 of 3\)1\1/3/2006 9:08:35 PM)Tj
ET
EMC 

endstreamendobj4372 0 obj<</Length 4184>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - The Read-Eval-Print L\oop)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(returning to it at all, and avoid saving any state to return to. )Tj
0 -2.557 TD
(The above read-eval-print loop isn't very friendly, because it loops inf\initely without giving you any chance to )Tj
0 -1.205 TD
(break out of it. Let's modify it to allow you to stop the tail recursion\ by typing in the symbol )Tj
/T1_1 1 Tf
(halt)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(rep-loop\))Tj
0 -1.2 TD
(   \(display "repl>"\)              ; print a prompt)Tj
T*
(   \(let \(\(expr \(read\)\)\)           ; read an expression, save it i\n expr)Tj
T*
(      \(cond \(\(eq? expr 'halt\)     ; user asked to stop?)Tj
T*
(             \(display "exiting read-eval-print loop"\))Tj
T*
(             \(newline\)\))Tj
T*
(            \(#t                   ; otherwise,)Tj
T*
(             \(write \(eval expr\)\)  ;  evaluate and print)Tj
T*
(             \(newline\))Tj
T*
(             \(rep-loop\)\)\)\)\)       ;  and loop to do it again)Tj
/T1_0 1 Tf
0 -2.552 TD
(Notice that this is still tail recursive, because the branch that does t\he recursive call doesn't do anything else )Tj
0 -1.2 TD
(after that. )Tj
0 -2.562 TD
(This read-eval-print loop could be improved a little. By using the symbo\l )Tj
/T1_1 1 Tf
(halt)Tj
/T1_0 1 Tf
( as the command to tell the )Tj
0 -1.205 TD
(loop to stop, we prevent people from being able to evaluate )Tj
/T1_1 1 Tf
(halt)Tj
/T1_0 1 Tf
( as an expression. We could get around this )Tj
0 -1.2 TD
(by ensuring that the halt command doesn't have the syntax of any express\ion in the language, but we won't )Tj
T*
(bother right now. )Tj
0 -2.557 TD
(Another improvement would be to make it possible to use different interp\reters with the same read-eval-print )Tj
0 -1.205 TD
(loop. The )Tj
/T1_1 1 Tf
(rep-loop)Tj
/T1_0 1 Tf
( procedure above assumes that it should call a procedure named )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
( to evaluate an )Tj
T*
(expression. We'd like to write a )Tj
/T1_1 1 Tf
(rep-loop)Tj
/T1_0 1 Tf
( that works with different evaluators, so instead of having it call )Tj
/T1_1 1 Tf
0 -1.205 TD
(eval)Tj
/T1_0 1 Tf
( by name, we'll hand it an argument saying which evaluator to use. Since\ procedures are first class, we )Tj
0 -1.2 TD
(can just hand it a pointer to the evaluation procedure. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(rep-loop evaluator\))Tj
0 -1.2 TD
(   \(display "repl>"\)                 ; print a prompt)Tj
T*
(   \(let \(\(expr \(read\)\)\)              ; read an expression, save i\t in expr)Tj
T*
(      \(cond \(\(eq? expr 'exit\)        ; user asked to stop?)Tj
T*
(             \(display "exiting read-eval-print loop"\))Tj
T*
(             \(newline\)\))Tj
T*
(            \(#t                      ; otherwise,)Tj
T*
(             \(write \(evaluator expr\)\) ;  evaluate and print)Tj
T*
(             \(rep-loop evaluator\)\)\)\)\) ;  and loop to do it again)Tj
/T1_0 1 Tf
0 -2.557 TD
(Here I just made three changes. I added an argument )Tj
/T1_1 1 Tf
(our-eval)Tj
/T1_0 1 Tf
(, which is expected to be a procedure. Then )Tj
0 -1.205 TD
(we changed the call to )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
( to call )Tj
/T1_1 1 Tf
(our-eval)Tj
/T1_0 1 Tf
(, i.e., whatever evaluator was given. Then we changed the )Tj
0 -1.205 TD
(recursive call to )Tj
/T1_1 1 Tf
(rep-loop)Tj
/T1_0 1 Tf
( to pass that argument on to the next recursive call. )Tj
ET
0.5 0.5 0.5 rg
9.539 35.32 m
9.539 37.228 l
602.461 37.228 l
601.507 36.274 l
10.493 36.274 l
10.493 36.274 l
h
f
0.875 0.875 0.875 rg
602.461 37.228 m
602.461 35.32 l
9.539 35.32 l
10.493 36.274 l
601.507 36.274 l
601.507 36.274 l
h
f
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_114.html \(2 of 3\)1\1/3/2006 9:08:35 PM)Tj
ET
EMC 

endstreamendobj4373 0 obj<</Length 1328>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - The Read-Eval-Print L\oop)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 748.3732 Tm
(Go to the )Tj
ET
0 0 1 RG
0.673 w 10 M 0 j 0 J []0 d 
62.581 746.354 m
84.095 746.354 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 62.5812 748.3732 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
90.772 746.354 m
136.763 746.354 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 90.7717 748.3732 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
143.44 746.354 m
166.436 746.354 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 143.4404 748.3732 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
173.113 746.354 m
191.662 746.354 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 173.1132 748.3732 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
239.51 746.354 m
327.781 746.354 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 239.5099 748.3732 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_114.html \(3 of 3\)1\1/3/2006 9:08:35 PM)Tj
ET
EMC 

endstreamendobj4374 0 obj(An Introduction to Scheme and its Implementation - The Read-Eval-Print Loop)endobj4375 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_114.html)/S 700 0 R>>endobj4376 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_114.html)endobj4377 0 obj(E<z¯.dÍHH6Nöà0)endobj4378 0 obj<</TS(D:20061104050835)/ID 4377 0 R/CT(text/html)/O[4350 0 R 4361 0 R 4363 0 R]/S/SPS/T 4374 0 R/TID 4380 0 R/SI 4379 0 R>>endobj4379 0 obj<</TS(D:20061104050835)/AU 4376 0 R>>endobj4380 0 obj(3∆\\åŒì≠«÷f7=◊Û5)endobj4381 0 obj<</Parent 710 0 R/Next 4455 0 R/Dest[4350 0 R/XYZ 0 792 null]/Prev 4347 0 R/SE 4349 0 R/Title(An Introduction to Scheme and its Implementation - The Read-Eval-Print Loop)>>endobj4382 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4383 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 4399 0 R/Type/MCR>><</MCID 0/Pg 4409 0 R/Type/MCR>><</MCID 0/Pg 4413 0 R/Type/MCR>><</MCID 0/Pg 4415 0 R/Type/MCR>><</MCID 0/Pg 4420 0 R/Type/MCR>><</MCID 0/Pg 4426 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 4384 0 R>>endobj4384 0 obj<</Annots 4387 0 R/Parent 4400 0 R/ID 4451 0 R/StructParents 223/Contents 4441 0 R/PZ 1.13707/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R/T1_4 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4385 0 obj[4383 0 R]endobj4386 0 obj<</Rect[57.6992 752.541 77.5343 765.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4387 0 obj[4386 0 R 4388 0 R 4389 0 R 4390 0 R 4391 0 R 4393 0 R 4397 0 R]endobj4388 0 obj<</Rect[83.6905 752.541 126.094 765.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4350 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_114.html)/S/URI>>/Border[0 0 0]>>endobj4389 0 obj<</Rect[132.25 752.541 153.452 765.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4458 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html)/S/URI>>/Border[0 0 0]>>endobj4390 0 obj<</Rect[159.608 752.541 176.71 765.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4391 0 obj<</Rect[220.825 752.541 302.21 765.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4392 0 obj[4384 0 R/XYZ 0 736.359 null]endobj4393 0 obj<</Rect[8.79453 703.143 86.1634 718.229]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC135)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC135)/S/URI>>/Border[0 0 0]>>endobj4394 0 obj[4384 0 R/XYZ 0 684.133 null]endobj4395 0 obj[4384 0 R/XYZ 0 684.133 null]endobj4396 0 obj[4384 0 R/XYZ 0 362.076 null]endobj4397 0 obj<</Rect[8.79453 347.499 121.81 360.845]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC136)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC136)/S/URI>>/Border[0 0 0]>>endobj4398 0 obj[4384 0 R/XYZ 0 109.926 null]endobj4399 0 obj<</Annots 4406 0 R/Parent 4427 0 R/ID 4451 0 R/StructParents 224/Contents 4442 0 R/PZ 1.13707/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4400 0 obj<</Parent 4410 0 R/Count 5/Type/Pages/Kids[4323 0 R 4350 0 R 4361 0 R 4363 0 R 4384 0 R]>>endobj4401 0 obj[4383 0 R]endobj4402 0 obj<</Limits[160 191]/Nums[160 3559 0 R 161 3563 0 R 162 3565 0 R 163 3569 0 R 164 3573 0 R 165 3598 0 R 166 3609 0 R 167 3611 0 R 168 3614 0 R 169 3617 0 R 170 3619 0 R 171 3644 0 R 172 3654 0 R 173 3676 0 R 174 3688 0 R 175 3709 0 R 176 3719 0 R 177 3740 0 R 178 3767 0 R 179 3781 0 R 180 3783 0 R 181 3785 0 R 182 3809 0 R 183 3819 0 R 184 3822 0 R 185 3844 0 R 186 3856 0 R 187 3861 0 R 188 3863 0 R 189 3888 0 R 190 3919 0 R 191 3930 0 R]>>endobj4403 0 obj<</Limits[192 256]/Nums[]>>endobj4404 0 obj[4399 0 R/XYZ 0 680.867 null]endobj4405 0 obj<</Rect[266.615 677.019 280.971 690.211]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_foot.html#FOOT6)/S/URI>>/Border[0 0 0]>>endobj4406 0 obj[4405 0 R]endobj4407 0 obj[4399 0 R/XYZ 0 537.888 null]endobj4408 0 obj[4399 0 R/XYZ 0 537.888 null]endobj4409 0 obj<</Parent 4427 0 R/ID 4451 0 R/StructParents 225/Contents 4443 0 R/PZ 1.13707/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4410 0 obj<</Parent 4700 0 R/Count 25/Type/Pages/Kids[4091 0 R 4165 0 R 4234 0 R 4324 0 R 4400 0 R]>>endobj4411 0 obj[4383 0 R]endobj4412 0 obj[4409 0 R/XYZ 0 720.646 null]endobj4413 0 obj<</Parent 4427 0 R/ID 4451 0 R/StructParents 226/Contents 4444 0 R/PZ 1.13707/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4414 0 obj[4383 0 R]endobj4415 0 obj<</Annots 4419 0 R/Parent 4427 0 R/ID 4451 0 R/StructParents 227/Contents 4445 0 R/PZ 1.13707/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 737 0 R/T1_3 736 0 R/T1_4 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4416 0 obj[4383 0 R]endobj4417 0 obj[4415 0 R/XYZ 0 66.1511 null]endobj4418 0 obj<</Rect[8.79453 51.574 207.331 64.9199]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC137)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC137)/S/URI>>/Border[0 0 0]>>endobj4419 0 obj[4418 0 R]endobj4420 0 obj<</Annots 4424 0 R/Parent 4427 0 R/ID 4451 0 R/StructParents 228/Contents 4446 0 R/PZ 1.13707/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4421 0 obj[4383 0 R]endobj4422 0 obj[4420 0 R/XYZ 0 127.34 null]endobj4423 0 obj<</Rect[8.79453 112.917 157.934 126.109]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC138)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC138)/S/URI>>/Border[0 0 0]>>endobj4424 0 obj[4423 0 R]endobj4425 0 obj[4420 0 R/XYZ 0 94.0966 null]endobj4426 0 obj<</Annots 4431 0 R/Parent 4496 0 R/ID 4451 0 R/StructParents 229/Contents 4447 0 R/PZ 1.13707/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4427 0 obj<</Parent 4697 0 R/Count 5/Type/Pages/Kids[4399 0 R 4409 0 R 4413 0 R 4415 0 R 4420 0 R]>>endobj4428 0 obj[4426 0 R/XYZ 0 756.389 null]endobj4429 0 obj[4383 0 R]endobj4430 0 obj<</Rect[295.709 752.541 310.065 765.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_foot.html#FOOT7)/S/URI>>/Border[0 0 0]>>endobj4431 0 obj[4430 0 R 4433 0 R 4435 0 R 4436 0 R 4437 0 R 4438 0 R 4439 0 R 4440 0 R]endobj4432 0 obj[4426 0 R/XYZ 0 756.389 null]endobj4433 0 obj<</Rect[313.143 752.541 327.5 765.733]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_foot.html#FOOT8)/S/URI>>/Border[0 0 0]>>endobj4434 0 obj[4426 0 R/XYZ 0 419.614 null]endobj4435 0 obj<</Rect[475.038 415.766 489.395 428.958]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_foot.html#FOOT9)/S/URI>>/Border[0 0 0]>>endobj4436 0 obj<</Rect[57.6992 368.452 77.5343 381.643]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4437 0 obj<</Rect[83.6905 368.452 126.094 381.643]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4350 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_114.html)/S/URI>>/Border[0 0 0]>>endobj4438 0 obj<</Rect[132.25 368.452 153.452 381.643]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4458 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html)/S/URI>>/Border[0 0 0]>>endobj4439 0 obj<</Rect[159.608 368.452 176.71 381.643]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4440 0 obj<</Rect[220.825 368.452 302.21 381.643]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4441 0 obj<</Length 5316>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 779.0849 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 7.9151 0 0 7.9151 18 780.9933 Tm
(An Introduction to Scheme and its Implementation - The Reader)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
12.3123 0 0 12.3123 8.7945 756.3894 Tm
(Go to the )Tj
ET
0 0 1 RG
0.621 w 10 M 0 j 0 J []0 d 
57.699 754.528 m
77.534 754.528 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.3123 0 0 12.3123 57.6992 756.3894 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
83.691 754.528 m
126.094 754.528 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.3123 0 0 12.3123 83.6905 756.3894 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
132.25 754.528 m
153.452 754.528 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.3123 0 0 12.3123 132.2504 756.3894 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
159.608 754.528 m
176.71 754.528 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.3123 0 0 12.3123 159.6084 756.3894 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
220.825 754.528 m
302.21 754.528 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.3123 0 0 12.3123 220.8254 756.3894 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
8.795 742.516 m
8.795 744.274 l
603.205 744.274 l
602.326 743.395 l
9.674 743.395 l
9.674 743.395 l
h
f
0.875 0.875 0.875 rg
603.205 744.274 m
603.205 742.516 l
8.795 742.516 l
9.674 743.395 l
602.326 743.395 l
602.326 743.395 l
h
f
1.193 w 
8.795 703.622 m
86.163 703.622 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14.2065 0 0 14.2065 8.7945 707.2018 Tm
(The Reader)Tj
0 0 0 rg
/T1_0 1 Tf
12.3123 0 0 12.3123 8.7945 673.5585 Tm
(We won't write a whole reader for our interpreter, but I'll sketch how t\he reader works, and show a simplified reader. )Tj
0 -2.557 TD
(\(Our interpreter will just "cheat" the reader from the underlying Schem\e system we're implementing it in, but it's good )Tj
0 -1.2 TD
(to know how we could write a reader, and it's a nice example of recursiv\e programming.\) )Tj
0 -2.562 TD
(The reader is just the procedure )Tj
/T1_2 1 Tf
(read)Tj
/T1_0 1 Tf
(, which is written in terms of a few lower-level procedures that read in\dividual )Tj
0 -1.205 TD
(characters and construct )Tj
/T1_3 1 Tf
(tokens)Tj
/T1_0 1 Tf
(, which )Tj
/T1_2 1 Tf
(read)Tj
/T1_0 1 Tf
( puts together into nested data structures. A token is just a fairly sim\ple )Tj
0 -1.2 TD
(item that doesn't have a nested structure. For example, lists nest, but \symbol names don't, strings don't, and numbers )Tj
T*
(don't. )Tj
0 -2.562 TD
(The low-level routines that )Tj
/T1_2 1 Tf
(read)Tj
/T1_0 1 Tf
( uses just read individual tokens from the input \(a stream of character\s\). These tokens )Tj
0 -1.2 TD
(include symbols, strings, numbers, and parentheses. Parentheses are spec\ial, because they tell the reader when recursion )Tj
T*
(is needed to read nested data structures. )Tj
0 -2.557 TD
(\(I haven't explained about character I/O, but don't worry--there are Sc\heme procedures for reading a character of input )Tj
0 -1.2 TD
(at a time, testing characters for equality, etc. For now, we'll ignore t\hose details and I'll just sketch the overall structure )Tj
T*
(of the reader.\) )Tj
0 -2.557 TD
(Lets assume we have a simple reader that only reads symbols, integers, a\nd strings, and \(possibly nested\) lists made up )Tj
0 -1.2 TD
(of those things. It'll be pretty clear how to extend it to read other ki\nds of things. )Tj
ET
1.034 w 
8.795 348.185 m
92.26 348.185 l
S
0.621 w 
92.26 349.426 m
121.81 349.426 l
S
0 0 1 rg
BT
/T1_1 1 Tf
12.3123 0 0 12.3123 8.7945 351.2875 Tm
(Implementing )Tj
/T1_4 1 Tf
(read)Tj
0 0 0 rg
/T1_2 1 Tf
0 -2.7 TD
(read)Tj
/T1_0 1 Tf
( uses recursion to construct nested data structures while reading throug\h the character input from left to right. )Tj
0 -2.557 TD
(For example, the input character sequence )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(foo 20 \(baz\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(will be read as a three-element list, whose first two elements are symbo\ls )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
( and the number 20; its third element is )Tj
0 -1.205 TD
(another list, whose single element is the symbol )Tj
/T1_2 1 Tf
(bar)Tj
/T1_0 1 Tf
(. )Tj
/T1_2 1 Tf
0 -2.562 TD
(read)Tj
/T1_0 1 Tf
( can also read simple things, like symbols and numbers, by themselves. )Tj
T*
(The data structures that )Tj
/T1_2 1 Tf
(read)Tj
/T1_0 1 Tf
( constructs are called )Tj
/T1_3 1 Tf
(s-expressions)Tj
/T1_0 1 Tf
(. An s-expression may be something simple like a )Tj
0 -1.2 TD
(string or a number, or a list of s-expressions. \(Notice that this recur\sive definition covers arbitrarily deeply nested lists.\) )Tj
0 -2.557 TD
(\(Generally, s-expressions are tree-structured \(acyclic\) data structur\es consisting of things that Scheme knows how to )Tj
0 -1.2 TD
(read and write--symbols, numbers, string and character literals, boolean\s, and lists or vectors of s-expressions. )Tj
T*
(Sometimes the term is used even more broadly, to include almost any kind\ of Scheme data structure, but usually we use )Tj
T*
(the term s-expression to refer to something that has a standard textual \representation, which can be read to create a )Tj
T*
(standard data structure.\) )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 6.0849 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
7.9151 0 0 7.9151 18 7.9933 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_115.html \(1 of 7\)1\1/3/2006 9:09:13 PM)Tj
ET
EMC 

endstreamendobj4442 0 obj<</Length 5134>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 779.0849 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 7.9151 0 0 7.9151 18 780.9933 Tm
(An Introduction to Scheme and its Implementation - The Reader)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
12.3123 0 0 12.3123 8.7945 741.9015 Tm
(The traditional term )Tj
/T1_1 1 Tf
(s-expression)Tj
/T1_0 1 Tf
( is very unfortunate. Technically an )Tj
/T1_1 1 Tf
(expression)Tj
/T1_0 1 Tf
( is a piece of a program, which can be )Tj
0 -1.2 TD
(evaluated to yield a Scheme value. )Tj
0 -2.557 TD
(An )Tj
/T1_1 1 Tf
(s-expression)Tj
/T1_0 1 Tf
( isn't really an expression at all--it's just a )Tj
/T1_1 1 Tf
(data structure)Tj
/T1_0 1 Tf
(, which we can )Tj
/T1_1 1 Tf
(choose)Tj
/T1_0 1 Tf
( to use as a )Tj
0 -1.2 TD
(representation of an expression in a program, or not.)Tj
ET
0 0 1 RG
0.621 w 10 M 0 j 0 J []0 d 
266.615 679.006 m
280.971 679.006 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.3123 0 0 12.3123 266.615 680.8674 Tm
(\(6\))Tj
0 0 0 rg
( Remember that the reader's job is )Tj
/T1_1 1 Tf
(only)Tj
/T1_0 1 Tf
( to convert textual )Tj
-20.94 -1.343 Td
(expressions into handy data structures, )Tj
/T1_1 1 Tf
(not)Tj
/T1_0 1 Tf
( to interpret those data structures as programs. It's the evaluator that\ actually )Tj
T*
(interprets data structures as programs, not the reader. That's why the r\ead-eval-print loop hands the s-expressions )Tj
0 -1.205 TD
(returned from )Tj
/T1_2 1 Tf
(read)Tj
/T1_0 1 Tf
( to )Tj
/T1_2 1 Tf
(eval)Tj
/T1_0 1 Tf
( for evaluation. )Tj
0 -2.562 TD
(I'll show a slightly oversimplified version of )Tj
/T1_2 1 Tf
(read)Tj
/T1_0 1 Tf
(, which we'll call )Tj
/T1_2 1 Tf
(micro-read)Tj
/T1_0 1 Tf
(. The main simplifications are that )Tj
/T1_2 1 Tf
0 -1.205 TD
(micro-read)Tj
/T1_0 1 Tf
( only handles a few basic types--symbols, nonnegative integers, and list\s--and we've left out most error-)Tj
0 -1.2 TD
(checking code. We assume that what we're reading is a legal textual repr\esentation of a Scheme data structure. We also )Tj
T*
(haven't dealt with reading from files, instead of the standard input, or\ what to do when reaching the end of a file. )Tj
0 -2.562 TD
(To make it easier to implement )Tj
/T1_2 1 Tf
(read)Tj
/T1_0 1 Tf
(, we'll use a helper procedure that reads a single )Tj
/T1_1 1 Tf
(token)Tj
/T1_0 1 Tf
( at a time, called )Tj
/T1_2 1 Tf
(read-)Tj
0 -1.205 TD
(token)Tj
/T1_0 1 Tf
(. Intuitively, calling )Tj
/T1_2 1 Tf
(read-token)Tj
/T1_0 1 Tf
( repeatedly will chop the input into "words." Then )Tj
/T1_2 1 Tf
(read)Tj
/T1_0 1 Tf
( can group these )Tj
0 -1.2 TD
("words" together to form "phrases," which may describe complex data stru\ctures. )Tj
0 -2.557 TD
(For example, the following input character sequence )Tj
/T1_2 1 Tf
0 -2.562 TD
(  \(foo 1 \(a "bar"\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(will be chopped into the following tokens, one at a time, in a left-to-r\ight scan of the input by repeated calls to )Tj
/T1_2 1 Tf
(read-)Tj
0 -1.205 TD
(token)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
0 -2.562 TD
(  \()Tj
0 -1.2 TD
(  foo)Tj
T*
(  1)Tj
T*
(  \()Tj
T*
(  a)Tj
T*
(  "bar")Tj
T*
(  \))Tj
T*
(  \))Tj
/T1_0 1 Tf
0 -2.552 TD
(Notice that left and right parentheses are tokens, even though they're w\ritten as single characters. You can think of )Tj
0 -1.2 TD
(them as special words that tell )Tj
/T1_1 1 Tf
(read)Tj
/T1_0 1 Tf
( where a new list starts and where it ends. )Tj
0 -2.562 TD
(Given )Tj
/T1_2 1 Tf
(read-token)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(read)Tj
/T1_0 1 Tf
( must recognize )Tj
/T1_1 1 Tf
(nested structures)Tj
/T1_0 1 Tf
(---intuitively, where )Tj
/T1_2 1 Tf
(read-token)Tj
/T1_0 1 Tf
( recognizes )Tj
0 -1.2 TD
(individual words, )Tj
/T1_1 1 Tf
(read)Tj
/T1_0 1 Tf
( must recognize )Tj
/T1_1 1 Tf
(phrases)Tj
/T1_0 1 Tf
(, which may be nested. Each phrase corresponds to an s-expression that )Tj
/T1_2 1 Tf
0 -1.205 TD
(read)Tj
/T1_0 1 Tf
( must construct, and nested phrases correspond to nested s-expressions. \)Tj
0 -2.562 TD
(Most of the work of reading is actually done by )Tj
/T1_2 1 Tf
(read-token)Tj
/T1_0 1 Tf
(, which reads a single input token--e.g., a symbol, a )Tj
0 -1.205 TD
(literal string, a number, or a left or right parenthesis. That is, )Tj
/T1_2 1 Tf
(read-token)Tj
/T1_0 1 Tf
( performs )Tj
/T1_1 1 Tf
(lexical analysis)Tj
/T1_0 1 Tf
( \(also known as )Tj
/T1_1 1 Tf
0 -1.205 TD
(scanning)Tj
/T1_0 1 Tf
(\). That is, )Tj
/T1_2 1 Tf
(read-token)Tj
/T1_0 1 Tf
( reads a sequence of characters from the input until it recognizes a "wo\rd." )Tj
0 -2.562 TD
(\(Our little scanner will use the standard Scheme procedure )Tj
/T1_2 1 Tf
(read-char)Tj
/T1_0 1 Tf
( to read one character of input at a time, and )Tj
0 -1.205 TD
(also the predicate procedures )Tj
/T1_2 1 Tf
(char-alphabetic?)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(char-numeric?)Tj
/T1_0 1 Tf
(; these tell whether a character represents )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 6.0849 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
7.9151 0 0 7.9151 18 7.9933 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_115.html \(2 of 7\)1\1/3/2006 9:09:13 PM)Tj
ET
EMC 

endstreamendobj4443 0 obj<</Length 4030>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 779.0849 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 7.9151 0 0 7.9151 18 780.9933 Tm
(An Introduction to Scheme and its Implementation - The Reader)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
12.3123 0 0 12.3123 8.7945 756.3302 Tm
(a letter or a number. We'll also use the Scheme character literal object\s )Tj
/T1_1 1 Tf
(#\\")Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(#\\\()Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(#\\\))Tj
/T1_0 1 Tf
(, which represent the double )Tj
0 -1.2 TD
(quote character, left parenthesis character, and right parenthesis chara\cter, respectively.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(;;; a scanner for a simple subset of the lexical syntax of Scheme)Tj
0 -1.2 TD
(\(define \(read-token\))Tj
T*
(   \(let \(\(first-char \(read-char\)\)\))Tj
0 -1.2 TD
(      \(cond ;; if first-char is a space or line break, just skip it)Tj
0 -1.2 TD
(            ;; and loop to try again by calling self recursively)Tj
T*
(            \(\(char-whitespace? first-char\))Tj
T*
(             \(read-token\)\))Tj
T*
(            ;; else if it's a left paren char, return the special)Tj
T*
(            ;; object that we use to represent left parenthesis tokens.)Tj
T*
(            \(\(eq? first-char #\\\( \))Tj
T*
(             left-paren-token\))Tj
T*
(            ;; likewise for right parens)Tj
T*
(            \(\(eq? first-char #\\\) \))Tj
T*
(             right-paren-token\))Tj
T*
(            ;; else if it's a letter, we assume it's the first char)Tj
T*
(            ;; of a symbol and call read-identifier to read the rest of)Tj
T*
(            ;; of the chars in the identifier and return a symbol object\)Tj
T*
(            \(\(char-alphabetic? first-char\))Tj
T*
(             \(read-identifier first-char\)\))Tj
T*
(            ;; else if it's a digit, we assume it's the first digit)Tj
T*
(            ;; of a number and call read-number to read the rest of)Tj
T*
(            ;; the number and return a number object)Tj
T*
(            \(\(char-numeric? first-char\))Tj
T*
(             \(read-number first-char\)\))Tj
T*
(            ;; else it's something this little reader can't handle,)Tj
T*
(            ;; so signal an error)Tj
T*
(            \(else)Tj
T*
(             \(error "illegal lexical syntax"\)\)\)\)\))Tj
/T1_2 1 Tf
0 -2.552 TD
([ see handout with discussion of lexical analysis, state machines, etc. \])Tj
/T1_0 1 Tf
( )Tj
0 -2.562 TD
(The basic operation of )Tj
/T1_1 1 Tf
(read-token)Tj
/T1_0 1 Tf
( is to read a character from the input, and use that to determine what k\ind of )Tj
0 -1.2 TD
(token is being read. Then a specialized routine for that kind of token i\s called to read the rest of the characters that )Tj
0 -1.205 TD
(make up the token, and return a Scheme object to represent it. We repres\ent identifiers tokens like )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( as Scheme )Tj
0 -1.205 TD
(symbols, and digit sequences like )Tj
/T1_1 1 Tf
(122)Tj
/T1_0 1 Tf
( as the obvious Scheme number objects. )Tj
/T1_1 1 Tf
0 -2.562 TD
(read-token)Tj
/T1_0 1 Tf
( also uses some helper predicates that we define ourselves. )Tj
/T1_1 1 Tf
(char-whitespace?)Tj
/T1_0 1 Tf
( checks whether a )Tj
0 -1.2 TD
(character is a whitespace character--either a space or a newline. For th\is, we use the literal representation of the space )Tj
0 -1.205 TD
(character object and the newline character object, which are written )Tj
/T1_1 1 Tf
(#\\space)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(#\\newline)Tj
/T1_0 1 Tf
(. Here's the code: )Tj
/T1_1 1 Tf
0 -2.562 TD
(;;; whitespace? checks whether char is either space or newline)Tj
0 -1.2 TD
(\(define \(char-whitespace? char\))Tj
T*
(  \(or \(eq? char #\\space\))Tj
T*
(      \(eq? char #\\newline\)\)\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 6.0849 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
7.9151 0 0 7.9151 18 7.9933 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_115.html \(3 of 7\)1\1/3/2006 9:09:13 PM)Tj
ET
EMC 

endstreamendobj4444 0 obj<</Length 4893>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 779.0849 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 7.9151 0 0 7.9151 18 780.9933 Tm
(An Introduction to Scheme and its Implementation - The Reader)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
12.3123 0 0 12.3123 8.7945 756.3302 Tm
(read-token)Tj
/T1_0 1 Tf
( uses several helper procedures, some of which are standard Scheme proce\dures. )Tj
/T1_1 1 Tf
(char-numeric?)Tj
/T1_0 1 Tf
( is a )Tj
0 -1.205 TD
(predicate that tests a character object to see whether the character it \represents is a digit. )Tj
/T1_1 1 Tf
(char-alphabetic?)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(likewise tests a character to see whether it represents a letter a throu\gh z or A through Z. We represent left and right )Tj
T*
(parenthesis tokens specially, because there's not an obvious Scheme obje\ct to represent them. \(We could use the )Tj
T*
(Scheme left and right parenthesis )Tj
/T1_2 1 Tf
(character)Tj
/T1_0 1 Tf
( objects, but that could cause trouble if we add the ability to read cha\racter )Tj
0 -1.205 TD
(literals--we'd like to have unique objects that can't be confused with a\nything else that )Tj
/T1_1 1 Tf
(read-token)Tj
/T1_0 1 Tf
( might return. )Tj
0 -2.562 TD
(To create unique objects to represent these tokens, we'll use a special \trick--we'll call )Tj
/T1_1 1 Tf
(list)Tj
/T1_0 1 Tf
( to create lists, which )Tj
0 -1.205 TD
(ensure's they'll be distinct from any other objects that might be return\ed by )Tj
/T1_1 1 Tf
(read-token)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(\(define left-paren-token \(list '*left-parenthesis-token*\)\) \(define \right-paren-token \(list '*right-parenthesis-token*\)\) )Tj
T*
(Now we can use these particular list objects as the special objects to r\epresent left and right parentheses. We can refer )Tj
0 -1.205 TD
(to them by the names )Tj
/T1_1 1 Tf
(left-parenthesis-token)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(right-parenthesis-token)Tj
/T1_0 1 Tf
(, because they're the )Tj
0 -1.2 TD
(values of those variables. )Tj
0 -2.562 TD
(We can check to see if an object is one of these tokens by comparing it \against that object using )Tj
/T1_1 1 Tf
(eq?)Tj
/T1_0 1 Tf
(. Notice that these )Tj
0 -1.205 TD
(values can't be confused with anything else that )Tj
/T1_1 1 Tf
(read-token)Tj
/T1_0 1 Tf
( might return, for two reasons. The first is that read-)Tj
0 -1.2 TD
(token never returns a list. Even if it could, though, they'd still be di\stinct values, because it'd never return these same )Tj
T*
(lists. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(left-parenthesis-token? thing\))Tj
0 -1.2 TD
(   \(eq? thing left-parenthesis-token\)\))Tj
T*
(\(define \(right-parenthesis-token thing\))Tj
T*
(   \(eq? thing right-parenthesis-token\)\))Tj
/T1_2 1 Tf
0 -2.552 TD
([ see handout with complete code for the little lexer and reader ])Tj
/T1_0 1 Tf
( So that you can use any number of whitespace )Tj
0 -1.205 TD
(characters between tokens, )Tj
/T1_1 1 Tf
(read-token)Tj
/T1_0 1 Tf
( skips any whitespace that occurs at the beginning of the input. )Tj
/T1_3 1 Tf
6.1562 0 0 6.1562 31.4079 313.7836 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_1 1 Tf
12.3123 0 0 12.3123 43.9727 313.7836 Tm
(read-identifier)Tj
/T1_0 1 Tf
(. If the character we read is a letter, we're reading a symbol, so we ca\ll )Tj
/T1_1 1 Tf
(read-)Tj
T*
(identifier)Tj
/T1_0 1 Tf
( to finish reading it. \(We pass it the character we read, since it's th\e first character of the symbol's )Tj
0 -1.205 TD
(print name.\) )Tj
/T1_1 1 Tf
(read-identifier)Tj
/T1_0 1 Tf
( just reads through more characters, saving them until it hits a charact\er that )Tj
0 -1.2 TD
(can't be part of an identifier, e.g., whitespace or a parenthesis. Once \it has read the characters that make up the )Tj
0 -1.205 TD
(symbol printname, )Tj
/T1_1 1 Tf
(read-identifier)Tj
/T1_0 1 Tf
( must obtain a pointer to the unique symbol object with that name; if )Tj
0 -1.2 TD
(there isn't one, it must be created. Here's the code: )Tj
/T1_1 1 Tf
0 -2.562 TD
(;;; read-identifier reads an identifier and returns a symbol)Tj
0 -1.2 TD
(;;; to represent it)Tj
0 -1.2 TD
(\(define \(read-identifier chr\))Tj
0 -2.4 TD
(  ;; read-identifier-helper reads in one character a time and puts it in\to)Tj
0 -1.2 TD
(  ;; a list. If it finds the character is a finishing character, then)Tj
T*
(  ;; it reverses the list and returns.)Tj
T*
(  )Tj
T*
(  \(define \(read-identifier-helper list-so-far\))Tj
T*
(    \(let \(\(next-char \(peek-char\)\)\))Tj
T*
(      ;; if next-char is a letter or a digit then call self recursively)Tj
T*
(      \(if \(or \(char-alphabetic? next-char\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 6.0849 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
7.9151 0 0 7.9151 18 7.9933 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_115.html \(4 of 7\)1\1/3/2006 9:09:13 PM)Tj
ET
EMC 

endstreamendobj4445 0 obj<</Length 5067>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 779.0849 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 7.9151 0 0 7.9151 18 780.9933 Tm
(An Introduction to Scheme and its Implementation - The Reader)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
12.3123 0 0 12.3123 43.9727 756.3302 Tm
(              \(char-numeric? next-char\)\))Tj
0 -1.2 TD
(          \(read-identifier-helper \(cons \(read-char\) list-so-far\)\))Tj
T*
(          ;; else return list we've read, reversing it into proper order\)Tj
T*
(          \(reverse list-so-far\)\)\)\))Tj
T*
(          )Tj
T*
(  ;; call read-identifier-helper to accumulate the characters in the)Tj
T*
(  ;; identifier, then convert that to a string object and convert *that*\)Tj
T*
(  ;; to a symbol object.)Tj
T*
(  ;; Note that string->symbol ensures that only one symbol with a given)Tj
T*
(  ;; printname string is ever constructed, so there are no duplicates.)Tj
T*
(  )Tj
T*
(  \(string->symbol \(list->string \(read-identifier-helper \(list chr\)\)\\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(When it finishes reading the whole print name of the symbol, )Tj
/T1_1 1 Tf
(read-identifier)Tj
/T1_0 1 Tf
( passes the list of characters )Tj
0 -1.205 TD
(to the built-in Scheme procedure )Tj
/T1_1 1 Tf
(list->string)Tj
/T1_0 1 Tf
( to create a Scheme string object with that sequence of )Tj
T*
(characters. Then it passes that string object to the built-in Scheme pro\cedure )Tj
/T1_1 1 Tf
(string->symbol)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
(string-)Tj
0 -1.205 TD
(>symbol)Tj
/T1_0 1 Tf
( checks the table of existing symbols to see if there's already a symbol\ with that printname. If so, it )Tj
0 -1.2 TD
(just returns a pointer to it. \(This ensures that it never creates two s\ymbol objects with the same name, and )Tj
T*
(always returns the same symbol for a string with the same sequence of ch\aracters.\) If a symbol with that )Tj
T*
(printname doesn't exist, it constructs a symbol by that name, adds it to\ the table, and returns a pointer to that. )Tj
0 -1.205 TD
(\()Tj
/T1_1 1 Tf
(string->symbol)Tj
/T1_0 1 Tf
( ensures that there is only ever one symbol with a given printname.\) Ei\ther way, the )Tj
T*
(pointer to the unique symbol with that name is returned as the value fro\m )Tj
/T1_1 1 Tf
(read-identifier)Tj
/T1_0 1 Tf
(. )Tj
/T1_2 1 Tf
6.1562 0 0 6.1562 31.4079 428.9939 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_1 1 Tf
12.3123 0 0 12.3123 43.9727 428.9939 Tm
(read-number)Tj
/T1_0 1 Tf
(. If the character we read is a digit, we're reading a number, so we cal\l )Tj
/T1_1 1 Tf
(read-number)Tj
/T1_0 1 Tf
(. \(We )Tj
T*
(pass it the first character we read, since that's the first digit of the\ number.\) )Tj
/T1_1 1 Tf
(read-number)Tj
/T1_0 1 Tf
( just reads through )Tj
0 -1.2 TD
(successive characters, accumulating a list of character objects that rep\resent digits. It stops when it encounters a )Tj
T*
(character that can't be part of a number. \(For our simple little subset\, that's anything that's not a digit.\) Then it )Tj
0 -1.205 TD
(passes this list to the standard Scheme procedure )Tj
/T1_1 1 Tf
(list->string)Tj
/T1_0 1 Tf
(, which returns a Scheme string object with )Tj
0 -1.205 TD
(that sequence of characters. That's passed in turn to )Tj
/T1_1 1 Tf
(string->number)Tj
/T1_0 1 Tf
(, which returns a Scheme number )Tj
0 -1.2 TD
(object that represents the corresponding number. )Tj
/T1_1 1 Tf
-2.857 -2.562 Td
(;;; read-number reads a sequence of digits and constructs a Scheme numbe\r)Tj
0 -1.2 TD
(;;; object to represent it.  Given the first character, it reads one)Tj
0 -1.2 TD
(;;; char at a t time and checks to see if it's a digit.  If so, it)Tj
T*
(;;; conses it onto a list of numbers read so far.  Otherwise, it)Tj
T*
(;;; reverses the list of digits, converts it to a string, and converts)Tj
T*
(;;; that to a Scheme number object.                           )Tj
T*
(\(define \(read-number chr\))Tj
T*
(  \(define \(read-number-helper list-so-far\))Tj
T*
(    \(let \(\(next-char \(peek-char\)\)\))Tj
T*
(      ;; if next-char is a digit then call self resursively)Tj
T*
(      \(if \(char-numeric? next-char\))Tj
T*
(          \(read-number-helper \(cons \(read-char\) list-so-far\)\))Tj
T*
(          ;; else return the list we've read, reversing into proper orde\r)Tj
T*
(          \(reverse list-so-far\)\)\)\))Tj
T*
(  ;; read the string of digits, convert to string, convert to number)Tj
T*
(  \(string->number \(list->string \(read-number-helper \(list chr\)\)\)\)\\))Tj
ET
0 0 1 RG
1.034 w 10 M 0 j 0 J []0 d 
8.795 52.26 m
114.151 52.26 l
S
0.621 w 
114.151 53.501 m
143.701 53.501 l
S
1.034 w 
143.701 52.26 m
207.331 52.26 l
S
0 0 1 rg
BT
/T1_3 1 Tf
12.3123 0 0 12.3123 8.7945 55.3628 Tm
(Implementing the )Tj
/T1_4 1 Tf
(read)Tj
/T1_3 1 Tf
( procedure)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 6.0849 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
7.9151 0 0 7.9151 18 7.9933 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_115.html \(5 of 7\)1\1/3/2006 9:09:13 PM)Tj
ET
EMC 

endstreamendobj4446 0 obj<</Length 4814>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 779.0849 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 7.9151 0 0 7.9151 18 780.9933 Tm
(An Introduction to Scheme and its Implementation - The Reader)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
12.3123 0 0 12.3123 8.7945 755.2537 Tm
(Given )Tj
/T1_1 1 Tf
(read-token)Tj
/T1_0 1 Tf
(, it's easy to implement )Tj
/T1_1 1 Tf
(read)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
(read)Tj
/T1_0 1 Tf
( uses recursion to recognize nested data structures. It calls )Tj
/T1_1 1 Tf
0 -1.205 TD
(read-token)Tj
/T1_0 1 Tf
( to read the next token of input. If this is a normal token, e.g., a sym\bol or string, )Tj
/T1_1 1 Tf
(read)Tj
/T1_0 1 Tf
( just returns that. )Tj
0 -1.2 TD
(If it's a left parenthesis token, however, read constructs a list, readi\ng all of the elements of the list up to the matching )Tj
0 -1.205 TD
(right parenthesis. This is done by another helper procedure, )Tj
/T1_1 1 Tf
(read-list)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(To avoid confusion with the standard Scheme )Tj
/T1_1 1 Tf
(read)Tj
/T1_0 1 Tf
( procedure, we'll call our simplified version )Tj
/T1_1 1 Tf
(micro-read)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(;;; Simplified version of read for subset of Scheme s-expression syntax)Tj
0 -1.2 TD
(\(define \(micro-read\))Tj
T*
(   \(let \(\(next-token \(read-token\)\))Tj
T*
(      \(cond \(\(token-leftpar? next-token\))Tj
T*
(             \(read-list '\(\)\)\))Tj
T*
(            \(else)Tj
T*
(             next-token\)\)\)\))Tj
0 -2.557 TD
(\(define \(read-list list-so-far\))Tj
0 -1.2 TD
(   \(let \(\(token \(micro-read-token\)\)\)        )Tj
T*
(      \(cond \(\(token-rightpar? token\))Tj
T*
(             \(reverse list-so-far\)\))Tj
T*
(            \(\(token-leftpar? token\))Tj
T*
(             \(read-list \(cons \(read-list '\(\)\) list-so-far\)\)\))Tj
T*
(            \(else)Tj
T*
(             \(read-list \(cons token list-so-far\)\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Here I've coded )Tj
/T1_1 1 Tf
(read-list)Tj
/T1_0 1 Tf
( recursively in two ways. )Tj
T*
(The iteration that reads successive items in the list is implemented as \tail recursion, passing the list so far as an )Tj
0 -1.2 TD
(argument to the recursive call. Intuitively, this iterates "rightward" i\n the list structure we're creating. Each list element )Tj
T*
(is consed onto the list so far, and the new list is passed to a the tail\-recursive call that performs iteration. \(At the first )Tj
0 -1.205 TD
(call to )Tj
/T1_1 1 Tf
(read-list)Tj
/T1_0 1 Tf
(, we pass the empty list, because we've read zero elements so far.\) )Tj
0 -2.557 TD
(This constructs a list that's backwards, because we push later elements \onto the )Tj
/T1_2 1 Tf
(front)Tj
/T1_0 1 Tf
( of the list. When we hit a right )Tj
0 -1.2 TD
(parenthesis and end a recursive call, we reverse the backwards list we'v\e accumulated, to put it in the proper order, and )Tj
T*
(return that. )Tj
0 -2.562 TD
(Each list element is read by simply calling )Tj
/T1_1 1 Tf
(micro-read)Tj
/T1_0 1 Tf
(, which is what allows a list to contain arbitrary s-)Tj
0 -1.2 TD
(expressions, including other lists. Intuitively, this recurses )Tj
/T1_2 1 Tf
(downward)Tj
/T1_0 1 Tf
( through the nested data structures we're creating. )Tj
0 -1.205 TD
(The mutual recursion between )Tj
/T1_1 1 Tf
(micro-read)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(read-list)Tj
/T1_0 1 Tf
( is the key to the structure of the reader. )Tj
0 -2.562 TD
(This recursion is the interesting recursion--the mutual recursion betwee\n )Tj
/T1_1 1 Tf
(micro-read)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(read-list)Tj
/T1_0 1 Tf
( is what )Tj
0 -1.205 TD
(makes it possible for )Tj
/T1_1 1 Tf
(micro-read)Tj
/T1_0 1 Tf
( to read arbitrary data structures. )Tj
ET
0 0 1 RG
1.034 w 10 M 0 j 0 J []0 d 
8.795 113.449 m
157.934 113.449 l
S
0 0 1 rg
BT
/T1_3 1 Tf
12.3123 0 0 12.3123 8.7945 116.5516 Tm
(Comments on the Reader)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(The reader is a simple kind of )Tj
/T1_2 1 Tf
(recursive descent parser)Tj
/T1_0 1 Tf
( for normal Scheme data structures. \(A )Tj
/T1_2 1 Tf
(parser)Tj
/T1_0 1 Tf
( converts a )Tj
0 -1.2 TD
(sequence of tokens into a syntax tree that describes the nesting of expr\essions or statements.\) It is a "top-down" parser, )Tj
T*
(because it recognizes high-level structures before lower-level ones--e.g\., it recognizes the beginning of a list before )Tj
T*
(reading and recognizing the items in the list. \(That is, on seeing a le\ft parenthesis, it "predicts" that it will see sequence )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 6.0849 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
7.9151 0 0 7.9151 18 7.9933 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_115.html \(6 of 7\)1\1/3/2006 9:09:13 PM)Tj
ET
EMC 

endstreamendobj4447 0 obj<</Length 4279>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 779.0849 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 7.9151 0 0 7.9151 18 780.9933 Tm
(An Introduction to Scheme and its Implementation - The Reader)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
12.3123 0 0 12.3123 8.7945 756.3894 Tm
(of list elements followed by a matching right parenthesis.\))Tj
ET
0 0 1 RG
0.621 w 10 M 0 j 0 J []0 d 
295.709 754.528 m
310.065 754.528 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.3123 0 0 12.3123 295.7091 756.3894 Tm
(\(7\))Tj
0 0 0 rg
( )Tj
ET
313.143 754.528 m
327.5 754.528 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.3123 0 0 12.3123 313.1434 756.3894 Tm
(\(8\))Tj
0 0 0 rg
( )Tj
-24.719 -2.7 Td
(The reader converts a linear sequence of characters into a simple )Tj
/T1_1 1 Tf
(parse tree)Tj
/T1_0 1 Tf
(. A parse tree represents the syntactic )Tj
0 -1.2 TD
(structure \(phrase groupings\) of a sequence of characters. )Tj
0 -2.562 TD
(\(If you're familiar with standard compiler terminology, you should reco\gnize that )Tj
/T1_2 1 Tf
(read-token)Tj
/T1_0 1 Tf
( performs )Tj
/T1_1 1 Tf
(lexical )Tj
0 -1.205 TD
(analysis)Tj
/T1_0 1 Tf
( \(a.k.a. scanning or tokenization\) using )Tj
/T1_2 1 Tf
(read-string)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(read-identifier)Tj
/T1_0 1 Tf
(, and )Tj
/T1_2 1 Tf
(read-number)Tj
/T1_0 1 Tf
(. )Tj
/T1_2 1 Tf
(read)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(performs simple )Tj
/T1_1 1 Tf
(predictive)Tj
/T1_0 1 Tf
( recursive-descent \("top down"\) parsing via the mutual recursion of )Tj
/T1_2 1 Tf
(read)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(read-)Tj
T*
(list)Tj
/T1_0 1 Tf
(.\) )Tj
0 -2.562 TD
(Unlike most parsers, the data structure )Tj
/T1_2 1 Tf
(read)Tj
/T1_0 1 Tf
( generates is a data structure in the Scheme language--an s-expression--\)Tj
0 -1.2 TD
(rather than a data structure internal to a compiler or interpreter. This\ is one of the nice things about Scheme; there's a )Tj
T*
(simple but flexible parser you can use in your own programs. You can use\ it for parsing normal data as well as to help )Tj
T*
(parse programs. )Tj
0 -2.557 TD
(When implementing the Scheme language, that's not all there is to doing \parsing of Scheme programs. The reader does )Tj
0 -1.2 TD
(the first part of parsing, translating input into s-expressions. The res\t of parsing is done during interpretation or )Tj
T*
(compilation, in a very straightforward way. The reader only recognizes n\esting of expressions, and basic syntactic )Tj
T*
(distinctions between tokens, e.g., whether they are parentheses, identif\iers, or numeric literals. Later parsing must )Tj
T*
(detect what kind of Scheme expressions the s-expressions represent, e.g.\, whether a particular list represents a )Tj
T*
(procedure call or a special form, or just a literal list. )Tj
0 -2.557 TD
(The rest of the parsing isn't much more complicated than reading, and is\ also done recursively.)Tj
ET
475.038 417.753 m
489.395 417.753 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.3123 0 0 12.3123 475.0384 419.6143 Tm
(\(9\))Tj
0 0 0 rg
( )Tj
ET
0.5 0.5 0.5 rg
8.795 389.031 m
8.795 390.79 l
603.205 390.79 l
602.326 389.91 l
9.674 389.91 l
9.674 389.91 l
h
f
0.875 0.875 0.875 rg
603.205 390.79 m
603.205 389.031 l
8.795 389.031 l
9.674 389.91 l
602.326 389.91 l
602.326 389.91 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
12.3123 0 0 12.3123 8.7945 372.2997 Tm
(Go to the )Tj
ET
57.699 370.438 m
77.534 370.438 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.3123 0 0 12.3123 57.6992 372.2997 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
83.691 370.438 m
126.094 370.438 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.3123 0 0 12.3123 83.6905 372.2997 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
132.25 370.438 m
153.452 370.438 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.3123 0 0 12.3123 132.2504 372.2997 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
159.608 370.438 m
176.71 370.438 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.3123 0 0 12.3123 159.6084 372.2997 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
220.825 370.438 m
302.21 370.438 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.3123 0 0 12.3123 220.8254 372.2997 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 6.0849 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
7.9151 0 0 7.9151 18 7.9933 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_115.html \(7 of 7\)1\1/3/2006 9:09:13 PM)Tj
ET
EMC 

endstreamendobj4448 0 obj(An Introduction to Scheme and its Implementation - The Reader)endobj4449 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_115.html)/S 700 0 R>>endobj4450 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_115.html)endobj4451 0 obj(ÖÏÿß\r.ÛïVc˜íû∑r)endobj4452 0 obj<</TS(D:20061104050913)/ID 4451 0 R/CT(text/html)/O[4384 0 R 4399 0 R 4409 0 R 4413 0 R 4415 0 R 4420 0 R 4426 0 R]/S/SPS/T 4448 0 R/TID 4454 0 R/SI 4453 0 R>>endobj4453 0 obj<</TS(D:20061104050913)/AU 4450 0 R>>endobj4454 0 obj(ÆÍ™çy∞ﬁ∑¨Ôìôw)endobj4455 0 obj<</Parent 710 0 R/Next 4516 0 R/Dest[4384 0 R/XYZ 0 792 null]/Prev 4381 0 R/SE 4383 0 R/Title(An Introduction to Scheme and its Implementation - The Reader)>>endobj4456 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4457 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 4473 0 R/Type/MCR>><</MCID 0/Pg 4481 0 R/Type/MCR>><</MCID 0/Pg 4484 0 R/Type/MCR>><</MCID 0/Pg 4495 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 4458 0 R>>endobj4458 0 obj<</Annots 4461 0 R/Parent 4496 0 R/ID 4512 0 R/StructParents 230/Contents 4504 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4459 0 obj[4457 0 R]endobj4460 0 obj<</Rect[62.5812 750.726 84.0947 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4461 0 obj[4460 0 R 4462 0 R 4463 0 R 4464 0 R 4465 0 R 4467 0 R]endobj4462 0 obj<</Rect[90.7717 750.726 136.763 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4384 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_115.html)/S/URI>>/Border[0 0 0]>>endobj4463 0 obj<</Rect[143.44 750.726 166.436 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4519 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_117.html)/S/URI>>/Border[0 0 0]>>endobj4464 0 obj<</Rect[173.113 750.726 191.662 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4465 0 obj<</Rect[239.51 750.726 327.781 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4466 0 obj[4458 0 R/XYZ 0 733.175 null]endobj4467 0 obj<</Rect[9.53865 697.148 165.397 713.51]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC139)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC139)/S/URI>>/Border[0 0 0]>>endobj4468 0 obj[4458 0 R/XYZ 0 676.53 null]endobj4469 0 obj[4458 0 R/XYZ 0 676.53 null]endobj4470 0 obj[4458 0 R/XYZ 0 148.849 null]endobj4471 0 obj<</Limits[(õªÖ\(ùO¯»'≈´ÍIDX30)(∏ﬂ·&T/gs˜Ôoƒ b’SEC13)]/Names[(õªÖ\(ùO¯»'≈´ÍIDX30)1803 0 R(õªÖ\(ùO¯»'≈´ÍIDX31)1804 0 R(õªÖ\(ùO¯»'≈´ÍSEC38)1799 0 R(ù0Ì\(kÛ∫ØaX	◊ÔIDX55)2350 0 R(ù0Ì\(kÛ∫ØaX	◊ÔIDX56)2351 0 R(ù0Ì\(kÛ∫ØaX	◊ÔSEC60)2348 0 R(û˘O©œ˜±‘k∏\(≤OSEC154)4748 0 R(û˘O©œ˜±‘k∏\(≤OSEC155)4750 0 R(û˘O©œ˜±‘k∏\(≤OSEC156)4763 0 R(üóáÃΩø«]'\\\\òÏr‰ŒrSEC148)4598 0 R(§}}©”®ê˘ü¡IDX61)2508 0 R(§}}©”®ê˘ü¡SEC65)2506 0 R(®ˆºU˙˜[Ù ’ ÷\rîSEC169)4947 0 R(®ˆºU˙˜[Ù ’ ÷\rîSEC170)4949 0 R(®ˆºU˙˜[Ù ’ ÷\rîSEC171)4956 0 R(®ˆºU˙˜[Ù ’ ÷\rîSEC172)4979 0 R(®ˆºU˙˜[Ù ’ ÷\rîSEC173)4982 0 R(®ˆºU˙˜[Ù ’ ÷\rîSEC174)4984 0 R(®ˆºU˙˜[Ù ’ ÷\rîSEC175)4993 0 R(®ˆºU˙˜[Ù ’ ÷\rîSEC176)4999 0 R(®ˆºU˙˜[Ù ’ ÷\rîSEC177)5015 0 R(®ˆºU˙˜[Ù ’ ÷\rîSEC178)5018 0 R(®ˆºU˙˜[Ù ’ ÷\rîSEC179)5020 0 R(®l<¯wÊ±d≥i∞9©™µIDX64)2604 0 R(®l<¯wÊ±d≥i∞9©™µIDX65)2605 0 R(®l<¯wÊ±d≥i∞9©™µIDX66)2606 0 R(®l<¯wÊ±d≥i∞9©™µSEC68)2602 0 R(®≈u£ˆ˘Ln€u‹ÙœIDX131)4468 0 R(®≈u£ˆ˘Ln€u‹ÙœIDX132)4469 0 R(®≈u£ˆ˘Ln€u‹ÙœIDX133)4470 0 R(®≈u£ˆ˘Ln€u‹ÙœIDX134)4478 0 R(®≈u£ˆ˘Ln€u‹ÙœIDX135)4479 0 R(®≈u£ˆ˘Ln€u‹ÙœIDX136)4480 0 R(®≈u£ˆ˘Ln€u‹ÙœIDX137)4488 0 R(®≈u£ˆ˘Ln€u‹ÙœIDX138)4493 0 R(®≈u£ˆ˘Ln€u‹ÙœIDX139)4494 0 R(®≈u£ˆ˘Ln€u‹ÙœSEC139)4466 0 R(®≈u£ˆ˘Ln€u‹ÙœSEC140)4475 0 R(®≈u£ˆ˘Ln€u‹ÙœSEC141)4483 0 R(®≈u£ˆ˘Ln€u‹ÙœSEC142)4489 0 R(®≈u£ˆ˘Ln€u‹ÙœSEC143)4491 0 R(®ÀF•ÊºTÔÂ§Ç˝vì˙SEC180)5072 0 R(´∑√P£…ßúnC¥[≥ﬁöSEC6)850 0 R(´Îï9∞Ò‰˘^ìÃÆ±trIDX89)3267 0 R(´Îï9∞Ò‰˘^ìÃÆ±trSEC88)3265 0 R(∞÷\)W◊nAÇ“¿\\¡∞Ω”FOOT3)1738 0 R(∞÷\)W◊nAÇ“¿\\¡∞Ω”SEC35)1734 0 R(∞÷\)W◊nAÇ“¿\\¡∞Ω”SEC36)1736 0 R(≥æ\)~ˇz_dl-ã\)∑G˚SEC59)2322 0 R(¥´´3ŒFˇÆMÿhô_SEC144)4527 0 R(¥´´3ŒFˇÆMÿhô_SEC145)4533 0 R(¥´´3ŒFˇÆMÿhô_SEC146)4541 0 R(∂˘‚6∑\)iÒüx˜dd;ˇIDX11)1280 0 R(∂˘‚6∑\)iÒüx˜dd;ˇIDX12)1281 0 R(∂˘‚6∑\)iÒüx˜dd;ˇSEC19)1278 0 R(∑µîÄr˝2">ÓØ˙0\\\\IDX7)1210 0 R(∑µîÄr˝2">ÓØ˙0\\\\SEC17)1208 0 R(∏âó¬◊Çç¡^odÛ5ŸoEIDX6)1157 0 R(∏âó¬◊Çç¡^odÛ5ŸoESEC15)1155 0 R(∏ﬂ·&T/gs˜Ôoƒ b’IDX1)1088 0 R(∏ﬂ·&T/gs˜Ôoƒ b’SEC13)1086 0 R]>>endobj4472 0 obj<</Limits[(π,ã’…6~|7´ò\r`-SEC107)(÷ﬂªTD_í\(\nÄ…«ìSEC4)]/Names[(π,ã’…6~|7´ò\r`-SEC107)3851 0 R(π,ã’…6~|7´ò\r`-SEC108)3853 0 R(π,ã’…6~|7´ò\r`-SEC109)3857 0 R(π,ã’…6~|7´ò\r`-SEC110)3864 0 R(Ω˛ë}çDN[∞qo∫fSEC2)759 0 R(æo6˘å]Ô“tnÿiASEC157)4804 0 R(æo6˘å]Ô“tnÿiASEC158)4809 0 R(≈	ÇÈ£Á¡\\C™†ƒà} SEC104)3774 0 R(≈	ÇÈ£Á¡\\C™†ƒà} SEC105)3777 0 R(∆GD†TH˙Ì˙ \(çs|\\SEC27)1497 0 R(∆ã¸ó©0»¶M†ó$`OIDX46)2172 0 R(∆ã¸ó©0»¶M†ó$`OSEC54)2170 0 R(»!ÖÙú◊yÕ*|˙#|ÏΩ±IDX37)2041 0 R(»!ÖÙú◊yÕ*|˙#|ÏΩ±SEC46)2039 0 R(»ZGc0NÀá⁄YøIDX94)3354 0 R(»ZGc0NÀá⁄YøIDX95)3355 0 R(»ZGc0NÀá⁄YøSEC91)3352 0 R( \\ÀCP´jûœ2\(diòŒSEC62)2417 0 R( ÔQ€`£<„˘tL£1ˇSEC8)916 0 R(ÀU`ˆÏY+dËw¶ßIDX36)2013 0 R(ÀU`ˆÏY+dËw¶ßSEC45)2011 0 R(Àz@ó"Mü‚~ÿ©aCIDX20)1675 0 R(Àz@ó"Mü‚~ÿ©aCIDX21)1676 0 R(Àz@ó"Mü‚~ÿ©aCSEC33)1673 0 R(ÕoÂtv-=»ïÚ Õ$Ø/IDX2)1121 0 R(ÕoÂtv-=»ïÚ Õ$Ø/IDX3)1122 0 R(ÕoÂtv-=»ïÚ Õ$Ø/IDX4)1123 0 R(ÕoÂtv-=»ïÚ Õ$Ø/IDX5)1124 0 R(ÕoÂtv-=»ïÚ Õ$Ø/SEC14)1117 0 R(–4›n˚imÈõLqSEC255)5756 0 R(–4›n˚imÈõLqSEC256)5758 0 R(–4›n˚imÈõLqSEC257)5760 0 R(–4›n˚imÈõLqSEC258)5762 0 R(–4›n˚imÈõLqSEC259)5764 0 R(–4›n˚imÈõLqSEC260)5766 0 R(–4›n˚imÈõLqSEC261)5768 0 R(–4›n˚imÈõLqSEC262)5770 0 R(–4›n˚imÈõLqSEC263)5772 0 R(–˛<ä‰⁄D‡\r+û©‡€SEC7)876 0 R(—I∆ÀèßEπMòÒ~n?•IDX101)3685 0 R(—I∆ÀèßEπMòÒ~n?•SEC101)3683 0 R(—âø0Ê‘sﬁ”cQÂ!&IDX73)2740 0 R(—âø0Ê‘sﬁ”cQÂ!&SEC72)2738 0 R(÷ﬂªTD_í\(\nÄ…«ìSEC4)816 0 R]>>endobj4473 0 obj<</Annots 4477 0 R/Parent 4496 0 R/ID 4512 0 R/StructParents 231/Contents 4505 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R/T1_3 737 0 R/T1_4 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4474 0 obj[4457 0 R]endobj4475 0 obj[4473 0 R/XYZ 0 388.487 null]endobj4476 0 obj<</Rect[9.53865 372.843 256.63 387.151]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC140)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC140)/S/URI>>/Border[0 0 0]>>endobj4477 0 obj[4476 0 R]endobj4478 0 obj[4473 0 R/XYZ 0 352.431 null]endobj4479 0 obj[4473 0 R/XYZ 0 352.431 null]endobj4480 0 obj[4473 0 R/XYZ 0 302.257 null]endobj4481 0 obj<</Parent 4496 0 R/ID 4512 0 R/StructParents 232/Contents 4506 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R/T1_3 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4482 0 obj[4457 0 R]endobj4483 0 obj[4481 0 R/XYZ 0 42.5055 null]endobj4484 0 obj<</Annots 4487 0 R/Parent 4496 0 R/ID 4512 0 R/StructParents 233/Contents 4507 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4485 0 obj[4457 0 R]endobj4486 0 obj<</Rect[9.53865 748.466 290.329 764.828]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC141)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC141)/S/URI>>/Border[0 0 0]>>endobj4487 0 obj[4486 0 R 4490 0 R 4492 0 R]endobj4488 0 obj[4484 0 R/XYZ 0 727.848 null]endobj4489 0 obj[4484 0 R/XYZ 0 661.649 null]endobj4490 0 obj<</Rect[9.53865 646.006 63.7029 660.314]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC142)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC142)/S/URI>>/Border[0 0 0]>>endobj4491 0 obj[4484 0 R/XYZ 0 86.0206 null]endobj4492 0 obj<</Rect[9.53865 70.3772 237.32 84.6852]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC143)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC143)/S/URI>>/Border[0 0 0]>>endobj4493 0 obj[4484 0 R/XYZ 0 49.9645 null]endobj4494 0 obj[4484 0 R/XYZ 0 49.9645 null]endobj4495 0 obj<</Annots 4499 0 R/Parent 4539 0 R/ID 4512 0 R/StructParents 234/Contents 4508 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4496 0 obj<</Parent 4697 0 R/Count 5/Type/Pages/Kids[4426 0 R 4458 0 R 4473 0 R 4481 0 R 4484 0 R]>>endobj4497 0 obj[4457 0 R]endobj4498 0 obj<</Rect[62.5812 58.2606 84.0947 72.5686]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4499 0 obj[4498 0 R 4500 0 R 4501 0 R 4502 0 R 4503 0 R]endobj4500 0 obj<</Rect[90.7717 58.2606 136.763 72.5686]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4384 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_115.html)/S/URI>>/Border[0 0 0]>>endobj4501 0 obj<</Rect[143.44 58.2606 166.436 72.5686]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4519 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_117.html)/S/URI>>/Border[0 0 0]>>endobj4502 0 obj<</Rect[173.113 58.2606 191.662 72.5686]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4503 0 obj<</Rect[239.51 58.2606 327.781 72.5686]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4504 0 obj<</Length 4092>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Recursive Evaluation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(Go to the )Tj
ET
0 0 1 RG
0.673 w 10 M 0 j 0 J []0 d 
62.581 752.88 m
84.095 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 62.5812 754.8994 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
90.772 752.88 m
136.763 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 90.7717 754.8994 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
143.44 752.88 m
166.436 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 143.4404 754.8994 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
173.113 752.88 m
191.662 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 173.1132 754.8994 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
239.51 752.88 m
327.781 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 239.5099 754.8994 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
9.539 739.852 m
9.539 741.759 l
602.461 741.759 l
601.507 740.805 l
10.493 740.805 l
10.493 740.805 l
h
f
0.875 0.875 0.875 rg
602.461 741.759 m
602.461 739.852 l
9.539 739.852 l
10.493 740.805 l
601.507 740.805 l
601.507 740.805 l
h
f
1.294 w 
9.539 697.667 m
165.397 697.667 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 701.5499 Tm
(Recursive Evaluation)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 665.0599 Tm
(The evaluator is the core of the interpreter--it's what does all of the \interesting work to evaluate complicated )Tj
0 -1.2 TD
(expressions. The reader translates textual expressions into a convenient\ data structure, and the evaluator )Tj
T*
(actually )Tj
/T1_2 1 Tf
(interprets)Tj
/T1_0 1 Tf
( it, i.e., figures out the "meaning" of the expression. )Tj
0 -2.557 TD
(Evaluation is done recursively. We write code to evaluate simple express\ions, and use recursion to break )Tj
0 -1.2 TD
(down complicated expressions into simple parts. )Tj
0 -2.557 TD
(I'll show a simple evaluator for simple arithmetic expressions, like a f\our-function calculator, which you can )Tj
0 -1.2 TD
(use like this, given the read-eval-print-loop above: )Tj
/T1_3 1 Tf
0 -2.562 TD
(Scheme>\(repl math-eval\)  ; start up read-eval-print loop w/arithmetic \eval)Tj
0 -1.2 TD
(repl>1)Tj
T*
(1)Tj
T*
(repl>\(plus 1 2\))Tj
T*
(3)Tj
T*
(repl>\(times \(plus 1 3\) \(minus 4 2\)\))Tj
T*
(8)Tj
/T1_0 1 Tf
0 -2.557 TD
(As before, the read-eval-print-loop reads what you type at the )Tj
/T1_3 1 Tf
(repl>)Tj
/T1_0 1 Tf
( prompt as an s-expression, and calls )Tj
/T1_3 1 Tf
0 -1.205 TD
(math-eval)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Here's the main dispatch routine of the interpreter, which figures out w\hat kind of expression it's given, and )Tj
0 -1.205 TD
(either evaluates it trivially or calls )Tj
/T1_3 1 Tf
(math-eval-combo)Tj
/T1_0 1 Tf
( to help: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define \(math-eval expr\))Tj
0 -1.2 TD
(  \(cond ;; self-evaluating object?  \(we only handle numbers\))Tj
T*
(        \(\(number? expr\))Tj
T*
(         expr\))Tj
T*
(        ;; compound expression? \(we only handle two-arg combinations\))Tj
T*
(        \(else)Tj
T*
(         \(math-eval-combo expr\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(First )Tj
/T1_3 1 Tf
(math-eval)Tj
/T1_0 1 Tf
( checks the expression to see if it's something simple that it can evalu\ate straightforwardly, )Tj
0 -1.2 TD
(without recursion. )Tj
0 -2.562 TD
(The only simple expressions in our language are numeric literals, so )Tj
/T1_3 1 Tf
(math-eval)Tj
/T1_0 1 Tf
( just uses the predicate )Tj
/T1_3 1 Tf
0 -1.205 TD
(number?)Tj
/T1_0 1 Tf
( to test whether the expression is a number. If so, it just returns that\ value. \(Voila! We've )Tj
0 -1.2 TD
(implemented self-evaluating literals.\) )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_116.html \(1 of 5\)1\1/3/2006 9:09:34 PM)Tj
ET
EMC 

endstreamendobj4505 0 obj<</Length 4675>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Recursive Evaluation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 752.0146 Tm
(If the expression is not simple, it's supposed to be an arithmetic expre\ssion with an operator and two )Tj
0 -1.2 TD
(operands, represented as a three element list. \(This is the subset of S\cheme's combinations that this interpreter )Tj
0 -1.205 TD
(can handle.\) In this case, )Tj
/T1_1 1 Tf
(math-eval)Tj
/T1_0 1 Tf
( calls )Tj
/T1_1 1 Tf
(math-eval-combo)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(math-eval-combo expr\))Tj
0 -1.2 TD
(  \(let \(\(operator-name \(car expr\)\))Tj
T*
(        \(arg1 \(math-eval \(cadr expr\)\)\))Tj
T*
(        \(arg2 \(math-eval \(caddr expr\)\)\)\))Tj
T*
(     \(cond \(\(eq? operator-name 'plus\))Tj
T*
(            \(+ arg1 arg2\)\))Tj
T*
(           \(\(eq? operator-name 'minus\))Tj
T*
(            \(- arg1 arg2\)\))Tj
T*
(           \(\(eq? operator-name 'times\))Tj
T*
(            \(* arg1 arg2\)\))Tj
0 -1.2 TD
(           \(\(eq? operator-name 'quotient\))Tj
0 -1.2 TD
(            \(/ arg1 arg2\)\))Tj
T*
(           \(else)Tj
T*
(            \(error "Invalid operation in expr:" expr\)\)\)\)\))Tj
0 -2.557 TD
(math-eval-combo)Tj
/T1_0 1 Tf
( handles a combination \(math operation\) by calling )Tj
/T1_1 1 Tf
(math-eval)Tj
/T1_0 1 Tf
( recursively to )Tj
0 -1.2 TD
(evaluate the arguments, checking which operator is used in the expressio\n, and calling the appropriate )Tj
T*
(Scheme procedure to perform the actual operation. )Tj
ET
0 0 1 RG
1.122 w 10 M 0 j 0 J []0 d 
9.539 373.42 m
256.63 373.42 l
S
0 0 1 rg
BT
/T1_2 1 Tf
13.3541 0 0 13.3541 9.5387 376.7856 Tm
(Comments on the Arithmetic Evaluator)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(The 4-function arithmetic evaluator is very simple, but it demonstrates \several important principles of Scheme )Tj
0 -1.2 TD
(programming and programming language implementation. )Tj
/T1_3 1 Tf
6.6771 0 0 6.6771 34.0654 290.7876 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_4 1 Tf
13.3541 0 0 13.3541 47.6933 290.7876 Tm
(Recursive style and Nested Lists.)Tj
/T1_0 1 Tf
( Notice that an arithemetic expression is represented as an s-)Tj
T*
(expression that may be a 3-element list. If it's a three-element list, t\hat list is made up of three objects )Tj
T*
(\(pairs\), but we essentially treat it as a single conceptual object--a \node in a parse tree of arithemetic )Tj
T*
(expressions. The overall recursive structure of the evaluator is based o\n this conceptual tree, not on the )Tj
T*
(details of the lists' internal structure. We )Tj
/T1_4 1 Tf
(don't)Tj
/T1_0 1 Tf
( need recursion to traverse the lists, because the lists are )Tj
0 -1.205 TD
(of fixed length and we can extract the relevant fields using )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(cadr)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(caddr)Tj
/T1_0 1 Tf
(. We are )Tj
0 -1.2 TD
(essentially treating the lists as three-element structures. This kind of\ recursion is extremely common in )Tj
T*
(Scheme--nested lists are far more common than "pair trees." As in the ea\rlier examples of recursion )Tj
T*
(over lists and pair trees, the main recursive procedure can accept point\ers to either interior nodes \(lists )Tj
T*
(representing compound expressions\), )Tj
/T1_4 1 Tf
(or)Tj
/T1_0 1 Tf
( leaves of the tree. Either counts as an expression. Dynamic )Tj
T*
(typing lets us implement this straightforwardly, so that our recursion d\oesn't have to "bottom out" until )Tj
T*
(we actually hit a leaf. Things would be more complicated in C or Pascal,\ which don't allow a )Tj
T*
(procedure to accept an argument that may be either a list )Tj
/T1_4 1 Tf
(or)Tj
/T1_0 1 Tf
( a number.\\footnote{In C or Pascal, we )Tj
T*
(could represent all of the nodes in the expression tree as variant recor\ds \(in C, "unions"\) containing an )Tj
T*
(integer )Tj
/T1_4 1 Tf
(or)Tj
/T1_0 1 Tf
( a list. We don't need to do that in Scheme, because in Scheme )Tj
/T1_4 1 Tf
(every)Tj
/T1_0 1 Tf
( variable's type is really )Tj
T*
(a kind of variant record--it can hold a \(pointer to a\) number )Tj
/T1_4 1 Tf
(or)Tj
/T1_0 1 Tf
( a \(pointer to a\) pair )Tj
/T1_4 1 Tf
(or)Tj
/T1_0 1 Tf
( a \(pointer to\) )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_116.html \(2 of 5\)1\1/3/2006 9:09:34 PM)Tj
ET
EMC 

endstreamendobj4506 0 obj<</Length 6427>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Recursive Evaluation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 47.6933 754.8994 Tm
(anything else. C is particularly problematic for this style of programmi\ng, because even if we bite the )Tj
0 -1.2 TD
(bullet and always define a variant record type, the variant records are \)Tj
/T1_1 1 Tf
(untagged)Tj
/T1_0 1 Tf
(. C doesn't )Tj
T*
(automatically keep track of which variant a particular record represents\--e.g., a leaf or nonleaf--and )Tj
T*
(you must code this yourself by adding a tag field, and setting and check\ing it appropriately. In effect, )Tj
T*
(you must implement dynamic typing yourself, every time.} It )Tj
/T1_1 1 Tf
(is)Tj
/T1_0 1 Tf
( possible to do Scheme-style recursion )Tj
T*
(straightforwardly in some statically-typed languages, notably ML and Has\kell. These )Tj
/T1_1 1 Tf
(polymorphic)Tj
/T1_0 1 Tf
( )Tj
T*
(languages allow you to declare )Tj
/T1_1 1 Tf
(disjoint union)Tj
/T1_0 1 Tf
( types. A disjoint union is an "any of these" type--you )Tj
T*
(can say that an argument will be of some type )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( some other type. In Scheme, the language only )Tj
T*
(supports one very general kind of disjoint union type: pointer to anythi\ng. However, we usually think )Tj
T*
(of data structure definitions as disjoint unions. As usual, we can chara\cterize what an )Tj
/T1_1 1 Tf
(arithmetic )Tj
T*
(expression)Tj
/T1_0 1 Tf
( recursively. It is either a numeric literal \(the base case\) )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( a three-element "node" whose )Tj
T*
(first "field" is an operator symbol and whose second and third "fields" \are )Tj
/T1_1 1 Tf
(arithmetic expressions)Tj
/T1_0 1 Tf
(. Also )Tj
T*
(as usual, this recursive characterization is what dictates the recursive\ structure of the solution---)Tj
/T1_1 1 Tf
(not)Tj
/T1_0 1 Tf
( the )Tj
0 -1.2 TD
(details of how nodes are implemented. \(The overall structure of recursi\on over trees would be the )Tj
0 -1.2 TD
(same if the interior nodes were arrays or records, rather than linear li\sts.\) The conceptual "disjoint )Tj
0 -1.205 TD
(union" of leaves and interior nodes is what tells us we need a two-branc\h conditional in )Tj
/T1_2 1 Tf
(math-eval)Tj
/T1_0 1 Tf
(. )Tj
0 -1.2 TD
(It is important to realize that in Scheme, we usually discriminate betwe\en cases at )Tj
/T1_1 1 Tf
(edges)Tj
/T1_0 1 Tf
( in the graph, i.)Tj
0 -1.205 TD
(e., the pointers, rather than focusing on the )Tj
/T1_1 1 Tf
(nodes)Tj
/T1_0 1 Tf
(. Conceptually, the type of the )Tj
/T1_2 1 Tf
(expr)Tj
/T1_0 1 Tf
( argument is )Tj
/T1_1 1 Tf
(an )Tj
0 -1.2 TD
(edge in the expression graph)Tj
/T1_0 1 Tf
(, which may point to either a leaf node or an interior node. We apply )Tj
/T1_2 1 Tf
0 -1.205 TD
(math-eval)Tj
/T1_0 1 Tf
( to each edge, uniformly, and it discriminates between the cases. We don\'t examine the )Tj
0 -1.2 TD
(object it points to and decide )Tj
/T1_1 1 Tf
(whether)Tj
/T1_0 1 Tf
( to make the recursive call--we always do the recursive call, and )Tj
T*
(sort out the cases in the callee. )Tj
/T1_3 1 Tf
6.6771 0 0 6.6771 34.0654 402.1579 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_1 1 Tf
13.3541 0 0 13.3541 47.6933 402.1579 Tm
(Primitive expressions and operations.)Tj
/T1_0 1 Tf
( In looking at any interpreter, it's important to notice which )Tj
T*
(operations are )Tj
/T1_1 1 Tf
(primitive)Tj
/T1_0 1 Tf
(, and which are )Tj
/T1_1 1 Tf
(compound)Tj
/T1_0 1 Tf
(. Primitive operations are "built into" the interpreter, )Tj
0 -1.205 TD
(but the interpreter allows you to construct more complicated operations \in terms of those. In )Tj
/T1_2 1 Tf
(math-)Tj
0 -1.205 TD
(eval)Tj
/T1_0 1 Tf
(, the primitive operations are addition, subtraction, multiplication, an\d division. We "snarf" these )Tj
0 -1.2 TD
(operations from the underlying Scheme system, in which we're implementin\g our little four-function )Tj
T*
(calculator. We don't implement addition, but we do dispatch to this buil\t-in addition operation. On the )Tj
T*
(other hand, compound expressions are not built-in. The interpreter doesn\'t have a special case for each )Tj
T*
(particular kind of expression--e.g., there's no code to add 4 to 5. We a\llow users to combine )Tj
T*
(expressions by arbitrarily nesting them, and support an effectively infi\nite number of possible )Tj
T*
(expressions. Later, I'll show more advanced interpreters that support mo\re kinds of primitive )Tj
T*
(expressions--not just numeric literals and more kinds of primitive opera\tions--not just four arithmetic )Tj
T*
(functions. I'll also show how a more advanced interpreter can support mo\re different ways of )Tj
T*
(combining the primitive expressions. )Tj
/T1_3 1 Tf
6.6771 0 0 6.6771 34.0654 193.6408 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_1 1 Tf
13.3541 0 0 13.3541 47.6933 193.6408 Tm
(Flexibility)Tj
/T1_0 1 Tf
( You may be wondering why we'd bother to write )Tj
/T1_2 1 Tf
(math-eval)Tj
/T1_0 1 Tf
(, since it essentially )Tj
T*
(implements a small subset of Scheme, and we've already got Scheme. One r\eason for implementing )Tj
T*
(your own interpreter is )Tj
/T1_1 1 Tf
(flexibility)Tj
/T1_0 1 Tf
(. You can change the features of the language by making minor )Tj
0 -1.205 TD
(changes to the interpreter. For example, it is trivial to modify )Tj
/T1_2 1 Tf
(math-eval)Tj
/T1_0 1 Tf
( to evaluate infix )Tj
0 -1.205 TD
(expressions rather than postfix expressions. \(That is, with the operato\r in the middle, e.g., )Tj
/T1_2 1 Tf
(\(10 plus )Tj
T*
(\(3 times 2\)\))Tj
/T1_0 1 Tf
(. All we have to do is change the two lines where the operator and the f\irst operand )Tj
0 -1.205 TD
(are extracted from a compound expression. We just swap the )Tj
/T1_2 1 Tf
(car)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(cadr)Tj
/T1_0 1 Tf
(, so that we treat the )Tj
0 -1.2 TD
(second element of the list as the operand and the first element as the o\perator. )Tj
/T1_3 1 Tf
6.6771 0 0 6.6771 34.0654 65.1842 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_116.html \(3 of 5\)1\1/3/2006 9:09:34 PM)Tj
ET
EMC 

endstreamendobj4507 0 obj<</Length 5093>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Recursive Evaluation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 748.985 m
290.329 748.985 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 752.8678 Tm
(A Note on Snarfing and Bootstrapping)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 716.3779 Tm
(Two concepts worth knowing about language implementation are )Tj
/T1_2 1 Tf
(snarfing)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(bootstrapping)Tj
/T1_0 1 Tf
(. Snarfing is )Tj
0 -1.2 TD
("stealing" features from an underlying language when implementing a new \language. Bootstrapping is the )Tj
T*
(process of building a language implementation \(or other system\) by usi\ng the system to extend itself. )Tj
ET
1.122 w 
9.539 646.583 m
63.703 646.583 l
S
0 0 1 rg
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 649.9482 Tm
(Snarfing)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(Our example interpreter implements Scheme in Scheme, but we could have w\ritten it in C or assembly )Tj
0 -1.2 TD
(language. If we had done that, we'd have to have written our own read-ev\al-print loop, and a bunch of not-)Tj
T*
(very interesting code to read from the keyboard input and create data st\ructures, display data structures on the )Tj
T*
(screen, and so on. Instead, we "cheated" by snarfing those features from\ the underlying Scheme system--we )Tj
T*
(simply took features from the underlying Scheme system and used them in \the language we interpret. Our )Tj
T*
(tiny language requires you to type in Scheme lists, because it uses the \Scheme read-eval-print to get its input )Tj
T*
(and call the interpreter. If we wanted to, we could provide our own read\ing routine that reads things in a )Tj
0 -1.2 TD
(different syntax. For example, we might read input that uses square brac\kets instead of parentheses for )Tj
0 -1.2 TD
(nesting, or which uses infix operators instead of prefix operators. )Tj
0 -2.557 TD
(There are some features we )Tj
/T1_2 1 Tf
(didn't)Tj
/T1_0 1 Tf
( just snarf, though--we wrote our own evaluation procedure which control\s )Tj
0 -1.2 TD
(recursive evaluation. For example, we )Tj
/T1_2 1 Tf
(use)Tj
/T1_0 1 Tf
( basic Scheme arithemetic procedures to implement individual )Tj
T*
(arithmetic operations, but we don't simply )Tj
/T1_2 1 Tf
(snarf)Tj
/T1_0 1 Tf
( them: the interpreter recognizes arithmetic operations in its )Tj
T*
(input language, and maps them onto procedure calls in the underlying lan\guage. We can change our language )Tj
0 -1.205 TD
(by changing those mappings: for example, we could use the symbols )Tj
/T1_3 1 Tf
(+)Tj
/T1_0 1 Tf
(, )Tj
/T1_3 1 Tf
(-)Tj
/T1_0 1 Tf
(, )Tj
/T1_3 1 Tf
(*)Tj
/T1_0 1 Tf
(, and )Tj
/T1_3 1 Tf
(/)Tj
/T1_0 1 Tf
( to represent those )Tj
0 -1.2 TD
(operations, as Scheme does, or whatever we choose for the language we're\ interpreting. Or we could use the )Tj
0 -1.2 TD
(same names, but implement the operations differently. \(For example, we \might have our own arithmetic )Tj
T*
(routines that allow a representation of infinity, and do something reaso\nable for division by zero.\) )Tj
0 -2.562 TD
(We also use recursion to implement recursion, when we recursively call )Tj
/T1_3 1 Tf
(eval)Tj
/T1_0 1 Tf
(\). But since we coded that )Tj
0 -1.2 TD
(recursion explicitly, we can easily change it, and do something differen\t. Our arithmetic expressions don't )Tj
T*
(have to have the same recursive structure as Scheme expressions. )Tj
0 -2.557 TD
(We could also implement recursion ourselves. As written, our tiny interp\reter uses Scheme's activation )Tj
0 -1.205 TD
("stack" to implement it's own stack--each recursive call to )Tj
/T1_3 1 Tf
(eval)Tj
/T1_0 1 Tf
( implements a recursive call in our input )Tj
0 -1.2 TD
(language. We didn't have to do this. We could have implemented our own s\tack as a data structure, and )Tj
T*
(written our interpreter as a simple non-recursive loop. That would be a \little tedious, however, so we don't )Tj
T*
(bother. )Tj
0 -2.562 TD
(What counts as "snarfing"? The term is a good one, but not clearly defin\ed. If we call Scheme's )Tj
/T1_3 1 Tf
(read)Tj
/T1_0 1 Tf
( rather )Tj
0 -1.2 TD
(than using our own reader, we clearly just snarf the Scheme reader, but \we've done something a little different )Tj
T*
(with recursion. We've done something very different with the interpretat\ion of operator names. )Tj
ET
9.539 70.954 m
237.32 70.954 l
S
0 0 1 rg
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 74.3195 Tm
(Bootstrapping and Cross-compiling)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(Implementing a programming language well requires attention to the fine \art of bootstrapping--how much of )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_116.html \(4 of 5\)1\1/3/2006 9:09:34 PM)Tj
ET
EMC 

endstreamendobj4508 0 obj<</Length 5219>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Recursive Evaluation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 753.6694 Tm
(the system do you have to build "by hand" in some lower-level system, an\d how much can you build )Tj
/T1_1 1 Tf
(within )Tj
0 -1.2 TD
(the system itself)Tj
/T1_0 1 Tf
(, once you've got a little bit of it working. )Tj
0 -2.557 TD
(Most Scheme systems are written mostly in Scheme, and in fact it's possi\ble \(but not particularly fun\) to )Tj
0 -1.2 TD
(implement a whole Scheme system in Scheme, even on a machine that doesn'\t have a Scheme system yet. )Tj
0 -2.557 TD
(How are these things possible? )Tj
0 -2.557 TD
(First, let's take the simple case, where you're willing to write a littl\e code in another language. You can write )Tj
0 -1.2 TD
(an interpreter for a small subset of Scheme in, say, C or assembler. The\n you can extend that little language )Tj
T*
(by writing the rest of Scheme in Scheme--you just need a simple little s\ubset to get started, and then things )Tj
T*
(you need can be defined in terms of things you already have. Writing an \interpreter for a subset of Scheme in )Tj
0 -1.205 TD
(C is not hard--just a little tedious. Then you can use )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
( to create most of the rest of the procedures in )Tj
0 -1.2 TD
(terms of simpler procedures. Interestingly, you can also implement most \of the defining constructs and )Tj
T*
(control constructs of Scheme in Scheme, by writing )Tj
/T1_1 1 Tf
(macros)Tj
/T1_0 1 Tf
(, which we'll discuss later. )Tj
0 -2.557 TD
(You can start out this way even if you want your Scheme system to use a \compiler. You can write the )Tj
0 -1.2 TD
(compiler in Scheme, and use the interpreter to run the compiler and gene\rate machine code. Now you have a )Tj
T*
(compiler for Scheme code, and can compile procedures so that they run fa\ster than if you interpreted them. )Tj
T*
(You can take most of the Scheme code that you'd been interpreting, and u\se the compiler to create faster )Tj
T*
(versions of them. You then replace the old \(interpreted\) versions with\ the new \(compiled\) versions, and the )Tj
T*
(system is suddenly faster. )Tj
0 -2.557 TD
(Once the compiler works, you can )Tj
/T1_1 1 Tf
(compile the compiler)Tj
/T1_0 1 Tf
(, so that )Tj
/T1_1 1 Tf
(it)Tj
/T1_0 1 Tf
( runs faster. After all, a compiler is just a )Tj
0 -1.2 TD
(program that takes source code as input and generates executable code--i\t's just a program that happens to )Tj
T*
(operate on programs. Now you're set--you have a compiler that can compil\e Scheme code that you need to )Tj
T*
(run, including itself, and you don't need the interpreter anymore. )Tj
0 -2.557 TD
(To get Scheme to work on a new system, without even needing an interpret\er, you can )Tj
/T1_1 1 Tf
(cross-compile)Tj
/T1_0 1 Tf
(. If you )Tj
0 -1.2 TD
(have Scheme working on one kind of machine, but want to run it on anothe\r, you can write your Scheme )Tj
T*
(compiler in Scheme, and have it run on one machine but generate code for\ the new machine. Then you can )Tj
T*
(take the executable code it generates, copy it onto the new machine, and\ run it. )Tj
0 -2.557 TD
(Most Scheme systems are built using tricks like this. For example, the R\Scheme system never had an )Tj
0 -1.2 TD
(interpreter at all. Its compiler was initially run in a different Scheme\ system \(Scheme-48\) and used to compile )Tj
T*
(most of RScheme itself. This code was then used to run RScheme with no f\urther assistance from another )Tj
T*
(implementation. )Tj
0 -2.557 TD
(The first Scheme system was built by writing a Scheme interpreter in Lis\p, )Tj
/T1_1 1 Tf
([ or was it a compiler first? ... )Tj
0 -1.2 TD
(blah blah ... ])Tj
/T1_0 1 Tf
( )Tj
ET
0.5 0.5 0.5 rg
9.539 80.581 m
9.539 82.489 l
602.461 82.489 l
601.507 81.535 l
10.493 81.535 l
10.493 81.535 l
h
f
0.875 0.875 0.875 rg
602.461 82.489 m
602.461 80.581 l
9.539 80.581 l
10.493 81.535 l
601.507 81.535 l
601.507 81.535 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 62.4343 Tm
(Go to the )Tj
ET
0 0 1 RG
0.673 w 10 M 0 j 0 J []0 d 
62.581 60.415 m
84.095 60.415 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 62.5812 62.4343 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
90.772 60.415 m
136.763 60.415 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 90.7717 62.4343 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
143.44 60.415 m
166.436 60.415 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 143.4404 62.4343 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
173.113 60.415 m
191.662 60.415 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 173.1132 62.4343 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
239.51 60.415 m
327.781 60.415 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 239.5099 62.4343 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_116.html \(5 of 5\)1\1/3/2006 9:09:34 PM)Tj
ET
EMC 

endstreamendobj4509 0 obj(An Introduction to Scheme and its Implementation - Recursive Evaluation)endobj4510 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_116.html)/S 700 0 R>>endobj4511 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_116.html)endobj4512 0 obj(®≈u£ˆ˘Ln€u‹Ùœ)endobj4513 0 obj<</TS(D:20061104050934)/ID 4512 0 R/CT(text/html)/O[4458 0 R 4473 0 R 4481 0 R 4484 0 R 4495 0 R]/S/SPS/T 4509 0 R/TID 4515 0 R/SI 4514 0 R>>endobj4514 0 obj<</TS(D:20061104050934)/AU 4511 0 R>>endobj4515 0 obj(e°±ó˚Ñh*Ò_gV^Éù)endobj4516 0 obj<</Parent 710 0 R/Next 4561 0 R/Dest[4458 0 R/XYZ 0 792 null]/Prev 4455 0 R/SE 4457 0 R/Title(An Introduction to Scheme and its Implementation - Recursive Evaluation)>>endobj4517 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4518 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 4529 0 R/Type/MCR>><</MCID 0/Pg 4531 0 R/Type/MCR>><</MCID 0/Pg 4536 0 R/Type/MCR>><</MCID 0/Pg 4538 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 4519 0 R>>endobj4519 0 obj<</Annots 4522 0 R/Parent 4539 0 R/ID 4557 0 R/StructParents 235/Contents 4549 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R/T1_4 2791 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4520 0 obj[4518 0 R]endobj4521 0 obj<</Rect[62.5812 750.726 84.0947 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4522 0 obj[4521 0 R 4523 0 R 4524 0 R 4525 0 R 4526 0 R 4528 0 R]endobj4523 0 obj<</Rect[90.7717 750.726 136.763 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4458 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html)/S/URI>>/Border[0 0 0]>>endobj4524 0 obj<</Rect[143.44 750.726 166.436 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4564 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_118.html)/S/URI>>/Border[0 0 0]>>endobj4525 0 obj<</Rect[173.113 750.726 191.662 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4526 0 obj<</Rect[239.51 750.726 327.781 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4527 0 obj[4519 0 R/XYZ 0 733.175 null]endobj4528 0 obj<</Rect[9.53865 697.148 247.571 713.51]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC144)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC144)/S/URI>>/Border[0 0 0]>>endobj4529 0 obj<</Parent 4539 0 R/ID 4557 0 R/StructParents 236/Contents 4550 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4530 0 obj[4518 0 R]endobj4531 0 obj<</Annots 4535 0 R/Parent 4539 0 R/ID 4557 0 R/StructParents 237/Contents 4551 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 2791 0 R/T1_4 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4532 0 obj[4518 0 R]endobj4533 0 obj[4531 0 R/XYZ 0 402.814 null]endobj4534 0 obj<</Rect[9.53865 387.17 268.528 401.478]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC145)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC145)/S/URI>>/Border[0 0 0]>>endobj4535 0 obj[4534 0 R]endobj4536 0 obj<</Parent 4539 0 R/ID 4557 0 R/StructParents 238/Contents 4552 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4537 0 obj[4518 0 R]endobj4538 0 obj<</Annots 4543 0 R/Parent 4653 0 R/ID 4557 0 R/StructParents 239/Contents 4553 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4539 0 obj<</Parent 4697 0 R/Count 5/Type/Pages/Kids[4495 0 R 4519 0 R 4529 0 R 4531 0 R 4536 0 R]>>endobj4540 0 obj[4518 0 R]endobj4541 0 obj[4538 0 R/XYZ 0 300.497 null]endobj4542 0 obj<</Rect[9.53865 284.854 221.749 299.162]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC146)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC146)/S/URI>>/Border[0 0 0]>>endobj4543 0 obj[4542 0 R 4544 0 R 4545 0 R 4546 0 R 4547 0 R 4548 0 R]endobj4544 0 obj<</Rect[62.5812 199.387 84.0947 213.695]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4545 0 obj<</Rect[90.7717 199.387 136.763 213.695]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4458 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html)/S/URI>>/Border[0 0 0]>>endobj4546 0 obj<</Rect[143.44 199.387 166.436 213.695]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4564 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_118.html)/S/URI>>/Border[0 0 0]>>endobj4547 0 obj<</Rect[173.113 199.387 191.662 213.695]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4548 0 obj<</Rect[239.51 199.387 327.781 213.695]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4549 0 obj<</Length 4238>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Improving the Simple \Interpreter)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(Go to the )Tj
ET
0 0 1 RG
0.673 w 10 M 0 j 0 J []0 d 
62.581 752.88 m
84.095 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 62.5812 754.8994 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
90.772 752.88 m
136.763 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 90.7717 754.8994 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
143.44 752.88 m
166.436 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 143.4404 754.8994 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
173.113 752.88 m
191.662 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 173.1132 754.8994 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
239.51 752.88 m
327.781 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 239.5099 754.8994 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
9.539 739.852 m
9.539 741.759 l
602.461 741.759 l
601.507 740.805 l
10.493 740.805 l
10.493 740.805 l
h
f
0.875 0.875 0.875 rg
602.461 741.759 m
602.461 739.852 l
9.539 739.852 l
10.493 740.805 l
601.507 740.805 l
601.507 740.805 l
h
f
1.294 w 
9.539 697.667 m
247.571 697.667 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 701.5499 Tm
(Improving the Simple Interpreter)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 665.0599 Tm
(We can easily improve the little interpreter in lots of ways. )Tj
/T1_2 1 Tf
([ We should put the code in a file minieval.scm so )Tj
0 -1.2 TD
(people can experiment with it. Need to debug it first, of course. It's c\hanged since the one I've used in class. ])Tj
/T1_0 1 Tf
( )Tj
0 -2.557 TD
(First, we can add a toplevel binding environment, so we can have some va\riables. \(Local variables will be )Tj
0 -1.205 TD
(discussed in the next chapter.\) To make them useful, we need some speci\al forms, like )Tj
/T1_3 1 Tf
(define)Tj
/T1_0 1 Tf
( and \(while )Tj
0 -1.205 TD
(we're at it\) )Tj
/T1_3 1 Tf
(set!)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(We can also add a few more data types; for now, we'll just add booleans.\ )Tj
0 -2.557 TD
(Here's what our new main dispatch routine looks like: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define \(eval expr\))Tj
0 -1.2 TD
(   \(cond ;; variable reference)Tj
T*
(         \(\(symbol? expr\))Tj
T*
(          \(eval-variable expr\)\))Tj
T*
(         ;; combination OR special form \(any parenthesized expr\))Tj
T*
(         \(\(pair? expr\))Tj
T*
(          \(eval-list expr\)\))Tj
T*
(         ;; any kind of self-evaluating object)Tj
T*
(         \(\(self-evaluating? expr\))Tj
T*
(          expr\))Tj
T*
(         \(else)Tj
T*
(          \(error "Illegal expression: " expr\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Since we're adding variables to our interpreter, symbols can be expressi\ons by themselves now--references to )Tj
0 -1.205 TD
(top-level variable bindings. We've added a branch to our )Tj
/T1_3 1 Tf
(cond)Tj
/T1_0 1 Tf
( to handle that, and a helper procedure )Tj
/T1_3 1 Tf
(eval-)Tj
0 -1.205 TD
(variable)Tj
/T1_0 1 Tf
(. \(We'll discuss how the variable lookup is done shortly.\) )Tj
0 -2.557 TD
(We need to recognize two kinds of self-evaluating types now \(and may ad\d more later\), so we come up with a )Tj
0 -1.205 TD
(procedure )Tj
/T1_3 1 Tf
(self-evaluating?)Tj
/T1_0 1 Tf
( that covers both cases and can easily be extended. )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define \(self-evaluating? expr\))Tj
0 -1.2 TD
(   \(or \(number? expr\) \(boolean? expr\)\)\))Tj
/T1_2 1 Tf
0 -2.552 TD
([hmm... haven't extended the reader to handle booleans yet... need to us\e the standard Scheme reader, or )Tj
0 -1.205 TD
(extend )Tj
/T1_4 1 Tf
(micro-read)Tj
/T1_2 1 Tf
(])Tj
/T1_0 1 Tf
( )Tj
0 -2.557 TD
(Be sure you understand the significance of this. We chose to read numeri\c literals as Scheme numbers, and )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_117.html \(1 of 5\)1\1/3/2006 9:09:43 PM)Tj
ET
EMC 

endstreamendobj4550 0 obj<</Length 3761>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Improving the Simple \Interpreter)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(boolean literals as Scheme objects. This representation makes them easy \to evaluate--we just return the same )Tj
0 -1.2 TD
(object that the reader created. )Tj
0 -2.557 TD
(We also need to recognize two basic types of compound expressions: combi\nations and special forms. These )Tj
0 -1.205 TD
(\(and only these\) are represented as lists, so we can use )Tj
/T1_1 1 Tf
(pair?)Tj
/T1_0 1 Tf
( as a test, and dispatch to )Tj
/T1_1 1 Tf
(eval-list)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(What we're really doing here is checking to see whether we're evaluating\ a parenthesized expression of either )Tj
0 -1.2 TD
(kind. Since parenthesized expressions are read in as lists, we can just \check to see whether the s-expression is )Tj
T*
(a list. That is, we chose to parse \(read\) parenthesized expressions as\ lists, and by checking to see if )Tj
T*
(something's a list, we're implicitly checking whether it was a parenthes\ized expression in the original code. )Tj
T*
(\(We could have chosen to represent parse trees as some other kind of tr\ee, rather than s-expressions, but s-)Tj
T*
(expressions are handy because Scheme provides procedures for manipulatin\g and displaying them.\) )Tj
0 -2.562 TD
(Here's the code for )Tj
/T1_1 1 Tf
(eval-list)Tj
/T1_0 1 Tf
(, which just checks to see whether a compound expression is a special fo\rm. )Tj
0 -1.205 TD
(It dispatches to )Tj
/T1_1 1 Tf
(eval-special-form)Tj
/T1_0 1 Tf
( if it is, or to )Tj
/T1_1 1 Tf
(eval-combo)Tj
/T1_0 1 Tf
( if it's not. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(eval-list expr\))Tj
0 -1.2 TD
(   \(if \(and \(symbol? \(car expr\)\))Tj
T*
(            \(special-form-name? \(car expr\)\)\))Tj
0 -1.2 TD
(       \(eval-special-form expr\))Tj
0 -1.2 TD
(       \(eval-combo\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(We could use a )Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
( to check whether symbols are special form names, but using )Tj
/T1_1 1 Tf
(member)Tj
/T1_0 1 Tf
( on a literal list is )Tj
0 -1.2 TD
(clearer and easily extensible--you can just add names to the list. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(special-form-name? expr\))Tj
0 -1.2 TD
(   \(member '\(if define set!\)\)\))Tj
0 -2.557 TD
(eval-special-form)Tj
/T1_0 1 Tf
( just dispatches again, calling a routine that handles whatever kind of \special form )Tj
0 -1.2 TD
(it's faced with. \(Later, we'll see prettier ways of doing this kind of \dispatching, using first-class procedures.\) )Tj
T*
(From here, we've done most of the analysis, and are dispatching to littl\e procedures that actually do the work. )Tj
0 -2.557 TD
([ need to come back to this after discussing backquote--this would make \a good example ] )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(eval-special-form expr\))Tj
0 -1.2 TD
(  \(let \(\(name \(car expr\)\)\))Tj
T*
(     \(cond \(\(eq? name 'define\))Tj
T*
(            \(eval-define expr\)\))Tj
T*
(           \(\(eq? name 'set!\))Tj
T*
(            \(eval-set! expr\)\))Tj
T*
(           \(\(eq? name 'if\))Tj
T*
(            \(eval-if expr\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Notice that each special form has its own special routine to interpret i\t. This is what makes special forms )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_117.html \(2 of 5\)1\1/3/2006 9:09:43 PM)Tj
ET
EMC 

endstreamendobj4551 0 obj<</Length 3959>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Improving the Simple \Interpreter)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8351 Tm
("special," in contrast to combinations, which can be handled by one proc\edure, )Tj
/T1_1 1 Tf
(eval-combo)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Once the evaluator has recognized an )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( expression, it calls )Tj
/T1_1 1 Tf
(eval-if)Tj
/T1_0 1 Tf
( to do the work. )Tj
/T1_1 1 Tf
(eval-if)Tj
/T1_0 1 Tf
( calls )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(recursively, to evaluate the condition expression, and depending on the \result, calls it again to evaluate the )Tj
0 -1.205 TD
("then" branch or the "else" branch. \(One slight complication is that we\ may have a one-branch else, so )Tj
/T1_1 1 Tf
(eval-)Tj
0 -1.205 TD
(if)Tj
/T1_0 1 Tf
( has to check to see if the else branch is there. If not, it just return\s )Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
(.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(eval-if expr\))Tj
0 -1.2 TD
(   \(let \(\(expr-length \(length expr\)\)\))Tj
T*
(      \(if \(eval \(cadr expr\)\))Tj
0 -1.2 TD
(          \(eval \(caddr expr\)\))Tj
0 -1.2 TD
(          \(if \(= expr-length 4\)\))Tj
T*
(              \(eval \(cadddr expr\)\))Tj
T*
(              #f\)\)\))Tj
/T1_2 1 Tf
0 -2.557 TD
([ note that what we're doing includes parsing... one-branch vs. two bran\ch )Tj
/T1_3 1 Tf
(if)Tj
/T1_2 1 Tf
(. Should actually be doing more )Tj
0 -1.205 TD
(parsing, checking syntax and signaling errors gracefully. E.g., should c\heck to see that )Tj
/T1_3 1 Tf
(expr-length)Tj
/T1_2 1 Tf
( is a )Tj
0 -1.2 TD
(legal length. ])Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
0 -2.562 TD
([ Also note that we're snarfing booleans, and our )Tj
/T1_3 1 Tf
(if)Tj
/T1_2 1 Tf
( behaves like a Scheme )Tj
/T1_3 1 Tf
(if)Tj
/T1_2 1 Tf
(... but we don't have to. We )Tj
0 -1.205 TD
(could put a different interpretation on )Tj
/T1_3 1 Tf
(if)Tj
/T1_2 1 Tf
(, e.g., only interpreting )Tj
/T1_3 1 Tf
(#t)Tj
/T1_2 1 Tf
( as a true value. ] )Tj
ET
0 0 1 RG
1.122 w 10 M 0 j 0 J []0 d 
9.539 387.747 m
268.528 387.747 l
S
0 0 1 rg
BT
/T1_4 1 Tf
13.3541 0 0 13.3541 9.5387 391.1125 Tm
(Implementing top-level variable bindings)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(For a toplevel binding environment, we'll use an association list. \(A m\ore serious interpreter would probably )Tj
0 -1.2 TD
(use a hash table, but a association list will suffice to demonstrate the\ principles.\) )Tj
0 -2.557 TD
(We start by declaring a variable to hold our interpreter's environment, \and initializing it with an empty list. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define t-l-envt '\(\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(To add bindings, we can define a routine to add an association to the as\sociation list. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(toplevel-bind! name value\))Tj
0 -1.2 TD
(   \(let \(\(bdg \(assoc name t-l-envt\)\)\) ;; search for association o\f name)Tj
T*
(      ;; if binding already exists, put new value \(in cadr\) of associa\tion)Tj
T*
(      ;; else create a new association with given value)Tj
T*
(      \(if bdg)Tj
T*
(          \(set-car! \(cdr bdg\) value\))Tj
T*
(          \(set! t-l-envt)Tj
T*
(                \(cons \(list name value\) t-l-envt\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Recall that the elements of an association list are "associations," whic\h are just lists whose first value is used )Tj
0 -1.2 TD
(as a key. We'll use the second element of the list as the actual storage\ for a variable. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_117.html \(3 of 5\)1\1/3/2006 9:09:43 PM)Tj
ET
EMC 

endstreamendobj4552 0 obj<</Length 3356>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Improving the Simple \Interpreter)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 737.3083 Tm
(For example, an environment containing just bindings of )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
( with values )Tj
/T1_1 1 Tf
(2)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(3)Tj
/T1_0 1 Tf
( \(respectively\) )Tj
0 -1.205 TD
(would look like )Tj
/T1_1 1 Tf
(\(\(foo 2\))Tj
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
(\(bar 3\)\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(At the level of the little Scheme subset we're implementing, we'd draw t\his environment this way: )Tj
/T1_1 1 Tf
0 -2.562 TD
(         +-------+        [envt])Tj
0 -1.2 TD
(t-l-envt |   *---+------>+-------+)Tj
0 -1.2 TD
(         +-------+   foo |   *---+---> 2)Tj
T*
(                         +-------+)Tj
T*
(                     bar |   *---+---> 3)Tj
T*
(                         +-------+)Tj
/T1_0 1 Tf
0 -2.552 TD
(This emphasizes the fact that these are variable bindings with values, i\.e., named storage locations. Notice )Tj
0 -1.205 TD
(that )Tj
/T1_1 1 Tf
(t-l-envt)Tj
/T1_0 1 Tf
( is a variable in the language we're using to implement our interpreter,\ but )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
( are )Tj
0 -1.2 TD
(variables in the language the interpreter implements. )Tj
0 -2.557 TD
(If we want to show how it's implemented at the level of the Scheme we're\ writing our interpreter in, we can )Tj
0 -1.2 TD
(draw it more like this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(         +-------+)Tj
0 -1.2 TD
(t-l-envt |   *---+---->+---+---+                   +---+---+)Tj
T*
(         +-------+     | * | *-+------------------>| * | * +)Tj
T*
(                       +-|-+---+                   +-+-+---+)Tj
T*
(                         |                           |)Tj
T*
(                       +---+---+   +---+---+       +---+---+   +---+---+\)Tj
T*
(                       | * | +-+-->| * | * |       | * | *-+-->| * | * |\)Tj
0 -1.2 TD
(                       +-|-+---+   +-|-+---+       +-|-+---+   +-+-+---+\)Tj
0 -1.2 TD
(                         |           |               |           |)Tj
T*
(                        foo          2              bar          3)Tj
/T1_0 1 Tf
0 -2.552 TD
(Now we can add the four procedures we had in the math evaluator: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(toplevel-bind! '+ +\))Tj
0 -1.2 TD
(\(toplevel-bind! '- -\))Tj
T*
(\(toplevel-bind! '* *\))Tj
T*
(\(toplevel-bind! '/ /\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Again, we're just snarfing procedures straight from the Scheme we're imp\lementing our interpreter in. We put )Tj
0 -1.2 TD
(them in our binding environment under the same names. )Tj
0 -2.562 TD
(Now we need accessor routines to get and set values of bindings for vari\able lookups and )Tj
/T1_1 1 Tf
(set!)Tj
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
T*
(\(define \(toplevel-get name\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_117.html \(4 of 5\)1\1/3/2006 9:09:43 PM)Tj
ET
EMC 

endstreamendobj4553 0 obj<</Length 3655>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Improving the Simple \Interpreter)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 754.8351 Tm
(   \(cadr \(assoc name t-l-envt\)\)\))Tj
0 -2.557 TD
(\(define \(toplevel-set! name value\))Tj
0 -1.2 TD
(   \(set-car! \(cdr \(assoc name t-l-envt\)\))Tj
T*
(             value\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
([ of course, these really should have some error checking--give examples\ that signal unbound variable )Tj
0 -1.2 TD
(errors? ] )Tj
0 -2.562 TD
(Given this machinery, we can now write )Tj
/T1_1 1 Tf
(eval-variable)Tj
/T1_0 1 Tf
(. \(Recall that when )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
( encounters an )Tj
0 -1.205 TD
(expression that's just a symbol, it interprets it as a reference to a va\riable by calling )Tj
/T1_1 1 Tf
(eval-variable)Tj
/T1_0 1 Tf
(.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(eval-variable symbol\))Tj
0 -1.2 TD
(   \(toplevel-get symbol\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(We can also define )Tj
/T1_1 1 Tf
(eval-define)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(eval-set!)Tj
/T1_0 1 Tf
(. All they do is extract a variable name from the )Tj
/T1_1 1 Tf
0 -1.205 TD
(define)Tj
/T1_0 1 Tf
( or )Tj
/T1_1 1 Tf
(set!)Tj
/T1_0 1 Tf
( expression, and create binding for that name or update its value. \(Rec\all that )Tj
/T1_1 1 Tf
(eval-)Tj
0 -1.205 TD
(define!)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(eval-set!)Tj
/T1_0 1 Tf
( are called from )Tj
/T1_1 1 Tf
(eval-special-form)Tj
/T1_0 1 Tf
( to interpret expressions of the forms )Tj
/T1_1 1 Tf
0 -1.205 TD
(\(define ...\))Tj
/T1_0 1 Tf
( or )Tj
/T1_1 1 Tf
(\(set! ...\))Tj
/T1_0 1 Tf
(, respectively.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(eval-define! expr\))Tj
0 -1.2 TD
(   \(toplevel-bind! \(cadr expr\))Tj
T*
(                   \(eval \(caddr expr\)\)\)\))Tj
0 -2.557 TD
(\(define \(eval-set! expr\))Tj
0 -1.2 TD
(   \(toplevel-set! \(cadr expr\))Tj
T*
(                  \(eval \(caddr expr\)\)\)\))Tj
ET
0 0 1 RG
1.122 w 10 M 0 j 0 J []0 d 
9.539 285.431 m
221.749 285.431 l
S
0 0 1 rg
BT
/T1_2 1 Tf
13.3541 0 0 13.3541 9.5387 288.796 Tm
(Running the improved interpreter)Tj
0 0 0 rg
/T1_3 1 Tf
0 -2.683 TD
([ need some example uses ])Tj
/T1_0 1 Tf
( )Tj
ET
0.5 0.5 0.5 rg
9.539 221.708 m
9.539 223.616 l
602.461 223.616 l
601.507 222.662 l
10.493 222.662 l
10.493 222.662 l
h
f
0.875 0.875 0.875 rg
602.461 223.616 m
602.461 221.708 l
9.539 221.708 l
10.493 222.662 l
601.507 222.662 l
601.507 222.662 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 203.5611 Tm
(Go to the )Tj
ET
0.673 w 
62.581 201.542 m
84.095 201.542 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 62.5812 203.5611 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
90.772 201.542 m
136.763 201.542 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 90.7717 203.5611 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
143.44 201.542 m
166.436 201.542 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 143.4404 203.5611 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
173.113 201.542 m
191.662 201.542 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 173.1132 203.5611 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
239.51 201.542 m
327.781 201.542 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 239.5099 203.5611 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_117.html \(5 of 5\)1\1/3/2006 9:09:43 PM)Tj
ET
EMC 

endstreamendobj4554 0 obj(An Introduction to Scheme and its Implementation - Improving the Simple Interpreter)endobj4555 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_117.html)/S 700 0 R>>endobj4556 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_117.html)endobj4557 0 obj(¥´´3ŒFˇÆMÿhô_)endobj4558 0 obj<</TS(D:20061104050943)/ID 4557 0 R/CT(text/html)/O[4519 0 R 4529 0 R 4531 0 R 4536 0 R 4538 0 R]/S/SPS/T 4554 0 R/TID 4560 0 R/SI 4559 0 R>>endobj4559 0 obj<</TS(D:20061104050943)/AU 4556 0 R>>endobj4560 0 obj(øk,–Á‰1\rNéL7 á)endobj4561 0 obj<</Parent 710 0 R/Next 4587 0 R/Dest[4519 0 R/XYZ 0 792 null]/Prev 4516 0 R/SE 4518 0 R/Title(An Introduction to Scheme and its Implementation - Improving the Simple Interpreter)>>endobj4562 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4563 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 4564 0 R>>endobj4564 0 obj<</Annots 4567 0 R/Parent 4653 0 R/ID 4583 0 R/StructParents 240/Contents 4579 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4565 0 obj[4563 0 R]endobj4566 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4567 0 obj[4566 0 R 4568 0 R 4569 0 R 4570 0 R 4571 0 R 4573 0 R 4574 0 R 4575 0 R 4576 0 R 4577 0 R 4578 0 R]endobj4568 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4519 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_117.html)/S/URI>>/Border[0 0 0]>>endobj4569 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4590 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_119.html)/S/URI>>/Border[0 0 0]>>endobj4570 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4571 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4572 0 obj[4564 0 R/XYZ 0 731.2 null]endobj4573 0 obj<</Rect[10.0 689.877 225.46 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC147)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC147)/S/URI>>/Border[0 0 0]>>endobj4574 0 obj<</Rect[65.608 635.538 88.162 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4575 0 obj<</Rect[95.162 635.538 143.378 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4519 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_117.html)/S/URI>>/Border[0 0 0]>>endobj4576 0 obj<</Rect[150.378 635.538 174.486 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4590 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_119.html)/S/URI>>/Border[0 0 0]>>endobj4577 0 obj<</Rect[181.486 635.538 200.932 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4578 0 obj<</Rect[251.094 635.538 343.634 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4579 0 obj<</Length 2412>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Discussion and Review\)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
225.46 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Discussion and Review)Tj
ET
0.5 0.5 0.5 rg
10 658.938 m
10 660.938 l
602 660.938 l
601 659.938 l
11 659.938 l
11 659.938 l
h
f
0.875 0.875 0.875 rg
602 660.938 m
602 658.938 l
10 658.938 l
11 659.938 l
601 659.938 l
601 659.938 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 639.914 Tm
(Go to the )Tj
ET
0.706 w 
65.608 637.797 m
88.162 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 639.914 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 637.797 m
143.378 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 639.914 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 637.797 m
174.486 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 639.914 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 637.797 m
200.932 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 639.914 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 637.797 m
343.634 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 639.914 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_118.html11/3/2006 9:\09:50 PM)Tj
ET
EMC 

endstreamendobj4580 0 obj(An Introduction to Scheme and its Implementation - Discussion and Review)endobj4581 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_118.html)/S 700 0 R>>endobj4582 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_118.html)endobj4583 0 obj(‘K˚ÄiA|◊´"3Bx>)endobj4584 0 obj<</TS(D:20061104050950)/ID 4583 0 R/CT(text/html)/O[4564 0 R]/S/SPS/T 4580 0 R/TID 4586 0 R/SI 4585 0 R>>endobj4585 0 obj<</TS(D:20061104050950)/AU 4582 0 R>>endobj4586 0 obj(Ì≤Í<À∂í˛*Æ ]˝h)endobj4587 0 obj<</Parent 710 0 R/Next 4613 0 R/Dest[4564 0 R/XYZ 0 792 null]/Prev 4561 0 R/SE 4563 0 R/Title(An Introduction to Scheme and its Implementation - Discussion and Review)>>endobj4588 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4589 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 4590 0 R>>endobj4590 0 obj<</Annots 4593 0 R/Parent 4653 0 R/ID 4609 0 R/StructParents 241/Contents 4605 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4591 0 obj[4589 0 R]endobj4592 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4593 0 obj[4592 0 R 4594 0 R 4595 0 R 4596 0 R 4597 0 R 4599 0 R 4600 0 R 4601 0 R 4602 0 R 4603 0 R 4604 0 R]endobj4594 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4564 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_118.html)/S/URI>>/Border[0 0 0]>>endobj4595 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4616 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_120.html)/S/URI>>/Border[0 0 0]>>endobj4596 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4597 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4598 0 obj[4590 0 R/XYZ 0 731.2 null]endobj4599 0 obj<</Rect[10.0 683.954 369.253 709.723]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC148)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC148)/S/URI>>/Border[0 0 0]>>endobj4600 0 obj<</Rect[65.608 629.077 88.162 644.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4601 0 obj<</Rect[95.162 629.077 143.378 644.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4564 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_118.html)/S/URI>>/Border[0 0 0]>>endobj4602 0 obj<</Rect[150.378 629.077 174.486 644.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4616 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_120.html)/S/URI>>/Border[0 0 0]>>endobj4603 0 obj<</Rect[181.486 629.077 200.932 644.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4604 0 obj<</Rect[251.094 629.077 343.634 644.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4605 0 obj<</Length 2433>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Environments and Proc\edures)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
2.081 w 
10 684.255 m
369.253 684.255 l
S
0 0 1 rg
BT
/T1_1 1 Tf
24.7692 0 0 24.7692 10 690.4968 Tm
(Environments and Procedures)Tj
ET
0.5 0.5 0.5 rg
10 652.477 m
10 654.477 l
602 654.477 l
601 653.477 l
11 653.477 l
11 653.477 l
h
f
0.875 0.875 0.875 rg
602 654.477 m
602 652.477 l
10 652.477 l
11 653.477 l
601 653.477 l
601 653.477 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 633.4525 Tm
(Go to the )Tj
ET
0.706 w 
65.608 631.336 m
88.162 631.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 633.4525 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 631.336 m
143.378 631.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 633.4525 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 631.336 m
174.486 631.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 633.4525 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 631.336 m
200.932 631.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 633.4525 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 631.336 m
343.634 631.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 633.4525 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_119.html11/3/2006 9:\09:59 PM)Tj
ET
EMC 

endstreamendobj4606 0 obj(An Introduction to Scheme and its Implementation - Environments and Procedures)endobj4607 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_119.html)/S 700 0 R>>endobj4608 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_119.html)endobj4609 0 obj(üóáÃΩø«]'\\òÏr‰Œr)endobj4610 0 obj<</TS(D:20061104050959)/ID 4609 0 R/CT(text/html)/O[4590 0 R]/S/SPS/T 4606 0 R/TID 4612 0 R/SI 4611 0 R>>endobj4611 0 obj<</TS(D:20061104050959)/AU 4608 0 R>>endobj4612 0 obj(sÄSÙ™~{´¯——ñg\)Âé)endobj4613 0 obj<</Parent 710 0 R/Next 4639 0 R/Dest[4590 0 R/XYZ 0 792 null]/Prev 4587 0 R/SE 4589 0 R/Title(An Introduction to Scheme and its Implementation - Environments and Procedures)>>endobj4614 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4615 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 4616 0 R>>endobj4616 0 obj<</Annots 4619 0 R/Parent 4653 0 R/ID 4635 0 R/StructParents 242/Contents 4631 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4617 0 obj[4615 0 R]endobj4618 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4619 0 obj[4618 0 R 4620 0 R 4621 0 R 4622 0 R 4623 0 R 4625 0 R 4626 0 R 4627 0 R 4628 0 R 4629 0 R 4630 0 R]endobj4620 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4590 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_119.html)/S/URI>>/Border[0 0 0]>>endobj4621 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4642 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_121.html)/S/URI>>/Border[0 0 0]>>endobj4622 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4623 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4624 0 obj[4616 0 R/XYZ 0 731.2 null]endobj4625 0 obj<</Rect[10.0 689.634 302.087 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC149)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC149)/S/URI>>/Border[0 0 0]>>endobj4626 0 obj<</Rect[65.608 635.296 88.162 650.296]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4627 0 obj<</Rect[95.162 635.296 143.378 650.296]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4590 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_119.html)/S/URI>>/Border[0 0 0]>>endobj4628 0 obj<</Rect[150.378 635.296 174.486 650.296]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4642 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_121.html)/S/URI>>/Border[0 0 0]>>endobj4629 0 obj<</Rect[181.486 635.296 200.932 650.296]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4630 0 obj<</Rect[251.094 635.296 343.634 650.296]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4631 0 obj<</Length 2620>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Understanding let and\ lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
152.167 690.33 l
S
0.977 w 
152.167 692.284 m
187.059 692.284 l
S
1.628 w 
187.059 690.33 m
232.303 690.33 l
S
0.977 w 
232.303 692.284 m
302.087 692.284 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Understanding )Tj
/T1_2 1 Tf
(let)Tj
/T1_1 1 Tf
( and )Tj
/T1_2 1 Tf
(lambda)Tj
ET
0.5 0.5 0.5 rg
10 658.696 m
10 660.696 l
602 660.696 l
601 659.696 l
11 659.696 l
11 659.696 l
h
f
0.875 0.875 0.875 rg
602 660.696 m
602 658.696 l
10 658.696 l
11 659.696 l
601 659.696 l
601 659.696 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 639.6714 Tm
(Go to the )Tj
ET
0.706 w 
65.608 637.555 m
88.162 637.555 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 639.6714 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 637.555 m
143.378 637.555 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 639.6714 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 637.555 m
174.486 637.555 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 639.6714 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 637.555 m
200.932 637.555 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 639.6714 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 637.555 m
343.634 637.555 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 639.6714 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_120.html11/3/2006 9:\10:03 PM)Tj
ET
EMC 

endstreamendobj4632 0 obj(An Introduction to Scheme and its Implementation - Understanding let and lambda)endobj4633 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_120.html)/S 700 0 R>>endobj4634 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_120.html)endobj4635 0 obj(áï\(0∆ËZ◊˝4¨ÂOf∂)endobj4636 0 obj<</TS(D:20061104051003)/ID 4635 0 R/CT(text/html)/O[4616 0 R]/S/SPS/T 4632 0 R/TID 4638 0 R/SI 4637 0 R>>endobj4637 0 obj<</TS(D:20061104051003)/AU 4634 0 R>>endobj4638 0 obj(9õ˚#ÊB: ˙?é˜}-)endobj4639 0 obj<</Parent 710 0 R/Next 4676 0 R/Dest[4616 0 R/XYZ 0 792 null]/Prev 4613 0 R/SE 4615 0 R/Title(An Introduction to Scheme and its Implementation - Understanding let and lambda)>>endobj4640 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4641 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 4652 0 R/Type/MCR>><</MCID 0/Pg 4655 0 R/Type/MCR>><</MCID 0/Pg 4657 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 4642 0 R>>endobj4642 0 obj<</Annots 4645 0 R/Parent 4653 0 R/ID 4672 0 R/StructParents 243/Contents 4665 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4643 0 obj[4641 0 R]endobj4644 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4645 0 obj[4644 0 R 4646 0 R 4647 0 R 4648 0 R 4649 0 R 4651 0 R]endobj4646 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4616 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_120.html)/S/URI>>/Border[0 0 0]>>endobj4647 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4679 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_122.html)/S/URI>>/Border[0 0 0]>>endobj4648 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4649 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4650 0 obj[4642 0 R/XYZ 0 731.2 null]endobj4651 0 obj<</Rect[10.0 693.431 39.0769 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC150)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC150)/S/URI>>/Border[0 0 0]>>endobj4652 0 obj<</Parent 4694 0 R/ID 4672 0 R/StructParents 244/Contents 4666 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4653 0 obj<</Parent 4697 0 R/Count 5/Type/Pages/Kids[4538 0 R 4564 0 R 4590 0 R 4616 0 R 4642 0 R]>>endobj4654 0 obj[4641 0 R]endobj4655 0 obj<</Parent 4694 0 R/ID 4672 0 R/StructParents 245/Contents 4667 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4656 0 obj[4641 0 R]endobj4657 0 obj<</Annots 4660 0 R/Parent 4694 0 R/ID 4672 0 R/StructParents 246/Contents 4668 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4658 0 obj[4641 0 R]endobj4659 0 obj<</Rect[65.608 510.8 88.162 525.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4660 0 obj[4659 0 R 4661 0 R 4662 0 R 4663 0 R 4664 0 R]endobj4661 0 obj<</Rect[95.162 510.8 143.378 525.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4616 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_120.html)/S/URI>>/Border[0 0 0]>>endobj4662 0 obj<</Rect[150.378 510.8 174.486 525.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4679 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_122.html)/S/URI>>/Border[0 0 0]>>endobj4663 0 obj<</Rect[181.486 510.8 200.932 525.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4664 0 obj<</Rect[251.094 510.8 343.634 525.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4665 0 obj<</Length 4279>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Understanding let)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
0.814 w 
10 695.805 m
39.077 695.805 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.2479 Tm
(let)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7235 Tm
(One difference between a C or Pascal block and a Scheme )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( is that )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( variable bindings don't )Tj
0 -1.205 TD
(necessarily cease to exist when the )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( is exited, and the bindings therefore can't be allocated on a stack )Tj
0 -1.205 TD
(in the general case. \(The reason for this will become clear when we tal\k about )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
( and closures.\) )Tj
0 -2.557 TD
(One way to visualize the creation of block variables is to see it as the\ creation of a new table mapping )Tj
0 -1.2 TD
(names to storage, like the toplevel environment in our interpreter. )Tj
0 -2.557 TD
(Except for the new variables, the new environment \(table\) is the same \as the one that was in use when )Tj
0 -1.205 TD
(the block was entered. We say that the )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( expression "extends" the "outer" environment with bindings )Tj
0 -1.205 TD
(for the )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( variables. )Tj
0 -2.562 TD
(Suppose we type a )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( expression at the Scheme prompt, \(Assume we we're just doing the usual\ )Tj
0 -1.2 TD
(expression evaluation in the usual top-level environment.\) )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme>\(let \(\(x 10\) \(y 20\)\))Tj
0 -1.2 TD
(          \(+ x y\)\))Tj
T*
(30)Tj
/T1_0 1 Tf
0 -2.552 TD
(The interpreter maintains a pointer to the "current environment" when ev\aluating an expression. This )Tj
0 -1.2 TD
(pointer always points to the environment the currently-executing code mu\st execute in, i.e., the variable )Tj
T*
(bindings it must see for the variables it uses. When we evaluate a varia\ble, we look for a binding of its )Tj
T*
(name in the current environment, by searching up the environment chain s\tarting from the "current )Tj
T*
(environment" pointer. )Tj
0 -2.562 TD
(Before evaluating the )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( expression, Scheme's environment pointer points to the top-level )Tj
0 -1.2 TD
(environment, which contains the usual bindings holding the built-in Sche\me procedures, plus any top-)Tj
0 -1.205 TD
(level variables we've defined. Supposing we've defined a variable )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
(, we can draw the top-level )Tj
0 -1.2 TD
(environement like this: )Tj
/T1_2 1 Tf
0 -2.562 TD
(     +-----+        +------+-----+)Tj
0 -1.2 TD
(envt |  * -+------->|  car |  *--+----> #<proc ...>#)Tj
T*
(     +-----+        +------+-----+)Tj
T*
(                    | cons |  *--+----> #<proc ...>#)Tj
T*
(                    +------+-----+)Tj
T*
(                    |   +  |  *--+----> #<proc ...>#)Tj
T*
(                    +------+-----+)Tj
T*
(                    |      *     |)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_121.html \(1 of 4\)1\1/3/2006 9:10:11 PM)Tj
ET
EMC 

endstreamendobj4666 0 obj<</Length 3645>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Understanding let)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 752.1844 Tm
(                           * )Tj
0 -1.2 TD
(                    |      *     |)Tj
T*
(                    +------+-----+)Tj
T*
(                    |  foo |  +--+----> #<proc ...>#)Tj
T*
(                    +------+-----+)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Here I've drawn the environment as a simple table of names and binding\s. It might actually be )Tj
0 -1.2 TD
(implemented as an association list, as in our simple example interpreter\, or more likely as a hash table.\) )Tj
0 -2.562 TD
(After entering the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( and creating the bindings for )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(y)Tj
/T1_0 1 Tf
(, the interpreter changes the environment )Tj
0 -1.2 TD
(pointer to point to the resulting new environment. This is typically imp\lemented by representing the )Tj
T*
(environment as a chain of tables called )Tj
/T1_2 1 Tf
(frames)Tj
/T1_0 1 Tf
(, rather than a simple flat table. The newest frame is )Tj
T*
(searched first, and so on down the chain, to find the appropriate bindin\gs. This environment chain is )Tj
T*
(used as a pointer-linked stack, for the most part, with new frames being\ pushed onto the stack when a )Tj
/T1_1 1 Tf
0 -1.205 TD
(let)Tj
/T1_0 1 Tf
( is entered, and popped off the stack when a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( is exited. )Tj
0 -2.557 TD
(Each frame holds bindings created by a particular binding construct in t\he program, e.g., on entering a )Tj
/T1_1 1 Tf
0 -1.205 TD
(let)Tj
/T1_0 1 Tf
(. A whole environment is not represented by just one frame, but by the c\hain of frames starting at a )Tj
0 -1.205 TD
(particular frame. In the figure below, for example, the smaller binding \frame only holds bindings of )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( )Tj
T*
(and )Tj
/T1_1 1 Tf
(y)Tj
/T1_0 1 Tf
(, but it represents an environment that includes bindings of )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
(, etc. The environment inherits )Tj
0 -1.205 TD
(bindings from the environment it's scoped inside, and this is what the )Tj
/T1_1 1 Tf
(scope link)Tj
/T1_0 1 Tf
( is for. )Tj
/T1_1 1 Tf
0 -2.562 TD
(                    +-------+-----+)Tj
0 -1.2 TD
(                    |  car  |  +--+----> #<proc ...>#)Tj
0 -1.2 TD
(                    +-------+-----+)Tj
T*
(                    | cons  |  +--+----> #<proc ...>#)Tj
0 -1.2 TD
(                    +-------+-----+)Tj
0 -1.2 TD
(                    |   +   |  +--+----> #<proc ...>#)Tj
0 -1.2 TD
(                    +-------+-----+)Tj
0 -1.2 TD
(                    |       *     |)Tj
T*
(                            *)Tj
0 -1.2 TD
(                    |       *     |)Tj
0 -1.2 TD
(                    +-------+-----+)Tj
0 -1.2 TD
(                    |  foo  |  +--+----> #<proc ...>#)Tj
0 -1.2 TD
(                    +-------+-----+)Tj
T*
(                              /|\\)Tj
0 -1.2 TD
(                               |)Tj
0 -1.2 TD
(                               |)Tj
0 -1.2 TD
(                               |)Tj
0 -1.2 TD
(     +-----+        +-------+--+--+)Tj
T*
(envt |  +--+------->|[scope]|  *  |)Tj
0 -1.2 TD
(     +-----+        +-------+-----+)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_121.html \(2 of 4\)1\1/3/2006 9:10:11 PM)Tj
ET
EMC 

endstreamendobj4667 0 obj<</Length 4373>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Understanding let)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(                    |   x   |  10 |)Tj
0 -1.2 TD
(                    +-------+-----+    )Tj
T*
(                    |   y   |  20 |    )Tj
T*
(                    +-------+-----+    )Tj
/T1_0 1 Tf
0 -2.552 TD
(The link that connects the two frames \(tables\) is called a scope link.\ It reflects the nesting of naming )Tj
0 -1.205 TD
(scopes in the program. In this case, when a variable is referenced insid\e the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, the search for a )Tj
0 -1.2 TD
(binding begins at the new frame \(table\). If it is not found, the searc\h follows the scope link to the next )Tj
T*
(frame and looks there. This can continue for as many levels as there are\ nested scopes in the program. )Tj
0 -2.557 TD
(While we're executing in the new environment, bindings in the new frame \)Tj
/T1_2 1 Tf
(shadow)Tj
/T1_0 1 Tf
( \(hide\) any bindings of )Tj
0 -1.2 TD
(variables with the same name in the outer environment. For example, if t\here's a top-level variable )Tj
0 -1.205 TD
(named )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( bound in the top-level environment, they won't be seen by code executin\g in the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(environment. )Tj
0 -2.562 TD
(When we exit the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, the current environment pointer is set back to point to the same envir\onment )Tj
0 -1.205 TD
(frame as before entering the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(. In the usual case, that environment becomes garbage because there are \)Tj
0 -1.2 TD
(no pointers to it, and the garbage collector will eventually reclaim its\ space. )Tj
0 -2.557 TD
(Keep in mind that an )Tj
/T1_2 1 Tf
(environment)Tj
/T1_0 1 Tf
( is a language-level entity, and just consists of a set of bindings; it \is )Tj
0 -1.2 TD
(just a mapping from names to storage that can hold values. Our chain of \frames is a convenient and )Tj
T*
(efficient data structure we've chosen to )Tj
/T1_2 1 Tf
(implement)Tj
/T1_0 1 Tf
( this abstraction, so that environments nest properly. )Tj
0 -2.557 TD
(The difference between frames and environments is similar to the differe\nce between pairs and lists. A )Tj
0 -1.2 TD
(pointer to a pair that begins a list may be thought of as pointer to the\ pair itself, or as a pointer to the )Tj
T*
(whole list of pairs connected by their cdr's. Likewise, a pointer to an \environment frame points to that )Tj
T*
(frame, but also points to the sequence of environment frames connected b\y their scope links. This )Tj
T*
(corresponds to the scope rule that an expression can see bindings create\d by enclosing expressions, as )Tj
T*
(long as they're not shadowed by another binding in between. )Tj
0 -2.557 TD
(As with pairs and lists, environment frames can share structure, and the\ same frame may be part of )Tj
0 -1.2 TD
(several \(nested\) environments. \(As we'll see later, this is important\ for implementing lexical scope )Tj
T*
(correctly in the presence of first-class procedures.\) )Tj
0 -2.557 TD
(Unlike pairs and lists, however, a particular environment doesn't necess\arily include )Tj
/T1_2 1 Tf
(all)Tj
/T1_0 1 Tf
( of the parts of )Tj
0 -1.2 TD
(all of the frames in the sequence. The scope rules of the language allow\ shadowing of bindings in outer )Tj
T*
(environments by bindings in inner environments; our lookup routine imple\ments this by searching an )Tj
T*
(environment chain in inner-to-outer order, and taking the first binding \of the name. )Tj
0 -2.557 TD
(If we think of environments as sets of bindings, the act of pushing an e\nvironment frame on the front of )Tj
0 -1.2 TD
(an environment creates a new environment with new bindings added--and wi\th any shadowed bindings )Tj
/T1_2 1 Tf
T*
(removed)Tj
/T1_0 1 Tf
(. We don't actually modify the old environments, however--they're not ch\anged by the creation )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_121.html \(3 of 4\)1\1/3/2006 9:10:11 PM)Tj
ET
EMC 

endstreamendobj4668 0 obj<</Length 2598>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Understanding let)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(of new environments with scope links to them. What effectively "removes"\ a binding to create a new )Tj
0 -1.2 TD
(envioronment is our search procedures--it searches an environment front-\to back, to find the binding of a )Tj
T*
(name, and ignores any bindings after the first one it finds. )Tj
0 -2.557 TD
(As we will see later, it's significant that we never actually modify the\ structure of an environment chain )Tj
0 -1.2 TD
(once it's created--we never clobber the scope links. This allows us to s\ave a pointer to an environment by )Tj
T*
(saving a pointer to the first frame in the chain, and restore that envir\onment later by simply setting our )Tj
T*
(environment pointer to point to that frame. In effect, we can switch fro\m one whole environment \(set of )Tj
T*
(bindings\) to another just by changing a pointer. It also lets us have e\nvironments that share structure--)Tj
T*
(nested environments simply have more frames in their chains, and the cha\ins share structure with they're )Tj
T*
(nested in. These properties of environment chains turn out to be very co\nvenient when implementing )Tj
T*
(procedure calling. )Tj
ET
0.5 0.5 0.5 rg
10 534.2 m
10 536.2 l
602 536.2 l
601 535.2 l
11 535.2 l
11 535.2 l
h
f
0.875 0.875 0.875 rg
602 536.2 m
602 534.2 l
10 534.2 l
11 535.2 l
601 535.2 l
601 535.2 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 515.1756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 513.059 m
88.162 513.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 515.1756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 513.059 m
143.378 513.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 515.1756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 513.059 m
174.486 513.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 515.1756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 513.059 m
200.932 513.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 515.1756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 513.059 m
343.634 513.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 515.1756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_121.html \(4 of 4\)1\1/3/2006 9:10:11 PM)Tj
ET
EMC 

endstreamendobj4669 0 obj(An Introduction to Scheme and its Implementation - Understanding let)endobj4670 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_121.html)/S 700 0 R>>endobj4671 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_121.html)endobj4672 0 obj(l˜?Òz„ås_Y“|Pc_Ê)endobj4673 0 obj<</TS(D:20061104051011)/ID 4672 0 R/CT(text/html)/O[4642 0 R 4652 0 R 4655 0 R 4657 0 R]/S/SPS/T 4669 0 R/TID 4675 0 R/SI 4674 0 R>>endobj4674 0 obj<</TS(D:20061104051011)/AU 4671 0 R>>endobj4675 0 obj(Pƒ^«^—HcùÇ∂h˘˛U)endobj4676 0 obj<</Parent 710 0 R/Next 4737 0 R/Dest[4642 0 R/XYZ 0 792 null]/Prev 4639 0 R/SE 4641 0 R/Title(An Introduction to Scheme and its Implementation - Understanding let)>>endobj4677 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4678 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 4691 0 R/Type/MCR>><</MCID 0/Pg 4693 0 R/Type/MCR>><</MCID 0/Pg 4696 0 R/Type/MCR>><</MCID 0/Pg 4699 0 R/Type/MCR>><</MCID 0/Pg 4703 0 R/Type/MCR>><</MCID 0/Pg 4705 0 R/Type/MCR>><</MCID 0/Pg 4707 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 4679 0 R>>endobj4679 0 obj<</Annots 4682 0 R/Parent 4694 0 R/ID 4733 0 R/StructParents 247/Contents 4722 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R/T1_2 828 0 R/T1_3 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4680 0 obj[4678 0 R]endobj4681 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4682 0 obj[4681 0 R 4683 0 R 4684 0 R 4685 0 R 4686 0 R 4688 0 R 4690 0 R]endobj4683 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4642 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_121.html)/S/URI>>/Border[0 0 0]>>endobj4684 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4740 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_123.html)/S/URI>>/Border[0 0 0]>>endobj4685 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4686 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4687 0 obj[4679 0 R/XYZ 0 731.2 null]endobj4688 0 obj<</Rect[10.0 693.431 68.1538 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC151)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC151)/S/URI>>/Border[0 0 0]>>endobj4689 0 obj[4679 0 R/XYZ 0 59.211 null]endobj4690 0 obj<</Rect[10.0 42.811 175.732 57.811]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC152)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC152)/S/URI>>/Border[0 0 0]>>endobj4691 0 obj<</Parent 4694 0 R/ID 4733 0 R/StructParents 248/Contents 4723 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4692 0 obj[4678 0 R]endobj4693 0 obj<</Parent 4708 0 R/ID 4733 0 R/StructParents 249/Contents 4724 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4694 0 obj<</Parent 4697 0 R/Count 5/Type/Pages/Kids[4652 0 R 4655 0 R 4657 0 R 4679 0 R 4691 0 R]>>endobj4695 0 obj[4678 0 R]endobj4696 0 obj<</Parent 4708 0 R/ID 4733 0 R/StructParents 250/Contents 4725 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4697 0 obj<</Parent 4700 0 R/Count 25/Type/Pages/Kids[4427 0 R 4496 0 R 4539 0 R 4653 0 R 4694 0 R]>>endobj4698 0 obj[4678 0 R]endobj4699 0 obj<</Parent 4708 0 R/ID 4733 0 R/StructParents 251/Contents 4726 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4700 0 obj<</Parent 2 0 R/Count 125/Type/Pages/Kids[3384 0 R 3708 0 R 4042 0 R 4410 0 R 4697 0 R]>>endobj4701 0 obj<</Parent 2 0 R/Count 125/Type/Pages/Kids[1544 0 R 1543 0 R 2059 0 R 2470 0 R 2876 0 R]>>endobj4702 0 obj[4678 0 R]endobj4703 0 obj<</Parent 4708 0 R/ID 4733 0 R/StructParents 252/Contents 4727 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4704 0 obj[4678 0 R]endobj4705 0 obj<</Parent 4708 0 R/ID 4733 0 R/StructParents 253/Contents 4728 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4706 0 obj[4678 0 R]endobj4707 0 obj<</Annots 4714 0 R/Parent 4761 0 R/ID 4733 0 R/StructParents 254/Contents 4729 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4708 0 obj<</Parent 4900 0 R/Count 5/Type/Pages/Kids[4693 0 R 4696 0 R 4699 0 R 4703 0 R 4705 0 R]>>endobj4709 0 obj[4678 0 R]endobj4710 0 obj[4707 0 R/XYZ 0 610.4 null]endobj4711 0 obj<</Limits[(ºj\rﬁl¨V£¥T-%«IDX96)(=>Æ'´0"±B∫_˛òIDX119)]/Names[(ºj\rﬁl¨V£¥T-%«IDX96)3566 0 R(ºj\rﬁl¨V£¥T-%«IDX97)3567 0 R(ºj\rﬁl¨V£¥T-%«IDX98)3570 0 R(ºj\rﬁl¨V£¥T-%«SEC98)3556 0 R(⁄>Goô{—yüÆ¥lSEC253)5703 0 R(‚ÊzTÜ˙zIÂt%u∏SEC103)3747 0 R(ÎŸß%¢6•°Wª<A`ÙSEC41)1905 0 R(5Ñ7ëêˆ"N=>,FOOT10)4715 0 R(5Ñ7ëêˆ"N=>,SEC151)4687 0 R(5Ñ7ëêˆ"N=>,SEC152)4689 0 R(5Ñ7ëêˆ"N=>,SEC153)4710 0 R(\rmT#^_•ò—Åq∞∂tFOOT5)2981 0 R(\rmT#^_•ò—Åq∞∂tSEC79)2975 0 R(§–Á+s˘QSñ}`≠NÿESEC159)4841 0 R(§–Á+s˘QSñ}`≠NÿESEC160)4850 0 R(Ì\\\\âÂ%$ñq˘‘”èaIDX39)2100 0 R(Ì\\\\âÂ%$ñq˘‘”èaIDX40)2106 0 R(Ì\\\\âÂ%$ñq˘‘”èaIDX41)2107 0 R(Ì\\\\âÂ%$ñq˘‘”èaIDX42)2108 0 R(Ì\\\\âÂ%$ñq˘‘”èaIDX43)2109 0 R(Ì\\\\âÂ%$ñq˘‘”èaIDX44)2120 0 R(Ì\\\\âÂ%$ñq˘‘”èaIDX45)2121 0 R(Ì\\\\âÂ%$ñq˘‘”èaSEC48)2094 0 R(Ì\\\\âÂ%$ñq˘‘”èaSEC49)2098 0 R(Ì\\\\âÂ%$ñq˘‘”èaSEC50)2103 0 R(Ì\\\\âÂ%$ñq˘‘”èaSEC51)2116 0 R(Ì\\\\âÂ%$ñq˘‘”èaSEC52)2122 0 R(Ì\\\\âÂ%$ñq˘‘”èaSEC53)2128 0 R(‡ıï5Å\nz?,ê¡hgIDX90)3324 0 R(‡ıï5Å\nz?,ê¡hgIDX91)3325 0 R(‡ıï5Å\nz?,ê¡hgIDX92)3326 0 R(‡ıï5Å\nz?,ê¡hgIDX93)3327 0 R(‡ıï5Å\nz?,ê¡hgSEC90)3322 0 R(=€∑‰[Œ‰yMèÃaMsIDX102)3897 0 R(=€∑‰[Œ‰yMèÃaMsSEC111)3895 0 R(=>Æ'´0"±B∫_˛òIDX119)4214 0 R]>>endobj4712 0 obj<</Limits[(=>Æ'´0"±B∫_˛òIDX120)(:ºã˚hÖIN’r\rMc6SEC44)]/Names[(=>Æ'´0"±B∫_˛òIDX120)4215 0 R(=>Æ'´0"±B∫_˛òIDX121)4216 0 R(=>Æ'´0"±B∫_˛òSEC128)4212 0 R(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC183)5141 0 R(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC184)5143 0 R(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC185)5160 0 R(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC186)5163 0 R(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC187)5170 0 R(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC188)5176 0 R(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC189)5179 0 R(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC190)5181 0 R(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC191)5185 0 R(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC192)5196 0 R(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC193)5202 0 R(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC194)5208 0 R(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC195)5214 0 R(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC196)5217 0 R(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC197)5219 0 R(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC198)5221 0 R(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC199)5226 0 R(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC200)5233 0 R(™{L≠˝U»‚ﬁ¿x:å˝\\0SEC201)5241 0 R(~}9≈ø\nDÕ;Ïƒ-OSEC78)2948 0 R(‘K˚ÄiA|◊´"3Bx>SEC147)4572 0 R(˘Fìhˆ?X˘;å>∏ˇSEC20)1307 0 R(!†˝ì1¬Ñ®∏¡Ø‰ÅSEC126)4146 0 R(#ÓŸøûÙ^Î$‚©7:≠SEC11)1022 0 R(&ià,‹Ωªæ≠PÚ0àFûIDX14)1435 0 R(&ià,‹Ωªæ≠PÚ0àFûIDX15)1438 0 R(&ià,‹Ωªæ≠PÚ0àFûSEC25)1433 0 R('	Kπg™zRF†gn¨±ñIDX81)2913 0 R('	Kπg™zRF†gn¨±ñIDX82)2914 0 R('	Kπg™zRF†gn¨±ñIDX83)2915 0 R('	Kπg™zRF†gn¨±ñSEC77)2911 0 R('\\\\oÍŒ‘¢˙><«íq›SEC10)987 0 R(,FÚf†[ö≈3àpK	;ÀÎSEC106)3816 0 R(-Lí∞[“Fn:…]f8@wIDX22)1707 0 R(-Lí∞[“Fn:…]f8@wIDX23)1708 0 R(-Lí∞[“Fn:…]f8@wSEC34)1705 0 R(/@é∆É^x‚ÒW5V|IDX18)1643 0 R(/@é∆É^x‚ÒW5V|IDX19)1644 0 R(/@é∆É^x‚ÒW5V|SEC32)1641 0 R(3»ñBàF>E∞ΩBD^0nSEC92)3381 0 R(4bÙµ–¨ZäŸxpñæSEC24)1407 0 R(5ójÜøUÄº‚≥ï¯≥c@IDX80)2886 0 R(5ójÜøUÄº‚≥ï¯≥c@SEC76)2884 0 R(8 ˜€ÃÉ±j!¯\\\\^Y4 SEC100)3651 0 R(9Qr;|…Û‘”…ﬂö‡\\\\⁄IDX59)2480 0 R(9Qr;|…Û‘”…ﬂö‡\\\\⁄IDX60)2481 0 R(9Qr;|…Û‘”…ﬂö‡\\\\⁄SEC64)2478 0 R(:ºã˚hÖIN’r\rMc6IDX35)1986 0 R(:ºã˚hÖIN’r\rMc6SEC44)1984 0 R]>>endobj4713 0 obj<</Rect[10.0 588.077 380.595 608.462]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC153)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC153)/S/URI>>/Border[0 0 0]>>endobj4714 0 obj[4713 0 R 4716 0 R 4717 0 R 4718 0 R 4719 0 R 4720 0 R 4721 0 R]endobj4715 0 obj[4707 0 R/XYZ 0 210.907 null]endobj4716 0 obj<</Rect[10.0 189.732 33.324 204.732]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_foot.html#FOOT10)/S/URI>>/Border[0 0 0]>>endobj4717 0 obj<</Rect[65.608 135.932 88.162 150.932]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4718 0 obj<</Rect[95.162 135.932 143.378 150.932]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4642 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_121.html)/S/URI>>/Border[0 0 0]>>endobj4719 0 obj<</Rect[150.378 135.932 174.486 150.932]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4740 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_123.html)/S/URI>>/Border[0 0 0]>>endobj4720 0 obj<</Rect[181.486 135.932 200.932 150.932]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4721 0 obj<</Rect[251.094 135.932 343.634 150.932]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4722 0 obj<</Length 3479>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Understanding lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
0.814 w 
10 695.805 m
68.154 695.805 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.2479 Tm
(lambda)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 659.7909 Tm
(Recall that in Scheme, we can create anonymous \(unnamed\) procedures an\y time we want, using the )Tj
/T1_2 1 Tf
0 -1.205 TD
(lambda)Tj
/T1_0 1 Tf
( special form. )Tj
0 -2.557 TD
(For example, suppose you want a procedure that doubles the values of the\ items in a list. You could do )Tj
0 -1.205 TD
(what we did before, and define a named )Tj
/T1_2 1 Tf
(double)Tj
/T1_0 1 Tf
( procedure, but if you only need to use the procedue in )Tj
T*
(one place, it's easier to use an anonymous procedure created with )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Instead of writing )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(double x\))Tj
0 -1.2 TD
(   \(+ x x\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(and then using it like this )Tj
/T1_2 1 Tf
0 -2.562 TD
(   ...)Tj
0 -1.2 TD
(   \(map double mylist\))Tj
T*
(   ...)Tj
/T1_0 1 Tf
0 -2.557 TD
(You can simply define it where it's used, using )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
(. )Tj
/T1_2 1 Tf
0 -2.562 TD
(   ...)Tj
0 -1.2 TD
(   \(map \(lambda \(x\) \(+ x x\)\))Tj
T*
(        mylist\))Tj
T*
(   ...)Tj
/T1_0 1 Tf
0 -2.552 TD
(This can help avoid cluttering your code with lots of auxiliary procedur\es. \(Don't overdo it, though--if a )Tj
0 -1.2 TD
(procedure is nontrivial, it's good to give it a name that reflects what \it does.\) This is very convenient )Tj
0 -1.205 TD
(when using higher-order procedures like )Tj
/T1_2 1 Tf
(map)Tj
/T1_0 1 Tf
(, or higher-order procedures you come up with for your )Tj
0 -1.2 TD
(own programs. )Tj
0 -2.562 TD
([ As we'll see in a little while, )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
( has some very interesting properties that make it more useful )Tj
0 -1.2 TD
(than it might seem right now. ] )Tj
0 -2.557 TD
([ point out that variable arity works with lambda arg lists just like wi\th define arg lists ] )Tj
ET
1.176 w 
10 43.416 m
175.732 43.416 l
S
0 0 1 rg
BT
/T1_3 1 Tf
14 0 0 14 10 46.944 Tm
(Procedures are Closures)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_122.html \(1 of 8\)1\1/3/2006 9:10:16 PM)Tj
ET
EMC 

endstreamendobj4723 0 obj<</Length 3921>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Understanding lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 739.3866 Tm
(Scheme procedure's aren't really just pieces of code you can execute; th\ey're )Tj
/T1_1 1 Tf
(closures)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(A closure records not only what code a procedure must run, but also what\ environment it was created in. )Tj
0 -1.2 TD
(When you call it, that environment is restored before the actual code is\ executed. That is, the "current )Tj
T*
(environment pointer" is set to point to that environment, and whenever t\he procedure references a )Tj
T*
(variable, it will be looked up there. )Tj
0 -2.557 TD
(This ensures that when a procedure executes, it sees the exact same vari\able bindings that were visible )Tj
0 -1.2 TD
(when it was created--it doesn't just remember variable names in its code\, it remembers what )Tj
/T1_1 1 Tf
(storage)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(each name referred to when it was created. )Tj
0 -2.557 TD
(Since variable bindings are allocated on the heap, not on a stack, this \allows procedures to remember )Tj
0 -1.2 TD
(binding environments even after the expressions that created those envir\onments have been evaluated. )Tj
0 -1.205 TD
(For example, a closure created by a )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
( inside a )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( will remember the )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
('s variable bindings )Tj
0 -1.205 TD
(even after we've exited the )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(. As long as we have a pointer to the procedure \(closure\), the binding\s it )Tj
0 -1.2 TD
(refers to are guaranteed to exist. \(The garbage collector will not recl\aim the procedure's storage, or the )Tj
0 -1.205 TD
(storage for the )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( bindings.\) )Tj
0 -2.557 TD
(We say that a procedure is )Tj
/T1_1 1 Tf
(closed)Tj
/T1_0 1 Tf
( in the environment where it is created. Technically, this is because a \)Tj
0 -1.2 TD
(closure records the )Tj
/T1_1 1 Tf
(transitive closure)Tj
/T1_0 1 Tf
( of the "scoped in" relation; that is, it can see bindings created by )Tj
T*
(the enclosing binding construct, bindings created by the one enclosing t\hat, and so on until reaching the )Tj
0 -1.205 TD
(top level. Intuitively, you can also think of the set of bindings as )Tj
/T1_2 1 Tf
(closed)Tj
/T1_0 1 Tf
( when a procedure is created: )Tj
0 -1.205 TD
(bindings that are not lexically visible when the procedure is created ar\e )Tj
/T1_2 1 Tf
(not)Tj
/T1_0 1 Tf
( visible when it runs. )Tj
0 -1.2 TD
(\(Except for bindings created by the procedure itself when as it runs, t\hat is--it can bind arguments, )Tj
T*
(evaluate let expressions, etc.\) )Tj
0 -2.557 TD
(Here's an example that may clarify this, and show one way of taking adva\ntage of it. )Tj
0 -2.557 TD
(Suppose we type the following expression at the Scheme prompt, to be int\erpreted in a top-level )Tj
0 -1.2 TD
(environment: )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme> \(let \(\(count 0\)\))Tj
0 -1.2 TD
(           \(lambda \(\))Tj
T*
(              \(set! count \(+ count 1\)\))Tj
T*
(              count\)\)\))Tj
T*
(#<proc ....># )Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that the )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( is not inside a procedure; Scheme variables don't have to be local to a\ procedure. In )Tj
0 -1.205 TD
(this case, )Tj
/T1_2 1 Tf
(count)Tj
/T1_0 1 Tf
( is just local to the )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( expression that binds it. )Tj
0 -2.557 TD
([ need picture here ] )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_122.html \(2 of 8\)1\1/3/2006 9:10:16 PM)Tj
ET
EMC 

endstreamendobj4724 0 obj<</Length 3977>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Understanding lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 741.2474 Tm
(Evaluating this )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( expression first creates a binding environment with a binding for count\. The initial )Tj
0 -1.2 TD
(value of this binding is 0. In this environment, the lambda expression c\reates a closure. When executed, )Tj
0 -1.205 TD
(this procedure will increment the count, and then return its value. \(No\te that the procedure is )Tj
/T1_1 1 Tf
(not )Tj
0 -1.205 TD
(executed yet)Tj
/T1_0 1 Tf
(, however--it's just created so that it can be called to operate on the \binding of )Tj
/T1_1 1 Tf
(count)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(later.\) This procedure, returned by the lambda expression, is also retu\rned as the value of the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(expression, because a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( returns the value of its last body expression. The read-eval-print loop\ )Tj
0 -1.2 TD
(therefore prints a representation of the \(anonymous\) procedure. )Tj
0 -2.557 TD
(Unfortunately, we didn't do anything with the value, like give it a name\, so we can't refer to it anymore, )Tj
0 -1.2 TD
(and the garbage collector will just reclaim it. \(OOPS!\) Now suppose we\ want to do the same thing, but )Tj
T*
(hold onto the closure so that we can do something with it, like calling \it. )Tj
0 -2.562 TD
(We'll bind a new variable )Tj
/T1_1 1 Tf
(my-counter)Tj
/T1_0 1 Tf
(, and use the above )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( expression to create a new )Tj
0 -1.2 TD
(environment and procedure, just like before. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme> \(define my-counter)Tj
0 -1.2 TD
(                \(let \(\(count 0\)\))Tj
T*
(                   \(lambda \(\))Tj
T*
(                      \(set! count \(+ count 1\)\))Tj
T*
(                      count\)\)\)\))Tj
T*
(#void)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Notice that we're using plain variable definition syntax here--the onl\y procedure we're creating is the )Tj
0 -1.205 TD
(value of the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression, which we're storing in the binding of )Tj
/T1_1 1 Tf
(my-counter)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Now we have a top-level binding of )Tj
/T1_1 1 Tf
(my-counter)Tj
/T1_0 1 Tf
(, whose value is the procedure we created. It will )Tj
0 -1.205 TD
(remember the binding of )Tj
/T1_1 1 Tf
(count)Tj
/T1_0 1 Tf
( created by the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( before evaluating the lambda expression. )Tj
0 -2.557 TD
(\(The crucial trick here relies on the fact that the let expression not \only creates the local variable binding )Tj
0 -1.205 TD
(for )Tj
/T1_1 1 Tf
(count)Tj
/T1_0 1 Tf
(, but returns the value of the last expression in its body--i.e., the cl\osure returned by the )Tj
0 -1.2 TD
(lambda expression. The pointer to the closure is passed along by the let\ to become the initial value for )Tj
0 -1.205 TD
(the binding of )Tj
/T1_1 1 Tf
(my-counter)Tj
/T1_0 1 Tf
(.\) )Tj
0 -2.562 TD
(The procedure keeps a pointer to the environment created by the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, which in turn has a pointer to the )Tj
0 -1.2 TD
(top-level environment, thus: )Tj
0 -2.557 TD
([ should simplify this picture and use it earlier, for the simpler examp\le where we don't keep a pointer to )Tj
0 -1.205 TD
(the closure. Should show the envt register pointing to the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( envt at the moment the closure is )Tj
0 -1.2 TD
(created. ] )Tj
/T1_1 1 Tf
0 -2.562 TD
(                    [envt])Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_122.html \(3 of 8\)1\1/3/2006 9:10:16 PM)Tj
ET
EMC 

endstreamendobj4725 0 obj<</Length 3002>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Understanding lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(         +-->+------------+-----+             )Tj
0 -1.2 TD
(         |   |      car   |  *--+--> ...    )Tj
T*
(         |   +------------+-----+            )Tj
T*
(         |   |      cons  |  *--+--> ...   )Tj
T*
(         |   +------------+-----+        )Tj
T*
(         |   |        *         |  )Tj
T*
(         |            *         )Tj
T*
(         |   |        *         |   )Tj
T*
(         |   +------------+-----+)Tj
T*
(         |   | my-counter |  *--+------------+)Tj
T*
(         |   +------------+-----+            |)Tj
T*
(         |                  /|\\              |)Tj
T*
(         |                   |               |)Tj
T*
(         |     [envt]        |               |)Tj
T*
(         |   +------------+--+--+            |)Tj
T*
(         |   |   [scope]  |  *  |            |)Tj
T*
(         |   +------------+-----+            |)Tj
T*
(         |   |      count |  *--+-->0        |)Tj
T*
(         |   +------------+-----+           \\|/)Tj
T*
(         |            /|\\                [closure])Tj
T*
(         |             |                +---------+)Tj
T*
(         |             +----------------+----*    |)Tj
T*
(         |                              +---------+ )Tj
T*
(         |                              |    *    |)Tj
T*
(         |                              +----+----+ )Tj
T*
(         |                                   |)Tj
T*
(         |                                  \\|/)Tj
T*
(         |                                 [code])Tj
T*
(         |                          +--------------------+)Tj
T*
(     +---+---+                      | \(set! count        |)Tj
T*
(envt |   *   |                      |       \(+ count 1\)\) |)Tj
T*
(     +-------+                      | count              |)Tj
T*
(                                    +--------------------+)Tj
/T1_0 1 Tf
0 -2.557 TD
(Now if we call the procedure )Tj
/T1_1 1 Tf
(my-counter)Tj
/T1_0 1 Tf
(, it will execute in its own "captured" environment \(created )Tj
0 -1.205 TD
(by the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(\). It will increment the binding of count in that environment, and retu\rn the result. The )Tj
0 -1.2 TD
(environment will continue to exist as long as the procedure does, and wi\ll store the latest value until next )Tj
0 -1.205 TD
(time )Tj
/T1_1 1 Tf
(my-counter)Tj
/T1_0 1 Tf
( is called: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(my-counter\))Tj
0 -1.2 TD
(1)Tj
T*
(Scheme>\(my-counter\))Tj
T*
(2)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_122.html \(4 of 8\)1\1/3/2006 9:10:16 PM)Tj
ET
EMC 

endstreamendobj4726 0 obj<</Length 3470>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Understanding lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(Scheme>\(my-counter\))Tj
0 -1.2 TD
(3)Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that if we evaluate the whole )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( form again, we will get a )Tj
/T1_2 1 Tf
(new)Tj
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( environment, with a new )Tj
0 -1.205 TD
(binding of )Tj
/T1_1 1 Tf
(count)Tj
/T1_0 1 Tf
(, and a new procedure that will increment and return its )Tj
/T1_1 1 Tf
(count)Tj
/T1_0 1 Tf
( value--in effect, each )Tj
0 -1.2 TD
(procedure has its own little piece of state which only it can see \(beca\use only it was created in that )Tj
0 -1.205 TD
(particular environment\). Each one remembers which piece of storage )Tj
/T1_1 1 Tf
(count)Tj
/T1_0 1 Tf
( referred to when it was )Tj
0 -1.2 TD
(created, and operates on that particular piece of storage. )Tj
0 -2.557 TD
(If we want, we can define a procedure that will create new environments,\ and new procedures that )Tj
0 -1.2 TD
(capture those environments--we can generate new counter procedures just \by calling that "higher-order" )Tj
T*
(procedure. \(Recall that a higher-order procedure is just a procedure th\at manipulates other procedures. In )Tj
T*
(this case, we're making a procedure that )Tj
/T1_2 1 Tf
(generates)Tj
/T1_0 1 Tf
( procedures.\) )Tj
0 -2.562 TD
(Each time )Tj
/T1_1 1 Tf
(make-counter)Tj
/T1_0 1 Tf
( is called, it will execute a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, creating an environment, and inside that it )Tj
0 -1.205 TD
(will use )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( to create a counter procedure. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme> \(define \(make-counter\))Tj
0 -1.2 TD
(           ;; bind count and create a new procedure that will \(when)Tj
T*
(           ;; called\) increment that binding and return its value)Tj
T*
(           \(let \(\(count 0\)\))Tj
T*
(              \(lambda \(\))Tj
T*
(                 \(set! count \(+ count 1\)\))Tj
T*
(                 count\)\)\))Tj
T*
(make-counter)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Note that here we're using procedure-definition syntax.\) )Tj
0 -2.557 TD
(Each of the resulting procedures will have its own captured count variab\le, and keep it independently of )Tj
0 -1.2 TD
(the other procedures. )Tj
0 -2.562 TD
(Make sure you understand that the above procedure definition could have \used an explicit )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( to )Tj
0 -1.205 TD
(create the procedure )Tj
/T1_1 1 Tf
(make-counter)Tj
/T1_0 1 Tf
(, rather than the special procedure definition syntax: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme> \(define make-counter)Tj
0 -1.2 TD
(                ;; create a procedure that will bind count and)Tj
T*
(                ;; return a new procedure that will increment that)Tj
T*
(                ;; binding and return its value)Tj
T*
(                \(lambda \(\))Tj
T*
(                   \(let \(\(count 0\)\))Tj
T*
(                      \(lambda \(\))Tj
T*
(                         \(set! count \(+ count 1\)\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_122.html \(5 of 8\)1\1/3/2006 9:10:16 PM)Tj
ET
EMC 

endstreamendobj4727 0 obj<</Length 2750>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Understanding lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(                         count\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(You may actually find this easier to understand, because it shows you ex\actly what's going on: binding )Tj
/T1_1 1 Tf
0 -1.205 TD
(make-counter)Tj
/T1_0 1 Tf
( and creating a procedure \(with the outer )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
(\) that )Tj
/T1_2 1 Tf
(when called)Tj
/T1_0 1 Tf
(, will evaluate a )Tj
/T1_1 1 Tf
0 -1.205 TD
(let)Tj
/T1_0 1 Tf
( to create an environment, and a )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( \(the inner one\) to create a new procedure that captures )Tj
0 -1.2 TD
(that particular environment.\) )Tj
0 -2.557 TD
(Now we'll call the procedure created by the above definition, three time\s, and each time it will create a )Tj
0 -1.2 TD
(new procedure: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme> \(define c1 \(make-counter\)\))Tj
0 -1.2 TD
(C1)Tj
T*
(Scheme> \(define c2 \(make-counter\)\))Tj
T*
(C2)Tj
T*
(Scheme> \(define c3 \(make-counter\)\))Tj
T*
(C3)Tj
/T1_0 1 Tf
0 -2.552 TD
(Now we'll call those procedures and look at their return values, to illu\strate that they're independent )Tj
0 -1.2 TD
(counters: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme> \(c1\))Tj
0 -1.2 TD
(1)Tj
T*
(Scheme> \(c1\))Tj
T*
(2)Tj
T*
(Scheme> \(c2\))Tj
T*
(1)Tj
T*
(Scheme> \(c2\))Tj
T*
(2)Tj
T*
(Scheme> \(c1\))Tj
T*
(3)Tj
T*
(Scheme> \(c1\))Tj
T*
(4)Tj
T*
(Scheme> \(c3\))Tj
T*
(1)Tj
/T1_0 1 Tf
0 -2.552 TD
(Neat, huh? The combination of block structure \(local environments\) wit\h first-class procedures )Tj
0 -1.2 TD
(\(closures\), allows us to associate state with procedures. Garbage coll\ection makes this very convenient, )Tj
T*
(because we know that the environments will hang around as long as the pr\ocedures do. )Tj
0 -2.557 TD
(This example shows that we can use closures to create )Tj
/T1_2 1 Tf
(private)Tj
/T1_0 1 Tf
( variable bindings. Notice that once we've )Tj
0 -1.205 TD
(exited a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, the variables aren't visible anymore. But if we call a closure that wa\s created there, they )Tj
0 -1.205 TD
(become visible again---)Tj
/T1_2 1 Tf
(to that closure only)Tj
/T1_0 1 Tf
(. The )Tj
/T1_1 1 Tf
(only)Tj
/T1_0 1 Tf
( way to operate on a variable binding after it has )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_122.html \(6 of 8\)1\1/3/2006 9:10:16 PM)Tj
ET
EMC 

endstreamendobj4728 0 obj<</Length 4060>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Understanding lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(gone out of scope is to call a procedure that was created while it was i\n scope. This means that once a )Tj
0 -1.2 TD
(binding construct has been exited, the set of procedures that can operat\e on the bindings it creates is )Tj
T*
(fixed. As I'll show later in this chapter, we can use this to structure \programs and make sure that things )Tj
T*
(don't interact when they're not supposed to. )Tj
0 -2.557 TD
(If you're familiar with object-oriented programming, you may notice a re\semblance between closures )Tj
0 -1.2 TD
(and "objects" in the object-oriented sense. A closure associates data wi\th a procedure, where an object )Tj
T*
(associates data with multiple procedures. After we get to object-oriente\d programming, we'll explain )Tj
T*
(how object-oriented programming facilities can be implemented in Scheme \using closures. )Tj
0 -2.557 TD
(If you're familiar with graphical user interface systems, you may notice\ that GUI's often use "callbacks," )Tj
0 -1.2 TD
(which are procedures that are executed in response to user input events \like button clicks and menu )Tj
T*
(selections, and do something application-specific. \(The application "re\gisters" callback procedures with )Tj
T*
(the GUI system, which then calls them when the user clicks on the specif\ied buttons.\) Closures make )Tj
T*
(excellent GUI callback procedures, because the application can create a \closure for a specific context by )Tj
T*
(capturing variable bindings, to customize the behavior of the procedure.\ )Tj
0 -2.557 TD
(Since argument variables are just local variables that get their initial\ values in a special way, we can use )Tj
0 -1.205 TD
(argument variables in much the same way as )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( variables. )Tj
0 -2.562 TD
(Here's a new version of )Tj
/T1_1 1 Tf
(make-counter)Tj
/T1_0 1 Tf
(, which takes an argument that gives the initial value for a )Tj
0 -1.2 TD
(counter--it doesn't have to start at zero. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(make-counter count\))Tj
0 -1.2 TD
(   ;; return a new procedure to increment argument variable)Tj
T*
(   ;; count and return its value)Tj
T*
(   \(lambda \(\))Tj
T*
(      \(set! count \(+ count 1\)\))Tj
T*
(      count\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Here we're using procedure-definition syntax, so we're creating a proced\ure of one argument )Tj
/T1_1 1 Tf
(count)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Whenever the procedure is called, )Tj
/T1_1 1 Tf
(count)Tj
/T1_0 1 Tf
( will be bound \(once\) and initialized to whatever value we )Tj
0 -1.205 TD
(give as an argument to )Tj
/T1_1 1 Tf
(make-counter)Tj
/T1_0 1 Tf
(. Then the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression will be evaluted to create a new )Tj
T*
(procedure that captures that binding of )Tj
/T1_1 1 Tf
(count)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(\(The argument variable )Tj
/T1_1 1 Tf
(count)Tj
/T1_0 1 Tf
( is bound to a fresh piece of storage when the procedure is entered, and\ )Tj
0 -1.2 TD
(we can "capture" that binding by creating a closure in its scope. As wit\h a let variable, we get a different )Tj
0 -1.205 TD
(piece of storage each time we call )Tj
/T1_1 1 Tf
(make-counter)Tj
/T1_0 1 Tf
(.\) )Tj
0 -2.557 TD
(For this kind of counter, we'd probably rather return the )Tj
/T1_2 1 Tf
(old)Tj
/T1_0 1 Tf
( value of the counter, rather than the new )Tj
0 -1.205 TD
(one, each time we increment it. To do that, we can put a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( inside the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression, to hold )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_122.html \(7 of 8\)1\1/3/2006 9:10:16 PM)Tj
ET
EMC 

endstreamendobj4729 0 obj<</Length 4450>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Understanding lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(onto the old value )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(make-counter count\))Tj
0 -1.2 TD
(   ;; create a procedure that )Tj
T*
(   \(lambda \(\))Tj
T*
(      \(let \(\(value count\)\)         ;; hang onto value of count)Tj
T*
(         \(set! count \(+ count 1\)\)  ;; increment count)Tj
T*
(         value\)\)\)                  ;; return previous value)Tj
ET
0 0 1 RG
1.628 w 10 M 0 j 0 J []0 d 
10 588.53 m
380.595 588.53 l
S
0 0 1 rg
BT
/T1_2 1 Tf
19.3846 0 0 19.3846 10 593.4149 Tm
(Lambda is cheap, and Closures are Fast)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 554.0466 Tm
(It may seem that )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( is an expensive operation--after all, it creates procedure objects on t\he fly. At )Tj
T*
(first glance, you might think that executing lambda would require a call\ to the compiler each time. This )Tj
T*
(is not the case, though, and lambda is actually a fairly cheap constant-\time operation. )Tj
0 -2.562 TD
(Notice that the procedure part of a )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression is known at compile time--each time the )Tj
/T1_1 1 Tf
0 -1.205 TD
(lambda)Tj
/T1_0 1 Tf
( is executed at run time, it will create a new closure, and may capture \a new environment, but )Tj
0 -1.2 TD
(the expression closed in that environment is determined solely by the bo\dy of the lambda expression. A )Tj
T*
(compiler for Scheme will therefore compile the code for all of the closu\res created by a particular )Tj
/T1_1 1 Tf
0 -1.205 TD
(lambda)Tj
/T1_0 1 Tf
( expression, when it compiles the enclosing procedure. So, for example, \when our example )Tj
0 -1.205 TD
(procedure )Tj
/T1_1 1 Tf
(make-counter)Tj
/T1_0 1 Tf
( is compiled, the compiler will also compile the code for the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( body. )Tj
0 -1.205 TD
(This code will be kept around for use by )Tj
/T1_1 1 Tf
(make-counter)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(The actual run-time code for )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( just fetches the address of the code, and the current environment )Tj
0 -1.205 TD
(pointer, and puts them in a creates a new closure object on the heap. )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( is therefore about as fast )Tj
0 -1.205 TD
(as )Tj
/T1_1 1 Tf
(cons)Tj
/T1_0 1 Tf
(---all that's really happening is the creation of the closure object its\elf, not anything expensive )Tj
0 -1.2 TD
(like calling the compiler at run-time. )Tj
0 -2.557 TD
(\(At this point, some people who are )Tj
/T1_3 1 Tf
(really)Tj
/T1_0 1 Tf
( concerned with efficiency may be wondering if Scheme is )Tj
0 -1.2 TD
(slow because variable bindings are allocated on the heap rather than on \a stack, or in registers. Don't )Tj
T*
(worry much about this--a good Scheme compiler can actually avoid heap-al\locating environments when )Tj
T*
(no closures are created in their scope, and can register-allocate most v\ariables, as other compilers do.)Tj
ET
0.706 w 
10 191.991 m
33.324 191.991 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 10 194.1075 Tm
(\(10\))Tj
0 0 0 rg
(\) )Tj
ET
0.5 0.5 0.5 rg
10 159.332 m
10 161.332 l
602 161.332 l
601 160.332 l
11 160.332 l
11 160.332 l
h
f
0.875 0.875 0.875 rg
602 161.332 m
602 159.332 l
10 159.332 l
11 160.332 l
601 160.332 l
601 160.332 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 140.3075 Tm
(Go to the )Tj
ET
65.608 138.191 m
88.162 138.191 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 140.3075 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 138.191 m
143.378 138.191 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 140.3075 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 138.191 m
174.486 138.191 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 140.3075 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 138.191 m
200.932 138.191 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 140.3075 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 138.191 m
343.634 138.191 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 140.3075 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_122.html \(8 of 8\)1\1/3/2006 9:10:16 PM)Tj
ET
EMC 

endstreamendobj4730 0 obj(An Introduction to Scheme and its Implementation - Understanding lambda)endobj4731 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_122.html)/S 700 0 R>>endobj4732 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_122.html)endobj4733 0 obj(5Ñ7ëêˆ"N=>,)endobj4734 0 obj<</TS(D:20061104051016)/ID 4733 0 R/CT(text/html)/O[4679 0 R 4691 0 R 4693 0 R 4696 0 R 4699 0 R 4703 0 R 4705 0 R 4707 0 R]/S/SPS/T 4730 0 R/TID 4736 0 R/SI 4735 0 R>>endobj4735 0 obj<</TS(D:20061104051016)/AU 4732 0 R>>endobj4736 0 obj(@Q†¸LÁ`∞™˜ñ*∂)endobj4737 0 obj<</Parent 710 0 R/Next 4793 0 R/Dest[4679 0 R/XYZ 0 792 null]/Prev 4676 0 R/SE 4678 0 R/Title(An Introduction to Scheme and its Implementation - Understanding lambda)>>endobj4738 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4739 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 4752 0 R/Type/MCR>><</MCID 0/Pg 4756 0 R/Type/MCR>><</MCID 0/Pg 4758 0 R/Type/MCR>><</MCID 0/Pg 4760 0 R/Type/MCR>><</MCID 0/Pg 4766 0 R/Type/MCR>><</MCID 0/Pg 4768 0 R/Type/MCR>><</MCID 0/Pg 4770 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 4740 0 R>>endobj4740 0 obj<</Annots 4743 0 R/Parent 4761 0 R/ID 4789 0 R/StructParents 255/Contents 4778 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 1287 0 R/T1_3 737 0 R/T1_4 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4741 0 obj[4739 0 R]endobj4742 0 obj<</Rect[62.5812 750.726 84.0947 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4743 0 obj[4742 0 R 4744 0 R 4745 0 R 4746 0 R 4747 0 R 4749 0 R 4751 0 R]endobj4744 0 obj<</Rect[90.7717 750.726 136.763 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4679 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_122.html)/S/URI>>/Border[0 0 0]>>endobj4745 0 obj<</Rect[143.44 750.726 166.436 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4796 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_124.html)/S/URI>>/Border[0 0 0]>>endobj4746 0 obj<</Rect[173.113 750.726 191.662 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4747 0 obj<</Rect[239.51 750.726 327.781 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4748 0 obj[4740 0 R/XYZ 0 733.175 null]endobj4749 0 obj<</Rect[9.53865 693.527 322.062 713.202]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC154)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC154)/S/URI>>/Border[0 0 0]>>endobj4750 0 obj[4740 0 R/XYZ 0 80.5629 null]endobj4751 0 obj<</Rect[9.53865 62.6596 359.761 79.0221]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC155)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC155)/S/URI>>/Border[0 0 0]>>endobj4752 0 obj<</Parent 4761 0 R/ID 4789 0 R/StructParents 256/Contents 4779 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4753 0 obj[4739 0 R]endobj4754 0 obj<</Limits[192 223]/Nums[192 3932 0 R 193 3955 0 R 194 3967 0 R 195 3969 0 R 196 3990 0 R 197 4003 0 R 198 4023 0 R 199 4037 0 R 200 4043 0 R 201 4047 0 R 202 4051 0 R 203 4075 0 R 204 4092 0 R 205 4099 0 R 206 4107 0 R 207 4116 0 R 208 4139 0 R 209 4166 0 R 210 4177 0 R 211 4179 0 R 212 4181 0 R 213 4205 0 R 214 4235 0 R 215 4246 0 R 216 4268 0 R 217 4294 0 R 218 4304 0 R 219 4325 0 R 220 4351 0 R 221 4362 0 R 222 4364 0 R 223 4385 0 R]>>endobj4755 0 obj<</Limits[224 288]/Nums[]>>endobj4756 0 obj<</Parent 4761 0 R/ID 4789 0 R/StructParents 257/Contents 4780 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4757 0 obj[4739 0 R]endobj4758 0 obj<</Parent 4761 0 R/ID 4789 0 R/StructParents 258/Contents 4781 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4759 0 obj[4739 0 R]endobj4760 0 obj<</Annots 4765 0 R/Parent 4807 0 R/ID 4789 0 R/StructParents 259/Contents 4782 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4761 0 obj<</Parent 4900 0 R/Count 5/Type/Pages/Kids[4707 0 R 4740 0 R 4752 0 R 4756 0 R 4758 0 R]>>endobj4762 0 obj[4739 0 R]endobj4763 0 obj[4760 0 R/XYZ 0 407.461 null]endobj4764 0 obj<</Rect[9.53865 389.557 376.88 405.92]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC156)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC156)/S/URI>>/Border[0 0 0]>>endobj4765 0 obj[4764 0 R]endobj4766 0 obj<</Parent 4807 0 R/ID 4789 0 R/StructParents 260/Contents 4783 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4767 0 obj[4739 0 R]endobj4768 0 obj<</Parent 4807 0 R/ID 4789 0 R/StructParents 261/Contents 4784 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4769 0 obj[4739 0 R]endobj4770 0 obj<</Annots 4773 0 R/Parent 4807 0 R/ID 4789 0 R/StructParents 262/Contents 4785 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4771 0 obj[4739 0 R]endobj4772 0 obj<</Rect[62.5812 716.668 84.0947 730.976]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4773 0 obj[4772 0 R 4774 0 R 4775 0 R 4776 0 R 4777 0 R]endobj4774 0 obj<</Rect[90.7717 716.668 136.763 730.976]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4679 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_122.html)/S/URI>>/Border[0 0 0]>>endobj4775 0 obj<</Rect[143.44 716.668 166.436 730.976]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4796 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_124.html)/S/URI>>/Border[0 0 0]>>endobj4776 0 obj<</Rect[173.113 716.668 191.662 730.976]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4777 0 obj<</Rect[239.51 716.668 327.781 730.976]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4778 0 obj<</Length 5225>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - An Interpreter with l\et and lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(Go to the )Tj
ET
0 0 1 RG
0.673 w 10 M 0 j 0 J []0 d 
62.581 752.88 m
84.095 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 62.5812 754.8994 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
90.772 752.88 m
136.763 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 90.7717 754.8994 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
143.44 752.88 m
166.436 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 143.4404 754.8994 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
173.113 752.88 m
191.662 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 173.1132 754.8994 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
239.51 752.88 m
327.781 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 239.5099 754.8994 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
9.539 739.852 m
9.539 741.759 l
602.461 741.759 l
601.507 740.805 l
10.493 740.805 l
10.493 740.805 l
h
f
0.875 0.875 0.875 rg
602.461 741.759 m
602.461 739.852 l
9.539 739.852 l
10.493 740.805 l
601.507 740.805 l
601.507 740.805 l
h
f
1.553 w 
9.539 694.19 m
179.058 694.19 l
S
0.932 w 
179.058 696.054 m
212.34 696.054 l
S
1.553 w 
212.34 694.19 m
255.497 694.19 l
S
0.932 w 
255.497 696.054 m
322.062 696.054 l
S
0 0 1 rg
BT
/T1_1 1 Tf
18.4903 0 0 18.4903 9.5387 698.8496 Tm
(An Interpreter with )Tj
/T1_2 1 Tf
(let)Tj
/T1_1 1 Tf
( and )Tj
/T1_2 1 Tf
(lambda)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 661.1305 Tm
(In this section, I'll present a new interpreter for a bigger subset of S\cheme; it handles all of the essential )Tj
0 -1.2 TD
(special forms of Scheme, except for macro definitions. \(A macro facilit\y would be easy to add, as well, and )Tj
T*
(would make it easy to implement the remaining special forms by automatic\ transformation, in terms of the )Tj
T*
(special forms the interpreter "understands" directly. A later chapter wi\ll show how to do this.\) )Tj
0 -2.557 TD
(The new interpreter is very much like the one from the last chapter, wit\h three important differences: )Tj
/T1_3 1 Tf
6.6771 0 0 6.6771 34.0654 544.7589 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 544.7589 Tm
(It implements local binding environments as well as a top-level environm\ent. Evaluating an expression )Tj
0 -1.205 TD
(\(such as a )Tj
/T1_4 1 Tf
(let)Tj
/T1_0 1 Tf
(\) may create a new environment, and subexpressions \(such as the )Tj
/T1_4 1 Tf
(let)Tj
/T1_0 1 Tf
( body\) can )Tj
0 -1.205 TD
(simply be evaluated in the new environment by recursive calls to )Tj
/T1_4 1 Tf
(eval)Tj
/T1_0 1 Tf
( )Tj
/T1_3 1 Tf
6.6771 0 0 6.6771 34.0654 496.5555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 496.5555 Tm
(It allows new procedures to be defined, creating closures. Closures pair\ environments with code bodies )Tj
0 -1.205 TD
(that are interpreted by the interpreter. Calling a closure is much like \evaluating a )Tj
/T1_4 1 Tf
(let)Tj
/T1_0 1 Tf
(. The arguments )Tj
0 -1.205 TD
(are bound in a local environment \(like )Tj
/T1_4 1 Tf
(let)Tj
/T1_0 1 Tf
( variables\), and the body is interpreted in that environment. )Tj
/T1_3 1 Tf
6.6771 0 0 6.6771 34.0654 448.3522 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 448.3522 Tm
(We will treat special forms differently, binding special form names in m\uch the same way as normal )Tj
0 -1.2 TD
(variable names. This will make the interpreter cleaner and more extensib\le. )Tj
-2.857 -2.562 Td
(Here is our new )Tj
/T1_4 1 Tf
(eval)Tj
/T1_0 1 Tf
(: )Tj
/T1_4 1 Tf
0 -2.562 TD
(\(define \(eval expr envt\))Tj
0 -1.2 TD
(   \(cond \(\(symbol? expr\))Tj
T*
(          \(eval-symbol expr envt\)\))Tj
T*
(         \(\(pair? expr\))Tj
T*
(          \(eval-list expr envt\)\))Tj
T*
(         \(\(self-evaluating? expr\))Tj
T*
(          expr\))Tj
T*
(         \(#t)Tj
T*
(          \(error "Illegal expression form" expr\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that not much has changed---)Tj
/T1_4 1 Tf
(eval)Tj
/T1_0 1 Tf
( still just analyzes expressions and dispatches to more specialized )Tj
0 -1.2 TD
(helper procedures that handle particular kinds of expressions. )Tj
0 -2.562 TD
(The important difference is that )Tj
/T1_4 1 Tf
(eval)Tj
/T1_0 1 Tf
( expects an environment argument )Tj
/T1_4 1 Tf
(envt)Tj
/T1_0 1 Tf
(, which represents the binding )Tj
0 -1.2 TD
(environment in which to evaluate an expression. That is, the environment\ argument is used to keep track of )Tj
T*
(the meaning of variable names--what storage they refer to--as teh interp\retation process moves in and out of )Tj
T*
(scopes. )Tj
ET
1.294 w 
9.539 63.179 m
359.761 63.179 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 67.0617 Tm
(Nested Environments and Recursive Evaluation)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_123.html \(1 of 8\)1\1/3/2006 9:10:25 PM)Tj
ET
EMC 

endstreamendobj4779 0 obj<</Length 4419>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - An Interpreter with l\et and lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(Instead of using the old "flat" representation of an environment, which \was just a table of name-value pairs, )Tj
0 -1.2 TD
(we'll represent nested environments as a list of tables, or )Tj
/T1_1 1 Tf
(environment chain)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(When we begin interpreting, the environment chain will consist of one ta\ble, the top-level environment. )Tj
0 -1.205 TD
(When we evaluate a binding construct such as a )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(, we will create a new table, or )Tj
/T1_1 1 Tf
(environment frame)Tj
/T1_0 1 Tf
(, )Tj
0 -1.2 TD
(which binds the local variables. This frame will contain the name-value \pairs bound locally, plus a pointer to )Tj
T*
(the next enclosing environment. The environment chain is thus a linked l\ist that acts like a stack, for the most )Tj
T*
(part--new enviornment frames are pushed on the front of the list when en\tering a binding construct, and )Tj
T*
(popped off the front of the list when exiting it. )Tj
0 -2.557 TD
(We could implement this stack-like behavior with an explicit stack data \structure in the interpreter, but it's )Tj
0 -1.2 TD
(easier to use the activation "stack" of the language we're using to impl\ement the interpreter. \(In this case, that )Tj
T*
(happens to be Scheme, but if we were implementing the interpreter in C, \we could use C's activation stack.\) )Tj
0 -1.2 TD
(We'll just use recursion to evaluate subexpressions, and rely on the lan\guage we're implementing the )Tj
0 -1.2 TD
(interpreter in to remember where we were in interpreting the enclosing e\xpressions. )Tj
0 -2.557 TD
(At any given point during evaluation, the )Tj
/T1_1 1 Tf
(current environment)Tj
/T1_0 1 Tf
( is the environment referred to by the )Tj
0 -1.205 TD
(interpreter's internal variable )Tj
/T1_2 1 Tf
(envt)Tj
/T1_0 1 Tf
(, an in particular the most recent binding of )Tj
/T1_2 1 Tf
(envt)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(When we evaluate an expression that doesn't change the interpretive envi\ronment, and call )Tj
/T1_2 1 Tf
(eval)Tj
/T1_0 1 Tf
( recursively )Tj
0 -1.205 TD
(to evaluate subexpressions, we simply pass the )Tj
/T1_2 1 Tf
(envt)Tj
/T1_0 1 Tf
( variable's value to the recursive calls. This will ensure )Tj
0 -1.2 TD
(that the subexpressions execute in the same environment as the enclosing\ expression expression. )Tj
0 -2.557 TD
(When we evaluate a binding construct, and evaluate subexpressions in tha\t environment, we create a new )Tj
0 -1.205 TD
(environment and pass )Tj
/T1_1 1 Tf
(that)Tj
/T1_0 1 Tf
( to the recursive calls to )Tj
/T1_2 1 Tf
(eval)Tj
/T1_0 1 Tf
(, so the subexpressions will execute in the new )Tj
0 -1.2 TD
(enviornment instead. )Tj
0 -2.557 TD
(Notice that we don't actually modify the environment chain when creating\ a new environment--we simply )Tj
0 -1.205 TD
(create a new frame which holds a pointer to the old environment, and pas\s it to the recursive )Tj
/T1_2 1 Tf
(eval)Tj
/T1_0 1 Tf
(. The fact )Tj
0 -1.2 TD
(that we don't actually modify the structure of the environment is import\ant--it's will let us implement closure )Tj
T*
(correctly. )Tj
0 -2.562 TD
(When the interpreter returns from evaluating a subexpression, it returns\ to an enclosing invocation of )Tj
/T1_2 1 Tf
(eval)Tj
/T1_0 1 Tf
(; )Tj
0 -1.205 TD
(the old environment will become visible again because we return to an )Tj
/T1_2 1 Tf
(eval)Tj
/T1_0 1 Tf
( where that environment is the )Tj
0 -1.205 TD
(value of the )Tj
/T1_2 1 Tf
(envt)Tj
/T1_0 1 Tf
( argument. )Tj
0 -2.557 TD
(For example, consider what happens when we interpret the following expre\ssion, starting at the top level: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(let \(\(foo 1\)\))Tj
0 -1.2 TD
(   \(if \(a\))Tj
T*
(       \(let \(\(bar 2\)\))Tj
T*
(          \(if \(b\))Tj
T*
(              \(c\))Tj
T*
(              \(d\)\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_123.html \(2 of 8\)1\1/3/2006 9:10:25 PM)Tj
ET
EMC 

endstreamendobj4780 0 obj<</Length 3923>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - An Interpreter with l\et and lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 754.8351 Tm
(          \(e\)\))Tj
0 -1.2 TD
(       \(f\))Tj
T*
(   \(g\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
([ We'll focus on the nested calls to eval corresponding to the nesting o\f let, if, let, if ] )Tj
0 -2.562 TD
(If we look at the nested calls to )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
(, we first see a call that evaluates the whole expression in the top-lev\el )Tj
0 -1.2 TD
(environment: )Tj
/T1_1 1 Tf
0 -2.562 TD
(                            +-----+)Tj
0 -1.2 TD
(eval  expr: \(let...\)  envt: |  *--+--> [toplevel envt])Tj
T*
(                            +-----+)Tj
/T1_0 1 Tf
0 -2.557 TD
(\(I've given a textual representation of the )Tj
/T1_1 1 Tf
(expr)Tj
/T1_0 1 Tf
( argument, but a pictorial representation of the )Tj
/T1_1 1 Tf
(envt)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(argument to )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
(.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(eval)Tj
/T1_0 1 Tf
( will dispatch to )Tj
/T1_1 1 Tf
(eval-let)Tj
/T1_0 1 Tf
(, passing it the same environment. )Tj
/T1_1 1 Tf
(eval-let)Tj
/T1_0 1 Tf
( will evaluate the initial )Tj
0 -1.205 TD
(value expression )Tj
/T1_1 1 Tf
(1)Tj
/T1_0 1 Tf
( in that environment, and create a new environment binding )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(. \(I'll ignore the recursive )Tj
0 -1.205 TD
(call to )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
( to evaluate the argument.\) It will then call )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
( recursively to evaluate the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( body in that )Tj
0 -1.2 TD
(environment. )Tj
0 -2.562 TD
(I'll depict the nested invocations of )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(eval-let)Tj
/T1_0 1 Tf
( top-to-bottom, showing the stack growing toward )Tj
0 -1.2 TD
(the bottom of the picture. \(This just turns out to be simpler than draw\ing the stack growing up.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(                                +-----+)Tj
0 -1.2 TD
(eval     expr: \(let...\)   envt: |  *--+--> [toplevel envt])Tj
T*
(                                +-----+      /|\\     /|\\)Tj
T*
(                                              |       |)Tj
T*
(                                +-----+       |       |)Tj
T*
(eval-let expr: \(let...\)   envt: |  *--+-------+       |)Tj
T*
(                                +-----+               |)Tj
T*
(                                                      |)Tj
T*
(                                +-----+               |)Tj
T*
(eval     expr: \(if...\)    envt: |  *--+-->  [ [foo 1] * ])Tj
T*
(                                +-----+  )Tj
0 -2.557 TD
(eval-if)Tj
/T1_0 1 Tf
( will evaluate the condition expression )Tj
/T1_1 1 Tf
(\(a\))Tj
/T1_0 1 Tf
( in the given environment. We'll ignore that recursive )Tj
0 -1.205 TD
(call to )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
(, but assume it returns a true value. In that case, )Tj
/T1_1 1 Tf
(eval-if)Tj
/T1_0 1 Tf
( will evaluate its consequent, the inner )Tj
/T1_1 1 Tf
0 -1.205 TD
(let)Tj
/T1_0 1 Tf
( expression, by another recursive call to )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(At this point, the "stack" of invocations of )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(eval-let)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(eval-if)Tj
/T1_0 1 Tf
( looks like this: )Tj
/T1_1 1 Tf
T*
(                                +-----+)Tj
0 -1.2 TD
(eval     expr: \(let...\)   envt: |  *--+--> [toplevel envt])Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_123.html \(3 of 8\)1\1/3/2006 9:10:25 PM)Tj
ET
EMC 

endstreamendobj4781 0 obj<</Length 3942>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - An Interpreter with l\et and lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 754.8351 Tm
(                                +-----+      /|\\     /|\\)Tj
0 -1.2 TD
(                                              |       |)Tj
T*
(                                +-----+       |       |)Tj
T*
(eval-let expr: \(let...\)   envt: |  *--+-------+       |)Tj
T*
(                                +-----+               |)Tj
T*
(                                                      |)Tj
T*
(                                +-----+               |)Tj
T*
(eval     expr: \(if...\)    envt: |  *--+---> [ [foo 1] * ])Tj
T*
(                                +-----+      /|\\  )Tj
T*
(                                              | )Tj
T*
(                                              | )Tj
T*
(                                +-----+       |   )Tj
T*
(eval-if  expr: \(if...\)    envt: |  *--+-------+       )Tj
0 -1.2 TD
(                                +-----+       |       )Tj
0 -1.2 TD
(                                              |      )Tj
T*
(                                +-----+       |        )Tj
T*
(eval     expr: \(let...\)   envt: |  *--+-------+)Tj
T*
(                                +-----+)Tj
/T1_0 1 Tf
0 -2.557 TD
(Again, the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( will evaluate the intial value expression, )Tj
/T1_1 1 Tf
(2)Tj
/T1_0 1 Tf
(, by a recursive call to )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
(, which we will ignore )Tj
0 -1.205 TD
(here. Then it will bind )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
( in a new environment frame, and call )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
( recursively to evaluate the body in )Tj
0 -1.205 TD
(that environment. The body consists of another if, so )Tj
/T1_1 1 Tf
(eval-if)Tj
/T1_0 1 Tf
( will be called, and it will evaluate its )Tj
0 -1.2 TD
(argument expression and either the consequent or the alternative in that\ environment. )Tj
0 -2.562 TD
(Assuming the condition returns true and it evaluates the consequent, )Tj
/T1_1 1 Tf
(\(c\))Tj
/T1_0 1 Tf
(, here's the "stack" of invocations of )Tj
/T1_1 1 Tf
0 -1.205 TD
(eval)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(eval-let)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(eval-if)Tj
/T1_0 1 Tf
( at the point where )Tj
/T1_1 1 Tf
(\(c\))Tj
/T1_0 1 Tf
( is evaluated: )Tj
/T1_1 1 Tf
0 -2.562 TD
(                                +-----+)Tj
0 -1.2 TD
(eval     expr: \(let...\)   envt: |  *--+--> [toplevel envt])Tj
T*
(                                +-----+      /|\\     /|\\)Tj
T*
(                                              |       |)Tj
T*
(                                +-----+       |       |)Tj
T*
(eval-let expr: \(let...\)   envt: |  *--+-------+       |)Tj
T*
(                                +-----+               |)Tj
T*
(                                                      |)Tj
T*
(                                +-----+               |)Tj
T*
(eval     expr: \(if...\)    envt: |  *--+---> [ [foo 1] * ])Tj
T*
(                                +-----+      /|\\     /|\\)Tj
T*
(                                              |       |)Tj
T*
(                                              |       |)Tj
T*
(                                +-----+       |       |)Tj
T*
(eval-if  expr: \(if...\)    envt: |  *--+-------+       |)Tj
T*
(                                +-----+       |       |)Tj
T*
(                                              |       |)Tj
T*
(                                +-----+       |       | )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_123.html \(4 of 8\)1\1/3/2006 9:10:25 PM)Tj
ET
EMC 

endstreamendobj4782 0 obj<</Length 4651>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - An Interpreter with l\et and lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 754.8351 Tm
(eval     expr: \(let...\)   envt: |  *--+-------+       |)Tj
0 -1.2 TD
(                                +-----+               |)Tj
T*
(                                                      |)Tj
T*
(                                +-----+               |)Tj
T*
(eval     expr: \(if...\)    envt: |  *--+---> [ [bar 2] * ])Tj
T*
(                                +-----+      /|\\  )Tj
T*
(                                              | )Tj
T*
(                                +-----+       | )Tj
T*
(eval     expr: \(c\)        envt: |  *--+-------+    )Tj
T*
(                                +-----+    )Tj
/T1_0 1 Tf
0 -2.552 TD
([ Note that the pictures above all depict evaluation of nested )Tj
/T1_2 1 Tf
(non-tail)Tj
/T1_0 1 Tf
( expressions. In the case of tail )Tj
0 -1.205 TD
(expressions, the "stack" will not include as much information, because t\he state of the calls to )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
(, etc., will )Tj
0 -1.2 TD
(not be saved before the calls that evaluate subexpressions. )Tj
0 -2.557 TD
(Our interpreter is written in good tail-recursive style, with tail calls\ to evaluate expressions that are tails of )Tj
0 -1.2 TD
(expressions in the language we're interpreting. This means that the inte\preter is tail-recursive wherever the )Tj
T*
(program it's implementing is tail-recursive, and since it's implemented \in a tail-recursive language \(Scheme\), )Tj
T*
(we preserve the tail-recurson of the program we're interpreting. In effe\ct, we snarf tail-call optimization from )Tj
T*
(the underlying Scheme system. If we were implementing our interpreter in\ C, we'd have to use special tricks )Tj
T*
(to preserve tail recursion. We'll show how this can be done later, when \we discuss our compiler. ] )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 390.076 m
376.88 390.076 l
S
0 0 1 rg
BT
/T1_3 1 Tf
15.4086 0 0 15.4086 9.5387 393.9594 Tm
(Integrated, Extensible Treatment of Special Forms)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 357.4052 Tm
(In the interpreter in the last chapter, we implemented special forms dir\ectly in the interpreter---)Tj
/T1_1 1 Tf
(eval-list)Tj
/T1_0 1 Tf
( )Tj
T*
(checked compound expressions to see if they began with a special form na\me. In effect, we hardcoded the )Tj
0 -1.205 TD
(meanings of special form names in the procedure )Tj
/T1_1 1 Tf
(eval-special-form)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(In our new interpreter, we'll use a cleaner approach, which treats speci\al form definitions pretty much like )Tj
0 -1.2 TD
(variable definitions. This will let us put special forms in particular e\nvironments, and use the normal scoping )Tj
T*
(mechanisms to look up the routines that compile them. )Tj
0 -2.557 TD
(This has several advantages. The first is that it makes our interpreter \more modular. We can create different )Tj
0 -1.2 TD
(environments with different special forms, and use the same interpreter \to interpret different languages. That )Tj
T*
(is, we separate out the basic operation of the interpreter from the part\icular special forms we decide on. )Tj
0 -2.557 TD
(The second advantage is that it will allow us to build an elegant macro \facility, so that new special forms can )Tj
0 -1.2 TD
(be defined in terms of old ones. \(This will be described in detail in [\ a later chapter ].\) )Tj
0 -2.557 TD
([ this is out of place, but fwd ref idea anyway? Shorten? Or just move?]\ )Tj
T*
(A Scheme interpreter or compiler only needs to "understand" procedure ca\lling and a few basic special )Tj
0 -1.205 TD
(forms---)Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(set!)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(quote)Tj
/T1_0 1 Tf
(, and one very special special form for defining new special forms )Tj
0 -1.205 TD
(\(macros\). \(We can write )Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
( as a macro using )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( as a macro using )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
( as a macro )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_123.html \(5 of 8\)1\1/3/2006 9:10:25 PM)Tj
ET
EMC 

endstreamendobj4783 0 obj<</Length 4428>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - An Interpreter with l\et and lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8351 Tm
(using )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(set!)Tj
/T1_0 1 Tf
(, and so on.\) )Tj
0 -2.557 TD
(The third advantage is that we can use the same scoping rules for specia\l forms that we use for variables. This )Tj
0 -1.2 TD
(will be very convenient later, because we will be able to define local m\acros, in much the same way we )Tj
T*
(define local procedures. )Tj
0 -2.557 TD
(To support this, we need to represent bindings slightly differently. In \the simple interpreter from the last )Tj
0 -1.2 TD
(chapter, each binding was just a name-value pair. Now we'll have a third\ part to each binding, telling what )Tj
T*
(kind of binding it is--a variable binding, a special form binding, or a \macro binding. )Tj
0 -2.557 TD
(We can still use associations to represent the bindings. Where the simpl\er interpreter representing each )Tj
0 -1.205 TD
(binding as an association of the form )Tj
/T1_1 1 Tf
(\(name value\))Tj
/T1_0 1 Tf
(, the new one will use bindings of the form )Tj
/T1_1 1 Tf
(\(name )Tj
0 -1.205 TD
(type)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(whatever)Tj
/T1_1 1 Tf
(\))Tj
/T1_0 1 Tf
(. In the case of a normal variable binding, the "whatever" is the actual\ value of the variable. )Tj
0 -1.2 TD
(In the case of a special form, the "whatever" is the information the int\erpreter needs to interpret that particular )Tj
0 -1.205 TD
(special form, including the procedure to evaluate it. For example, when \binding the name )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, we can store a )Tj
0 -1.205 TD
(pointer to the procedure )Tj
/T1_1 1 Tf
(eval-let)Tj
/T1_0 1 Tf
( right there in the binding information. )Tj
0 -2.557 TD
(Since the exact representation of bindings is irrelevant, and we may wan\t to change it, we'll call the whole )Tj
0 -1.205 TD
(thing a )Tj
/T1_1 1 Tf
(binding-info)Tj
/T1_0 1 Tf
( data structure. This reflects that fact that it may not hold just a bin\ding, but also any )Tj
0 -1.2 TD
(auxiliary information we want to store. )Tj
0 -2.557 TD
(To abstract away from exactly how bindings are implemented, we'll define\ several procedures that operate on )Tj
/T1_1 1 Tf
0 -1.205 TD
(binding-info)Tj
/T1_0 1 Tf
('s. These include: )Tj
/T1_3 1 Tf
6.6771 0 0 6.6771 34.0654 357.1956 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_1 1 Tf
13.3541 0 0 13.3541 47.6933 357.1956 Tm
(bdg-type)Tj
/T1_0 1 Tf
(, which returns a symbol saying what kind of binding it is: )Tj
/T1_1 1 Tf
(<variable>)Tj
/T1_0 1 Tf
( for a normal )Tj
T*
(variable, )Tj
/T1_1 1 Tf
(<special-form>)Tj
/T1_0 1 Tf
( for a built-in special form binding, and )Tj
/T1_1 1 Tf
(<syntax>)Tj
/T1_0 1 Tf
( for a syntax )Tj
0 -1.2 TD
(\(macro\) binding. )Tj
/T1_3 1 Tf
6.6771 0 0 6.6771 34.0654 308.9922 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_1 1 Tf
13.3541 0 0 13.3541 47.6933 308.9922 Tm
(bdg-variable-ref)Tj
/T1_0 1 Tf
(, which returns the value of a normal variable binding. )Tj
/T1_3 1 Tf
6.6771 0 0 6.6771 34.0654 292.903 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
/T1_1 1 Tf
13.3541 0 0 13.3541 47.6933 292.903 Tm
(bdg-special-form-evaluator)Tj
/T1_0 1 Tf
(, which returns an evaluation procedure for a special form )Tj
T*
(binding. )Tj
-2.857 -2.562 Td
(For now we'll ignore )Tj
/T1_1 1 Tf
(<syntax>)Tj
/T1_0 1 Tf
( bindings, which will be discussed in a later chapter. )Tj
0 -2.557 TD
([ give actual code for accessors, etc? ] )Tj
0 -2.562 TD
(Here's our new )Tj
/T1_1 1 Tf
(eval-list)Tj
/T1_0 1 Tf
( for handling compound expressions: )Tj
/T1_1 1 Tf
T*
(\(define \(eval-list list-expr envt\))Tj
0 -1.2 TD
(   ;; only try to consider it specially if the head is a symbol)Tj
T*
(   \(if \(symbol? \(car list-expr\)\))Tj
0 -2.4 TD
(       ;; look it up in the current lexical environment)Tj
0 -1.2 TD
(       \(let \(\(binding-info \(envt-lexical-lookup envt \(car list-expr\\)\)\)\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_123.html \(6 of 8\)1\1/3/2006 9:10:25 PM)Tj
ET
EMC 

endstreamendobj4784 0 obj<</Length 3551>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - An Interpreter with l\et and lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 754.8351 Tm
(          ;; switch on the type of thing that it is)Tj
0 -1.2 TD
(          \(cond \(\(not binding-info\))Tj
T*
(                 \(error "Unbound symbol" \(car list-expr\)\)\))Tj
T*
(                \(else)Tj
T*
(                 \(cond)Tj
T*
(                    ;; special forms just call the special-form)Tj
T*
(                    ;; evaluator, which is stored in the binding-info)Tj
T*
(                    ;; object itself)Tj
T*
(                   \(\(eq? \(binding-type binding-info\) '<special-form>\\))Tj
T*
(                    \(\(bdg-special-form-evaluator binding-info\) list-e\xpr)Tj
T*
(                                                               envt\)\))Tj
0 -2.4 TD
(                   \(\(eq? \(binding-type binding-info\) '<variable>\))Tj
0 -1.2 TD
(                    \(eval-combo \(bdg-variable-ref binding-info\))Tj
0 -1.2 TD
(                                \(cdr list-expr\))Tj
T*
(                                envt\)\))Tj
T*
(                   \(\(eq? \(binding-type binding-info\) '<syntax>\))Tj
T*
(                    \(eval-macro-call \(bdg-syntax-transformer binding-i\nfo\))Tj
T*
(                                     list-expr)Tj
T*
(                                     envt\)\))Tj
T*
(                   \(else)Tj
T*
(                    \(error "Unrecognized binding type"\)\)\)\)\)\))Tj
0 -2.4 TD
(         ;; the head of the list is not a symbol, so evaluate it)Tj
0 -1.2 TD
(         ;; and then do an eval-combo to evaluate the args and)Tj
T*
(         ;; call the procedure)Tj
T*
(         \(eval-combo \(eval \(car list-expr\) envt\))Tj
T*
(                     \(cdr list-expr\))Tj
T*
(                     envt\)\)\))Tj
0 -2.557 TD
(eval-list)Tj
/T1_0 1 Tf
( first checks to see whether the head of the list is a symbol; if not, i\t's just a combination )Tj
0 -1.205 TD
(\(procedure call expression\), and is handled by )Tj
/T1_1 1 Tf
(eval-combo)Tj
/T1_0 1 Tf
(. \(Remember that a combination can have an )Tj
0 -1.2 TD
(arbitrary expression as its operator, and that expression is assumed to \return a procedure to call.\) )Tj
0 -2.557 TD
(If it is a symbol, the binding of the variable is looked up. If it's a s\pecial form binding, the evaluation )Tj
0 -1.2 TD
(procedure is extracted from the binding info, and called to evaluate the\ expression. )Tj
0 -2.562 TD
(If the head of the list is just the name of a normal variable, that's al\so just a combination, and )Tj
/T1_1 1 Tf
(eval-combo)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(is called in that case, too. )Tj
0 -2.562 TD
(If the head of the list is the name of a syntax binding \(macro\), we ca\ll )Tj
/T1_1 1 Tf
(eval-macro-call)Tj
/T1_0 1 Tf
( to deal with it; )Tj
0 -1.2 TD
(don't worry about this for now--it will be discussed in detail in Chapte\r [ whatever ]. )Tj
0 -2.557 TD
(Notice that in all cases, the environment is passed along unchanged to w\hatever procedure handles the )Tj
0 -1.2 TD
(expression. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_123.html \(7 of 8\)1\1/3/2006 9:10:25 PM)Tj
ET
EMC 

endstreamendobj4785 0 obj<</Length 1598>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - An Interpreter with l\et and lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0.5 0.5 0.5 rg
9.539 738.988 m
9.539 740.896 l
602.461 740.896 l
601.507 739.942 l
10.493 739.942 l
10.493 739.942 l
h
f
0.875 0.875 0.875 rg
602.461 740.896 m
602.461 738.988 l
9.539 738.988 l
10.493 739.942 l
601.507 739.942 l
601.507 739.942 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 720.8417 Tm
(Go to the )Tj
ET
0 0 1 RG
0.673 w 10 M 0 j 0 J []0 d 
62.581 718.823 m
84.095 718.823 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 62.5812 720.8417 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
90.772 718.823 m
136.763 718.823 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 90.7717 720.8417 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
143.44 718.823 m
166.436 718.823 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 143.4404 720.8417 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
173.113 718.823 m
191.662 718.823 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 173.1132 720.8417 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
239.51 718.823 m
327.781 718.823 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 239.5099 720.8417 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_123.html \(8 of 8\)1\1/3/2006 9:10:25 PM)Tj
ET
EMC 

endstreamendobj4786 0 obj(An Introduction to Scheme and its Implementation - An Interpreter with let and lambda)endobj4787 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_123.html)/S 700 0 R>>endobj4788 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_123.html)endobj4789 0 obj(û˘O©œ˜±‘k∏\(≤O)endobj4790 0 obj<</TS(D:20061104051025)/ID 4789 0 R/CT(text/html)/O[4740 0 R 4752 0 R 4756 0 R 4758 0 R 4760 0 R 4766 0 R 4768 0 R 4770 0 R]/S/SPS/T 4786 0 R/TID 4792 0 R/SI 4791 0 R>>endobj4791 0 obj<</TS(D:20061104051025)/AU 4788 0 R>>endobj4792 0 obj(O'#8pó∞1JQœ≠{3∂)endobj4793 0 obj<</Parent 710 0 R/Next 4830 0 R/Dest[4740 0 R/XYZ 0 792 null]/Prev 4737 0 R/SE 4739 0 R/Title(An Introduction to Scheme and its Implementation - An Interpreter with let and lambda)>>endobj4794 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4795 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 4806 0 R/Type/MCR>><</MCID 0/Pg 4812 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 4796 0 R>>endobj4796 0 obj<</Annots 4799 0 R/Parent 4807 0 R/ID 4826 0 R/StructParents 263/Contents 4820 0 R/PZ 1.02092/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 1287 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4797 0 obj[4795 0 R]endobj4798 0 obj<</Rect[64.2639 750.1 86.3559 764.793]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4799 0 obj[4798 0 R 4800 0 R 4801 0 R 4802 0 R 4803 0 R 4805 0 R]endobj4800 0 obj<</Rect[93.2125 750.1 140.441 764.793]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4740 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_123.html)/S/URI>>/Border[0 0 0]>>endobj4801 0 obj<</Rect[147.297 750.1 170.911 764.793]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4833 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_125.html)/S/URI>>/Border[0 0 0]>>endobj4802 0 obj<</Rect[177.768 750.1 196.816 764.793]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4803 0 obj<</Rect[245.95 750.1 336.594 764.793]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4804 0 obj[4796 0 R/XYZ 0 732.077 null]endobj4805 0 obj<</Rect[9.79514 694.883 130.587 711.884]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC157)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC157)/S/URI>>/Border[0 0 0]>>endobj4806 0 obj<</Annots 4811 0 R/Parent 4848 0 R/ID 4826 0 R/StructParents 264/Contents 4821 0 R/PZ 1.02092/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 736 0 R/T1_4 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4807 0 obj<</Parent 4900 0 R/Count 5/Type/Pages/Kids[4760 0 R 4766 0 R 4768 0 R 4770 0 R 4796 0 R]>>endobj4808 0 obj[4795 0 R]endobj4809 0 obj[4806 0 R/XYZ 0 173.502 null]endobj4810 0 obj<</Rect[9.79514 154.919 235.968 171.919]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC158)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC158)/S/URI>>/Border[0 0 0]>>endobj4811 0 obj[4810 0 R]endobj4812 0 obj<</Annots 4815 0 R/Parent 4848 0 R/ID 4826 0 R/StructParents 265/Contents 4822 0 R/PZ 1.02092/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4813 0 obj[4795 0 R]endobj4814 0 obj<</Rect[64.2639 349.347 86.3559 364.04]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4815 0 obj[4814 0 R 4816 0 R 4817 0 R 4818 0 R 4819 0 R]endobj4816 0 obj<</Rect[93.2125 349.347 140.441 364.04]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4740 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_123.html)/S/URI>>/Border[0 0 0]>>endobj4817 0 obj<</Rect[147.297 349.347 170.911 364.04]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4833 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_125.html)/S/URI>>/Border[0 0 0]>>endobj4818 0 obj<</Rect[177.768 349.347 196.816 364.04]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4819 0 obj<</Rect[245.95 349.347 336.594 364.04]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4820 0 obj<</Length 4712>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.1844 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.8156 0 0 8.8156 18 780.3099 Tm
(An Introduction to Scheme and its Implementation - interpreting let)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 9.7951 754.3858 Tm
(Go to the )Tj
ET
0 0 1 RG
0.691 w 10 M 0 j 0 J []0 d 
64.264 752.312 m
86.356 752.312 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 64.2639 754.3858 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
93.212 752.312 m
140.441 752.312 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 93.2125 754.3858 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
147.297 752.312 m
170.911 752.312 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 147.2973 754.3858 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
177.768 752.312 m
196.816 752.312 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 177.768 754.3858 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
245.95 752.312 m
336.594 752.312 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 245.95 754.3858 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
9.795 738.933 m
9.795 740.892 l
602.205 740.892 l
601.225 739.913 l
10.775 739.913 l
10.775 739.913 l
h
f
0.875 0.875 0.875 rg
602.205 740.892 m
602.205 738.933 l
9.795 738.933 l
10.775 739.913 l
601.225 739.913 l
601.225 739.913 l
h
f
1.329 w 
9.795 695.614 m
102.106 695.614 l
S
0.797 w 
102.106 697.209 m
130.587 697.209 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.8229 0 0 15.8229 9.7951 699.6018 Tm
(Interpreting )Tj
/T1_2 1 Tf
(let)Tj
0 0 0 rg
/T1_0 1 Tf
13.7132 0 0 13.7132 9.7951 661.8667 Tm
(The procedure )Tj
/T1_3 1 Tf
(eval-let)Tj
/T1_0 1 Tf
( will be stored in the binding for the special form )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
(. In the case of a )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(expression, )Tj
/T1_3 1 Tf
(eval-let)Tj
/T1_0 1 Tf
( \(above\) will extract this procedure from the binding and call it to e\valuate the )Tj
0 -1.2 TD
(expression. )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define \(eval-let let-form envt\))Tj
0 -2.4 TD
(   ;; extract the relevant portions of the let form)Tj
0 -1.2 TD
(   \(let \(\(binding-forms \(cadr let-form\)\))Tj
T*
(         \(body-forms \(cddr let-form\)\)\))Tj
T*
(         )Tj
0 -1.2 TD
(      ;; break up the bindings part of the form)Tj
0 -1.2 TD
(      \(let \(\(var-list \(map car binding-forms\)\))Tj
T*
(            \(init-expr-list \(map cadr binding-forms\)\)\))Tj
0 -2.4 TD
(         ;; evaluate initial value expressions in old envt, create a)Tj
0 -1.2 TD
(         ;; new envt to bind values,)Tj
T*
(         \(let \(\(new-envt \(make-envt var-list)Tj
T*
(                                    \(eval-multi init-expr-list envt\))Tj
T*
(                                    envt\)\)\))Tj
T*
(            ;; evaluate the body in new envt)Tj
T*
(            \(eval-sequence body-forms new-envt\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(The first thing )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
( does is to extract the list of variable binding clauses and the list of\ body expressions )Tj
0 -1.205 TD
(from the overall )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
( expression. Then it further decomposes the variable binding clauses, ex\tracting a list )Tj
0 -1.205 TD
(of names and a corresponding list of initial value expressions. \(Notice\ how easy this is using )Tj
/T1_3 1 Tf
(map)Tj
/T1_0 1 Tf
( to create )Tj
0 -1.205 TD
(lists of )Tj
/T1_3 1 Tf
(car)Tj
/T1_0 1 Tf
('s and )Tj
/T1_3 1 Tf
(cadr)Tj
/T1_0 1 Tf
('s of the original clause list.\) )Tj
/T1_3 1 Tf
0 -2.562 TD
(eval-let)Tj
/T1_0 1 Tf
( then calls a helper procedure, )Tj
/T1_3 1 Tf
(eval-multi)Tj
/T1_0 1 Tf
(, to recursively evaluate the list of initial value )Tj
0 -1.2 TD
(expressions and return a list of the actual values. )Tj
0 -2.562 TD
(Then it calls )Tj
/T1_3 1 Tf
(make-envt)Tj
/T1_0 1 Tf
( to make the new environment. This creates a new environment frame, scop\ed )Tj
0 -1.2 TD
(inside the old environment--i.e., with a scope link to it--with variable\ bindings for each of the variables, )Tj
T*
(initialized with the corresponding values. )Tj
0 -2.562 TD
(Then )Tj
/T1_3 1 Tf
(eval-let)Tj
/T1_0 1 Tf
( calls )Tj
/T1_3 1 Tf
(eval-sequence)Tj
/T1_0 1 Tf
( to recursively evaluate the body expressions in the new )Tj
0 -1.2 TD
(environment, in sequential order, and return the value of the last expre\ssion. This value is returned from )Tj
/T1_3 1 Tf
0 -1.205 TD
(eval-let)Tj
/T1_0 1 Tf
( as the value of the )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
( expression. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.1844 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.8156 0 0 8.8156 18 7.3099 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_124.html \(1 of 3\)1\1/3/2006 9:10:33 PM)Tj
ET
EMC 

endstreamendobj4821 0 obj<</Length 4291>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.1844 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.8156 0 0 8.8156 18 780.3099 Tm
(An Introduction to Scheme and its Implementation - interpreting let)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 9.7951 753.4882 Tm
(Here's the code for )Tj
/T1_1 1 Tf
(eval-multi)Tj
/T1_0 1 Tf
(, which just uses )Tj
/T1_1 1 Tf
(map)Tj
/T1_0 1 Tf
( to evaluate each expression and accumulate a list )Tj
0 -1.2 TD
(of results. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(eval-multi arg-forms envt\))Tj
0 -1.2 TD
(   \(map \(lambda \(x\))Tj
T*
(           \(eval x envt\)\))Tj
T*
(        arg-forms\)\))Tj
0 -2.557 TD
(eval-multi)Tj
/T1_0 1 Tf
( calls )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
( recursively to evaluate each subexpression in the given environment. To\ do )Tj
0 -1.205 TD
(this, it must pass )Tj
/T1_1 1 Tf
(two)Tj
/T1_0 1 Tf
( arguments to )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
(. It uses )Tj
/T1_1 1 Tf
(map)Tj
/T1_0 1 Tf
( to iterate over the list of expressions, but instead of )Tj
0 -1.205 TD
(calling )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
( directly, )Tj
/T1_1 1 Tf
(map)Tj
/T1_0 1 Tf
( calls a helper procedure that takes an expression as its argument, and \then )Tj
T*
(passes the expression )Tj
/T1_2 1 Tf
(and)Tj
/T1_0 1 Tf
( the environment to )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Recall from section [ whatever ] that technique is known as )Tj
/T1_2 1 Tf
(currying)Tj
/T1_0 1 Tf
(. We use )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( to create a )Tj
0 -1.205 TD
(specialized version of a procedure \(in this case )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
(\), which automatically supplies one of the arguments. )Tj
0 -1.205 TD
(In effect, we create a specialized, one-argument version of )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
( that evaluates expressions in a particular )Tj
0 -1.2 TD
(environment, and then map that procedure over the list of expressions. )Tj
0 -2.562 TD
(Here's the code for )Tj
/T1_1 1 Tf
(eval-sequence)Tj
/T1_0 1 Tf
(, which is very much like )Tj
/T1_1 1 Tf
(eval-multi)Tj
/T1_0 1 Tf
(---it just evaluates a list of )Tj
0 -1.205 TD
(expressions in a given environment. It's different from )Tj
/T1_1 1 Tf
(eval-multi)Tj
/T1_0 1 Tf
( in that it returns only the value of )Tj
0 -1.2 TD
(the last expression in the list, rather than a list of all of the values\. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(eval-sequence arg-forms envt\))Tj
0 -1.2 TD
(   \(if \(pair? arg-forms\))Tj
T*
(       \(cond \(\(pair? \(cdr arg-forms\)\))Tj
T*
(              \(eval \(car arg-forms\) envt\))Tj
T*
(              \(eval-sequence \(cdr arg-forms\) envt\)\))Tj
0 -1.2 TD
(             \(else)Tj
0 -1.2 TD
(              \(eval \(car arg-forms\) envt\)\)\))Tj
T*
(       '*undefined-value*\)\) ; the value of an empty sequence)Tj
/T1_0 1 Tf
0 -2.557 TD
(\(Notice that we've written )Tj
/T1_1 1 Tf
(eval-sequence)Tj
/T1_0 1 Tf
( tail-recursively, and we've been careful to evaluate the last )Tj
0 -1.205 TD
(expression using a tail-call to )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
(. This ensures that we won't have to return to )Tj
/T1_1 1 Tf
(eval-sequence)Tj
/T1_0 1 Tf
(, so if )Tj
0 -1.2 TD
(the expression we're interpreting is a tail-call, we won't lose tail-rec\ursiveness in the interpreter.\) )Tj
ET
0 0 1 RG
1.329 w 10 M 0 j 0 J []0 d 
9.795 155.65 m
197.993 155.65 l
S
0.797 w 
197.993 157.245 m
235.968 157.245 l
S
0 0 1 rg
BT
/T1_3 1 Tf
15.8229 0 0 15.8229 9.7951 159.6375 Tm
(Variable References and )Tj
/T1_4 1 Tf
(set!)Tj
0 0 0 rg
/T1_1 1 Tf
13.7132 0 0 13.7132 9.7951 121.9024 Tm
(eval-symbol)Tj
/T1_0 1 Tf
( handles variable references. It looks up the binding of the symbol, if \there is one--if not, it )Tj
T*
(signals an unbound variable error--and checks to see that it's a variabl\e reference and not a special form or )Tj
T*
(macro. If it is a normal variable, it fetches the value from the binding\ and returns it. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(eval-symbol name-symbol envt\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.1844 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.8156 0 0 8.8156 18 7.3099 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_124.html \(2 of 3\)1\1/3/2006 9:10:33 PM)Tj
ET
EMC 

endstreamendobj4822 0 obj<</Length 3091>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.1844 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.8156 0 0 8.8156 18 780.3099 Tm
(An Introduction to Scheme and its Implementation - interpreting let)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.7132 0 0 13.7132 9.7951 754.3198 Tm
(   \(let \(\(binding-info \(envt-lexical-lookup envt name-symbol\)\)\))Tj
0 -1.2 TD
(      \(cond \(\(not binding-info\))Tj
T*
(             \(error "Unbound variable" name-symbol\)\))Tj
T*
(            \(\(eq? \(binding-type binding-info\) '<variable>\))Tj
T*
(             \(bdg-variable-ref binding info\)\))Tj
T*
(            \(else)Tj
T*
(             \(error "non-variable name referenced as variable")Tj
T*
(                    name-symbol\)\)\)\)\))Tj
0 -2.557 TD
(eval-set!)Tj
/T1_0 1 Tf
( handles the )Tj
/T1_1 1 Tf
(set!)Tj
/T1_0 1 Tf
( special form. It will be stored in a special form binding of the name )Tj
/T1_1 1 Tf
0 -1.205 TD
(set!)Tj
/T1_0 1 Tf
(, and extracted and called \(by )Tj
/T1_1 1 Tf
(eval-list)Tj
/T1_0 1 Tf
(\) to evaluate )Tj
/T1_1 1 Tf
(set!)Tj
/T1_0 1 Tf
( expressions. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(eval-set! set-form envt\))Tj
0 -1.2 TD
(   \(let \(\(name \(cadr set-form\)\))Tj
0 -1.2 TD
(         \(value-expr \(caddr set-form\)\)\))Tj
0 -1.2 TD
(      \(let \(\(binding-info \(envt-lexical-lookup envt name\)\)\))Tj
T*
(         \(cond \(\(not binding-info\))Tj
T*
(                \(error "Attempt to set! unbound variable" name\)\))Tj
T*
(               \(\(eq? \(binding-type binding-info\) '<variable>\))Tj
T*
(                \(bdg-variable-set! binding-info \(eval value-expr envt\)\\)\))Tj
T*
(               \(else)Tj
T*
(                \(error "Attempt to set! a non-variable" name\)\)\)\)\)\)\)Tj
ET
0.5 0.5 0.5 rg
9.795 372.267 m
9.795 374.226 l
602.205 374.226 l
601.225 373.247 l
10.775 373.247 l
10.775 373.247 l
h
f
0.875 0.875 0.875 rg
602.205 374.226 m
602.205 372.267 l
9.795 372.267 l
10.775 373.247 l
601.225 373.247 l
601.225 373.247 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 9.7951 353.6328 Tm
(Go to the )Tj
ET
0 0 1 RG
0.691 w 10 M 0 j 0 J []0 d 
64.264 351.559 m
86.356 351.559 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 64.2639 353.6328 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
93.212 351.559 m
140.441 351.559 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 93.2125 353.6328 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
147.297 351.559 m
170.911 351.559 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 147.2973 353.6328 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
177.768 351.559 m
196.816 351.559 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 177.768 353.6328 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
245.95 351.559 m
336.594 351.559 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 245.95 353.6328 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.1844 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.8156 0 0 8.8156 18 7.3099 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_124.html \(3 of 3\)1\1/3/2006 9:10:33 PM)Tj
ET
EMC 

endstreamendobj4823 0 obj(An Introduction to Scheme and its Implementation - interpreting let)endobj4824 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_124.html)/S 700 0 R>>endobj4825 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_124.html)endobj4826 0 obj(æo6˘å]Ô“tnÿiA)endobj4827 0 obj<</TS(D:20061104051033)/ID 4826 0 R/CT(text/html)/O[4796 0 R 4806 0 R 4812 0 R]/S/SPS/T 4823 0 R/TID 4829 0 R/SI 4828 0 R>>endobj4828 0 obj<</TS(D:20061104051033)/AU 4825 0 R>>endobj4829 0 obj(ö√~SùÍN∞Wsû¢m”•)endobj4830 0 obj<</Parent 710 0 R/Next 4869 0 R/Dest[4796 0 R/XYZ 0 792 null]/Prev 4793 0 R/SE 4795 0 R/Title(An Introduction to Scheme and its Implementation - interpreting let)>>endobj4831 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4832 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 4843 0 R/Type/MCR>><</MCID 0/Pg 4845 0 R/Type/MCR>><</MCID 0/Pg 4847 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 4833 0 R>>endobj4833 0 obj<</Annots 4836 0 R/Parent 4848 0 R/ID 4865 0 R/StructParents 266/Contents 4858 0 R/PZ 1.02092/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 1287 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4834 0 obj[4832 0 R]endobj4835 0 obj<</Rect[64.2639 750.1 86.3559 764.793]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4836 0 obj[4835 0 R 4837 0 R 4838 0 R 4839 0 R 4840 0 R 4842 0 R]endobj4837 0 obj<</Rect[93.2125 750.1 140.441 764.793]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4796 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_124.html)/S/URI>>/Border[0 0 0]>>endobj4838 0 obj<</Rect[147.297 750.1 170.911 764.793]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4872 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_126.html)/S/URI>>/Border[0 0 0]>>endobj4839 0 obj<</Rect[177.768 750.1 196.816 764.793]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4840 0 obj<</Rect[245.95 750.1 336.594 764.793]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4841 0 obj[4833 0 R/XYZ 0 732.077 null]endobj4842 0 obj<</Rect[9.79514 694.883 331.412 711.884]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC159)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC159)/S/URI>>/Border[0 0 0]>>endobj4843 0 obj<</Parent 4848 0 R/ID 4865 0 R/StructParents 267/Contents 4859 0 R/PZ 1.02092/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4844 0 obj[4832 0 R]endobj4845 0 obj<</Parent 4848 0 R/ID 4865 0 R/StructParents 268/Contents 4860 0 R/PZ 1.02092/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4846 0 obj[4832 0 R]endobj4847 0 obj<</Annots 4852 0 R/Parent 4894 0 R/ID 4865 0 R/StructParents 269/Contents 4861 0 R/PZ 1.02092/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4848 0 obj<</Parent 4900 0 R/Count 5/Type/Pages/Kids[4806 0 R 4812 0 R 4833 0 R 4843 0 R 4845 0 R]>>endobj4849 0 obj[4832 0 R]endobj4850 0 obj[4847 0 R/XYZ 0 580.642 null]endobj4851 0 obj<</Rect[9.79514 564.578 317.67 579.271]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC160)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC160)/S/URI>>/Border[0 0 0]>>endobj4852 0 obj[4851 0 R 4853 0 R 4854 0 R 4855 0 R 4856 0 R 4857 0 R]endobj4853 0 obj<</Rect[64.2639 136.394 86.3559 151.087]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4854 0 obj<</Rect[93.2125 136.394 140.441 151.087]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4796 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_124.html)/S/URI>>/Border[0 0 0]>>endobj4855 0 obj<</Rect[147.297 136.394 170.911 151.087]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4872 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_126.html)/S/URI>>/Border[0 0 0]>>endobj4856 0 obj<</Rect[177.768 136.394 196.816 151.087]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4857 0 obj<</Rect[245.95 136.394 336.594 151.087]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4858 0 obj<</Length 5237>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.1844 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.8156 0 0 8.8156 18 780.3099 Tm
(An Introduction to Scheme and its Implementation - Interpreting lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 9.7951 754.3858 Tm
(Go to the )Tj
ET
0 0 1 RG
0.691 w 10 M 0 j 0 J []0 d 
64.264 752.312 m
86.356 752.312 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 64.2639 754.3858 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
93.212 752.312 m
140.441 752.312 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 93.2125 754.3858 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
147.297 752.312 m
170.911 752.312 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 147.2973 754.3858 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
177.768 752.312 m
196.816 752.312 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 177.768 754.3858 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
245.95 752.312 m
336.594 752.312 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 245.95 754.3858 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
9.795 738.933 m
9.795 740.892 l
602.205 740.892 l
601.225 739.913 l
10.775 739.913 l
10.775 739.913 l
h
f
0.875 0.875 0.875 rg
602.205 740.892 m
602.205 738.933 l
9.795 738.933 l
10.775 739.913 l
601.225 739.913 l
601.225 739.913 l
h
f
1.329 w 
9.795 695.614 m
102.106 695.614 l
S
0.797 w 
102.106 697.209 m
159.068 697.209 l
S
1.329 w 
159.068 695.614 m
331.412 695.614 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.8229 0 0 15.8229 9.7951 699.6018 Tm
(Interpreting )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_1 1 Tf
( and Procedure Calling)Tj
0 0 0 rg
/T1_0 1 Tf
13.7132 0 0 13.7132 9.7951 661.9327 Tm
(Our new interpreter will handle defining and calling new procedures. Thi\s is not difficult, because all of )Tj
0 -1.2 TD
(the major mechanisms are already in place. We need the ability to define\ local variables \(e.g., arguments\), )Tj
0 -1.205 TD
(which we already implemented for )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
(. We also need the ability to interpret the procedure bodies, but the )Tj
0 -1.2 TD
(interpreter we've got is just fine for that. We'll simply store the proc\edure bodies as s-expressions, and )Tj
T*
(interpret them like any other expressions when the procedure is called. \)Tj
0 -2.557 TD
(Our representation of closures will be very simple. A closure mainly pai\rs an environment with a )Tj
0 -1.2 TD
(procedure body, but we also need to specify a list of argument the proce\dure will accept. )Tj
0 -2.562 TD
(We'll define a procedure )Tj
/T1_3 1 Tf
(make-closure)Tj
/T1_0 1 Tf
( to construct a closure, given a pointer to an environment, a )Tj
0 -1.2 TD
(pointer to a list of argument names \(symbols\), and pointer to a proced\ure body \(a list of expressions\). )Tj
0 -2.562 TD
(We'll also define the procedures )Tj
/T1_3 1 Tf
(closure-envt)Tj
/T1_0 1 Tf
(, )Tj
/T1_3 1 Tf
(closure-args)Tj
/T1_0 1 Tf
(, and )Tj
/T1_3 1 Tf
(closure-body)Tj
/T1_0 1 Tf
( to extract )Tj
0 -1.2 TD
(those parts when we call the procedure. )Tj
0 -2.557 TD
(As a slight complication, we'd like to start out with some predefined pr\ocedures, and the easiest way to do )Tj
0 -1.2 TD
(that is simply to snarf the corresponding procedures from the underlying\ Scheme system, i.e., the language )Tj
T*
(we're using to implement our interpreter. \(If we were writing our inter\preter in C or assembly language, we )Tj
T*
(might write the code bodies of built-in procedures in that language.\) )Tj
0 -2.557 TD
(These snarfed procedures will be the built-in "primitive" operations in \our language, which can be "glued )Tj
0 -1.2 TD
(together" by the interpreter to build new procedures, which may be arbit\rarily complicated. )Tj
0 -2.557 TD
(In the simple interpreter in the last chapter, we snarfed procedures dir\ectly--we just used closures in the )Tj
0 -1.2 TD
(underlying Scheme as procedures in our language. In the new interpreter,\ we need to distinguish between )Tj
T*
(snarfed procedures \(which we can simply call from inside the interprete\r\) and user-defined procedures, )Tj
0 -1.205 TD
(which we must interpret via recursive calls to )Tj
/T1_3 1 Tf
(eval)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Our representation of closures will therefore support two predicates. )Tj
/T1_3 1 Tf
(closure?)Tj
/T1_0 1 Tf
( will test an object to see )Tj
0 -1.205 TD
(if it is a closure of either sort. )Tj
/T1_3 1 Tf
(primitive-closure?)Tj
/T1_0 1 Tf
( will test whether a closure represents a snarfed )Tj
0 -1.2 TD
(procedure from the underlying Scheme system. )Tj
0 -2.557 TD
(In the case of a primitive closure, calling the closure just consists of\ extracting the underlying Scheme )Tj
0 -1.2 TD
(closure, and calling it with the given argument values. \(We don't snarf\ any procedures that depend on what )Tj
0 -1.205 TD
(environment they execute in. We only snarf functions like )Tj
/T1_3 1 Tf
(+)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(cons)Tj
/T1_0 1 Tf
(, which depend only on their )Tj
0 -1.2 TD
(arguments.\) )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.1844 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.8156 0 0 8.8156 18 7.3099 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_125.html \(1 of 4\)1\1/3/2006 9:10:40 PM)Tj
ET
EMC 

endstreamendobj4859 0 obj<</Length 4191>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.1844 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.8156 0 0 8.8156 18 780.3099 Tm
(An Introduction to Scheme and its Implementation - Interpreting lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 9.7951 754.3858 Tm
(A closure therefore has three important fields: a pointer to an environm\ent, a pointer to a list of argument )Tj
0 -1.2 TD
(names, and a pointer to a code body. It also has a "hidden" type field, \saying that what kind of object it is. )Tj
0 -2.557 TD
([ I'm glossing over the actual representation in the underlying Scheme s\ystem, because it really doesn't )Tj
0 -1.2 TD
(matter. It could be an association list, a vector, or whatever. ] )Tj
/T1_1 1 Tf
0 -2.562 TD
(eval-lambda)Tj
/T1_0 1 Tf
( is the procedure called from )Tj
/T1_1 1 Tf
(eval-list)Tj
/T1_0 1 Tf
( to handle )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expressions. It will be )Tj
0 -1.205 TD
(stored in binding of )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( of the name )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( \(with binding type )Tj
/T1_1 1 Tf
(<special-form>)Tj
/T1_0 1 Tf
(\), and )Tj
T*
(extracted and called to actually interpret )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
('s. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(eval-lambda lambda-form envt\))Tj
0 -1.2 TD
(   \(let \(\(formals \(cadr lambda-form\)\))Tj
T*
(         \(body \(cddr lambda-form\)\)\))Tj
T*
(      \(make-closure envt formals body\)\)\))Tj
0 -2.557 TD
(eval-lambda)Tj
/T1_0 1 Tf
( simply extracts the argument list and body expression list from the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression, )Tj
0 -1.205 TD
(and calls )Tj
/T1_1 1 Tf
(make-closure)Tj
/T1_0 1 Tf
( with them \(and the current environment\) to create the closure object.\ Storing )Tj
0 -1.2 TD
(the current environment in the closure ensures that when the closure is \interpreted later, it will still be able )Tj
T*
(to refer to the same bindings that were visible when it was created. )Tj
/T1_1 1 Tf
0 -2.562 TD
(eval-combo)Tj
/T1_0 1 Tf
( is called from )Tj
/T1_1 1 Tf
(eval-list)Tj
/T1_0 1 Tf
( to evaluation combinations \(procedure call expressions\). )Tj
0 -2.562 TD
(\(Note that )Tj
/T1_1 1 Tf
(eval-list)Tj
/T1_0 1 Tf
( evaluates the operator expression before calling )Tj
/T1_1 1 Tf
(eval-combo)Tj
/T1_0 1 Tf
(, and hands it the )Tj
0 -1.2 TD
(closure plus a list of unevaluated argument expressions. This is not par\ticularly significant--we could have )Tj
0 -1.205 TD
(passed the operator expression to )Tj
/T1_1 1 Tf
(eval-combo)Tj
/T1_0 1 Tf
( unevaluated, like the argument expressions, and have )Tj
/T1_1 1 Tf
0 -1.205 TD
(eval-combo)Tj
/T1_0 1 Tf
( evaluate it instead. As we've written it, we ensure that the operator e\xpression is evaluated )Tj
0 -1.2 TD
(before the arguments. We could change it to get the opposite effect. Thi\s would still be legal--the Scheme )Tj
0 -1.2 TD
(standard does not specify the order of evaluation, and an implementation\ may even use different orders at )Tj
0 -1.2 TD
(different call sites.\) )Tj
0 -2.557 TD
([ DONOVAN--maybe we should change it. RScheme evaluates the operator exp\ression last, so maybe the )Tj
0 -1.2 TD
(interpreter should, too. ] )Tj
/T1_1 1 Tf
0 -2.562 TD
(eval-combo)Tj
/T1_0 1 Tf
( evaluates the argument expressions in the given environment to get the \argument values, )Tj
0 -1.205 TD
(using )Tj
/T1_1 1 Tf
(eval-multi)Tj
/T1_0 1 Tf
(, and calls )Tj
/T1_1 1 Tf
(eval-apply)Tj
/T1_0 1 Tf
( to call the given closure with those values. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(eval-combo proc arg-expr-list envt\))Tj
0 -1.2 TD
(   ;; use our own kind of apply to run our own kind of closures)Tj
T*
(   \(eval-apply proc)Tj
T*
(               ;; evaluate the arguments, collecting results into a list\)Tj
T*
(               \(eval-multi arg-expr-list)Tj
0 -1.2 TD
(                          envt\)\)\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.1844 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.8156 0 0 8.8156 18 7.3099 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_125.html \(2 of 4\)1\1/3/2006 9:10:40 PM)Tj
ET
EMC 

endstreamendobj4860 0 obj<</Length 3919>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.1844 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.8156 0 0 8.8156 18 780.3099 Tm
(An Introduction to Scheme and its Implementation - Interpreting lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.7132 0 0 13.7132 9.7951 754.3198 Tm
(eval-apply)Tj
/T1_0 1 Tf
( does the actual procedure call, after the arguments have been evaluated\. That is, it )Tj
/T1_2 1 Tf
(applies)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(the given procedure \(closure\) to the given arguments. )Tj
0 -2.557 TD
(If the closure we're calling is a primitive closure, we simply extract t\he underlying Scheme procedure and )Tj
0 -1.205 TD
(call that, using the standard Scheme procedure )Tj
/T1_1 1 Tf
(apply)Tj
/T1_0 1 Tf
(. Scheme's )Tj
/T1_1 1 Tf
(apply)Tj
/T1_0 1 Tf
( takes a list of any number of )Tj
0 -1.2 TD
(values, and calls the procedure as though the arguments had been passed \to it in the normal way. )Tj
0 -2.562 TD
(\(To make sure that you understand that, here's a simple usage of Scheme\'s )Tj
/T1_1 1 Tf
(apply)Tj
/T1_0 1 Tf
(: )Tj
/T1_1 1 Tf
(\(apply + '\(1 )Tj
0 -1.205 TD
(2\)\))Tj
/T1_0 1 Tf
(. This call to apply will take the procedure )Tj
/T1_1 1 Tf
(+)Tj
/T1_0 1 Tf
( and call it with the values )Tj
/T1_1 1 Tf
(1)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(2)Tj
/T1_0 1 Tf
(, just as if we had )Tj
0 -1.205 TD
(written )Tj
/T1_1 1 Tf
(\(+ 1 2\))Tj
/T1_0 1 Tf
(. Likewise, )Tj
/T1_1 1 Tf
(\(apply list '\(1 2 3 4\)\))Tj
/T1_0 1 Tf
( returns the same thing as )Tj
/T1_1 1 Tf
(\(list 1 2 )Tj
0 -1.205 TD
(3 4\))Tj
/T1_0 1 Tf
(.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(eval-apply proc arg-list\))Tj
0 -1.2 TD
(   \(if \(primitive-closure? proc\))Tj
T*
(    )Tj
T*
(       ;; it's a primitive, so extract the underlying language's)Tj
T*
(       ;; closure for the primitive, and do a real \(underlying Scheme\)\)Tj
T*
(       ;; apply to call it)Tj
T*
(       \(apply \(closure-primitive proc\) arg-list\))Tj
T*
(       )Tj
T*
(       ;; it's not a primitive closure, so it must be something)Tj
T*
(       ;; we created with make-closure)Tj
T*
(       ;;)Tj
T*
(       ;; first, bind the actuals into a new environment, which)Tj
T*
(       ;; is scoped inside the environment in which the closure)Tj
T*
(       ;; was closed)Tj
T*
(       \(let \(\(new-envt \(make-envt \(closure-args proc\) )Tj
0 -1.2 TD
(                                  arg-list)Tj
0 -1.2 TD
(                                  \(closure-envt proc\)\)\)\))Tj
T*
(          ;; then, evaluate the body forms, returning the )Tj
T*
(          ;; value of the last of them.)Tj
T*
(          \(eval-sequence \(closure-body proc\))Tj
T*
(                         new-envt\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(In the case of a user-defined \(interpreted\) closure, )Tj
/T1_1 1 Tf
(eval-combo)Tj
/T1_0 1 Tf
( creates a new environment to bind the )Tj
0 -1.205 TD
(arguments values, much as it does to bind the local variables of a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(; it calls )Tj
/T1_1 1 Tf
(make-envt)Tj
/T1_0 1 Tf
( with the name )Tj
0 -1.2 TD
(list, the corresponding value list, and the old environment, and gets ba\ck a pointer to the new environment )Tj
0 -1.2 TD
(frame, scoped inside the old one. )Tj
0 -2.557 TD
(There's a big difference here, though. The "old" environment that's used\ in creating the new one is )Tj
/T1_2 1 Tf
(not)Tj
/T1_0 1 Tf
( the )Tj
0 -1.205 TD
(environment that was passed to )Tj
/T1_1 1 Tf
(eval-combo)Tj
/T1_0 1 Tf
(. \(Notice that )Tj
/T1_1 1 Tf
(eval-combo)Tj
/T1_0 1 Tf
( did not even pass that )Tj
T*
(environment to )Tj
/T1_1 1 Tf
(eval-apply)Tj
/T1_0 1 Tf
(.\) )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.1844 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.8156 0 0 8.8156 18 7.3099 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_125.html \(3 of 4\)1\1/3/2006 9:10:40 PM)Tj
ET
EMC 

endstreamendobj4861 0 obj<</Length 4798>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.1844 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.8156 0 0 8.8156 18 780.3099 Tm
(An Introduction to Scheme and its Implementation - Interpreting lambda)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 9.7951 754.3858 Tm
(When we call the closure, we extract the environment stored in the closu\re, and use that as the "old" )Tj
0 -1.2 TD
(environment. This ensures that the closure body will evaluate in the env\ironment where it was defined, )Tj
T*
(augmented with the bindings of its arguments. This is the crucial step i\n preserving lexical scope--the )Tj
T*
(meanings of identifiers in the procedure body are fixed at the moment th\e closure is created, because it )Tj
T*
(captures the current environment at that point. )Tj
0 -2.562 TD
(Once the new environment is created, )Tj
/T1_1 1 Tf
(eval-combo)Tj
/T1_0 1 Tf
( simply calls )Tj
/T1_1 1 Tf
(eval-sequence)Tj
/T1_0 1 Tf
( to evaluate the )Tj
0 -1.205 TD
(sequence of body expressions and return the value of the last one. )Tj
/T1_1 1 Tf
(eval-combo)Tj
/T1_0 1 Tf
( simply returns this value )Tj
0 -1.205 TD
(as the return value of the procedure call. \(Notice that the call to )Tj
/T1_1 1 Tf
(eval-sequence)Tj
/T1_0 1 Tf
( is a tail call, preserving )Tj
0 -1.2 TD
(the tail recursion of the program we're interpreting.\) )Tj
ET
0 0 1 RG
1.152 w 10 M 0 j 0 J []0 d 
9.795 565.17 m
317.67 565.17 l
S
0 0 1 rg
BT
/T1_2 1 Tf
13.7132 0 0 13.7132 9.7951 568.6262 Tm
(Mutual Recursion Between Eval and Eval-apply)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.687 TD
(It is important to understand the relationship between )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(eval-apply)Tj
/T1_0 1 Tf
( in the interpreter. This )Tj
0 -1.2 TD
(will help you understand how scoping is implemented, and will also help \you understand the relationship )Tj
T*
(between an interpreter and a compiler. )Tj
/T1_1 1 Tf
0 -2.562 TD
(eval)Tj
/T1_0 1 Tf
( calls )Tj
/T1_3 1 Tf
(itself)Tj
/T1_0 1 Tf
( to evaluate normal nested expressions. It may do this indirectly, by us\ing helper )Tj
0 -1.205 TD
(procedures that handle different kinds of expressions, but in general re\cursive calls to )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
( correspond to )Tj
0 -1.2 TD
(the nested structure of a procedure. )Tj
/T1_1 1 Tf
0 -2.562 TD
(eval-apply)Tj
/T1_0 1 Tf
( is very different. When the interpreter gets to a procedure call, it ca\lls )Tj
/T1_1 1 Tf
(eval-apply)Tj
/T1_0 1 Tf
( to )Tj
0 -1.2 TD
(jump to a )Tj
/T1_3 1 Tf
(different)Tj
/T1_0 1 Tf
( procedure, not a nested expression of the same procedure. \(Note that t\he arguments to a )Tj
0 -1.205 TD
(procedure call are evaluated like any other nested expressions, by calli\ng )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
(, but the call itself is done )Tj
T*
(by )Tj
/T1_1 1 Tf
(eval-apply)Tj
/T1_0 1 Tf
(.\) )Tj
0 -2.562 TD
(Normal recursive calls to )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
( therefore correspond to the local nesting structure of the code, but ca\lls to )Tj
/T1_1 1 Tf
0 -1.205 TD
(apply)Tj
/T1_0 1 Tf
( correspond to transfers of control to different procedures. )Tj
0 -2.557 TD
([ Any other miscellaneous stuff I should explain? Should have a pointer \to the source file for the whole )Tj
0 -1.2 TD
(interpreter... ] )Tj
0 -2.557 TD
([ Say that's it for the interpreter for now... we'll come back to it whe\n we talk about macros, and we'll talk )Tj
0 -1.2 TD
(about a compiler with very similar structure later... ] )Tj
ET
0.5 0.5 0.5 rg
9.795 159.315 m
9.795 161.274 l
602.205 161.274 l
601.225 160.294 l
10.775 160.294 l
10.775 160.294 l
h
f
0.875 0.875 0.875 rg
602.205 161.274 m
602.205 159.315 l
9.795 159.315 l
10.775 160.294 l
601.225 160.294 l
601.225 160.294 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 9.7951 140.6801 Tm
(Go to the )Tj
ET
0.691 w 
64.264 138.607 m
86.356 138.607 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 64.2639 140.6801 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
93.212 138.607 m
140.441 138.607 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 93.2125 140.6801 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
147.297 138.607 m
170.911 138.607 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 147.2973 140.6801 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
177.768 138.607 m
196.816 138.607 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 177.768 140.6801 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
245.95 138.607 m
336.594 138.607 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.7132 0 0 13.7132 245.95 140.6801 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.1844 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.8156 0 0 8.8156 18 7.3099 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_125.html \(4 of 4\)1\1/3/2006 9:10:40 PM)Tj
ET
EMC 

endstreamendobj4862 0 obj(An Introduction to Scheme and its Implementation - Interpreting lambda)endobj4863 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_125.html)/S 700 0 R>>endobj4864 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_125.html)endobj4865 0 obj(§–Á+s˘QSñ}`≠NÿE)endobj4866 0 obj<</TS(D:20061104051040)/ID 4865 0 R/CT(text/html)/O[4833 0 R 4843 0 R 4845 0 R 4847 0 R]/S/SPS/T 4862 0 R/TID 4868 0 R/SI 4867 0 R>>endobj4867 0 obj<</TS(D:20061104051040)/AU 4864 0 R>>endobj4868 0 obj(9ÚØºZüA–6=Z„&t`)endobj4869 0 obj<</Parent 710 0 R/Next 4936 0 R/Dest[4833 0 R/XYZ 0 792 null]/Prev 4830 0 R/SE 4832 0 R/Title(An Introduction to Scheme and its Implementation - Interpreting lambda)>>endobj4870 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4871 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 4884 0 R/Type/MCR>><</MCID 0/Pg 4886 0 R/Type/MCR>><</MCID 0/Pg 4888 0 R/Type/MCR>><</MCID 0/Pg 4893 0 R/Type/MCR>><</MCID 0/Pg 4899 0 R/Type/MCR>><</MCID 0/Pg 4907 0 R/Type/MCR>><</MCID 0/Pg 4909 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 4872 0 R>>endobj4872 0 obj<</Annots 4875 0 R/Parent 4894 0 R/ID 4932 0 R/StructParents 270/Contents 4921 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 1287 0 R/T1_3 828 0 R/T1_4 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4873 0 obj[4871 0 R]endobj4874 0 obj<</Rect[61.7725 751.026 83.0079 765.15]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4875 0 obj[4874 0 R 4876 0 R 4877 0 R 4878 0 R 4879 0 R 4881 0 R 4883 0 R]endobj4876 0 obj<</Rect[89.5987 751.026 134.996 765.15]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4833 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_125.html)/S/URI>>/Border[0 0 0]>>endobj4877 0 obj<</Rect[141.587 751.026 164.285 765.15]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4939 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html)/S/URI>>/Border[0 0 0]>>endobj4878 0 obj<</Rect[170.876 751.026 189.185 765.15]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4879 0 obj<</Rect[236.415 751.026 323.545 765.15]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4880 0 obj[4872 0 R/XYZ 0 733.702 null]endobj4881 0 obj<</Rect[9.41539 694.567 304.923 713.988]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC161)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC161)/S/URI>>/Border[0 0 0]>>endobj4882 0 obj[4872 0 R/XYZ 0 608.441 null]endobj4883 0 obj<</Rect[9.41539 590.579 175.716 606.92]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC162)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC162)/S/URI>>/Border[0 0 0]>>endobj4884 0 obj<</Parent 4894 0 R/ID 4932 0 R/StructParents 271/Contents 4922 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4885 0 obj[4871 0 R]endobj4886 0 obj<</Parent 4894 0 R/ID 4932 0 R/StructParents 272/Contents 4923 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4887 0 obj[4871 0 R]endobj4888 0 obj<</Annots 4892 0 R/Parent 4894 0 R/ID 4932 0 R/StructParents 273/Contents 4924 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 1287 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4889 0 obj[4888 0 R/XYZ 0 755.863 null]endobj4890 0 obj[4871 0 R]endobj4891 0 obj<</Rect[9.41539 740.257 318.193 754.545]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC163)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC163)/S/URI>>/Border[0 0 0]>>endobj4892 0 obj[4891 0 R]endobj4893 0 obj<</Annots 4898 0 R/Parent 4952 0 R/ID 4932 0 R/StructParents 274/Contents 4925 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4894 0 obj<</Parent 4900 0 R/Count 5/Type/Pages/Kids[4847 0 R 4872 0 R 4884 0 R 4886 0 R 4888 0 R]>>endobj4895 0 obj[4871 0 R]endobj4896 0 obj[4893 0 R/XYZ 0 630.911 null]endobj4897 0 obj<</Rect[9.41539 613.239 45.9181 629.39]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC164)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC164)/S/URI>>/Border[0 0 0]>>endobj4898 0 obj[4897 0 R]endobj4899 0 obj<</Annots 4904 0 R/Parent 4952 0 R/ID 4932 0 R/StructParents 275/Contents 4926 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R/T1_3 1287 0 R/T1_4 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4900 0 obj<</Parent 5944 0 R/Count 25/Type/Pages/Kids[4708 0 R 4761 0 R 4807 0 R 4848 0 R 4894 0 R]>>endobj4901 0 obj[4871 0 R]endobj4902 0 obj[4899 0 R/XYZ 0 685.307 null]endobj4903 0 obj<</Rect[9.41539 664.289 182.822 683.482]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC165)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC165)/S/URI>>/Border[0 0 0]>>endobj4904 0 obj[4903 0 R 4906 0 R]endobj4905 0 obj[4899 0 R/XYZ 0 643.633 null]endobj4906 0 obj<</Rect[9.41539 625.771 91.729 642.112]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC166)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC166)/S/URI>>/Border[0 0 0]>>endobj4907 0 obj<</Parent 4952 0 R/ID 4932 0 R/StructParents 276/Contents 4927 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4908 0 obj[4871 0 R]endobj4909 0 obj<</Annots 4913 0 R/Parent 4952 0 R/ID 4932 0 R/StructParents 277/Contents 4928 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 737 0 R/T1_3 766 0 R/T1_4 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4910 0 obj[4871 0 R]endobj4911 0 obj[4909 0 R/XYZ 0 327.356 null]endobj4912 0 obj<</Rect[9.41539 306.338 439.436 325.531]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC167)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC167)/S/URI>>/Border[0 0 0]>>endobj4913 0 obj[4912 0 R 4915 0 R 4916 0 R 4917 0 R 4918 0 R 4919 0 R 4920 0 R]endobj4914 0 obj[4909 0 R/XYZ 0 285.682 null]endobj4915 0 obj<</Rect[9.41539 264.664 94.6492 283.857]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC168)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC168)/S/URI>>/Border[0 0 0]>>endobj4916 0 obj<</Rect[61.7725 213.502 83.0079 227.625]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4917 0 obj<</Rect[89.5987 213.502 134.996 227.625]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4833 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_125.html)/S/URI>>/Border[0 0 0]>>endobj4918 0 obj<</Rect[141.587 213.502 164.285 227.625]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4939 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html)/S/URI>>/Border[0 0 0]>>endobj4919 0 obj<</Rect[170.876 213.502 189.185 227.625]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4920 0 obj<</Rect[236.415 213.502 323.545 227.625]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4921 0 obj<</Length 5511>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Variants of let)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 755.1462 Tm
(Go to the )Tj
ET
0 0 1 RG
0.664 w 10 M 0 j 0 J []0 d 
61.772 753.153 m
83.008 753.153 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 61.7725 755.1462 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
89.599 753.153 m
134.996 753.153 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 89.5987 755.1462 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
141.587 753.153 m
164.285 753.153 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 141.5867 755.1462 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
170.876 753.153 m
189.185 753.153 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 170.8761 755.1462 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
236.415 753.153 m
323.545 753.153 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 236.4147 755.1462 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
9.415 740.293 m
9.415 742.176 l
602.585 742.176 l
601.643 741.234 l
10.357 741.234 l
10.357 741.234 l
h
f
0.875 0.875 0.875 rg
602.585 742.176 m
602.585 740.293 l
9.415 740.293 l
10.357 741.234 l
601.643 741.234 l
601.643 741.234 l
h
f
1.533 w 
9.415 695.221 m
108.812 695.221 l
S
0.92 w 
108.812 697.061 m
141.665 697.061 l
S
1.533 w 
141.665 695.221 m
152.816 695.221 l
S
0.92 w 
152.816 697.061 m
218.521 697.061 l
S
1.533 w 
218.521 695.221 m
261.12 695.221 l
S
0.92 w 
261.12 697.061 m
304.923 697.061 l
S
0 0 1 rg
BT
/T1_1 1 Tf
18.2514 0 0 18.2514 9.4154 699.8208 Tm
(Variants of )Tj
/T1_2 1 Tf
(let)Tj
/T1_1 1 Tf
(: )Tj
/T1_2 1 Tf
(letrec)Tj
/T1_1 1 Tf
( and )Tj
/T1_2 1 Tf
(let*)Tj
0 0 0 rg
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 662.5257 Tm
(Scheme provides two useful variants of )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
(. )Tj
/T1_3 1 Tf
(letrec)Tj
/T1_0 1 Tf
( supports the creation of recursive local procedures, )Tj
0 -1.205 TD
(including mutually recursive sets of procedures. )Tj
/T1_3 1 Tf
(let*)Tj
/T1_0 1 Tf
( supports the sequenced binding of variables, where each )Tj
0 -1.2 TD
(initial value expression can use the previous bindings. )Tj
ET
1.278 w 
9.415 591.281 m
120.962 591.281 l
S
0.767 w 
120.962 592.814 m
175.716 592.814 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.2095 0 0 15.2095 9.4154 595.1141 Tm
(Understanding )Tj
/T1_2 1 Tf
(letrec)Tj
0 0 0 rg
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 558.842 Tm
(When a normal )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
( is evaluated, the initial value expressions are evaluated )Tj
/T1_4 1 Tf
(before)Tj
/T1_0 1 Tf
( binding is done. The initial )Tj
T*
(value expressions execute in the environment outside the let, and then t\he bindings are created and initialized )Tj
T*
(with those values. )Tj
0 -2.557 TD
(Often, we want the initial value expression for a binding to be able to \create a procedure that will see the new )Tj
0 -1.2 TD
(bindings. For example, suppose we want to create a local procedure which\ is recursive. We might try this: )Tj
/T1_3 1 Tf
0 -2.562 TD
(;; buggy example with \(non-\)tail-recursive local procedure)Tj
0 -1.2 TD
(\(define \(some-procedure...\))Tj
T*
(   \(let \(\(helper \(lambda \(x\) )Tj
T*
(                    ...)Tj
T*
(                    \(if some-test?)Tj
0 -1.2 TD
(                        \(helper ...\)\)\)\)\) ;; broken recursive call)Tj
0 -1.2 TD
(     ...)Tj
T*
(     \(helper ...\)  ;; call to \(non-\)recursive local procedure)Tj
T*
(     ...\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(The problem with this example is that when the )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
( is evaluated, the )Tj
/T1_3 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression will create the )Tj
0 -1.205 TD
(helper procedure in the wrong environment--before the variable )Tj
/T1_3 1 Tf
(helper)Tj
/T1_0 1 Tf
( is bound. The resulting procedure )Tj
0 -1.205 TD
(will be scoped in the environment outside the )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
(, not the new environment where )Tj
/T1_3 1 Tf
(helper)Tj
/T1_0 1 Tf
( is visible. When )Tj
0 -1.205 TD
(the procedure calls )Tj
/T1_3 1 Tf
(helper)Tj
/T1_0 1 Tf
(---which we had intended to be a recursive call--it will not use new bin\ding of )Tj
/T1_3 1 Tf
0 -1.205 TD
(helper)Tj
/T1_0 1 Tf
( that we created. Inside the )Tj
/T1_3 1 Tf
(lambda)Tj
/T1_0 1 Tf
( body, )Tj
/T1_3 1 Tf
(helper)Tj
/T1_0 1 Tf
( will still refer to whatever binding of )Tj
/T1_3 1 Tf
(helper)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(was visible before intering the let. \(Very likely, that's no variable a\t all, and this will cause an unbound variable )Tj
T*
(error.\) )Tj
/T1_3 1 Tf
0 -2.562 TD
(letrec)Tj
/T1_0 1 Tf
( lets us create an environment )Tj
/T1_4 1 Tf
(before)Tj
/T1_0 1 Tf
( evaluating the initial value expressions, so that the initial value )Tj
0 -1.205 TD
(computions execute inside the new environment. We can fix the problem by\ using a )Tj
/T1_3 1 Tf
(letrec)Tj
/T1_0 1 Tf
( instead of a )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
(: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define \(some-procedure...\))Tj
0 -1.2 TD
(   \(letrec \(\(helper \(lambda \(x\) )Tj
T*
(                       ...)Tj
T*
(                       \(if some-test?)Tj
T*
(                           \(helper ...\)\)\)\)\) ;; recursive call)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_126.html \(1 of 8\)1\1/3/2006 9:10:52 PM)Tj
ET
EMC 

endstreamendobj4922 0 obj<</Length 3709>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Variants of let)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.1815 0 0 13.1815 9.4154 755.0828 Tm
(     ...)Tj
0 -1.2 TD
(     \(helper ...\)  ;; call to recursive local procedure)Tj
T*
(     ...\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Now the procedure )Tj
/T1_1 1 Tf
(helper)Tj
/T1_0 1 Tf
( can "see its own name," since the lambda expression is evaluated in the\ )Tj
0 -1.205 TD
(environment where )Tj
/T1_1 1 Tf
(helper)Tj
/T1_0 1 Tf
( is bound. )Tj
0 -2.557 TD
(More concretely, notice that when this procedure is run, it creates an e\nvironment and closure that are linked )Tj
0 -1.205 TD
(circularly. The environment contains a binding of )Tj
/T1_1 1 Tf
(helper)Tj
/T1_0 1 Tf
( that holds a pointer to the closure created by )Tj
/T1_1 1 Tf
0 -1.205 TD
(lambda)Tj
/T1_0 1 Tf
(. The closure, in turn, contains a pointer back to that same environment\, which is where it was created. )Tj
0 -1.205 TD
(It is this circularity that makes the procedure recursive; when it refer\s to )Tj
/T1_1 1 Tf
(helper)Tj
/T1_0 1 Tf
(, it fetches the value of this )Tj
0 -1.2 TD
(binding, which points to itself. )Tj
0 -2.562 TD
(We can get the same effect using )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(set!)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(A )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
( expression is equivalent to a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( where the bindings are initialized with dummy values, and then )Tj
0 -1.2 TD
(the initial values are computed and assigned into the bindings. The abov\e example is equivalent to: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(some-procedure ...\))Tj
0 -1.2 TD
(   \(let \(\(helper '*dummy-value*\)\))Tj
T*
(      \(set! helper \(lambda \(x\))Tj
T*
(                      ...)Tj
T*
(                      \(if some-test?)Tj
T*
(                          \(helper ...\)\)\)\)\) ; recursive call)Tj
T*
(     ...)Tj
T*
(     \(helper ...\)  ; call to recursive local procedure)Tj
T*
(     ...\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Here the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( creates a binding, initializing it with an arbitary value that isn't ac\tually used--it's just a )Tj
0 -1.205 TD
(placeholder. Then, once the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( is entered and the binding is visible, a closure is created \(in that e\nvironment\) )Tj
0 -1.205 TD
(and a pointer to it is installed in that binding. )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
( can be used when defining mutually recursive )Tj
0 -1.2 TD
(procedures, each of which can see the others' names and call them. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(some procedure ...\))Tj
0 -1.2 TD
(   \(letrec \(\(helper1 \(lambda \(\))Tj
0 -1.2 TD
(                        ... \(helper2\) ...\)\))Tj
0 -1.2 TD
(            \(helper2 \(lambda \(\))Tj
T*
(                        ... \(helper1\) ...\)\)\))Tj
T*
(     ...)Tj
T*
(     \(helper1\)  ; start up mutual recursion)Tj
T*
(     ...\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that all )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
( does is bind variables and \(re-\)initialize them. You can use it to de\fine plain variables )Tj
0 -1.2 TD
(as well as procedure variables. For example, if the recursive procedures\ above need to reference a shared )Tj
T*
(variable, you can do this: )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_126.html \(2 of 8\)1\1/3/2006 9:10:52 PM)Tj
ET
EMC 

endstreamendobj4923 0 obj<</Length 3139>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Variants of let)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.1815 0 0 13.1815 9.4154 739.6414 Tm
(\(define \(some procedure ...\))Tj
0 -1.2 TD
(   \(letrec \(\(helper1 \(lambda \(\))Tj
T*
(                        ... var1 ... \(helper2\) ...\)\))Tj
T*
(            \(helper2 \(lambda \(\))Tj
T*
(                        ... \(helper1\) ... var1 ...\)\))Tj
T*
(            \(var1 #f\)\))Tj
T*
(     ...)Tj
T*
(     \(helper1\)  ;; start up mutual recursion)Tj
T*
(     ...\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
([ should come up with some simple concrete examples...] )Tj
0 -2.562 TD
(As with )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, the order of evaluation of a )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
('s initial value expressions is undefined. For example, the )Tj
0 -1.205 TD
(above )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
( might be compiled as though it were a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( like this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(some procedure ...\))Tj
0 -1.2 TD
(   \(let \(\(helper1 '*dummy-value*\))Tj
T*
(         \(helper2 '*dummy-value*\))Tj
T*
(         \(var1 '*dummy-value*\)\))Tj
T*
(      \(set! helper2 \(lambda \(\))Tj
T*
(                        ... \(helper1\) ... var1 ...\)\))Tj
0 -1.2 TD
(   )Tj
0 -1.2 TD
(      \(set! var1 #f\))Tj
T*
(      \(set! helper1 \(lambda \(\))Tj
T*
(                       ... var1 ... \(helper2\) ...\)\))Tj
T*
(     ...)Tj
T*
(     \(helper1\)  ;; start up mutual recursion)Tj
T*
(     ...\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(When using )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( to define local procedures, in the usual way, the order of evaluation i\s )Tj
0 -1.205 TD
(irrelevant--the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expressions can be executed in any order, because they only refer to th\e )Tj
/T1_1 1 Tf
(bindings)Tj
/T1_0 1 Tf
( of )Tj
0 -1.205 TD
(the )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
( variables, not their )Tj
/T1_1 1 Tf
(values)Tj
/T1_0 1 Tf
(. The values are only used when the resulting procedures are called. )Tj
0 -1.2 TD
(The following would be an error, however: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(some procedure ...\))Tj
0 -1.2 TD
(   \(letrec \(\(helper1 ...\))Tj
T*
(            \(helper2 ...\))Tj
T*
(            \(var1 \(list helper1 helper2\)\)\))Tj
T*
(      ...)Tj
T*
(      \(\(car \(var1 helper1\)\)\)  ; start up mutual recursion)Tj
T*
(      ...\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Here the initialization of )Tj
/T1_1 1 Tf
(var1)Tj
/T1_0 1 Tf
( depends on the values of )Tj
/T1_1 1 Tf
(helper1)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(helper2)Tj
/T1_0 1 Tf
(, which may not have been )Tj
0 -1.2 TD
(computed yet. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_126.html \(3 of 8\)1\1/3/2006 9:10:52 PM)Tj
ET
EMC 

endstreamendobj4924 0 obj<</Length 3864>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Variants of let)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 1 RG
1.107 w 10 M 0 j 0 J []0 d 
9.415 740.991 m
49.698 740.991 l
S
0.664 w 
49.698 742.32 m
97.152 742.32 l
S
1.107 w 
97.152 740.991 m
127.917 740.991 l
S
0.664 w 
127.917 742.32 m
175.371 742.32 l
S
1.107 w 
175.371 740.991 m
318.193 740.991 l
S
0 0 1 rg
BT
/T1_1 1 Tf
13.1815 0 0 13.1815 9.4154 744.3129 Tm
(Using )Tj
/T1_2 1 Tf
(letrec)Tj
/T1_1 1 Tf
( and )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_1 1 Tf
( to Implement Modules)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.7 TD
(Standard Scheme does not have a module system, but )Tj
/T1_3 1 Tf
(letrec)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(lambda)Tj
/T1_0 1 Tf
( are powerful enough to )Tj
0 -1.2 TD
(implement modules in portable Scheme. )Tj
0 -2.557 TD
(Suppose we would like to define a module that encapsulates a set of proc\edures and variables, but only exports )Tj
0 -1.2 TD
(a subset of those procedures. )Tj
0 -2.562 TD
(We can represent the module as a )Tj
/T1_3 1 Tf
(letrec)Tj
/T1_0 1 Tf
( environment which exports an association list of of procedures. )Tj
0 -2.562 TD
(Here we'll create a module called )Tj
/T1_3 1 Tf
(foo)Tj
/T1_0 1 Tf
(, which defines four procedures and two variables, and exports two of th\e )Tj
0 -1.205 TD
(procedures, )Tj
/T1_3 1 Tf
(foo)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(bar)Tj
/T1_0 1 Tf
(. )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define foo-module)Tj
0 -1.2 TD
(   ;; create a letrec environment with internal definitions)Tj
T*
(   ;; of some variables and procedures)Tj
T*
(   \(letrec \(\(private-proc1 \(lambda \(...\) ...\)\))Tj
T*
(            \(private-proc2 \(lambda \(...\) ...\)\))Tj
T*
(            \(private-var1 ...\))Tj
0 -1.2 TD
(            \(private-var2 ...\))Tj
0 -1.2 TD
(            \(foo \(lambda \(...\) ...\)\))Tj
T*
(            \(bar \(lambda \(...\) ...\)\)\))Tj
T*
(      ;; return an association list of "exported" closures)Tj
T*
(      \(list \(list 'foo foo\))Tj
T*
(            \(list 'bar bar\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(The )Tj
/T1_3 1 Tf
(letrec)Tj
/T1_0 1 Tf
( expression will create an environment, and within that environment it w\ill evaluate the initial )Tj
0 -1.205 TD
(value expressions to initialize the bindings. All of the procedures in t\he )Tj
/T1_3 1 Tf
(letrec)Tj
/T1_0 1 Tf
( can see each other's names, )Tj
0 -1.205 TD
(and call each other freely. Procedures outside the )Tj
/T1_3 1 Tf
(letrec)Tj
/T1_0 1 Tf
( cannot. )Tj
0 -2.562 TD
(The only procedures that can be called from outside the )Tj
/T1_3 1 Tf
(letrec)Tj
/T1_0 1 Tf
( are )Tj
/T1_3 1 Tf
(foo)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(bar)Tj
/T1_0 1 Tf
(, which are returned from )Tj
0 -1.205 TD
(the )Tj
/T1_3 1 Tf
(letrec)Tj
/T1_0 1 Tf
( in an association list. We've saved this list in the binding of )Tj
/T1_3 1 Tf
(foo-module)Tj
/T1_0 1 Tf
(, so that we can look )Tj
0 -1.2 TD
(those procedures up and call them. )Tj
0 -2.557 TD
(We can clean this up a little by providing an accessor function that wil\l extract a single procedure from a )Tj
0 -1.205 TD
(module, by using )Tj
/T1_3 1 Tf
(assq)Tj
/T1_0 1 Tf
( to find the appropriate closure: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define \(module-get mod name\))Tj
0 -1.2 TD
(   \(cadr \(assq mod name\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(To import a procedure and give it a name in another environment, we can \do this: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define foo \(module-get foo-module 'foo\)\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_126.html \(4 of 8\)1\1/3/2006 9:10:52 PM)Tj
ET
EMC 

endstreamendobj4925 0 obj<</Length 3307>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Variants of let)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 752.5369 Tm
(If we want to, we can give it a different name in the environment we're \"importing" it into. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define quux \(module-get foo-module 'foo\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(This lets us rename a procedure imported from a module, to avoid naming \conflicts. )Tj
/T1_1 1 Tf
(quux)Tj
/T1_0 1 Tf
( is exactly the same )Tj
0 -1.205 TD
(procedure as )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(, but by a different name in a different scope. When we call it, it will\ execute in the )Tj
0 -1.205 TD
(environment where it was defined, namely the "private" environment of th\e module we created with )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
(. )Tj
ET
0 0 1 RG
0.767 w 10 M 0 j 0 J []0 d 
9.415 615.475 m
45.918 615.475 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.2095 0 0 15.2095 9.4154 617.7746 Tm
(let*)Tj
0 0 0 rg
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 581.5025 Tm
(For situations where the order of initialization is important, Scheme pr\ovides a variant of )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( called )Tj
/T1_1 1 Tf
(let*)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Suppose we tried the following using )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(: )Tj
/T1_1 1 Tf
T*
(\(define \(foo epsilon\))Tj
0 -1.2 TD
(   \(let \(\(a 0\))Tj
T*
(         \(upper \(+ a epsilon\)\))Tj
T*
(         \(lower \(- a epsilon\)\)\))Tj
T*
(     ...\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(This will not do what we probably meant, because the initial values of )Tj
/T1_1 1 Tf
(upper)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(lower)Tj
/T1_0 1 Tf
( will be computed )Tj
0 -1.205 TD
(before )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( is bound. We could fix this by using nested )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
('s, to force evaluation and binding to happen in the )Tj
0 -1.2 TD
(desired order: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(foo epsilon\))Tj
0 -1.2 TD
(   \(let \(\(a 0\)\))Tj
T*
(      \(let \(\(lower \(- a epsilon\)\))Tj
0 -1.2 TD
(            \(upper \(+ a epsilon\)\)\))Tj
0 -1.2 TD
(     ...\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(This ensures that )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( is bound before we evaluate the initial value expressions for )Tj
/T1_1 1 Tf
(upper)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(lower)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Scheme provides )Tj
/T1_1 1 Tf
(let*)Tj
/T1_0 1 Tf
( to avoid needing lots of nested lets when initilizing a series of bindi\ngs, each of which )Tj
0 -1.2 TD
(may depend ont the previous ones, e.g., )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(bar x y\))Tj
0 -1.2 TD
(   \(let* \(\(diff \(- x y\)\))Tj
0 -1.2 TD
(          \(diff-squared \(* diff diff\)\))Tj
T*
(          \(diff-cubed \(* diff-squared diff\)\)\))Tj
T*
(     ...\))Tj
/T1_0 1 Tf
0 -2.552 TD
(is exactly equivalent to )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(bar x y\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_126.html \(5 of 8\)1\1/3/2006 9:10:52 PM)Tj
ET
EMC 

endstreamendobj4926 0 obj<</Length 4215>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Variants of let)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.1815 0 0 13.1815 9.4154 755.0828 Tm
(   \(let \(\(diff \(- x y\)\)\))Tj
0 -1.2 TD
(      \(let \(\(diff-squared \(* diff diff\)\)\))Tj
T*
(         \(let \(\(diff-cubed \(* diff-squared diff\)\)\))Tj
T*
(            ...\)\)\)\))Tj
ET
0 0 1 RG
1.533 w 10 M 0 j 0 J []0 d 
9.415 664.716 m
182.822 664.716 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.2514 0 0 18.2514 9.4154 669.3149 Tm
(Iteration Constructs)Tj
ET
1.278 w 
9.415 626.474 m
64.352 626.474 l
S
0.767 w 
64.352 628.007 m
91.729 628.007 l
S
BT
/T1_2 1 Tf
15.2095 0 0 15.2095 9.4154 630.3064 Tm
(Named )Tj
/T1_3 1 Tf
(let)Tj
0 0 0 rg
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 594.0342 Tm
(Named )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( is a general and flexible iteration construct that is really just synta\ctic sugar for a )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
( and one )Tj
0 -1.205 TD
(or more )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
('s. It looks like a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, but it's usually used as a loop. )Tj
0 -2.562 TD
(Named )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( implements iteration as recursion. If you use it in normal ways, you wr\ite loops that act as tail-)Tj
0 -1.2 TD
(recursive procedures. You can also use it to write "loops" that aren't t\ail recursive, but that's uncommon. )Tj
0 -2.562 TD
(Named )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( binds loop variables, and executes the loop body. Anywhere in the loop \body, you can call a )Tj
0 -1.2 TD
(procedure to iterate the loop. )Tj
0 -2.557 TD
(Here's an example loop, which prints out the integers from 0 to 9: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let loop \(\(i 0\)\))Tj
0 -1.2 TD
(   \(display i\))Tj
T*
(   \(if \(< i 10\))Tj
T*
(       \(loop \(+ i 1\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Here we've written a loop and given it an identifier, )Tj
/T1_1 1 Tf
(loop)Tj
/T1_0 1 Tf
(; that's just a name we chose for this particular loop--)Tj
0 -1.2 TD
(we could have used any identifier. )Tj
0 -2.562 TD
(This loop binds the loop variable )Tj
/T1_1 1 Tf
(i)Tj
/T1_0 1 Tf
(, giving it the intial value 0. Then it enters the body of the loop, whi\ch prints )Tj
0 -1.205 TD
(out )Tj
/T1_1 1 Tf
(i)Tj
/T1_0 1 Tf
( using display, and evaluates the )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( expression. If the )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( condition returns a true value, it evaluates the )Tj
0 -1.205 TD
(expression )Tj
/T1_1 1 Tf
(\(loop \(+ i 1\)\))Tj
/T1_0 1 Tf
(, which iterates the loop. This looks like a call to a procedure named )Tj
/T1_1 1 Tf
(loop)Tj
/T1_0 1 Tf
(, )Tj
0 -1.2 TD
(which iterates the loop. The argument passed is the new value of the loo\p variable for the next iteration. )Tj
0 -2.557 TD
(The reason that the expression that iterates a loop looks like a procedu\re call is that it )Tj
/T1_4 1 Tf
(is)Tj
/T1_0 1 Tf
( a procedure call. A )Tj
0 -1.205 TD
(named )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( is exactly equivalent to a )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
( that defines a named procedure, whose body is the body of the )Tj
0 -1.205 TD
(named )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, and then calls that procedure to start the recursion. When you write a\ "loop" with named )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, )Tj
0 -1.2 TD
(you're really writing a recursive procedure and a call to that procedure\. The loop variable\(s\) are really )Tj
T*
(arguments to the procedure, and the initial values of the loop variables\ are just the first argument passed to the )Tj
T*
(procedure to start the recursion. )Tj
0 -2.557 TD
(The above example is exactly equivalent to: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(letrec \(\(loop \(lambda \(i\)      ; define a recursive)Tj
0 -1.2 TD
(                  \(display i\)   ; procedure whose body)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_126.html \(6 of 8\)1\1/3/2006 9:10:52 PM)Tj
ET
EMC 

endstreamendobj4927 0 obj<</Length 3553>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Variants of let)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.1815 0 0 13.1815 9.4154 752.6526 Tm
(                  \(if \(< i 10\)  ; is the loop body)Tj
0 -1.2 TD
(                      \(loop \(+ i 1\)\)\)\)\)\))Tj
T*
(   \(loop 0\)\) ;; start the recursion with 0 as arg i)Tj
/T1_0 1 Tf
0 -2.557 TD
(When you supply the name of a named )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, you're really supplying the name of a )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
( variable that will )Tj
0 -1.205 TD
(name a procedure. When you supply the body of the named )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, you're really supplying the body of the )Tj
0 -1.2 TD
(named procedure. When it iterates the loop, it is calling itself recursi\vely, passing the new invocation the new )Tj
T*
(value of the loop variable as an argument. )Tj
0 -2.562 TD
(To start off the loop, named )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( passes this procedure the initial value expression for the loop variabl\e. )Tj
0 -2.557 TD
(We can provide any expression we want to compute the new value of the lo\op variable--we don't have to )Tj
0 -1.2 TD
(increment it by one. We can also provide any test we want to decide whet\her to iterate the loop. )Tj
0 -2.557 TD
(For example, here's procedure which uses a loop to search a list of alte\rnating key/value pairs. \(This is not an )Tj
0 -1.2 TD
(association list, but a linear list of alternating keys and values, call\ed a property list.\) It iterates through the list )Tj
0 -1.205 TD
(two elements at a time. If it finds an odd-numbered element that's )Tj
/T1_1 1 Tf
(eq?)Tj
/T1_0 1 Tf
( to what it's looking for, it returns the )Tj
0 -1.2 TD
(next \(even-numbered\) element; otherwise, it continues through the loop\. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(property-list-search lis target\))Tj
0 -1.2 TD
(   \(let loop \(\(l lis\)\))Tj
T*
(      \(cond \(\(null? l\))Tj
T*
(             #f\))Tj
T*
(            \(\(eq? \(car l\) target\))Tj
T*
(             \(cadr l\)\))Tj
T*
(            \(#t)Tj
T*
(             \(loop \(cddr l\)\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
([ same as: ] )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(property-list-search lis target\))Tj
0 -1.2 TD
(   \(letrec \(\(loop \(lambda \(l\))Tj
T*
(                     \(cond \(\(null? l\))Tj
T*
(                            #f)Tj
T*
(                           \(\(eq? \(car l\) target\))Tj
T*
(                            \(cadr l\)\))Tj
T*
(                           \(#t)Tj
T*
(                            \(loop \(cddr l\)\)\)\)\)\)\)\))Tj
T*
(      \(loop lis\)\)\)   ;; start the recursion)Tj
/T1_0 1 Tf
0 -2.557 TD
(The reason we supply a name for a loop in a named )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( is so that we can have nested loops with different )Tj
0 -1.2 TD
(names, and we can iterate any of the loops by calling it by name. )Tj
0 -2.557 TD
(For example, suppose we want to have a nested pair of loops, but want to\ be able to bail out of the iteration of )Tj
0 -1.2 TD
(the inner loop, and go directly to the next iteration of the outer loop.\ We can do this: )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_126.html \(7 of 8\)1\1/3/2006 9:10:52 PM)Tj
ET
EMC 

endstreamendobj4928 0 obj<</Length 4026>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Variants of let)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 735.584 Tm
([ need example here ] )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let outer-loop \(\(i ...\)\))Tj
0 -1.2 TD
(   \(let inner-loop \(\(j ...\)\))Tj
T*
(      \(if \(should-abort-inner-loop\))Tj
T*
(          \(outer-loop ...\)\)  ;; go directly to next iteration of oute\r loop)Tj
T*
(      ...  ; do normal inner loop action)Tj
T*
(      ...\(inner-loop ...\)  ;; iterate inner loop normally)Tj
T*
(   ...)Tj
T*
(   ... \(outer-loop ...\)\)   ; iterate outer loop normally)Tj
/T1_0 1 Tf
0 -2.552 TD
(Some things to notice about Scheme loops: )Tj
/T1_2 1 Tf
6.5908 0 0 6.5908 33.6252 523.7379 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 523.7379 Tm
(Loops can have any number of loop variables, each updated in any way you\ like. This corresponds to )Tj
0 -1.2 TD
(having a recursive procedure with any number of arguments, and passing i\t any values you like at each )Tj
T*
(recursion. )Tj
/T1_2 1 Tf
6.5908 0 0 6.5908 33.6252 476.2843 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 476.2843 Tm
(Unlike most languages' loops, each time we iterate a loop, we )Tj
/T1_3 1 Tf
(rebind)Tj
/T1_0 1 Tf
( the loop variable. There's a new )Tj
T*
(binding at each iteration, because each iteration is really a call to a \procedure that binds arguments. We )Tj
T*
(don't bind the loop variable once and side-effect it at each iteration. \)Tj
/T1_2 1 Tf
6.5908 0 0 6.5908 33.6252 428.8308 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 428.8308 Tm
(Since loop bodies are really just procedure bodies, and loop iterations \are really just procedure calls, we )Tj
T*
(can put calls that iterate a loop anywhere in the body; we can have mult\iple points in the body that call )Tj
T*
(the procedure to iterate the loop. )Tj
/T1_2 1 Tf
6.5908 0 0 6.5908 33.6252 381.3772 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 381.3772 Tm
(The variable bindings created at each iteration of a loop are independen\t, and can be captured by lambda )Tj
T*
(expressions in the loop body. Each closure created by lambda will captur\e the bindings for )Tj
/T1_3 1 Tf
(that)Tj
/T1_0 1 Tf
( iteration )Tj
T*
(of the loop. )Tj
ET
0 0 1 RG
1.533 w 10 M 0 j 0 J []0 d 
9.415 306.764 m
439.436 306.764 l
S
0 0 1 rg
BT
/T1_4 1 Tf
18.2514 0 0 18.2514 9.4154 311.3638 Tm
(Programming with Procedures and Environments)Tj
ET
9.415 265.091 m
94.649 265.091 l
S
BT
/T1_4 1 Tf
18.2514 0 0 18.2514 9.4154 269.6899 Tm
(Exercises)Tj
ET
0.5 0.5 0.5 rg
9.415 235.534 m
9.415 237.417 l
602.585 237.417 l
601.643 236.476 l
10.357 236.476 l
10.357 236.476 l
h
f
0.875 0.875 0.875 rg
602.585 237.417 m
602.585 235.534 l
9.415 235.534 l
10.357 236.476 l
601.643 236.476 l
601.643 236.476 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 217.622 Tm
(Go to the )Tj
ET
0.664 w 
61.772 215.629 m
83.008 215.629 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 61.7725 217.622 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
89.599 215.629 m
134.996 215.629 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 89.5987 217.622 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
141.587 215.629 m
164.285 215.629 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 141.5867 217.622 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
170.876 215.629 m
189.185 215.629 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 170.8761 217.622 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
236.415 215.629 m
323.545 215.629 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 236.4147 217.622 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_126.html \(8 of 8\)1\1/3/2006 9:10:52 PM)Tj
ET
EMC 

endstreamendobj4929 0 obj(An Introduction to Scheme and its Implementation - Variants of let)endobj4930 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_126.html)/S 700 0 R>>endobj4931 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_126.html)endobj4932 0 obj(iÏ›»Ü˙:∞—∞ˆT{T{˛)endobj4933 0 obj<</TS(D:20061104051052)/ID 4932 0 R/CT(text/html)/O[4872 0 R 4884 0 R 4886 0 R 4888 0 R 4893 0 R 4899 0 R 4907 0 R 4909 0 R]/S/SPS/T 4929 0 R/TID 4935 0 R/SI 4934 0 R>>endobj4934 0 obj<</TS(D:20061104051052)/AU 4931 0 R>>endobj4935 0 obj(!ı}r!ˆT#«`∞¨=\) )endobj4936 0 obj<</Parent 710 0 R/Next 5061 0 R/Dest[4872 0 R/XYZ 0 792 null]/Prev 4869 0 R/SE 4871 0 R/Title(An Introduction to Scheme and its Implementation - Variants of let)>>endobj4937 0 obj<</TextDecorationType/Underline/O/Layout>>endobj4938 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 4951 0 R/Type/MCR>><</MCID 0/Pg 4954 0 R/Type/MCR>><</MCID 0/Pg 4959 0 R/Type/MCR>><</MCID 0/Pg 4961 0 R/Type/MCR>><</MCID 0/Pg 4963 0 R/Type/MCR>><</MCID 0/Pg 4965 0 R/Type/MCR>><</MCID 0/Pg 4968 0 R/Type/MCR>><</MCID 0/Pg 4970 0 R/Type/MCR>><</MCID 0/Pg 4972 0 R/Type/MCR>><</MCID 0/Pg 4974 0 R/Type/MCR>><</MCID 0/Pg 4986 0 R/Type/MCR>><</MCID 0/Pg 4990 0 R/Type/MCR>><</MCID 0/Pg 4996 0 R/Type/MCR>><</MCID 0/Pg 5002 0 R/Type/MCR>><</MCID 0/Pg 5005 0 R/Type/MCR>><</MCID 0/Pg 5008 0 R/Type/MCR>><</MCID 0/Pg 5012 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 4939 0 R>>endobj4939 0 obj<</Annots 4942 0 R/Parent 4952 0 R/ID 5057 0 R/StructParents 278/Contents 5036 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4940 0 obj[4938 0 R]endobj4941 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj4942 0 obj[4941 0 R 4943 0 R 4944 0 R 4945 0 R 4946 0 R 4948 0 R 4950 0 R]endobj4943 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4872 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_126.html)/S/URI>>/Border[0 0 0]>>endobj4944 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5064 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_128.html)/S/URI>>/Border[0 0 0]>>endobj4945 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj4946 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj4947 0 obj[4939 0 R/XYZ 0 731.2 null]endobj4948 0 obj<</Rect[10.0 683.954 261.903 709.723]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC169)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC169)/S/URI>>/Border[0 0 0]>>endobj4949 0 obj[4939 0 R/XYZ 0 470.01 null]endobj4950 0 obj<</Rect[10.0 447.686 494.712 468.071]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC170)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC170)/S/URI>>/Border[0 0 0]>>endobj4951 0 obj<</Parent 4966 0 R/ID 5057 0 R/StructParents 279/Contents 5037 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4952 0 obj<</Parent 5111 0 R/Count 5/Type/Pages/Kids[4893 0 R 4899 0 R 4907 0 R 4909 0 R 4939 0 R]>>endobj4953 0 obj[4938 0 R]endobj4954 0 obj<</Annots 4958 0 R/Parent 4966 0 R/ID 5057 0 R/StructParents 280/Contents 5038 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4955 0 obj[4938 0 R]endobj4956 0 obj[4954 0 R/XYZ 0 437.933 null]endobj4957 0 obj<</Rect[10.0 415.61 228.62 435.994]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC171)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC171)/S/URI>>/Border[0 0 0]>>endobj4958 0 obj[4957 0 R]endobj4959 0 obj<</Parent 4966 0 R/ID 5057 0 R/StructParents 281/Contents 5039 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4960 0 obj[4938 0 R]endobj4961 0 obj<</Parent 4966 0 R/ID 5057 0 R/StructParents 282/Contents 5040 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 737 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4962 0 obj[4938 0 R]endobj4963 0 obj<</Parent 4966 0 R/ID 5057 0 R/StructParents 283/Contents 5041 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4964 0 obj[4938 0 R]endobj4965 0 obj<</Parent 4987 0 R/ID 5057 0 R/StructParents 284/Contents 5042 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4966 0 obj<</Parent 5111 0 R/Count 5/Type/Pages/Kids[4951 0 R 4954 0 R 4959 0 R 4961 0 R 4963 0 R]>>endobj4967 0 obj[4938 0 R]endobj4968 0 obj<</Parent 4987 0 R/ID 5057 0 R/StructParents 285/Contents 5043 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4969 0 obj[4938 0 R]endobj4970 0 obj<</Parent 4987 0 R/ID 5057 0 R/StructParents 286/Contents 5045 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4971 0 obj[4938 0 R]endobj4972 0 obj<</Parent 4987 0 R/ID 5057 0 R/StructParents 287/Contents 5046 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4973 0 obj[4938 0 R]endobj4974 0 obj<</Annots 4981 0 R/Parent 4987 0 R/ID 5057 0 R/StructParents 288/Contents 5047 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R/T1_3 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4975 0 obj<</Length 3774>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
2.081 w 
10 684.255 m
261.903 684.255 l
S
0 0 1 rg
BT
/T1_1 1 Tf
24.7692 0 0 24.7692 10 690.4968 Tm
(Recursion in Scheme)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 649.4525 Tm
(In this chapter, I'll discuss procedure calling and recursion in more de\pth. [ blah blah blah ] Scheme's )Tj
0 -1.2 TD
(procedure-calling mechanism supports efficient tail-recursive programmin\g, where recursion is used )Tj
T*
(instead of iteration. In conventional programming languages, you can't g\enerally use recursion to get the )Tj
T*
(effect of iteration, because you may get activation stack overflows if t\he recursion is too deep. )Tj
0 -2.557 TD
(After clarifying how recursion works, I'll give examples of how to progr\am recursively in Scheme. )Tj
0 -2.557 TD
(\(In a later chapter, I'll show how the mechanisms that support tail rec\ursion also support a powerful )Tj
0 -1.205 TD
(control feature called )Tj
/T1_2 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
( that lets you implement novel control )Tj
0 -1.2 TD
(structures like backtracking and coroutines.\) )Tj
ET
1.628 w 
10 448.139 m
494.712 448.139 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 453.0244 Tm
(Subproblems and Reductions \(non-tail and tail calls\))Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 413.7235 Tm
(In most implementations of most programming languages, an activation sta\ck is used to implement )Tj
T*
(procedure calling. At a call, the state of the "caller" \(calling proced\ure\) is saved on the stack, and then )Tj
T*
(control is transferred to the callee. )Tj
0 -2.557 TD
(Because each procedure call requires saving state on the stack, recursio\n is limited by the stack depth. In )Tj
0 -1.2 TD
(many systems, deep recursions cause stack overflow and program crashes, \or use up unnecessary virtual )Tj
T*
(memory swap space. In most systems, recursion is unnecessarily expensive\ in space and/or time. This )Tj
T*
(limits the usefulness of recursion. )Tj
0 -2.557 TD
(In Scheme, things are somewhat different. As I noted earlier, recursive \calls may be )Tj
/T1_3 1 Tf
(tail recursive)Tj
/T1_0 1 Tf
(, in )Tj
0 -1.2 TD
(which case the state of the caller needn't be saved before calling the c\allee. )Tj
0 -2.557 TD
(More generally, whether a procedure is recursive or not, the calls it ma\kes can be classified as )Tj
/T1_3 1 Tf
0 -1.2 TD
(subproblems)Tj
/T1_0 1 Tf
( or )Tj
/T1_3 1 Tf
(reductions)Tj
/T1_0 1 Tf
( If the last thing a procedure does is to call another procedure, that's\ known as )Tj
T*
(a reduction--the work being done by the caller is complete, because it "\reduces to" the work being done )Tj
T*
(by the callee. )Tj
0 -2.557 TD
(For example, consider the following procedures: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(foo\))Tj
0 -1.2 TD
(   \(bar\))Tj
T*
(   \(baz\)\))Tj
ET
EMC 
Q

endstreamendobj4976 0 obj[4938 0 R]endobj4977 0 obj<</Limits[224 255]/Nums[224 4401 0 R 225 4411 0 R 226 4414 0 R 227 4416 0 R 228 4421 0 R 229 4429 0 R 230 4459 0 R 231 4474 0 R 232 4482 0 R 233 4485 0 R 234 4497 0 R 235 4520 0 R 236 4530 0 R 237 4532 0 R 238 4537 0 R 239 4540 0 R 240 4565 0 R 241 4591 0 R 242 4617 0 R 243 4643 0 R 244 4654 0 R 245 4656 0 R 246 4658 0 R 247 4680 0 R 248 4692 0 R 249 4695 0 R 250 4698 0 R 251 4702 0 R 252 4704 0 R 253 4706 0 R 254 4709 0 R 255 4741 0 R]>>endobj4978 0 obj<</Limits[256 320]/Nums[]>>endobj4979 0 obj[4974 0 R/XYZ 0 589.93 null]endobj4980 0 obj<</Rect[10.0 567.607 242.674 587.992]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC172)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC172)/S/URI>>/Border[0 0 0]>>endobj4981 0 obj[4980 0 R 4983 0 R 4985 0 R]endobj4982 0 obj[4974 0 R/XYZ 0 440.469 null]endobj4983 0 obj<</Rect[10.0 421.7 341.267 438.854]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC173)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC173)/S/URI>>/Border[0 0 0]>>endobj4984 0 obj[4974 0 R/XYZ 0 400.084 null]endobj4985 0 obj<</Rect[10.0 383.684 114.244 398.684]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC174)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC174)/S/URI>>/Border[0 0 0]>>endobj4986 0 obj<</Parent 5009 0 R/ID 5057 0 R/StructParents 289/Contents 5048 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4987 0 obj<</Parent 5111 0 R/Count 5/Type/Pages/Kids[4965 0 R 4968 0 R 4970 0 R 4972 0 R 4974 0 R]>>endobj4988 0 obj<</Length 4527>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 14 0 0 14 10 744.0562 Tm
(\(define \(baz\))Tj
0 -1.2 TD
(   \(bar\))Tj
T*
(   \(foo\)\))Tj
/T1_1 1 Tf
0 -2.557 TD
(Notice that when )Tj
/T1_0 1 Tf
(foo)Tj
/T1_1 1 Tf
( is called, it does two things: it calls )Tj
/T1_0 1 Tf
(bar)Tj
/T1_1 1 Tf
( and then calls )Tj
/T1_0 1 Tf
(baz)Tj
/T1_1 1 Tf
(. After the call to )Tj
/T1_0 1 Tf
0 -1.205 TD
(bar)Tj
/T1_1 1 Tf
(, control must return to )Tj
/T1_0 1 Tf
(foo)Tj
/T1_1 1 Tf
(, so that it can continue and call )Tj
/T1_0 1 Tf
(baz)Tj
/T1_1 1 Tf
(. The call to )Tj
/T1_0 1 Tf
(bar)Tj
/T1_1 1 Tf
( is therefore a )Tj
0 -1.205 TD
(subproblem--a step in the overall plan of executing )Tj
/T1_0 1 Tf
(foo)Tj
/T1_1 1 Tf
(. When )Tj
/T1_0 1 Tf
(foo)Tj
/T1_1 1 Tf
( calls )Tj
/T1_0 1 Tf
(baz)Tj
/T1_1 1 Tf
(, however, that's )Tj
/T1_2 1 Tf
(all)Tj
/T1_1 1 Tf
( it )Tj
T*
(needs to do--all of its other work is done. The result of the call to )Tj
/T1_0 1 Tf
(foo)Tj
/T1_1 1 Tf
( is just the result of )Tj
/T1_0 1 Tf
(foo)Tj
/T1_1 1 Tf
('s call to )Tj
/T1_0 1 Tf
0 -1.205 TD
(baz)Tj
/T1_1 1 Tf
(. )Tj
0 -2.562 TD
(In a conventional programming language implementation, )Tj
/T1_0 1 Tf
(foo)Tj
/T1_1 1 Tf
('s state would be saved before the call to )Tj
/T1_0 1 Tf
0 -1.205 TD
(baz)Tj
/T1_1 1 Tf
(, as well as before the call to )Tj
/T1_0 1 Tf
(bar)Tj
/T1_1 1 Tf
(. Each call would return control to )Tj
/T1_0 1 Tf
(foo)Tj
/T1_1 1 Tf
(. In the case of the call to )Tj
/T1_0 1 Tf
0 -1.205 TD
(baz)Tj
/T1_1 1 Tf
(, all )Tj
/T1_0 1 Tf
(foo)Tj
/T1_1 1 Tf
( will do is return the result of the call to )Tj
/T1_2 1 Tf
(its)Tj
/T1_1 1 Tf
( caller. That is, all )Tj
/T1_0 1 Tf
(foo)Tj
/T1_1 1 Tf
( does after the return )Tj
0 -1.205 TD
(from )Tj
/T1_0 1 Tf
(baz)Tj
/T1_1 1 Tf
( is to leave the result wherever its caller expects it, and return again\ to pop a stack frame off )Tj
0 -1.2 TD
(the activation stack. )Tj
0 -2.557 TD
(In Scheme, things are actually simpler. If the last thing a procedure do\es is to call another procedure, the )Tj
0 -1.2 TD
(caller doesn't save its own state on the stack. When the callee returns,\ it will return to its )Tj
/T1_2 1 Tf
(caller's)Tj
/T1_1 1 Tf
( caller )Tj
T*
(directly, rather than to its caller. After all, there's no reason to ret\urn to the caller if all the caller is going )Tj
T*
(to do is pass the return value along to )Tj
/T1_2 1 Tf
(its)Tj
/T1_1 1 Tf
( caller. )Tj
0 -2.557 TD
(This optimizes away the unnecessary state saving and returning at tail c\alls. You don't have to do )Tj
0 -1.2 TD
(anything special to get this optimization--Scheme implementations always\ do it for tail calls. )Tj
0 -2.562 TD
(Consider both )Tj
/T1_0 1 Tf
(foo)Tj
/T1_1 1 Tf
( and )Tj
/T1_0 1 Tf
(baz)Tj
/T1_1 1 Tf
( above. Neither ever returns--each just calls the other. In Scheme, thes\e two )Tj
0 -1.2 TD
(procedures will repeatedly call each other, without saving their state o\n the stack, producing an infinite )Tj
0 -1.205 TD
(mutual recursion. Will the stack overflow? No. Each will save its state \before calling )Tj
/T1_0 1 Tf
(bar)Tj
/T1_1 1 Tf
(, but the return )Tj
0 -1.205 TD
(from )Tj
/T1_0 1 Tf
(bar)Tj
/T1_1 1 Tf
( will pop that information off of the stack. The infinite tail-calling b\etween )Tj
/T1_0 1 Tf
(foo)Tj
/T1_1 1 Tf
( and )Tj
/T1_0 1 Tf
(baz)Tj
/T1_1 1 Tf
( will )Tj
0 -1.2 TD
(not increase the stack height at all. )Tj
0 -2.557 TD
(Above I said that a callee may return to its caller's caller, but that d\oesn't really capture the extent of )Tj
0 -1.2 TD
(what's going on. In general a procedure may return to its caller \(if it\ was non-tail called\), or it's caller's )Tj
T*
(caller \(if it was tail-called but its caller wasn't\) or it's caller's \caller's caller \(if it and it's caller were both )Tj
T*
(tail-called\), and so on. A procedure returns to the last caller that di\d a non-tail call. )Tj
0 -2.557 TD
(Because of this "tail call optimization," you can use recursion very fre\ely in Scheme, which is a good )Tj
0 -1.2 TD
(thing--many problems have a natural recursive structure, and recursion i\s the easiest way to solve them. )Tj
0 -2.557 TD
(Notice that this tail call optimization is a feature of the language, no\t just some implementations. Any )Tj
0 -1.2 TD
(implementation of standard Scheme is required to support it, so that you\ can count on it and write )Tj
T*
(portable programs that rely on it. \(In fact, the definition of the Sche\me language itself depends on this, )Tj
ET
EMC 
Q

endstreamendobj4989 0 obj[4938 0 R]endobj4990 0 obj<</Annots 4995 0 R/Parent 5009 0 R/ID 5057 0 R/StructParents 290/Contents 5049 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 736 0 R/T1_4 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4991 0 obj<</Length 3846>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 14 0 0 14 10 753.9756 Tm
(because the special forms for iteration are defined in terms of equivale\nt tail-calling--a loop is really a )Tj
0 -1.2 TD
(kind of procedure, that procedure tail-calls itself ot iterate the loop.\\) )Tj
0 -2.562 TD
(Also notice that the interpreter we presented earlier is tail-recursive.\ The recursive calls to )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
( are tail )Tj
0 -1.2 TD
(calls, and since it's implemented in Scheme, the interpreter relies on t\he underlying Scheme's tail-call )Tj
T*
(optimization. The evaluator thus snarfs the tail-call optimization from \the underlying Scheme system. If )Tj
T*
(you implement a Scheme interpreter in another language, you have to be m\ore careful, and implement )Tj
T*
(the tail call optimization yourself. )Tj
0 -2.557 TD
(It's something of a misnomer to call Scheme's procedure calling mechanis\m an "optimization." What's )Tj
0 -1.2 TD
(really going on is that Scheme simply distinguishes between two things t\hat most languages lump )Tj
T*
(together--saving the caller's state, and actually transferring control t\o the callee. Scheme notices that )Tj
T*
(these things are distinct, and doesn't bother to do the former when only\ the latter is necessary. )Tj
0 -2.557 TD
(A procedure call is really rather like a \(safe\) goto that can pass arg\uments: control is transferred directly )Tj
0 -1.2 TD
(to the callee, and the caller has the option of saving its state beforeh\and. \(This is safer than unrestricted )Tj
T*
(goto's, because when a procedure does return, it returns to the right an\cestor in the dynamic calling )Tj
T*
(pattern, just as though it had done a whole bunch of returns to get ther\e.\) )Tj
ET
0 0 1 RG
1.628 w 10 M 0 j 0 J []0 d 
10 416.063 m
228.62 416.063 l
S
0 0 1 rg
BT
/T1_2 1 Tf
19.3846 0 0 19.3846 10 420.9475 Tm
(The Continuation Chain)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 381.6466 Tm
(In this section, I'll describe a straightforward implementation of Schem\e's state-saving for procedure )Tj
0 -1.205 TD
(calling. It may clarify things that are discussed later, however, such a\s )Tj
/T1_1 1 Tf
(call-with-current-)Tj
0 -1.205 TD
(continuation)Tj
/T1_0 1 Tf
( and our example compiler's code generation strategy. )Tj
0 -2.557 TD
(In most conventional language implementations, as noted above, calling a\ procedure allocates an )Tj
0 -1.2 TD
(activation record \(or "stack frame"\) that holds the return address for\ the call )Tj
/T1_3 1 Tf
(and)Tj
/T1_0 1 Tf
( the variable bindings )Tj
T*
(for the procedure being called. The stack is a contiguous area of memory\, and pushing an activation )Tj
T*
(record onto the stack is done by incrementing a pointer into this contig\uous area by the size of the stack )Tj
T*
(frame. Removing a stack frame is done by decrementing the pointer by the\ size of the stack frame. )Tj
0 -2.557 TD
(Scheme implementations are quite different. As we've explained previousl\y, variable bindings are )Tj
/T1_3 1 Tf
(not)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(allocated in a stack, but instead in environment frames on the garbage-c\ollected heap. This is necessary )Tj
T*
(so that closures can have indefinite extent, and can count on the enviro\nments they use living as long as )Tj
T*
(is necessary. The garbage collector will eventually reclaim the space fo\r variable bindings in frames that )Tj
T*
(aren't captured by closures. )Tj
0 -2.557 TD
(\(Actually, I'm oversimplifying a bit here. Some implementations of Sche\me do use a relatively )Tj
0 -1.2 TD
(conventional stack, often so that they can compile Scheme straightforwar\dly to C. They must provide )Tj
T*
(tail-call optimization somehow, though. I won't go into alternative impl\ementation strategies here.\) )Tj
ET
EMC 
Q

endstreamendobj4992 0 obj[4938 0 R]endobj4993 0 obj[4990 0 R/XYZ 0 231.528 null]endobj4994 0 obj<</Rect[10.0 214.953 258.024 230.128]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC175)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC175)/S/URI>>/Border[0 0 0]>>endobj4995 0 obj[4994 0 R]endobj4996 0 obj<</Annots 5001 0 R/Parent 5009 0 R/ID 5057 0 R/StructParents 291/Contents 5050 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R/T1_3 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj4997 0 obj<</Length 3825>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 14 0 0 14 10 753.9756 Tm
(Most Scheme implementations also differ from conventional language imple\mentations in how they )Tj
0 -1.2 TD
(represent the saved state of callers. \(In a conventional language imple\mentation, the callers' state is in )Tj
T*
(two places: the variable bindings are in the callers' own stack frames, \and the return address is stored in )Tj
T*
(the callee's stack frame.\) )Tj
0 -2.557 TD
(In most Scheme implementations, the caller's state is saved in a record \on the garbage-collected heap, )Tj
0 -1.2 TD
(called a )Tj
/T1_1 1 Tf
(partial continuation)Tj
/T1_0 1 Tf
(. It's called a continuation because it says how to resume the caller wh\en we )Tj
T*
(return into it--i.e., how to continue the computation when control retur\ns. It's called a )Tj
/T1_1 1 Tf
(partial)Tj
/T1_0 1 Tf
( )Tj
T*
(continuation because that record, by itself, it only tells us how to res\ume the caller, not the caller's caller )Tj
T*
(or the caller's caller's caller. On the other hand, each partial continu\ation holds a pointer to the partial )Tj
T*
(continuation for )Tj
/T1_1 1 Tf
(its)Tj
/T1_0 1 Tf
( caller, so a chain of continuations represents how to continue the whol\e computation: )Tj
T*
(how to resume the caller, and when it returns, how to resume )Tj
/T1_1 1 Tf
(its)Tj
/T1_0 1 Tf
( caller, and so on until the computation )Tj
T*
(is complete. This chain is therefore called a )Tj
/T1_1 1 Tf
(full continuation)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(\(Notice that the relationship between the partial continuations in a fu\ll continuation chain is similar to )Tj
0 -1.2 TD
(the relationship between an environment frame and an environment chain. \The former represents control )Tj
T*
(information while the latter represents scope information.\) )Tj
0 -2.557 TD
(In most Scheme implementations, a special register called the )Tj
/T1_1 1 Tf
(continuation register)Tj
/T1_0 1 Tf
( is used to hold the )Tj
0 -1.2 TD
(pointer to the partial continuation for the caller of the currently-exec\uting procedure. When we call a )Tj
T*
(procedure, we can package up the state of the caller as a record on the \heap \(a partial continuation\), and )Tj
T*
(push that partial continuation onto the chain of continuations hanging o\ff the continuation register. )Tj
/T1_2 1 Tf
0 -2.562 TD
(                        part. cont.  \(saved state of caller's)Tj
0 -1.2 TD
(                            /|\\       caller's caller\))Tj
T*
(                             |)Tj
0 -1.2 TD
(                             |)Tj
0 -1.2 TD
(                        part. cont.  \(saved state of caller's caller\))Tj
0 -1.2 TD
(                            /|\\)Tj
T*
(                             |)Tj
T*
(        +-------+            |)Tj
0 -1.2 TD
(   CONT |   +---+-----> part. cont.  \(saved state of caller\))Tj
0 -1.2 TD
(        +-------+)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(It is often convenient to draw stacks and continuations as growing dow\nward, which is our convention )Tj
0 -1.2 TD
(here--the newer elements are on the bottom.\) Note that the continuation\ register may be a register in the )Tj
T*
(CPU, or it may just be a particular memory location that our implementat\ion uses for this purpose. The )Tj
T*
(point is just that when we're executing a procedure, we always know wher\e to find a pointer to the )Tj
T*
(partial continuation that lets us resume its caller \(or whichever proce\dure last did a non-tail call\). We )Tj
0 -1.205 TD
(will sometimes abbreviate this register's name as )Tj
/T1_2 1 Tf
(CONT)Tj
/T1_0 1 Tf
(. A typical implementation of Scheme using a )Tj
0 -1.2 TD
(compiler has several important registers that encode the state of the cu\rrently-executing procedure: )Tj
ET
EMC 
Q

endstreamendobj4998 0 obj[4938 0 R]endobj4999 0 obj[4996 0 R/XYZ 0 334.865 null]endobj5000 0 obj<</Rect[10.0 316.096 68.1538 333.25]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC176)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC176)/S/URI>>/Border[0 0 0]>>endobj5001 0 obj[5000 0 R]endobj5002 0 obj<</Parent 5009 0 R/ID 5057 0 R/StructParents 292/Contents 5051 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5003 0 obj<</Length 3617>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 7 0 0 7 35.713 753.9082 Tm
(l)Tj
/T1_1 1 Tf
(     )Tj
14 0 0 14 50 753.9082 Tm
(The )Tj
/T1_2 1 Tf
(environment register)Tj
/T1_1 1 Tf
( \()Tj
/T1_3 1 Tf
(ENVT)Tj
/T1_1 1 Tf
(\) holds the pointer to the chain of environment frames that make )Tj
0 -1.2 TD
(up the environment that the procedure is executing in. )Tj
/T1_0 1 Tf
7 0 0 7 35.713 720.2408 Tm
(l)Tj
/T1_1 1 Tf
(     )Tj
14 0 0 14 50 720.2408 Tm
(The )Tj
/T1_2 1 Tf
(program counter)Tj
/T1_1 1 Tf
( register \()Tj
/T1_3 1 Tf
(PC)Tj
/T1_1 1 Tf
(\) holds the pointer to the next instruction to execute. In a )Tj
T*
(normal system that compiles to normal machine code, this is the actual p\rogram counter of the )Tj
T*
(underlying hardware. )Tj
/T1_0 1 Tf
7 0 0 7 35.713 669.7734 Tm
(l)Tj
/T1_1 1 Tf
(     )Tj
14 0 0 14 50 669.7734 Tm
(The )Tj
/T1_2 1 Tf
(continuation)Tj
/T1_1 1 Tf
( register \()Tj
/T1_3 1 Tf
(CONT)Tj
/T1_1 1 Tf
(\), as we've said, holds the pointer to the chain of partial )Tj
T*
(continuations that lets us resume callers. This is very roughly the equi\valent of an activation stack )Tj
T*
(pointer. )Tj
-2.857 -2.557 Td
(Before we call a procedure, we must save a continuation if we want to re\sume the current procedure )Tj
T*
(after the callee returns. )Tj
0 -2.557 TD
(Since the important state of the currently-executing procedure is in the\ registers listed above, we will )Tj
0 -1.2 TD
(create a record that has fields to hold them, and push that on the conti\nuation chain. We will save the )Tj
0 -1.205 TD
(value of the )Tj
/T1_3 1 Tf
(CONT)Tj
/T1_1 1 Tf
(, )Tj
/T1_3 1 Tf
(ENVT)Tj
/T1_1 1 Tf
(, and )Tj
/T1_3 1 Tf
(PC)Tj
/T1_1 1 Tf
( registers in the partial continuation, then put a pointer to this new )Tj
0 -1.2 TD
(partial continuation in the continuation registers. We also need to save\ any other state that the caller will )Tj
T*
(need when it resumes, as suggested by the ellipsis below. \(We'll discus\s what else goes in a partial )Tj
T*
(continuation when we talk about compilers in detail.\) )Tj
/T1_3 1 Tf
0 -2.562 TD
(                                      old cont.)Tj
0 -1.2 TD
(                                        /|\\)Tj
T*
(                                         |)Tj
T*
(                         +-------+       |)Tj
T*
(        +-------+        |p.cont.|       |)Tj
T*
(   CONT |   +---+------->+=======+       |)Tj
T*
(        +-------+   cont |   +---+-------+)Tj
T*
(                         +-------+)Tj
T*
(                    envt |   +---+-------->old envt)Tj
T*
(                         +-------+)Tj
T*
(                      pc |   +---+-------->return address)Tj
T*
(                         +-------+)Tj
T*
(                                 |)Tj
T*
(                         +  ...)Tj
T*
(                         |       |)Tj
T*
(                         +-------+)Tj
/T1_1 1 Tf
0 -2.552 TD
(Notice that since we saved the old value of the continuation register in\ the partial continuation, that )Tj
0 -1.2 TD
(serves as the "next" pointer in the linked list that makes up the full c\ontinuation. This is exactly as it )Tj
T*
(should be. The value of the continuation register is part of the caller'\s state, and saving it naturally )Tj
T*
(constructs a linked list, because each procedure's state is fundamentall\y linked to the state of its caller. )Tj
T*
(Saving the return address is a little bit special--rather than just copy\ing the program counter and saving )Tj
T*
(it, we must save the address we want to resume at when we resume this pr\ocedure. )Tj
ET
EMC 
Q

endstreamendobj5004 0 obj[4938 0 R]endobj5005 0 obj<</Parent 5009 0 R/ID 5057 0 R/StructParents 293/Contents 5052 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5006 0 obj<</Length 3106>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 14 0 0 14 10 750.306 Tm
(Once a procedure has pushed a continuation, it has saved its state and c\an call another procedure. The )Tj
0 -1.205 TD
(other procedure can use the )Tj
/T1_1 1 Tf
(ENVT)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(CONT)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(PC)Tj
/T1_0 1 Tf
( registers without destroying the values of those )Tj
0 -1.2 TD
(registers needed by the caller. This is called a )Tj
/T1_2 1 Tf
(caller saves)Tj
/T1_0 1 Tf
( register usage convention; the assumption is )Tj
T*
(that the callee is allowed to freely clobber the values in the registers\, so it's the caller's responsibility to )Tj
T*
(save any values it will need when it resumes. )Tj
0 -2.557 TD
(To do a procedure return, it is only necessary to copy the register valu\es out of the continuation that's )Tj
0 -1.205 TD
(pointed to by the )Tj
/T1_1 1 Tf
(CONT)Tj
/T1_0 1 Tf
( register. This will restore the caller's environment and its pointer to\ its caller's )Tj
T*
(continuation, and setting the )Tj
/T1_1 1 Tf
(PC)Tj
/T1_0 1 Tf
( register will branch to the code in the caller where execution should )Tj
0 -1.2 TD
(resume. We often call this "popping" a continuation, because it's a stac\klike operation--saving a \(partial\) )Tj
T*
(continuation pushes the values in registers onto the front of the "stack\," and restoring one pops the )Tj
T*
(values back into the registers. \(As we will explain later, however, Sch\eme continuation chains don't )Tj
T*
(always observe this simple stack discipline, which is why they can't be \implemented efficiently as )Tj
T*
(contiguous arrays.\) )Tj
0 -2.557 TD
(If we save state and do a procedure call, and before returning our calle\r saves )Tj
/T1_2 1 Tf
(its)Tj
/T1_0 1 Tf
( state and does a )Tj
0 -1.2 TD
(procedure call, the chain of continuations gets longer. For the most par\t, this is like pushing activation )Tj
T*
(information on a stack. )Tj
/T1_1 1 Tf
0 -2.562 TD
(                                       /|\\)Tj
0 -1.2 TD
(                                        |)Tj
T*
(                      +---------+       |)Tj
T*
(                      | p.cont. |       |)Tj
T*
(                      +=========+       |)Tj
T*
(                 cont |    +----+-------+)Tj
T*
(                      +---------+)Tj
T*
(                 envt |    +----+-------->old envt)Tj
T*
(                      +---------+)Tj
T*
(                   pc |    +----+-------->return address)Tj
T*
(                      +---------+)Tj
T*
(                                |)Tj
T*
(                      +   ...)Tj
T*
(                      |         |)Tj
T*
(                      +---------+)Tj
T*
(                                 _)Tj
T*
(                                |\\)Tj
T*
(                                  \\)Tj
T*
(                                   \\)Tj
T*
(                                    \\   )Tj
T*
(                                     \\)Tj
T*
(                                      .)Tj
T*
(                      +---------+     |)Tj
ET
EMC 
Q

endstreamendobj5007 0 obj[4938 0 R]endobj5008 0 obj<</Parent 5105 0 R/ID 5057 0 R/StructParents 294/Contents 5053 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 2791 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5009 0 obj<</Parent 5111 0 R/Count 5/Type/Pages/Kids[4986 0 R 4990 0 R 4996 0 R 5002 0 R 5005 0 R]>>endobj5010 0 obj<</Length 3012>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 14 0 0 14 10 753.9082 Tm
(     +-------+        | p.cont. |     |)Tj
0 -1.2 TD
(cont |   +---+------->+=========+    /)Tj
T*
(     +-------+   cont |    +----+---')Tj
T*
(                      +---------+)Tj
T*
(                 envt |    +----+-------->old envt)Tj
T*
(                      +---------+)Tj
T*
(                   pc |    +----+-------->return address)Tj
T*
(                      +---------+)Tj
T*
(                                |)Tj
T*
(                      +   ...)Tj
T*
(                      |         |)Tj
T*
(                      +---------+)Tj
/T1_1 1 Tf
0 -2.552 TD
(Notice that when we say we save the "state" of the caller, we mean the v\alues in our important registers, )Tj
0 -1.2 TD
(but we don't directly save particular variable values--when we save the \environment pointer, we don't )Tj
T*
(make copies of the values in the bindings in the environment. In effect,\ saving the environment pointer )Tj
T*
(records which names refer to which )Tj
/T1_2 1 Tf
(pieces of storage)Tj
/T1_1 1 Tf
(. If other code then executes in that same )Tj
T*
(environment and changes those values, the new values will be seen by thi\s procedure when it returns and )Tj
T*
(restores the environment pointer. This policy has two important conseque\nces: )Tj
1.607 -2.557 Td
(1.  )Tj
(we can save an environment pointer into a continuation very quickly, and\ restore it quickly, )Tj
1.25 -1.2 Td
(because we're just saving and restoring one pointer, and )Tj
-1.25 -1.2 Td
(2.  )Tj
(it ensures that environments have the right semantics: closures that liv\e in the same environment )Tj
/T1_2 1 Tf
1.25 -1.2 Td
(should)Tj
/T1_1 1 Tf
( see each others' changes to variables. This is one of the ways that pro\cedures are supposed )Tj
T*
(to be able to communicate--by operating on variables that they can see. \)Tj
-2.857 -2.557 Td
(Executing a return \("popping a continuation"\) does not modify the part\ial continuation being popped--it )Tj
T*
(just involves getting values out of the continuation and putting them in\to registers. Continuations are )Tj
T*
(thus created and used nondestructively, and the continuations on the hea\p form a graph that reflects the )Tj
T*
(pattern of non-tail procedure calls. Usually, that graph is just a tree,\ because of the tree-like pattern of )Tj
T*
(call graphs, and the current "stack" of partial continuations is just th\e rightmost path through that graph, )Tj
T*
(i.e., the path from the newest record all the way back to the root. )Tj
0 -2.562 TD
(Consider the following procedures, where )Tj
/T1_0 1 Tf
(a)Tj
/T1_1 1 Tf
( calls )Tj
/T1_0 1 Tf
(b)Tj
/T1_1 1 Tf
( twice, and each time )Tj
/T1_0 1 Tf
(b)Tj
/T1_1 1 Tf
( is called, it calls )Tj
/T1_0 1 Tf
(c)Tj
/T1_1 1 Tf
( twice: )Tj
/T1_0 1 Tf
T*
(\(define \(a\))Tj
0 -1.2 TD
(   \(b\))Tj
T*
(   \(b\))Tj
T*
(   #t\))Tj
0 -2.557 TD
(\(define \(b\))Tj
0 -1.2 TD
(   \(c\))Tj
ET
EMC 
Q

endstreamendobj5011 0 obj[4938 0 R]endobj5012 0 obj<</Annots 5017 0 R/Parent 5105 0 R/ID 5057 0 R/StructParents 295/Contents 5044 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R/T1_3 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5013 0 obj<</Length 2215>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 14 0 0 14 10 753.9082 Tm
(   \(c\))Tj
0 -1.2 TD
(   #t\))Tj
0 -2.557 TD
(\(define \(c\))Tj
0 -1.2 TD
(   #f\))Tj
/T1_1 1 Tf
0 -2.552 TD
(All of these calls are non-tail calls, because none of the procedures ev\er ends in a \(tail\) call. )Tj
0 -2.562 TD
(Suppose we call )Tj
/T1_0 1 Tf
(a)Tj
/T1_1 1 Tf
( after pushing a continuation for )Tj
/T1_0 1 Tf
(a)Tj
/T1_1 1 Tf
('s caller, then )Tj
/T1_0 1 Tf
(a)Tj
/T1_1 1 Tf
( calls )Tj
/T1_0 1 Tf
(b)Tj
/T1_1 1 Tf
( the first time. )Tj
/T1_0 1 Tf
(a)Tj
/T1_1 1 Tf
( will push a )Tj
0 -1.205 TD
(continuation to save its state, then call )Tj
/T1_0 1 Tf
(b)Tj
/T1_1 1 Tf
(. While executing )Tj
/T1_0 1 Tf
(b)Tj
/T1_1 1 Tf
(, )Tj
/T1_0 1 Tf
(b)Tj
/T1_1 1 Tf
('s state will be in the registers, including a )Tj
0 -1.205 TD
(pointer to the continuation for )Tj
/T1_0 1 Tf
(a)Tj
/T1_1 1 Tf
( in the )Tj
/T1_0 1 Tf
(CONT)Tj
/T1_1 1 Tf
( register. )Tj
/T1_0 1 Tf
0 -2.562 TD
(               cont. for a's caller)Tj
0 -1.2 TD
(                    /)Tj
T*
(                  /)Tj
T*
(          cont. for a)Tj
T*
(              /|\\)Tj
T*
(      +---+    |)Tj
T*
( CONT | +-+----+)Tj
T*
(      +---+ )Tj
0 -2.557 TD
(b)Tj
/T1_1 1 Tf
( will then push a continuation and call )Tj
/T1_0 1 Tf
(c)Tj
/T1_1 1 Tf
(. )Tj
/T1_0 1 Tf
0 -2.562 TD
(               cont. for a's caller)Tj
0 -1.2 TD
(                    /)Tj
T*
(                  /)Tj
T*
(          cont. for a)Tj
T*
(              /)Tj
T*
(            /)Tj
T*
(    cont. for b)Tj
T*
(       /|\\)Tj
T*
(        |)Tj
T*
(      +-|-+ )Tj
T*
( CONT | + |)Tj
T*
(      +---+ )Tj
/T1_1 1 Tf
0 -2.557 TD
(When )Tj
/T1_0 1 Tf
(c)Tj
/T1_1 1 Tf
( returns, it will restore )Tj
/T1_0 1 Tf
(b)Tj
/T1_1 1 Tf
('s state by popping the partial continuation's values into registers. At\ this )Tj
0 -1.205 TD
(point, the )Tj
/T1_0 1 Tf
(CONT)Tj
/T1_1 1 Tf
( register will point past the continuation for )Tj
/T1_0 1 Tf
(b)Tj
/T1_1 1 Tf
( to the continuation for )Tj
/T1_0 1 Tf
(a)Tj
/T1_1 1 Tf
(. )Tj
/T1_0 1 Tf
0 -2.562 TD
(               cont for a's caller)Tj
0 -1.2 TD
(                    /)Tj
T*
(                  /)Tj
ET
EMC 
Q

endstreamendobj5014 0 obj[4938 0 R]endobj5015 0 obj[5012 0 R/XYZ 0 303.196 null]endobj5016 0 obj<</Rect[10.0 280.873 213.597 301.257]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC177)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC177)/S/URI>>/Border[0 0 0]>>endobj5017 0 obj[5016 0 R 5019 0 R 5021 0 R 5022 0 R 5023 0 R 5024 0 R 5025 0 R 5026 0 R]endobj5018 0 obj[5012 0 R/XYZ 0 258.934 null]endobj5019 0 obj<</Rect[10.0 239.963 95.6315 257.319]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC178)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC178)/S/URI>>/Border[0 0 0]>>endobj5020 0 obj[5012 0 R/XYZ 0 182.547 null]endobj5021 0 obj<</Rect[10.0 163.778 29.3846 180.932]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC179)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC179)/S/URI>>/Border[0 0 0]>>endobj5022 0 obj<</Rect[65.608 109.763 88.162 124.763]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5023 0 obj<</Rect[95.162 109.763 143.378 124.763]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4872 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_126.html)/S/URI>>/Border[0 0 0]>>endobj5024 0 obj<</Rect[150.378 109.763 174.486 124.763]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5064 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_128.html)/S/URI>>/Border[0 0 0]>>endobj5025 0 obj<</Rect[181.486 109.763 200.932 124.763]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5026 0 obj<</Rect[251.094 109.763 343.634 124.763]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5027 0 obj<</Length 2086>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 14 0 0 14 10 753.9082 Tm
(           cont. for a)Tj
0 -1.2 TD
(              /  /|\\)Tj
T*
(            /     |)Tj
T*
(    cont. for b   |)Tj
T*
(                  |)Tj
T*
(      +---+       |)Tj
T*
( CONT | +-+-------+)Tj
T*
(      +---+)Tj
/T1_1 1 Tf
0 -2.557 TD
(Then )Tj
/T1_0 1 Tf
(b)Tj
/T1_1 1 Tf
( will push another continuation and call )Tj
/T1_0 1 Tf
(c)Tj
/T1_1 1 Tf
( again. )Tj
/T1_0 1 Tf
0 -2.562 TD
(               cont for a's caller)Tj
0 -1.2 TD
(                    /)Tj
T*
(                  /)Tj
T*
(          cont. for a)Tj
T*
(              /  \\)Tj
T*
(            /     \\)Tj
T*
(    cont. for b  cont for b)Tj
T*
(                    /|\\)Tj
T*
(                     |)Tj
T*
(      +---+          |)Tj
T*
( CONT | +-+----------+)Tj
T*
(      +---+)Tj
/T1_1 1 Tf
0 -2.557 TD
(Again, )Tj
/T1_0 1 Tf
(c)Tj
/T1_1 1 Tf
( will return, restoring )Tj
/T1_0 1 Tf
(b)Tj
/T1_1 1 Tf
('s state, and the )Tj
/T1_0 1 Tf
(CONT)Tj
/T1_1 1 Tf
( register will point past the continuation for )Tj
/T1_0 1 Tf
(b)Tj
/T1_1 1 Tf
( to )Tj
0 -1.205 TD
(the continuation for )Tj
/T1_0 1 Tf
(a)Tj
/T1_1 1 Tf
(. )Tj
/T1_0 1 Tf
0 -2.562 TD
(               cont for a's caller)Tj
0 -1.2 TD
(                    /)Tj
T*
(                  /)Tj
T*
(          cont. for a <-------+)Tj
T*
(              /  \\            |)Tj
T*
(            /     \\           |)Tj
T*
(    cont. for b  cont for b   |)Tj
T*
(                              |)Tj
T*
(      +---+                   |)Tj
T*
( CONT | +-+-------------------+)Tj
T*
(      +---+      )Tj
/T1_1 1 Tf
0 -2.557 TD
(After returning to )Tj
/T1_0 1 Tf
(a)Tj
/T1_1 1 Tf
(, the )Tj
/T1_0 1 Tf
(CONT)Tj
/T1_1 1 Tf
( register will point past the continuation for )Tj
/T1_0 1 Tf
(a)Tj
/T1_1 1 Tf
( to the continuation for )Tj
/T1_0 1 Tf
(a)Tj
/T1_1 1 Tf
('s )Tj
0 -1.205 TD
(caller. Then before )Tj
/T1_0 1 Tf
(a)Tj
/T1_1 1 Tf
( calls )Tj
/T1_0 1 Tf
(b)Tj
/T1_1 1 Tf
( again, it will push another continuation to save its state. )Tj
ET
EMC 
Q

endstreamendobj5028 0 obj<</Length 2260>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 14 0 0 14 10 753.9082 Tm
(               cont for a's caller)Tj
0 -1.2 TD
(                    /        \\)Tj
T*
(                  /            \\)Tj
T*
(          cont. for a        cont for a)Tj
T*
(              /  \\              /|\\)Tj
T*
(            /     \\              |)Tj
T*
(    cont. for b  cont for b      |)Tj
T*
(                                 |)Tj
T*
(      +---+                      |)Tj
T*
( CONT | +-+----------------------+)Tj
T*
(      +---+      )Tj
/T1_1 1 Tf
0 -2.557 TD
(Then )Tj
/T1_0 1 Tf
(a)Tj
/T1_1 1 Tf
( will return and the )Tj
/T1_0 1 Tf
(CONT)Tj
/T1_1 1 Tf
( register will point past the continuation for )Tj
/T1_0 1 Tf
(a)Tj
/T1_1 1 Tf
( to the continuation for )Tj
/T1_0 1 Tf
(a)Tj
/T1_1 1 Tf
('s )Tj
0 -1.2 TD
(caller. )Tj
/T1_0 1 Tf
0 -2.562 TD
(                cont for a's caller <--+)Tj
0 -1.2 TD
(                    /                  |)Tj
T*
(                  /                    |)Tj
T*
(          cont. for a                  |)Tj
T*
(              /  \\                     |)Tj
T*
(            /     \\                    |)Tj
T*
(    cont. for b  cont for a            |)Tj
T*
(                                       |)Tj
T*
(      +---+                            |)Tj
T*
( CONT | +-+----------------------------+)Tj
T*
(      +---+    )Tj
/T1_1 1 Tf
0 -2.552 TD
(This continues in the obvious way, so that at the time of the fourth and\ last call to C, the continuations )Tj
0 -1.2 TD
(on the heap look like this: )Tj
/T1_0 1 Tf
0 -2.562 TD
(                cont for a's caller)Tj
0 -1.2 TD
(                    /           \\    )Tj
0 -1.2 TD
(                  /               \\  )Tj
0 -1.2 TD
(          cont. for a          cont. for a)Tj
T*
(              /  \\                 /  \\      )Tj
0 -1.2 TD
(            /     \\              /      \\ )Tj
0 -1.2 TD
(    cont for b  cont for b  cont for b  cont for b)Tj
0 -1.2 TD
(                                          /|\\)Tj
0 -1.2 TD
(                                           |)Tj
T*
(      +---+                                |)Tj
0 -1.2 TD
( CONT | +-+--------------------------------+)Tj
0 -1.2 TD
(      +---+    )Tj
ET
EMC 
Q

endstreamendobj5029 0 obj<</Length 3353>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 14 0 0 14 10 750.5082 Tm
(Most of the time, the rest of this graph becomes garbage quickly--each c\ontinuation holds pointers back )Tj
0 -1.2 TD
(up the tree, but nothing holds pointers )Tj
/T1_1 1 Tf
(down)Tj
/T1_0 1 Tf
( the tree. Partial continuations therefore usually become )Tj
T*
(garbage the first time they're returned through. )Tj
0 -2.562 TD
(The fact that this graph is created on the heap will allow us to impleme\nt )Tj
/T1_2 1 Tf
(call-with-current-)Tj
0 -1.205 TD
(continuation)Tj
/T1_0 1 Tf
(, a.k.a. )Tj
/T1_2 1 Tf
(call/cc)Tj
/T1_0 1 Tf
(, a very powerful control construct. )Tj
/T1_2 1 Tf
(call/cc)Tj
/T1_0 1 Tf
( can capture the )Tj
0 -1.2 TD
(control state of a program at a particular point in its execution by pus\hing a partial continuation and )Tj
T*
(saving a pointer to it. Later, it can magically return control to that p\oint by restoring that continuation, )Tj
0 -1.205 TD
(instead of the one in the continuation register. \(We will discuss )Tj
/T1_2 1 Tf
(call/cc)Tj
/T1_0 1 Tf
( in detail in Chapter XX.\) )Tj
ET
0 0 1 RG
1.628 w 10 M 0 j 0 J []0 d 
10 568.06 m
242.674 568.06 l
S
0 0 1 rg
BT
/T1_3 1 Tf
19.3846 0 0 19.3846 10 572.9453 Tm
(Exploiting Tail Recursion)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 533.6444 Tm
(In an earlier section, we presented example recursive implementations of\ several Scheme functions; )Tj
0 -1.2 TD
(some of them were tail recursive, and some not. )Tj
0 -2.557 TD
(At first glance, many routines seem as though they can't conveniently be\ coded tail recursively. On )Tj
0 -1.2 TD
(closer inspection, many of them can in fact be coded this way. )Tj
ET
1.357 w 
10 422.244 m
341.267 422.244 l
S
0 0 1 rg
BT
/T1_3 1 Tf
16.1538 0 0 16.1538 10 426.3146 Tm
(Passing Intermediate Values as Arguments)Tj
ET
1.176 w 
10 384.289 m
114.244 384.289 l
S
BT
/T1_3 1 Tf
14 0 0 14 10 387.8172 Tm
(Summing a List)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(Suppose we want to sum a list of numbers. The most obvious way of doing \it is the way we did it earlier, )Tj
0 -1.2 TD
(like this: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(list-sum lis\))Tj
0 -1.2 TD
(   \(if \(null? lis\))Tj
T*
(       0)Tj
T*
(       \(+ \(car lis\))Tj
T*
(          \(list-sum \(cdr lis\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(The problem with this code is that it's not particularly efficient, beca\use it's not tail recursive. After each )Tj
0 -1.205 TD
(recursive call to )Tj
/T1_2 1 Tf
(list-sum)Tj
/T1_0 1 Tf
(, we must return to do the addition that adds one element to the sum of \the )Tj
0 -1.2 TD
(rest of the list. We're adding the elements of the list back-to-front, o\n the way back up from nested )Tj
T*
(recursion. \(This means that Scheme must push a partial continuation bef\ore every recursive call, and )Tj
T*
(each one must be popped when we're finished, to return the sum back from\ each call to its caller.\) )Tj
0 -2.557 TD
(The problem here is that evaluation of the arguments to a combination is\n't a tail call, even if the )Tj
0 -1.2 TD
(combination as a whole is. Control must always return so that the actual\ call can be done. )Tj
0 -2.562 TD
(We can write a tail-recursive version of )Tj
/T1_2 1 Tf
(list-sum)Tj
/T1_0 1 Tf
( that adds things in front-to-back order instead. The )Tj
ET
EMC 
Q

endstreamendobj5030 0 obj<</Length 3156>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 14 0 0 14 10 752.125 Tm
(trick is to do the addition before the tail call, and to )Tj
/T1_1 1 Tf
(pass the sum so far to the recursive call)Tj
/T1_0 1 Tf
(, i.e., to pass )Tj
0 -1.2 TD
(it )Tj
/T1_1 1 Tf
(forward)Tj
/T1_0 1 Tf
( as an argument until a non-tail call returns it. )Tj
0 -2.557 TD
(To do this, we have to keep a running sum, and each recursive call must \pass it as an argument to the )Tj
0 -1.2 TD
(next. To start it off, we have to have a "running sum" of 0. )Tj
0 -2.557 TD
(We can do this by defining two procedures. The one that does the real wo\rk takes a list and a running )Tj
0 -1.2 TD
(sum, adds one element to the running sum, and tail-calls itself to add t\he rest of the elements to the )Tj
T*
(running sum. When it reaches the end of the list, it just returns the va\lue. \(Scheme doesn't need to save a )Tj
T*
(partial continuation before each call, since only the last call ever ret\urns.\) We'll call this procedure )Tj
/T1_2 1 Tf
0 -1.205 TD
(loop)Tj
/T1_0 1 Tf
(, because we're using tail recursion to implement looping. For convenien\ce, we also wrap this )Tj
0 -1.2 TD
(procedure up in a friendlier procedure that will start off the recursion\, by supplying an initial "running )Tj
T*
(sum" of 0. )Tj
/T1_2 1 Tf
0 -2.562 TD
(;; a tail-recursive list summing procedure)Tj
0 -1.2 TD
(\(define \(loop lis sum-so-far\))Tj
T*
(   \(cond \(\(null? lis\))Tj
T*
(          sum-so-far\))Tj
T*
(         \(else)Tj
T*
(          \(loop \(cdr lis\))Tj
T*
(                \(+ sum-so-far \(car lis\)\)\)\)\)\))Tj
0 -2.4 TD
(;; a friendly wrapper that supplies an initial running sum of 0)Tj
0 -1.2 TD
(\(define \(list-sum lis\))Tj
T*
(   \(loop lis 0\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(We can make this cleaner by encapsulating )Tj
/T1_2 1 Tf
(loop)Tj
/T1_0 1 Tf
(, since it's only used by list-sum. We make )Tj
/T1_2 1 Tf
(loop)Tj
/T1_0 1 Tf
( a )Tj
0 -1.205 TD
(local procedure using )Tj
/T1_2 1 Tf
(letrec)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
(. )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(list-sum lis\))Tj
0 -1.2 TD
(   ;; define a local, tail-recursive list summing procedure )Tj
T*
(   \(letrec \(\(loop \(lambda \(lis sum-so-far\))Tj
T*
(                     \(cond \(\(null? lis\))Tj
T*
(                            sum-so-far\))Tj
T*
(                           \(else)Tj
T*
(                            \(loop \(cdr lis\))Tj
T*
(                                  \(+ sum-so-far \(car lis\)\)\)\)\)\)\)\\))Tj
T*
(      \(loop lis 0\)\)\) ;; start off recursive summing with a sum of 0)Tj
/T1_0 1 Tf
0 -2.557 TD
(We can write this more clearly using named )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(. Named let is one of Scheme's two special forms for )Tj
0 -1.205 TD
(looping \(the other is )Tj
/T1_2 1 Tf
(do)Tj
/T1_0 1 Tf
(\). A named )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( looks like a )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(, but it's really a shorthand for the kind of thing )Tj
0 -1.2 TD
(we did above--defining a local procedure that can tail-call itself to gi\ve the effect of iteration, and )Tj
ET
EMC 
Q

endstreamendobj5031 0 obj<</Length 3609>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 14 0 0 14 10 753.9756 Tm
(starting it off with the appropriate initial value. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(list-sum lis\))Tj
0 -1.2 TD
(   \(let loop \(\(lis lis\))Tj
T*
(              \(sum-so-far 0\)\))Tj
T*
(      \(cond \(\(null? lis\))Tj
T*
(             sum-so-far\))Tj
T*
(            \(else)Tj
T*
(             \(loop \(cdr lis\))Tj
T*
(                   \(+ sum-so-far \(car lis\)\)\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that here we're using two loop variables, )Tj
/T1_1 1 Tf
(lis)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(sum-so-far)Tj
/T1_0 1 Tf
(, rebound at each iteration. One )Tj
0 -1.2 TD
(keeps track of the remaining part of the original list, and the other th\e sum of the list items we've seen so )Tj
T*
(far. )Tj
0 -2.562 TD
(Be sure you understand that this version using named )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( is )Tj
/T1_2 1 Tf
(exactly)Tj
/T1_0 1 Tf
( equivalent to the version using )Tj
/T1_1 1 Tf
0 -1.205 TD
(letrec)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
(. The named )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( binds the variable )Tj
/T1_1 1 Tf
(loop)Tj
/T1_0 1 Tf
(, and initializes it with a first-class )Tj
T*
(procedure that takes two arguments, )Tj
/T1_1 1 Tf
(list)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(sum-so-far)Tj
/T1_0 1 Tf
(. When we used the name )Tj
/T1_1 1 Tf
(loop)Tj
/T1_0 1 Tf
( for the )Tj
0 -1.205 TD
(named )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, we're really giving the name of the procedure that implements the loop\ body. Each time we )Tj
0 -1.205 TD
(iterate the loop, we're really calling this procedure--the call to )Tj
/T1_1 1 Tf
(loop)Tj
/T1_0 1 Tf
( looks like a procedure call because )Tj
0 -1.2 TD
(it )Tj
/T1_2 1 Tf
(is)Tj
/T1_0 1 Tf
( a procedure call. )Tj
0 -2.557 TD
(The argument expressions provide the new values for the next iteration o\f the loop, and the loop )Tj
0 -1.2 TD
(variables are )Tj
/T1_2 1 Tf
(rebound)Tj
/T1_0 1 Tf
( and initialized to those values at the next iteration of the loop. As i\n the version )Tj
0 -1.2 TD
(with an explicit letrec and lambda, the loop is started off by evaluatin\g the initial value expressions for )Tj
0 -1.205 TD
(the loop variables \(which look like )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( variables\) and calling the )Tj
/T1_1 1 Tf
(loop)Tj
/T1_0 1 Tf
( procedure. )Tj
0 -2.557 TD
(Since we re-bind the loop variables at each iteration of the loop, it ge\nerally doesn't make sense to side-)Tj
0 -1.2 TD
(effect loop variables. The old binding goes out of scope, and new bindin\gs are created at each iteration, )Tj
T*
(initialized with whatever values are passed to the looping procedure. )Tj
ET
0 0 1 RG
1.176 w 10 M 0 j 0 J []0 d 
10 215.733 m
104.906 215.733 l
S
0.706 w 
104.906 217.144 m
155.306 217.144 l
S
1.176 w 
155.306 215.733 m
258.024 215.733 l
S
0 0 1 rg
BT
/T1_3 1 Tf
14 0 0 14 10 219.2612 Tm
(Implementing )Tj
/T1_4 1 Tf
(length)Tj
/T1_3 1 Tf
( tail-recursively)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.7 TD
(Recall that in [ Chapter whatever ] we implemented )Tj
/T1_1 1 Tf
(length)Tj
/T1_0 1 Tf
( this way: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(length lis\))Tj
0 -1.2 TD
(   \(if \(null? lis\))Tj
T*
(       0)Tj
T*
(       \(+ 1 \(length \(cdr lis\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(This definition looks a lot like the definition of )Tj
/T1_1 1 Tf
(list-sum)Tj
/T1_0 1 Tf
(, and has the same basic problem. By using )Tj
0 -1.2 TD
(straightforward recursion \(adding one to the length of the rest of the \list\), we're ensuring the addition )Tj
ET
EMC 
Q

endstreamendobj5032 0 obj<</Length 2289>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 14 0 0 14 10 753.9756 Tm
(happens back-to-front. We can compute the list length front to back by p\assing the running sum )Tj
/T1_1 1 Tf
(forward)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(through tail recursions, as an argument. Each tail call will add to the \running sum, and pass it forward. )Tj
T*
(When the last tail call returns to its caller, it just returns the sum. \)Tj
0 -2.562 TD
(To do this, it's convenient to write the )Tj
/T1_2 1 Tf
(length)Tj
/T1_0 1 Tf
( procedure as a wrapper around a two-argument )Tj
0 -1.2 TD
(procedure that passes the running sum \(as well as the remainder of list\\) to recursive calls to itself. )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(length lis\))Tj
0 -1.2 TD
(   \(letrec \(\(len \(lambda \(lis length-so-far\))Tj
T*
(                    \(if \(null? lis\))Tj
T*
(                        length-so-far)Tj
T*
(                        \(len \(cdr lis\))Tj
T*
(                             \(+ 1 length-so-far\)\)\)\)\)\)\))Tj
T*
(     \(len lis 0\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Or equivalently, using named )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(length lis\))Tj
0 -1.2 TD
(   \(let loop \(\(lis lis\))Tj
T*
(              \(length-so-far 0\)\))Tj
T*
(      \(if \(null? lis\))Tj
T*
(          len-so-far)Tj
T*
(          \(loop \(cdr lis\))Tj
T*
(                \(+ \(car lis\) length-so-far\)\)\)\)\))Tj
ET
0 0 1 RG
0.814 w 10 M 0 j 0 J []0 d 
10 318.471 m
68.154 318.471 l
S
0 0 1 rg
BT
/T1_3 1 Tf
16.1538 0 0 16.1538 10 320.9131 Tm
(reduce)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 282.4561 Tm
(In this section, I'll give an extended example of the use of higher-orde\r functions to express patterns )Tj
T*
(common to many functions, and customizing general procedures with proced\ural arguments and closure )Tj
T*
(creation. )Tj
0 -2.557 TD
(Consider the following function to sum the elements of a list )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(list-sum lis\))Tj
0 -1.2 TD
(   \(if \(null? lis\))Tj
T*
(       0)Tj
T*
(       \(+ \(car lis\))Tj
T*
(          \(list-sum \(cdr lis\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Given this definition, )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(list-sum '\(10 15 20 25\)\))Tj
ET
EMC 
Q

endstreamendobj5033 0 obj<</Length 2322>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 14 0 0 14 10 732.6561 Tm
(is equivalent to )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(+ 10 \(+ 15 \(+ 20 \(+ 25 0\)\)\)\).)Tj
/T1_0 1 Tf
0 -2.552 TD
([ the following couple of examples are now redundant with earlier materi\al... trim and refer back. ] )Tj
0 -2.557 TD
(Now consider a very similar function to multiply the elements of a list,\ where we've adopted the )Tj
0 -1.2 TD
(convention that the product of a null list is 1. \(1 is probably the rig\ht value to use, because if you )Tj
T*
(multiply something by 1 you get back the same thing--just as if you add \something to 0 you get back the )Tj
T*
(same thing.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(list-prod lis\))Tj
0 -1.2 TD
(   \(if \(null? lis\))Tj
0 -1.2 TD
(       1)Tj
0 -1.2 TD
(       \(+ \(car lis\))Tj
T*
(          \(list-prod \(cdr lis\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Given this definition, )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(list-prod '\(2 3 4 5\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(is equivalent to )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(* 2 \(* 3 \(* 4 \(* 5 1\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Given these definitions, you can probably imagine a very similar functio\n to subtract the elements of a )Tj
0 -1.2 TD
(list, or to divide the elements of a list. For subtraction, the base val\ue for an empty list should probably )Tj
0 -1.2 TD
(be zero, because subtracting zero doesn't change anything. For division \it should probably be one. )Tj
0 -2.557 TD
(At any rate, what we want is a single function that captures the pattern\ )Tj
/T1_1 1 Tf
0 -2.562 TD
(\()Tj
/T1_2 1 Tf
(op thing1)Tj
/T1_1 1 Tf
(\()Tj
/T1_2 1 Tf
(op thing2 ...)Tj
/T1_1 1 Tf
(\()Tj
/T1_2 1 Tf
(op thingn base-thing)Tj
/T1_1 1 Tf
(\))Tj
/T1_2 1 Tf
(...)Tj
/T1_1 1 Tf
(\)\))Tj
/T1_0 1 Tf
( )Tj
0 -2.562 TD
(We can write a higher-order procedure )Tj
/T1_1 1 Tf
(reduce)Tj
/T1_0 1 Tf
( that implements this pattern in a general way, taking )Tj
0 -1.2 TD
(three arguments: any procedure you want successively applied to the elem\ents of a list, an appropriate )Tj
T*
(base value to use on reaching the end of the list, and the list to do it\ to. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(reduce fn base-value lis\))Tj
0 -1.2 TD
(   \(if \(null? lis\))Tj
T*
(       base-value)Tj
ET
EMC 
Q

endstreamendobj5034 0 obj<</Length 3271>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 14 0 0 14 10 753.9082 Tm
(       \(fn \(car lis\))Tj
0 -1.2 TD
(           \(reduce fn base-value \(cdr lis\)\)\)\)\))Tj
/T1_1 1 Tf
0 -2.552 TD
(This is a very general procedure, that can be used for lots of things be\sides numerical operations on lists )Tj
0 -1.2 TD
(of numbers: it can be used for any computation over successive items in \a list. )Tj
0 -2.557 TD
([ need to check the following couple of examples--they're off the top of\ my head ] )Tj
0 -2.562 TD
(What does )Tj
/T1_0 1 Tf
(\(reduce cons '\(\) '\(a b c d\)\))Tj
/T1_1 1 Tf
( do? It's equivalent to )Tj
/T1_0 1 Tf
(\(cons 'a \(cons 'b )Tj
0 -1.205 TD
(\(cons 'c \(cons 'd '\(\)\)\)\))Tj
/T1_1 1 Tf
(. That is, )Tj
/T1_0 1 Tf
(\(reduce cons '\(\) )Tj
/T1_2 1 Tf
(list)Tj
/T1_0 1 Tf
(\))Tj
/T1_1 1 Tf
( copies a list. We could )Tj
0 -1.205 TD
(define )Tj
/T1_0 1 Tf
(list-copy)Tj
/T1_1 1 Tf
( that way: )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(define \(list-copy lis\))Tj
0 -1.2 TD
(   \(reduce cons '\(\) lis\)\))Tj
/T1_1 1 Tf
0 -2.557 TD
(We could also define )Tj
/T1_0 1 Tf
(append)Tj
/T1_1 1 Tf
( that way, because )Tj
/T1_0 1 Tf
(reduce)Tj
/T1_1 1 Tf
( allows you to specify what goes at the end of )Tj
0 -1.205 TD
(a list--we don't have to end our list with )Tj
/T1_0 1 Tf
('\(\))Tj
/T1_1 1 Tf
(. Here's a two-argument version of )Tj
/T1_0 1 Tf
(append)Tj
/T1_1 1 Tf
(: )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(define \(append list1 list2\))Tj
0 -1.2 TD
(   \(reduce cons list2 list1\)\))Tj
/T1_1 1 Tf
0 -2.557 TD
(The reduction of a list using )Tj
/T1_0 1 Tf
(\(lambda)Tj
/T1_1 1 Tf
( )Tj
/T1_0 1 Tf
(\(x rest\))Tj
/T1_1 1 Tf
( )Tj
/T1_0 1 Tf
(\(cons \(* x 2\) rest\)\))Tj
/T1_1 1 Tf
( constructs a new list )Tj
0 -1.2 TD
(whose elements are twice the values of the corresponding elements in the\ original list. )Tj
/T1_0 1 Tf
0 -2.562 TD
(Scheme>\(reduce \(lambda \(x rest\))Tj
0 -1.2 TD
(                  \(cons \(* x 2\) rest\)\))Tj
T*
(               '\(\))Tj
T*
(               '\(1 2 3 4\)\))Tj
T*
(\(2 4 6 8\))Tj
/T1_2 1 Tf
0 -2.552 TD
([ show tail-recursive version... that'd make a good exercise ])Tj
/T1_1 1 Tf
( )Tj
0 -2.562 TD
(The )Tj
/T1_0 1 Tf
(reduce)Tj
/T1_1 1 Tf
( procedure above is handy, because you can use it for many different kin\ds of )Tj
0 -1.2 TD
(computations over different kinds of lists values, as long as you can pr\ocess the elements \(and construct )Tj
T*
(the result\) front-to-back. It's a little awkward, though, in that each \time you use it, you have to remember )Tj
T*
(the appropriate base value for the operation you're applying to a list. \Sometimes it would be preferable )Tj
0 -1.205 TD
(to come up with a single specialized procedure like )Tj
/T1_0 1 Tf
(list-sum)Tj
/T1_1 1 Tf
(, which implicitly remembers which )Tj
0 -1.2 TD
(function it should apply to the list elements \(e.g., +\) and what base \value to return for an empty list \(e.g., )Tj
0 -1.205 TD
(0\). We can write a procedure )Tj
/T1_0 1 Tf
(make-reducer)Tj
/T1_1 1 Tf
( that will automatically construct a reducer procedure, )Tj
0 -1.2 TD
(given a function and a base value. Here's an example usage: )Tj
/T1_0 1 Tf
0 -2.562 TD
(Scheme> \(define list-sum \(make-reducer + 0\)\))Tj
ET
EMC 
Q

endstreamendobj5035 0 obj<</Length 2556>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 14 0 0 14 10 753.5016 Tm
(list-sum)Tj
0 -1.2 TD
(  )Tj
T*
(Scheme> \(define list-product \(make-reducer * 1\)\))Tj
T*
(list-copy)Tj
T*
(   )Tj
T*
(Scheme> \(list-sum '\(1 2 3 4\)\))Tj
T*
(10)Tj
T*
(   )Tj
T*
(Scheme> \(list-product '\(1 2 3 4\)\))Tj
T*
(24)Tj
/T1_1 1 Tf
0 -2.557 TD
(Make sure you understand the expressions above. The define forms are )Tj
/T1_0 1 Tf
(not)Tj
/T1_1 1 Tf
( using procedure definition )Tj
0 -1.2 TD
(syntax--they're using plain variable definition syntax, but the initial \value expressions return procedures )Tj
T*
(constructed by make-reducer. If we hadn't wanted to define procedures na\med list-sum and list-product, )Tj
T*
(and hang on to them, we could have just taken the procedures returned by\ make-reducer and called them )Tj
T*
(immediately: )Tj
/T1_0 1 Tf
0 -2.562 TD
(Scheme> \(\(make-reducer + 0\) '\(1 2 3 4\)\))Tj
0 -1.2 TD
(10)Tj
T*
( )Tj
T*
(Scheme> \(\(make-reducer * 1\) '\(1 2 3 4\)\))Tj
T*
(24)Tj
/T1_1 1 Tf
0 -2.557 TD
(This is very much like calling our original )Tj
/T1_0 1 Tf
(reduce)Tj
/T1_1 1 Tf
( procedure, except that each time we're constructing )Tj
0 -1.205 TD
(a specialized procedure \(closure\) that's like )Tj
/T1_0 1 Tf
(reduce)Tj
/T1_1 1 Tf
( customized for particular values of its first two )Tj
0 -1.2 TD
(arguments; then we call that new, specialized procedure to do the work o\n a particular list. )Tj
0 -2.562 TD
(Here's a simple definition of )Tj
/T1_0 1 Tf
(make-reducer)Tj
/T1_1 1 Tf
( in terms of )Tj
/T1_0 1 Tf
(reduce)Tj
/T1_1 1 Tf
(: )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(define \(make-reducer fn base-value\))Tj
0 -1.2 TD
(   \(lambda \(lis\))Tj
T*
(      \(reduce fn base-value lis\)\)\))Tj
/T1_1 1 Tf
0 -2.557 TD
(Notice that we )Tj
/T1_2 1 Tf
(are)Tj
/T1_1 1 Tf
( using procedure definition syntax here, so the )Tj
/T1_0 1 Tf
(lambda)Tj
/T1_1 1 Tf
( in the body will create and )Tj
0 -1.2 TD
(return a closure. )Tj
/T1_2 1 Tf
0 -2.562 TD
([ can also do this with )Tj
/T1_3 1 Tf
(curry)Tj
/T1_2 1 Tf
(. ])Tj
/T1_1 1 Tf
( But suppose we don't already have a reduce procedure, and we don't )Tj
0 -1.205 TD
(want to leave one lying around. A cleaner solution is to define the gene\ral )Tj
/T1_0 1 Tf
(reduce)Tj
/T1_1 1 Tf
( procedure as a local )Tj
0 -1.2 TD
(procedure, and create closures of it in different environments to custom\ize it for different functions and )Tj
T*
(base values. )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(define \(make-reducer fn base-value\))Tj
ET
EMC 
Q

endstreamendobj5036 0 obj<</Length 4198>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion in Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
2.081 w 
10 684.255 m
261.903 684.255 l
S
0 0 1 rg
BT
/T1_1 1 Tf
24.7692 0 0 24.7692 10 690.4968 Tm
(Recursion in Scheme)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 649.4525 Tm
(In this chapter, I'll discuss procedure calling and recursion in more de\pth. [ blah blah blah ] Scheme's )Tj
0 -1.2 TD
(procedure-calling mechanism supports efficient tail-recursive programmin\g, where recursion is used )Tj
T*
(instead of iteration. In conventional programming languages, you can't g\enerally use recursion to get the )Tj
0 -1.2 TD
(effect of iteration, because you may get activation stack overflows if t\he recursion is too deep. )Tj
0 -2.557 TD
(After clarifying how recursion works, I'll give examples of how to progr\am recursively in Scheme. )Tj
T*
(\(In a later chapter, I'll show how the mechanisms that support tail rec\ursion also support a powerful )Tj
0 -1.205 TD
(control feature called )Tj
/T1_2 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
( that lets you implement novel control )Tj
0 -1.2 TD
(structures like backtracking and coroutines.\) )Tj
ET
1.628 w 
10 448.139 m
494.712 448.139 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 453.0244 Tm
(Subproblems and Reductions \(non-tail and tail calls\))Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 413.7235 Tm
(In most implementations of most programming languages, an activation sta\ck is used to implement )Tj
0 -1.2 TD
(procedure calling. At a call, the state of the "caller" \(calling proced\ure\) is saved on the stack, and then )Tj
T*
(control is transferred to the callee. )Tj
0 -2.557 TD
(Because each procedure call requires saving state on the stack, recursio\n is limited by the stack depth. In )Tj
0 -1.2 TD
(many systems, deep recursions cause stack overflow and program crashes, \or use up unnecessary virtual )Tj
T*
(memory swap space. In most systems, recursion is unnecessarily expensive\ in space and/or time. This )Tj
T*
(limits the usefulness of recursion. )Tj
0 -2.557 TD
(In Scheme, things are somewhat different. As I noted earlier, recursive \calls may be )Tj
/T1_3 1 Tf
(tail recursive)Tj
/T1_0 1 Tf
(, in )Tj
0 -1.2 TD
(which case the state of the caller needn't be saved before calling the c\allee. )Tj
0 -2.557 TD
(More generally, whether a procedure is recursive or not, the calls it ma\kes can be classified as )Tj
/T1_3 1 Tf
0 -1.2 TD
(subproblems)Tj
/T1_0 1 Tf
( or )Tj
/T1_3 1 Tf
(reductions)Tj
/T1_0 1 Tf
( If the last thing a procedure does is to call another procedure, that's\ known as )Tj
0 -1.2 TD
(a reduction--the work being done by the caller is complete, because it "\reduces to" the work being done )Tj
T*
(by the callee. )Tj
0 -2.557 TD
(For example, consider the following procedures: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(foo\))Tj
0 -1.2 TD
(   \(bar\))Tj
T*
(   \(baz\)\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_127.html \(1 of 18\)\11/3/2006 9:11:15 PM)Tj
ET
EMC 

endstreamendobj5037 0 obj<</Length 4921>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion in Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 744.0562 Tm
(\(define \(baz\))Tj
0 -1.2 TD
(   \(bar\))Tj
T*
(   \(foo\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that when )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( is called, it does two things: it calls )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
( and then calls )Tj
/T1_1 1 Tf
(baz)Tj
/T1_0 1 Tf
(. After the call to )Tj
/T1_1 1 Tf
0 -1.205 TD
(bar)Tj
/T1_0 1 Tf
(, control must return to )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(, so that it can continue and call )Tj
/T1_1 1 Tf
(baz)Tj
/T1_0 1 Tf
(. The call to )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
( is therefore a )Tj
T*
(subproblem--a step in the overall plan of executing )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(. When )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( calls )Tj
/T1_1 1 Tf
(baz)Tj
/T1_0 1 Tf
(, however, that's )Tj
/T1_2 1 Tf
(all)Tj
/T1_0 1 Tf
( it )Tj
0 -1.205 TD
(needs to do--all of its other work is done. The result of the call to )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( is just the result of )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
('s call to )Tj
/T1_1 1 Tf
0 -1.205 TD
(baz)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(In a conventional programming language implementation, )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
('s state would be saved before the call to )Tj
/T1_1 1 Tf
0 -1.205 TD
(baz)Tj
/T1_0 1 Tf
(, as well as before the call to )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
(. Each call would return control to )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(. In the case of the call to )Tj
/T1_1 1 Tf
T*
(baz)Tj
/T1_0 1 Tf
(, all )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( will do is return the result of the call to )Tj
/T1_2 1 Tf
(its)Tj
/T1_0 1 Tf
( caller. That is, all )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( does after the return )Tj
T*
(from )Tj
/T1_1 1 Tf
(baz)Tj
/T1_0 1 Tf
( is to leave the result wherever its caller expects it, and return again\ to pop a stack frame off )Tj
0 -1.2 TD
(the activation stack. )Tj
0 -2.557 TD
(In Scheme, things are actually simpler. If the last thing a procedure do\es is to call another procedure, the )Tj
0 -1.2 TD
(caller doesn't save its own state on the stack. When the callee returns,\ it will return to its )Tj
/T1_2 1 Tf
(caller's)Tj
/T1_0 1 Tf
( caller )Tj
T*
(directly, rather than to its caller. After all, there's no reason to ret\urn to the caller if all the caller is going )Tj
T*
(to do is pass the return value along to )Tj
/T1_2 1 Tf
(its)Tj
/T1_0 1 Tf
( caller. )Tj
0 -2.557 TD
(This optimizes away the unnecessary state saving and returning at tail c\alls. You don't have to do )Tj
0 -1.2 TD
(anything special to get this optimization--Scheme implementations always\ do it for tail calls. )Tj
0 -2.562 TD
(Consider both )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(baz)Tj
/T1_0 1 Tf
( above. Neither ever returns--each just calls the other. In Scheme, thes\e two )Tj
0 -1.2 TD
(procedures will repeatedly call each other, without saving their state o\n the stack, producing an infinite )Tj
0 -1.205 TD
(mutual recursion. Will the stack overflow? No. Each will save its state \before calling )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
(, but the return )Tj
0 -1.205 TD
(from )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
( will pop that information off of the stack. The infinite tail-calling b\etween )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(baz)Tj
/T1_0 1 Tf
( will )Tj
0 -1.2 TD
(not increase the stack height at all. )Tj
0 -2.557 TD
(Above I said that a callee may return to its caller's caller, but that d\oesn't really capture the extent of )Tj
0 -1.2 TD
(what's going on. In general a procedure may return to its caller \(if it\ was non-tail called\), or it's caller's )Tj
T*
(caller \(if it was tail-called but its caller wasn't\) or it's caller's \caller's caller \(if it and it's caller were both )Tj
T*
(tail-called\), and so on. A procedure returns to the last caller that di\d a non-tail call. )Tj
0 -2.557 TD
(Because of this "tail call optimization," you can use recursion very fre\ely in Scheme, which is a good )Tj
0 -1.2 TD
(thing--many problems have a natural recursive structure, and recursion i\s the easiest way to solve them. )Tj
0 -2.557 TD
(Notice that this tail call optimization is a feature of the language, no\t just some implementations. Any )Tj
0 -1.2 TD
(implementation of standard Scheme is required to support it, so that you\ can count on it and write )Tj
T*
(portable programs that rely on it. \(In fact, the definition of the Sche\me language itself depends on this, )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_127.html \(2 of 18\)\11/3/2006 9:11:15 PM)Tj
ET
EMC 

endstreamendobj5038 0 obj<</Length 4270>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion in Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(because the special forms for iteration are defined in terms of equivale\nt tail-calling--a loop is really a )Tj
0 -1.2 TD
(kind of procedure, that procedure tail-calls itself ot iterate the loop.\\) )Tj
0 -2.562 TD
(Also notice that the interpreter we presented earlier is tail-recursive.\ The recursive calls to )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
( are tail )Tj
0 -1.2 TD
(calls, and since it's implemented in Scheme, the interpreter relies on t\he underlying Scheme's tail-call )Tj
T*
(optimization. The evaluator thus snarfs the tail-call optimization from \the underlying Scheme system. If )Tj
T*
(you implement a Scheme interpreter in another language, you have to be m\ore careful, and implement )Tj
0 -1.2 TD
(the tail call optimization yourself. )Tj
0 -2.557 TD
(It's something of a misnomer to call Scheme's procedure calling mechanis\m an "optimization." What's )Tj
0 -1.2 TD
(really going on is that Scheme simply distinguishes between two things t\hat most languages lump )Tj
T*
(together--saving the caller's state, and actually transferring control t\o the callee. Scheme notices that )Tj
T*
(these things are distinct, and doesn't bother to do the former when only\ the latter is necessary. )Tj
0 -2.557 TD
(A procedure call is really rather like a \(safe\) goto that can pass arg\uments: control is transferred directly )Tj
0 -1.2 TD
(to the callee, and the caller has the option of saving its state beforeh\and. \(This is safer than unrestricted )Tj
T*
(goto's, because when a procedure does return, it returns to the right an\cestor in the dynamic calling )Tj
T*
(pattern, just as though it had done a whole bunch of returns to get ther\e.\) )Tj
ET
0 0 1 RG
1.628 w 10 M 0 j 0 J []0 d 
10 416.063 m
228.62 416.063 l
S
0 0 1 rg
BT
/T1_2 1 Tf
19.3846 0 0 19.3846 10 420.9475 Tm
(The Continuation Chain)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 381.6466 Tm
(In this section, I'll describe a straightforward implementation of Schem\e's state-saving for procedure )Tj
0 -1.205 TD
(calling. It may clarify things that are discussed later, however, such a\s )Tj
/T1_1 1 Tf
(call-with-current-)Tj
T*
(continuation)Tj
/T1_0 1 Tf
( and our example compiler's code generation strategy. )Tj
0 -2.557 TD
(In most conventional language implementations, as noted above, calling a\ procedure allocates an )Tj
0 -1.2 TD
(activation record \(or "stack frame"\) that holds the return address for\ the call )Tj
/T1_3 1 Tf
(and)Tj
/T1_0 1 Tf
( the variable bindings )Tj
T*
(for the procedure being called. The stack is a contiguous area of memory\, and pushing an activation )Tj
T*
(record onto the stack is done by incrementing a pointer into this contig\uous area by the size of the stack )Tj
0 -1.2 TD
(frame. Removing a stack frame is done by decrementing the pointer by the\ size of the stack frame. )Tj
0 -2.557 TD
(Scheme implementations are quite different. As we've explained previousl\y, variable bindings are )Tj
/T1_3 1 Tf
(not)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(allocated in a stack, but instead in environment frames on the garbage-c\ollected heap. This is necessary )Tj
T*
(so that closures can have indefinite extent, and can count on the enviro\nments they use living as long as )Tj
T*
(is necessary. The garbage collector will eventually reclaim the space fo\r variable bindings in frames that )Tj
0 -1.2 TD
(aren't captured by closures. )Tj
0 -2.557 TD
(\(Actually, I'm oversimplifying a bit here. Some implementations of Sche\me do use a relatively )Tj
0 -1.2 TD
(conventional stack, often so that they can compile Scheme straightforwar\dly to C. They must provide )Tj
T*
(tail-call optimization somehow, though. I won't go into alternative impl\ementation strategies here.\) )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_127.html \(3 of 18\)\11/3/2006 9:11:15 PM)Tj
ET
EMC 

endstreamendobj5039 0 obj<</Length 4223>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion in Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Most Scheme implementations also differ from conventional language imple\mentations in how they )Tj
0 -1.2 TD
(represent the saved state of callers. \(In a conventional language imple\mentation, the callers' state is in )Tj
T*
(two places: the variable bindings are in the callers' own stack frames, \and the return address is stored in )Tj
0 -1.2 TD
(the callee's stack frame.\) )Tj
0 -2.557 TD
(In most Scheme implementations, the caller's state is saved in a record \on the garbage-collected heap, )Tj
0 -1.2 TD
(called a )Tj
/T1_1 1 Tf
(partial continuation)Tj
/T1_0 1 Tf
(. It's called a continuation because it says how to resume the caller wh\en we )Tj
T*
(return into it--i.e., how to continue the computation when control retur\ns. It's called a )Tj
/T1_1 1 Tf
(partial)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(continuation because that record, by itself, it only tells us how to res\ume the caller, not the caller's caller )Tj
T*
(or the caller's caller's caller. On the other hand, each partial continu\ation holds a pointer to the partial )Tj
T*
(continuation for )Tj
/T1_1 1 Tf
(its)Tj
/T1_0 1 Tf
( caller, so a chain of continuations represents how to continue the whol\e computation: )Tj
T*
(how to resume the caller, and when it returns, how to resume )Tj
/T1_1 1 Tf
(its)Tj
/T1_0 1 Tf
( caller, and so on until the computation )Tj
T*
(is complete. This chain is therefore called a )Tj
/T1_1 1 Tf
(full continuation)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(\(Notice that the relationship between the partial continuations in a fu\ll continuation chain is similar to )Tj
0 -1.2 TD
(the relationship between an environment frame and an environment chain. \The former represents control )Tj
T*
(information while the latter represents scope information.\) )Tj
0 -2.557 TD
(In most Scheme implementations, a special register called the )Tj
/T1_1 1 Tf
(continuation register)Tj
/T1_0 1 Tf
( is used to hold the )Tj
0 -1.2 TD
(pointer to the partial continuation for the caller of the currently-exec\uting procedure. When we call a )Tj
T*
(procedure, we can package up the state of the caller as a record on the \heap \(a partial continuation\), and )Tj
T*
(push that partial continuation onto the chain of continuations hanging o\ff the continuation register. )Tj
/T1_2 1 Tf
0 -2.562 TD
(                        part. cont.  \(saved state of caller's)Tj
0 -1.2 TD
(                            /|\\       caller's caller\))Tj
T*
(                             |)Tj
T*
(                             |)Tj
0 -1.2 TD
(                        part. cont.  \(saved state of caller's caller\))Tj
T*
(                            /|\\)Tj
T*
(                             |)Tj
T*
(        +-------+            |)Tj
T*
(   CONT |   +---+-----> part. cont.  \(saved state of caller\))Tj
T*
(        +-------+)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(It is often convenient to draw stacks and continuations as growing dow\nward, which is our convention )Tj
0 -1.2 TD
(here--the newer elements are on the bottom.\) Note that the continuation\ register may be a register in the )Tj
T*
(CPU, or it may just be a particular memory location that our implementat\ion uses for this purpose. The )Tj
T*
(point is just that when we're executing a procedure, we always know wher\e to find a pointer to the )Tj
T*
(partial continuation that lets us resume its caller \(or whichever proce\dure last did a non-tail call\). We )Tj
0 -1.205 TD
(will sometimes abbreviate this register's name as )Tj
/T1_2 1 Tf
(CONT)Tj
/T1_0 1 Tf
(. A typical implementation of Scheme using a )Tj
0 -1.2 TD
(compiler has several important registers that encode the state of the cu\rrently-executing procedure: )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_127.html \(4 of 18\)\11/3/2006 9:11:15 PM)Tj
ET
EMC 

endstreamendobj5040 0 obj<</Length 4043>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion in Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
7 0 0 7 35.713 753.9082 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 753.9082 Tm
(The )Tj
/T1_2 1 Tf
(environment register)Tj
/T1_0 1 Tf
( \()Tj
/T1_3 1 Tf
(ENVT)Tj
/T1_0 1 Tf
(\) holds the pointer to the chain of environment frames that make )Tj
0 -1.2 TD
(up the environment that the procedure is executing in. )Tj
/T1_1 1 Tf
7 0 0 7 35.713 720.2408 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 720.2408 Tm
(The )Tj
/T1_2 1 Tf
(program counter)Tj
/T1_0 1 Tf
( register \()Tj
/T1_3 1 Tf
(PC)Tj
/T1_0 1 Tf
(\) holds the pointer to the next instruction to execute. In a )Tj
T*
(normal system that compiles to normal machine code, this is the actual p\rogram counter of the )Tj
T*
(underlying hardware. )Tj
/T1_1 1 Tf
7 0 0 7 35.713 669.7734 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 669.7734 Tm
(The )Tj
/T1_2 1 Tf
(continuation)Tj
/T1_0 1 Tf
( register \()Tj
/T1_3 1 Tf
(CONT)Tj
/T1_0 1 Tf
(\), as we've said, holds the pointer to the chain of partial )Tj
T*
(continuations that lets us resume callers. This is very roughly the equi\valent of an activation stack )Tj
T*
(pointer. )Tj
-2.857 -2.557 Td
(Before we call a procedure, we must save a continuation if we want to re\sume the current procedure )Tj
0 -1.2 TD
(after the callee returns. )Tj
0 -2.557 TD
(Since the important state of the currently-executing procedure is in the\ registers listed above, we will )Tj
0 -1.2 TD
(create a record that has fields to hold them, and push that on the conti\nuation chain. We will save the )Tj
0 -1.205 TD
(value of the )Tj
/T1_3 1 Tf
(CONT)Tj
/T1_0 1 Tf
(, )Tj
/T1_3 1 Tf
(ENVT)Tj
/T1_0 1 Tf
(, and )Tj
/T1_3 1 Tf
(PC)Tj
/T1_0 1 Tf
( registers in the partial continuation, then put a pointer to this new )Tj
0 -1.2 TD
(partial continuation in the continuation registers. We also need to save\ any other state that the caller will )Tj
T*
(need when it resumes, as suggested by the ellipsis below. \(We'll discus\s what else goes in a partial )Tj
T*
(continuation when we talk about compilers in detail.\) )Tj
/T1_3 1 Tf
0 -2.562 TD
(                                      old cont.)Tj
0 -1.2 TD
(                                        /|\\)Tj
T*
(                                         |)Tj
T*
(                         +-------+       |)Tj
T*
(        +-------+        |p.cont.|       |)Tj
T*
(   CONT |   +---+------->+=======+       |)Tj
T*
(        +-------+   cont |   +---+-------+)Tj
T*
(                         +-------+)Tj
T*
(                    envt |   +---+-------->old envt)Tj
T*
(                         +-------+)Tj
T*
(                      pc |   +---+-------->return address)Tj
T*
(                         +-------+)Tj
T*
(                                 |)Tj
0 -1.2 TD
(                         +  ...)Tj
T*
(                         |       |)Tj
T*
(                         +-------+)Tj
/T1_0 1 Tf
0 -2.552 TD
(Notice that since we saved the old value of the continuation register in\ the partial continuation, that )Tj
0 -1.2 TD
(serves as the "next" pointer in the linked list that makes up the full c\ontinuation. This is exactly as it )Tj
T*
(should be. The value of the continuation register is part of the caller'\s state, and saving it naturally )Tj
T*
(constructs a linked list, because each procedure's state is fundamentall\y linked to the state of its caller. )Tj
T*
(Saving the return address is a little bit special--rather than just copy\ing the program counter and saving )Tj
T*
(it, we must save the address we want to resume at when we resume this pr\ocedure. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_127.html \(5 of 18\)\11/3/2006 9:11:15 PM)Tj
ET
EMC 

endstreamendobj5041 0 obj<</Length 3539>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion in Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 750.306 Tm
(Once a procedure has pushed a continuation, it has saved its state and c\an call another procedure. The )Tj
0 -1.205 TD
(other procedure can use the )Tj
/T1_1 1 Tf
(ENVT)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(CONT)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(PC)Tj
/T1_0 1 Tf
( registers without destroying the values of those )Tj
0 -1.2 TD
(registers needed by the caller. This is called a )Tj
/T1_2 1 Tf
(caller saves)Tj
/T1_0 1 Tf
( register usage convention; the assumption is )Tj
0 -1.2 TD
(that the callee is allowed to freely clobber the values in the registers\, so it's the caller's responsibility to )Tj
0 -1.2 TD
(save any values it will need when it resumes. )Tj
0 -2.557 TD
(To do a procedure return, it is only necessary to copy the register valu\es out of the continuation that's )Tj
0 -1.205 TD
(pointed to by the )Tj
/T1_1 1 Tf
(CONT)Tj
/T1_0 1 Tf
( register. This will restore the caller's environment and its pointer to\ its caller's )Tj
T*
(continuation, and setting the )Tj
/T1_1 1 Tf
(PC)Tj
/T1_0 1 Tf
( register will branch to the code in the caller where execution should )Tj
0 -1.2 TD
(resume. We often call this "popping" a continuation, because it's a stac\klike operation--saving a \(partial\) )Tj
T*
(continuation pushes the values in registers onto the front of the "stack\," and restoring one pops the )Tj
T*
(values back into the registers. \(As we will explain later, however, Sch\eme continuation chains don't )Tj
T*
(always observe this simple stack discipline, which is why they can't be \implemented efficiently as )Tj
T*
(contiguous arrays.\) )Tj
0 -2.557 TD
(If we save state and do a procedure call, and before returning our calle\r saves )Tj
/T1_2 1 Tf
(its)Tj
/T1_0 1 Tf
( state and does a )Tj
0 -1.2 TD
(procedure call, the chain of continuations gets longer. For the most par\t, this is like pushing activation )Tj
T*
(information on a stack. )Tj
/T1_1 1 Tf
0 -2.562 TD
(                                       /|\\)Tj
0 -1.2 TD
(                                        |)Tj
T*
(                      +---------+       |)Tj
T*
(                      | p.cont. |       |)Tj
T*
(                      +=========+       |)Tj
T*
(                 cont |    +----+-------+)Tj
T*
(                      +---------+)Tj
T*
(                 envt |    +----+-------->old envt)Tj
T*
(                      +---------+)Tj
0 -1.2 TD
(                   pc |    +----+-------->return address)Tj
T*
(                      +---------+)Tj
T*
(                                |)Tj
T*
(                      +   ...)Tj
T*
(                      |         |)Tj
T*
(                      +---------+)Tj
T*
(                                 _)Tj
T*
(                                |\\)Tj
T*
(                                  \\)Tj
T*
(                                   \\)Tj
T*
(                                    \\   )Tj
T*
(                                     \\)Tj
T*
(                                      .)Tj
T*
(                      +---------+     |)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_127.html \(6 of 18\)\11/3/2006 9:11:15 PM)Tj
ET
EMC 

endstreamendobj5042 0 obj<</Length 3449>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion in Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(     +-------+        | p.cont. |     |)Tj
0 -1.2 TD
(cont |   +---+------->+=========+    /)Tj
T*
(     +-------+   cont |    +----+---')Tj
0 -1.2 TD
(                      +---------+)Tj
0 -1.2 TD
(                 envt |    +----+-------->old envt)Tj
T*
(                      +---------+)Tj
T*
(                   pc |    +----+-------->return address)Tj
T*
(                      +---------+)Tj
0 -1.2 TD
(                                |)Tj
T*
(                      +   ...)Tj
T*
(                      |         |)Tj
T*
(                      +---------+)Tj
/T1_0 1 Tf
0 -2.552 TD
(Notice that when we say we save the "state" of the caller, we mean the v\alues in our important registers, )Tj
0 -1.2 TD
(but we don't directly save particular variable values--when we save the \environment pointer, we don't )Tj
0 -1.2 TD
(make copies of the values in the bindings in the environment. In effect,\ saving the environment pointer )Tj
T*
(records which names refer to which )Tj
/T1_2 1 Tf
(pieces of storage)Tj
/T1_0 1 Tf
(. If other code then executes in that same )Tj
T*
(environment and changes those values, the new values will be seen by thi\s procedure when it returns and )Tj
T*
(restores the environment pointer. This policy has two important conseque\nces: )Tj
1.607 -2.557 Td
(1.  we can save an environment pointer into a continuation very quickly,\ and restore it quickly, )Tj
1.25 -1.2 Td
(because we're just saving and restoring one pointer, and )Tj
-1.25 -1.2 Td
(2.  it ensures that environments have the right semantics: closures that\ live in the same environment )Tj
/T1_2 1 Tf
1.25 -1.2 Td
(should)Tj
/T1_0 1 Tf
( see each others' changes to variables. This is one of the ways that pro\cedures are supposed )Tj
T*
(to be able to communicate--by operating on variables that they can see. \)Tj
-2.857 -2.557 Td
(Executing a return \("popping a continuation"\) does not modify the part\ial continuation being popped--it )Tj
0 -1.2 TD
(just involves getting values out of the continuation and putting them in\to registers. Continuations are )Tj
T*
(thus created and used nondestructively, and the continuations on the hea\p form a graph that reflects the )Tj
T*
(pattern of non-tail procedure calls. Usually, that graph is just a tree,\ because of the tree-like pattern of )Tj
T*
(call graphs, and the current "stack" of partial continuations is just th\e rightmost path through that graph, )Tj
T*
(i.e., the path from the newest record all the way back to the root. )Tj
0 -2.562 TD
(Consider the following procedures, where )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( calls )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
( twice, and each time )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
( is called, it calls )Tj
/T1_1 1 Tf
(c)Tj
/T1_0 1 Tf
( twice: )Tj
/T1_1 1 Tf
T*
(\(define \(a\))Tj
0 -1.2 TD
(   \(b\))Tj
T*
(   \(b\))Tj
T*
(   #t\))Tj
0 -2.557 TD
(\(define \(b\))Tj
0 -1.2 TD
(   \(c\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_127.html \(7 of 18\)\11/3/2006 9:11:15 PM)Tj
ET
EMC 

endstreamendobj5043 0 obj<</Length 2625>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion in Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(   \(c\))Tj
0 -1.2 TD
(   #t\))Tj
0 -2.557 TD
(\(define \(c\))Tj
0 -1.2 TD
(   #f\))Tj
/T1_0 1 Tf
0 -2.552 TD
(All of these calls are non-tail calls, because none of the procedures ev\er ends in a \(tail\) call. )Tj
0 -2.562 TD
(Suppose we call )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( after pushing a continuation for )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
('s caller, then )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( calls )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
( the first time. )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( will push a )Tj
0 -1.205 TD
(continuation to save its state, then call )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
(. While executing )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
('s state will be in the registers, including a )Tj
T*
(pointer to the continuation for )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( in the )Tj
/T1_1 1 Tf
(CONT)Tj
/T1_0 1 Tf
( register. )Tj
/T1_1 1 Tf
0 -2.562 TD
(               cont. for a's caller)Tj
0 -1.2 TD
(                    /)Tj
T*
(                  /)Tj
T*
(          cont. for a)Tj
T*
(              /|\\)Tj
T*
(      +---+    |)Tj
T*
( CONT | +-+----+)Tj
T*
(      +---+ )Tj
0 -2.557 TD
(b)Tj
/T1_0 1 Tf
( will then push a continuation and call )Tj
/T1_1 1 Tf
(c)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(               cont. for a's caller)Tj
0 -1.2 TD
(                    /)Tj
T*
(                  /)Tj
T*
(          cont. for a)Tj
0 -1.2 TD
(              /)Tj
T*
(            /)Tj
T*
(    cont. for b)Tj
T*
(       /|\\)Tj
T*
(        |)Tj
T*
(      +-|-+ )Tj
T*
( CONT | + |)Tj
T*
(      +---+ )Tj
/T1_0 1 Tf
0 -2.557 TD
(When )Tj
/T1_1 1 Tf
(c)Tj
/T1_0 1 Tf
( returns, it will restore )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
('s state by popping the partial continuation's values into registers. At\ this )Tj
0 -1.205 TD
(point, the )Tj
/T1_1 1 Tf
(CONT)Tj
/T1_0 1 Tf
( register will point past the continuation for )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
( to the continuation for )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(               cont for a's caller)Tj
0 -1.2 TD
(                    /)Tj
T*
(                  /)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_127.html \(8 of 18\)\11/3/2006 9:11:15 PM)Tj
ET
EMC 

endstreamendobj5044 0 obj<</Length 4056>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion in Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(   \(letrec \(\(reduce \(lambda \(lis\))Tj
0 -1.2 TD
(                       \(if \(null? lis\))Tj
T*
(                           base-value)Tj
T*
(                           \(fn \(car lis\))Tj
T*
(                               \(reduce \(cdr lis\)\)\)\)\)\)\))Tj
T*
(       reduce\)\) ;; return new closure of local procedure)Tj
/T1_0 1 Tf
0 -2.557 TD
(This procedure uses closure creation to create a customized version of )Tj
/T1_1 1 Tf
(reduce)Tj
/T1_0 1 Tf
( When )Tj
/T1_1 1 Tf
(make-reducer)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(is entered, its arguments are bound and initialized to the argument valu\es--i.e., the function and base )Tj
T*
(value we want the custom reducer to use. In this environment, we create \a closure of the reducer )Tj
0 -1.205 TD
(procedure using )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
(. We wrap the lambda in a letrec so that the reducer can refer to \(and \call\) )Tj
0 -1.205 TD
(itself. Notice that since )Tj
/T1_1 1 Tf
(reduce)Tj
/T1_0 1 Tf
( is a local procedure, it can see the arguments to )Tj
/T1_1 1 Tf
(make-reducer)Tj
/T1_0 1 Tf
(, and )Tj
0 -1.2 TD
(we don't have to pass it those arguments explicitly. By using local proc\edure definition syntax--which )Tj
T*
(not all Schemes support--we can write this as: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(make-reducer fn base-value\))Tj
0 -1.2 TD
(   \(define \(reduce lis\))Tj
T*
(      \(if \(null? lis\))Tj
T*
(          base-value)Tj
T*
(          \(fn \(car lis\))Tj
T*
(              \(reduce \(cdr lis\)\)\)\)\))Tj
T*
(   reduce\)\)  ;; return new closure of local procedure)Tj
/T1_0 1 Tf
0 -2.557 TD
(Make sure that you understand that these are equivalent--the local proce\dure )Tj
/T1_1 1 Tf
(define)Tj
/T1_0 1 Tf
( is equivalent to a )Tj
/T1_1 1 Tf
0 -1.205 TD
(letrec)Tj
/T1_0 1 Tf
( and a )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
(, and in either case the closure created \(by the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( or the )Tj
/T1_1 1 Tf
(define)Tj
/T1_0 1 Tf
(\) will )Tj
0 -1.205 TD
(capture the environment where the arguments to )Tj
/T1_1 1 Tf
(make-reducer)Tj
/T1_0 1 Tf
( are bound. )Tj
ET
0 0 1 RG
1.628 w 10 M 0 j 0 J []0 d 
10 281.326 m
213.597 281.326 l
S
0 0 1 rg
BT
/T1_2 1 Tf
19.3846 0 0 19.3846 10 286.2105 Tm
(Iteration as Recursion)Tj
ET
1.357 w 
10 240.709 m
66.555 240.709 l
S
0.814 w 
66.555 242.337 m
95.632 242.337 l
S
BT
/T1_2 1 Tf
16.1538 0 0 16.1538 10 244.7798 Tm
(named )Tj
/T1_3 1 Tf
(let)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 206.3229 Tm
([ move earlier discussion here? ] )Tj
ET
10 166.153 m
29.385 166.153 l
S
0 0 1 rg
BT
/T1_3 1 Tf
16.1538 0 0 16.1538 10 168.5952 Tm
(do)Tj
ET
0.5 0.5 0.5 rg
10 133.163 m
10 135.163 l
602 135.163 l
601 134.163 l
11 134.163 l
11 134.163 l
h
f
0.875 0.875 0.875 rg
602 135.163 m
602 133.163 l
10 133.163 l
11 134.163 l
601 134.163 l
601 134.163 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 114.1383 Tm
(Go to the )Tj
ET
0.706 w 
65.608 112.021 m
88.162 112.021 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 114.1383 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 112.021 m
143.378 112.021 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 114.1383 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 112.021 m
174.486 112.021 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 114.1383 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 112.021 m
200.932 112.021 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 114.1383 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 112.021 m
343.634 112.021 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 114.1383 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_127.html \(18 of 18\)\11/3/2006 9:11:15 PM)Tj
ET
EMC 

endstreamendobj5045 0 obj<</Length 2526>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion in Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(           cont. for a)Tj
0 -1.2 TD
(              /  /|\\)Tj
T*
(            /     |)Tj
0 -1.2 TD
(    cont. for b   |)Tj
0 -1.2 TD
(                  |)Tj
T*
(      +---+       |)Tj
T*
( CONT | +-+-------+)Tj
T*
(      +---+)Tj
/T1_0 1 Tf
0 -2.557 TD
(Then )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
( will push another continuation and call )Tj
/T1_1 1 Tf
(c)Tj
/T1_0 1 Tf
( again. )Tj
/T1_1 1 Tf
0 -2.562 TD
(               cont for a's caller)Tj
0 -1.2 TD
(                    /)Tj
T*
(                  /)Tj
0 -1.2 TD
(          cont. for a)Tj
0 -1.2 TD
(              /  \\)Tj
T*
(            /     \\)Tj
T*
(    cont. for b  cont for b)Tj
T*
(                    /|\\)Tj
T*
(                     |)Tj
T*
(      +---+          |)Tj
T*
( CONT | +-+----------+)Tj
T*
(      +---+)Tj
/T1_0 1 Tf
0 -2.557 TD
(Again, )Tj
/T1_1 1 Tf
(c)Tj
/T1_0 1 Tf
( will return, restoring )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
('s state, and the )Tj
/T1_1 1 Tf
(CONT)Tj
/T1_0 1 Tf
( register will point past the continuation for )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
( to )Tj
0 -1.205 TD
(the continuation for )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(               cont for a's caller)Tj
0 -1.2 TD
(                    /)Tj
T*
(                  /)Tj
T*
(          cont. for a <-------+)Tj
T*
(              /  \\            |)Tj
T*
(            /     \\           |)Tj
T*
(    cont. for b  cont for b   |)Tj
T*
(                              |)Tj
T*
(      +---+                   |)Tj
T*
( CONT | +-+-------------------+)Tj
T*
(      +---+      )Tj
/T1_0 1 Tf
0 -2.557 TD
(After returning to )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
(, the )Tj
/T1_1 1 Tf
(CONT)Tj
/T1_0 1 Tf
( register will point past the continuation for )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( to the continuation for )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
('s )Tj
0 -1.205 TD
(caller. Then before )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( calls )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
( again, it will push another continuation to save its state. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_127.html \(9 of 18\)\11/3/2006 9:11:15 PM)Tj
ET
EMC 

endstreamendobj5046 0 obj<</Length 2638>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion in Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(               cont for a's caller)Tj
0 -1.2 TD
(                    /        \\)Tj
T*
(                  /            \\)Tj
0 -1.2 TD
(          cont. for a        cont for a)Tj
0 -1.2 TD
(              /  \\              /|\\)Tj
T*
(            /     \\              |)Tj
T*
(    cont. for b  cont for b      |)Tj
T*
(                                 |)Tj
0 -1.2 TD
(      +---+                      |)Tj
T*
( CONT | +-+----------------------+)Tj
T*
(      +---+      )Tj
/T1_0 1 Tf
0 -2.557 TD
(Then )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( will return and the )Tj
/T1_1 1 Tf
(CONT)Tj
/T1_0 1 Tf
( register will point past the continuation for )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( to the continuation for )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
('s )Tj
0 -1.2 TD
(caller. )Tj
/T1_1 1 Tf
0 -2.562 TD
(                cont for a's caller <--+)Tj
0 -1.2 TD
(                    /                  |)Tj
T*
(                  /                    |)Tj
T*
(          cont. for a                  |)Tj
T*
(              /  \\                     |)Tj
T*
(            /     \\                    |)Tj
T*
(    cont. for b  cont for a            |)Tj
T*
(                                       |)Tj
T*
(      +---+                            |)Tj
T*
( CONT | +-+----------------------------+)Tj
T*
(      +---+    )Tj
/T1_0 1 Tf
0 -2.552 TD
(This continues in the obvious way, so that at the time of the fourth and\ last call to C, the continuations )Tj
0 -1.2 TD
(on the heap look like this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(                cont for a's caller)Tj
0 -1.2 TD
(                    /           \\    )Tj
T*
(                  /               \\  )Tj
T*
(          cont. for a          cont. for a)Tj
T*
(              /  \\                 /  \\      )Tj
T*
(            /     \\              /      \\ )Tj
T*
(    cont for b  cont for b  cont for b  cont for b)Tj
T*
(                                          /|\\)Tj
T*
(                                           |)Tj
T*
(      +---+                                |)Tj
T*
( CONT | +-+--------------------------------+)Tj
T*
(      +---+    )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_127.html \(10 of 18\)\11/3/2006 9:11:15 PM)Tj
ET
EMC 

endstreamendobj5047 0 obj<</Length 3773>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion in Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 750.5082 Tm
(Most of the time, the rest of this graph becomes garbage quickly--each c\ontinuation holds pointers back )Tj
0 -1.2 TD
(up the tree, but nothing holds pointers )Tj
/T1_1 1 Tf
(down)Tj
/T1_0 1 Tf
( the tree. Partial continuations therefore usually become )Tj
T*
(garbage the first time they're returned through. )Tj
0 -2.562 TD
(The fact that this graph is created on the heap will allow us to impleme\nt )Tj
/T1_2 1 Tf
(call-with-current-)Tj
0 -1.205 TD
(continuation)Tj
/T1_0 1 Tf
(, a.k.a. )Tj
/T1_2 1 Tf
(call/cc)Tj
/T1_0 1 Tf
(, a very powerful control construct. )Tj
/T1_2 1 Tf
(call/cc)Tj
/T1_0 1 Tf
( can capture the )Tj
0 -1.2 TD
(control state of a program at a particular point in its execution by pus\hing a partial continuation and )Tj
T*
(saving a pointer to it. Later, it can magically return control to that p\oint by restoring that continuation, )Tj
0 -1.205 TD
(instead of the one in the continuation register. \(We will discuss )Tj
/T1_2 1 Tf
(call/cc)Tj
/T1_0 1 Tf
( in detail in Chapter XX.\) )Tj
ET
0 0 1 RG
1.628 w 10 M 0 j 0 J []0 d 
10 568.06 m
242.674 568.06 l
S
0 0 1 rg
BT
/T1_3 1 Tf
19.3846 0 0 19.3846 10 572.9453 Tm
(Exploiting Tail Recursion)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 533.6444 Tm
(In an earlier section, we presented example recursive implementations of\ several Scheme functions; )Tj
0 -1.2 TD
(some of them were tail recursive, and some not. )Tj
0 -2.557 TD
(At first glance, many routines seem as though they can't conveniently be\ coded tail recursively. On )Tj
0 -1.2 TD
(closer inspection, many of them can in fact be coded this way. )Tj
ET
1.357 w 
10 422.244 m
341.267 422.244 l
S
0 0 1 rg
BT
/T1_3 1 Tf
16.1538 0 0 16.1538 10 426.3146 Tm
(Passing Intermediate Values as Arguments)Tj
ET
1.176 w 
10 384.289 m
114.244 384.289 l
S
BT
/T1_3 1 Tf
14 0 0 14 10 387.8172 Tm
(Summing a List)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(Suppose we want to sum a list of numbers. The most obvious way of doing \it is the way we did it earlier, )Tj
0 -1.2 TD
(like this: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(list-sum lis\))Tj
0 -1.2 TD
(   \(if \(null? lis\))Tj
T*
(       0)Tj
0 -1.2 TD
(       \(+ \(car lis\))Tj
T*
(          \(list-sum \(cdr lis\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(The problem with this code is that it's not particularly efficient, beca\use it's not tail recursive. After each )Tj
0 -1.205 TD
(recursive call to )Tj
/T1_2 1 Tf
(list-sum)Tj
/T1_0 1 Tf
(, we must return to do the addition that adds one element to the sum of \the )Tj
0 -1.2 TD
(rest of the list. We're adding the elements of the list back-to-front, o\n the way back up from nested )Tj
T*
(recursion. \(This means that Scheme must push a partial continuation bef\ore every recursive call, and )Tj
T*
(each one must be popped when we're finished, to return the sum back from\ each call to its caller.\) )Tj
0 -2.557 TD
(The problem here is that evaluation of the arguments to a combination is\n't a tail call, even if the )Tj
0 -1.2 TD
(combination as a whole is. Control must always return so that the actual\ call can be done. )Tj
0 -2.562 TD
(We can write a tail-recursive version of )Tj
/T1_2 1 Tf
(list-sum)Tj
/T1_0 1 Tf
( that adds things in front-to-back order instead. The )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_127.html \(11 of 18\)\11/3/2006 9:11:15 PM)Tj
ET
EMC 

endstreamendobj5048 0 obj<</Length 3569>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion in Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 752.125 Tm
(trick is to do the addition before the tail call, and to )Tj
/T1_1 1 Tf
(pass the sum so far to the recursive call)Tj
/T1_0 1 Tf
(, i.e., to pass )Tj
0 -1.2 TD
(it )Tj
/T1_1 1 Tf
(forward)Tj
/T1_0 1 Tf
( as an argument until a non-tail call returns it. )Tj
0 -2.557 TD
(To do this, we have to keep a running sum, and each recursive call must \pass it as an argument to the )Tj
0 -1.2 TD
(next. To start it off, we have to have a "running sum" of 0. )Tj
0 -2.557 TD
(We can do this by defining two procedures. The one that does the real wo\rk takes a list and a running )Tj
0 -1.2 TD
(sum, adds one element to the running sum, and tail-calls itself to add t\he rest of the elements to the )Tj
T*
(running sum. When it reaches the end of the list, it just returns the va\lue. \(Scheme doesn't need to save a )Tj
T*
(partial continuation before each call, since only the last call ever ret\urns.\) We'll call this procedure )Tj
/T1_2 1 Tf
0 -1.205 TD
(loop)Tj
/T1_0 1 Tf
(, because we're using tail recursion to implement looping. For convenien\ce, we also wrap this )Tj
0 -1.2 TD
(procedure up in a friendlier procedure that will start off the recursion\, by supplying an initial "running )Tj
T*
(sum" of 0. )Tj
/T1_2 1 Tf
0 -2.562 TD
(;; a tail-recursive list summing procedure)Tj
0 -1.2 TD
(\(define \(loop lis sum-so-far\))Tj
T*
(   \(cond \(\(null? lis\))Tj
T*
(          sum-so-far\))Tj
T*
(         \(else)Tj
T*
(          \(loop \(cdr lis\))Tj
T*
(                \(+ sum-so-far \(car lis\)\)\)\)\)\))Tj
0 -2.4 TD
(;; a friendly wrapper that supplies an initial running sum of 0)Tj
0 -1.2 TD
(\(define \(list-sum lis\))Tj
T*
(   \(loop lis 0\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(We can make this cleaner by encapsulating )Tj
/T1_2 1 Tf
(loop)Tj
/T1_0 1 Tf
(, since it's only used by list-sum. We make )Tj
/T1_2 1 Tf
(loop)Tj
/T1_0 1 Tf
( a )Tj
0 -1.205 TD
(local procedure using )Tj
/T1_2 1 Tf
(letrec)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
(. )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(list-sum lis\))Tj
0 -1.2 TD
(   ;; define a local, tail-recursive list summing procedure )Tj
T*
(   \(letrec \(\(loop \(lambda \(lis sum-so-far\))Tj
T*
(                     \(cond \(\(null? lis\))Tj
T*
(                            sum-so-far\))Tj
T*
(                           \(else)Tj
T*
(                            \(loop \(cdr lis\))Tj
T*
(                                  \(+ sum-so-far \(car lis\)\)\)\)\)\)\)\\))Tj
T*
(      \(loop lis 0\)\)\) ;; start off recursive summing with a sum of 0)Tj
/T1_0 1 Tf
0 -2.557 TD
(We can write this more clearly using named )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(. Named let is one of Scheme's two special forms for )Tj
0 -1.205 TD
(looping \(the other is )Tj
/T1_2 1 Tf
(do)Tj
/T1_0 1 Tf
(\). A named )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
( looks like a )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(, but it's really a shorthand for the kind of thing )Tj
0 -1.2 TD
(we did above--defining a local procedure that can tail-call itself to gi\ve the effect of iteration, and )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_127.html \(12 of 18\)\11/3/2006 9:11:15 PM)Tj
ET
EMC 

endstreamendobj5049 0 obj<</Length 4018>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion in Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(starting it off with the appropriate initial value. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(list-sum lis\))Tj
0 -1.2 TD
(   \(let loop \(\(lis lis\))Tj
0 -1.2 TD
(              \(sum-so-far 0\)\))Tj
T*
(      \(cond \(\(null? lis\))Tj
T*
(             sum-so-far\))Tj
0 -1.2 TD
(            \(else)Tj
T*
(             \(loop \(cdr lis\))Tj
T*
(                   \(+ sum-so-far \(car lis\)\)\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that here we're using two loop variables, )Tj
/T1_1 1 Tf
(lis)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(sum-so-far)Tj
/T1_0 1 Tf
(, rebound at each iteration. One )Tj
0 -1.2 TD
(keeps track of the remaining part of the original list, and the other th\e sum of the list items we've seen so )Tj
T*
(far. )Tj
0 -2.562 TD
(Be sure you understand that this version using named )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( is )Tj
/T1_2 1 Tf
(exactly)Tj
/T1_0 1 Tf
( equivalent to the version using )Tj
/T1_1 1 Tf
0 -1.205 TD
(letrec)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
(. The named )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( binds the variable )Tj
/T1_1 1 Tf
(loop)Tj
/T1_0 1 Tf
(, and initializes it with a first-class )Tj
T*
(procedure that takes two arguments, )Tj
/T1_1 1 Tf
(list)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(sum-so-far)Tj
/T1_0 1 Tf
(. When we used the name )Tj
/T1_1 1 Tf
(loop)Tj
/T1_0 1 Tf
( for the )Tj
T*
(named )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, we're really giving the name of the procedure that implements the loop\ body. Each time we )Tj
T*
(iterate the loop, we're really calling this procedure--the call to )Tj
/T1_1 1 Tf
(loop)Tj
/T1_0 1 Tf
( looks like a procedure call because )Tj
0 -1.2 TD
(it )Tj
/T1_2 1 Tf
(is)Tj
/T1_0 1 Tf
( a procedure call. )Tj
0 -2.557 TD
(The argument expressions provide the new values for the next iteration o\f the loop, and the loop )Tj
0 -1.2 TD
(variables are )Tj
/T1_2 1 Tf
(rebound)Tj
/T1_0 1 Tf
( and initialized to those values at the next iteration of the loop. As i\n the version )Tj
T*
(with an explicit letrec and lambda, the loop is started off by evaluatin\g the initial value expressions for )Tj
0 -1.205 TD
(the loop variables \(which look like )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( variables\) and calling the )Tj
/T1_1 1 Tf
(loop)Tj
/T1_0 1 Tf
( procedure. )Tj
0 -2.557 TD
(Since we re-bind the loop variables at each iteration of the loop, it ge\nerally doesn't make sense to side-)Tj
0 -1.2 TD
(effect loop variables. The old binding goes out of scope, and new bindin\gs are created at each iteration, )Tj
T*
(initialized with whatever values are passed to the looping procedure. )Tj
ET
0 0 1 RG
1.176 w 10 M 0 j 0 J []0 d 
10 215.733 m
104.906 215.733 l
S
0.706 w 
104.906 217.144 m
155.306 217.144 l
S
1.176 w 
155.306 215.733 m
258.024 215.733 l
S
0 0 1 rg
BT
/T1_3 1 Tf
14 0 0 14 10 219.2612 Tm
(Implementing )Tj
/T1_4 1 Tf
(length)Tj
/T1_3 1 Tf
( tail-recursively)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.7 TD
(Recall that in [ Chapter whatever ] we implemented )Tj
/T1_1 1 Tf
(length)Tj
/T1_0 1 Tf
( this way: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(length lis\))Tj
0 -1.2 TD
(   \(if \(null? lis\))Tj
T*
(       0)Tj
0 -1.2 TD
(       \(+ 1 \(length \(cdr lis\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(This definition looks a lot like the definition of )Tj
/T1_1 1 Tf
(list-sum)Tj
/T1_0 1 Tf
(, and has the same basic problem. By using )Tj
0 -1.2 TD
(straightforward recursion \(adding one to the length of the rest of the \list\), we're ensuring the addition )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_127.html \(13 of 18\)\11/3/2006 9:11:15 PM)Tj
ET
EMC 

endstreamendobj5050 0 obj<</Length 2709>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion in Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(happens back-to-front. We can compute the list length front to back by p\assing the running sum )Tj
/T1_1 1 Tf
(forward)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(through tail recursions, as an argument. Each tail call will add to the \running sum, and pass it forward. )Tj
T*
(When the last tail call returns to its caller, it just returns the sum. \)Tj
0 -2.562 TD
(To do this, it's convenient to write the )Tj
/T1_2 1 Tf
(length)Tj
/T1_0 1 Tf
( procedure as a wrapper around a two-argument )Tj
0 -1.2 TD
(procedure that passes the running sum \(as well as the remainder of list\\) to recursive calls to itself. )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(length lis\))Tj
0 -1.2 TD
(   \(letrec \(\(len \(lambda \(lis length-so-far\))Tj
T*
(                    \(if \(null? lis\))Tj
T*
(                        length-so-far)Tj
T*
(                        \(len \(cdr lis\))Tj
T*
(                             \(+ 1 length-so-far\)\)\)\)\)\)\))Tj
T*
(     \(len lis 0\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Or equivalently, using named )Tj
/T1_2 1 Tf
(let)Tj
/T1_0 1 Tf
(: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(length lis\))Tj
0 -1.2 TD
(   \(let loop \(\(lis lis\))Tj
T*
(              \(length-so-far 0\)\))Tj
T*
(      \(if \(null? lis\))Tj
T*
(          len-so-far)Tj
T*
(          \(loop \(cdr lis\))Tj
T*
(                \(+ \(car lis\) length-so-far\)\)\)\)\))Tj
ET
0 0 1 RG
0.814 w 10 M 0 j 0 J []0 d 
10 318.471 m
68.154 318.471 l
S
0 0 1 rg
BT
/T1_3 1 Tf
16.1538 0 0 16.1538 10 320.9131 Tm
(reduce)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 282.4561 Tm
(In this section, I'll give an extended example of the use of higher-orde\r functions to express patterns )Tj
0 -1.2 TD
(common to many functions, and customizing general procedures with proced\ural arguments and closure )Tj
T*
(creation. )Tj
0 -2.557 TD
(Consider the following function to sum the elements of a list )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define \(list-sum lis\))Tj
0 -1.2 TD
(   \(if \(null? lis\))Tj
T*
(       0)Tj
T*
(       \(+ \(car lis\))Tj
T*
(          \(list-sum \(cdr lis\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Given this definition, )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(list-sum '\(10 15 20 25\)\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_127.html \(14 of 18\)\11/3/2006 9:11:15 PM)Tj
ET
EMC 

endstreamendobj5051 0 obj<</Length 2719>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion in Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 732.6561 Tm
(is equivalent to )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(+ 10 \(+ 15 \(+ 20 \(+ 25 0\)\)\)\).)Tj
/T1_0 1 Tf
0 -2.552 TD
([ the following couple of examples are now redundant with earlier materi\al... trim and refer back. ] )Tj
0 -2.557 TD
(Now consider a very similar function to multiply the elements of a list,\ where we've adopted the )Tj
0 -1.2 TD
(convention that the product of a null list is 1. \(1 is probably the rig\ht value to use, because if you )Tj
T*
(multiply something by 1 you get back the same thing--just as if you add \something to 0 you get back the )Tj
T*
(same thing.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(list-prod lis\))Tj
0 -1.2 TD
(   \(if \(null? lis\))Tj
0 -1.2 TD
(       1)Tj
0 -1.2 TD
(       \(+ \(car lis\))Tj
T*
(          \(list-prod \(cdr lis\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Given this definition, )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(list-prod '\(2 3 4 5\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(is equivalent to )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(* 2 \(* 3 \(* 4 \(* 5 1\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Given these definitions, you can probably imagine a very similar functio\n to subtract the elements of a )Tj
0 -1.2 TD
(list, or to divide the elements of a list. For subtraction, the base val\ue for an empty list should probably )Tj
T*
(be zero, because subtracting zero doesn't change anything. For division \it should probably be one. )Tj
0 -2.557 TD
(At any rate, what we want is a single function that captures the pattern\ )Tj
/T1_1 1 Tf
0 -2.562 TD
(\()Tj
/T1_2 1 Tf
(op thing1)Tj
/T1_1 1 Tf
(\()Tj
/T1_2 1 Tf
(op thing2 ...)Tj
/T1_1 1 Tf
(\()Tj
/T1_2 1 Tf
(op thingn base-thing)Tj
/T1_1 1 Tf
(\))Tj
/T1_2 1 Tf
(...)Tj
/T1_1 1 Tf
(\)\))Tj
/T1_0 1 Tf
( )Tj
T*
(We can write a higher-order procedure )Tj
/T1_1 1 Tf
(reduce)Tj
/T1_0 1 Tf
( that implements this pattern in a general way, taking )Tj
0 -1.2 TD
(three arguments: any procedure you want successively applied to the elem\ents of a list, an appropriate )Tj
T*
(base value to use on reaching the end of the list, and the list to do it\ to. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(reduce fn base-value lis\))Tj
0 -1.2 TD
(   \(if \(null? lis\))Tj
T*
(       base-value)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_127.html \(15 of 18\)\11/3/2006 9:11:15 PM)Tj
ET
EMC 

endstreamendobj5052 0 obj<</Length 3682>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion in Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(       \(fn \(car lis\))Tj
0 -1.2 TD
(           \(reduce fn base-value \(cdr lis\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(This is a very general procedure, that can be used for lots of things be\sides numerical operations on lists )Tj
0 -1.2 TD
(of numbers: it can be used for any computation over successive items in \a list. )Tj
0 -2.557 TD
([ need to check the following couple of examples--they're off the top of\ my head ] )Tj
0 -2.562 TD
(What does )Tj
/T1_1 1 Tf
(\(reduce cons '\(\) '\(a b c d\)\))Tj
/T1_0 1 Tf
( do? It's equivalent to )Tj
/T1_1 1 Tf
(\(cons 'a \(cons 'b )Tj
0 -1.205 TD
(\(cons 'c \(cons 'd '\(\)\)\)\))Tj
/T1_0 1 Tf
(. That is, )Tj
/T1_1 1 Tf
(\(reduce cons '\(\) )Tj
/T1_2 1 Tf
(list)Tj
/T1_1 1 Tf
(\))Tj
/T1_0 1 Tf
( copies a list. We could )Tj
T*
(define )Tj
/T1_1 1 Tf
(list-copy)Tj
/T1_0 1 Tf
( that way: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(list-copy lis\))Tj
0 -1.2 TD
(   \(reduce cons '\(\) lis\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(We could also define )Tj
/T1_1 1 Tf
(append)Tj
/T1_0 1 Tf
( that way, because )Tj
/T1_1 1 Tf
(reduce)Tj
/T1_0 1 Tf
( allows you to specify what goes at the end of )Tj
0 -1.205 TD
(a list--we don't have to end our list with )Tj
/T1_1 1 Tf
('\(\))Tj
/T1_0 1 Tf
(. Here's a two-argument version of )Tj
/T1_1 1 Tf
(append)Tj
/T1_0 1 Tf
(: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(append list1 list2\))Tj
0 -1.2 TD
(   \(reduce cons list2 list1\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(The reduction of a list using )Tj
/T1_1 1 Tf
(\(lambda)Tj
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
(\(x rest\))Tj
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
(\(cons \(* x 2\) rest\)\))Tj
/T1_0 1 Tf
( constructs a new list )Tj
0 -1.2 TD
(whose elements are twice the values of the corresponding elements in the\ original list. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>\(reduce \(lambda \(x rest\))Tj
0 -1.2 TD
(                  \(cons \(* x 2\) rest\)\))Tj
0 -1.2 TD
(               '\(\))Tj
T*
(               '\(1 2 3 4\)\))Tj
T*
(\(2 4 6 8\))Tj
/T1_2 1 Tf
0 -2.552 TD
([ show tail-recursive version... that'd make a good exercise ])Tj
/T1_0 1 Tf
( )Tj
0 -2.562 TD
(The )Tj
/T1_1 1 Tf
(reduce)Tj
/T1_0 1 Tf
( procedure above is handy, because you can use it for many different kin\ds of )Tj
0 -1.2 TD
(computations over different kinds of lists values, as long as you can pr\ocess the elements \(and construct )Tj
T*
(the result\) front-to-back. It's a little awkward, though, in that each \time you use it, you have to remember )Tj
T*
(the appropriate base value for the operation you're applying to a list. \Sometimes it would be preferable )Tj
0 -1.205 TD
(to come up with a single specialized procedure like )Tj
/T1_1 1 Tf
(list-sum)Tj
/T1_0 1 Tf
(, which implicitly remembers which )Tj
0 -1.2 TD
(function it should apply to the list elements \(e.g., +\) and what base \value to return for an empty list \(e.g., )Tj
0 -1.205 TD
(0\). We can write a procedure )Tj
/T1_1 1 Tf
(make-reducer)Tj
/T1_0 1 Tf
( that will automatically construct a reducer procedure, )Tj
0 -1.2 TD
(given a function and a base value. Here's an example usage: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme> \(define list-sum \(make-reducer + 0\)\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_127.html \(16 of 18\)\11/3/2006 9:11:15 PM)Tj
ET
EMC 

endstreamendobj5053 0 obj<</Length 2990>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Recursion in Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.5016 Tm
(list-sum)Tj
0 -1.2 TD
(  )Tj
T*
(Scheme> \(define list-product \(make-reducer * 1\)\))Tj
0 -1.2 TD
(list-copy)Tj
0 -1.2 TD
(   )Tj
T*
(Scheme> \(list-sum '\(1 2 3 4\)\))Tj
T*
(10)Tj
T*
(   )Tj
0 -1.2 TD
(Scheme> \(list-product '\(1 2 3 4\)\))Tj
T*
(24)Tj
/T1_0 1 Tf
0 -2.557 TD
(Make sure you understand the expressions above. The define forms are )Tj
/T1_1 1 Tf
(not)Tj
/T1_0 1 Tf
( using procedure definition )Tj
0 -1.2 TD
(syntax--they're using plain variable definition syntax, but the initial \value expressions return procedures )Tj
T*
(constructed by make-reducer. If we hadn't wanted to define procedures na\med list-sum and list-product, )Tj
T*
(and hang on to them, we could have just taken the procedures returned by\ make-reducer and called them )Tj
T*
(immediately: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme> \(\(make-reducer + 0\) '\(1 2 3 4\)\))Tj
0 -1.2 TD
(10)Tj
T*
( )Tj
T*
(Scheme> \(\(make-reducer * 1\) '\(1 2 3 4\)\))Tj
T*
(24)Tj
/T1_0 1 Tf
0 -2.557 TD
(This is very much like calling our original )Tj
/T1_1 1 Tf
(reduce)Tj
/T1_0 1 Tf
( procedure, except that each time we're constructing )Tj
0 -1.205 TD
(a specialized procedure \(closure\) that's like )Tj
/T1_1 1 Tf
(reduce)Tj
/T1_0 1 Tf
( customized for particular values of its first two )Tj
0 -1.2 TD
(arguments; then we call that new, specialized procedure to do the work o\n a particular list. )Tj
0 -2.562 TD
(Here's a simple definition of )Tj
/T1_1 1 Tf
(make-reducer)Tj
/T1_0 1 Tf
( in terms of )Tj
/T1_1 1 Tf
(reduce)Tj
/T1_0 1 Tf
(: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(make-reducer fn base-value\))Tj
0 -1.2 TD
(   \(lambda \(lis\))Tj
T*
(      \(reduce fn base-value lis\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that we )Tj
/T1_2 1 Tf
(are)Tj
/T1_0 1 Tf
( using procedure definition syntax here, so the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( in the body will create and )Tj
0 -1.2 TD
(return a closure. )Tj
/T1_2 1 Tf
0 -2.562 TD
([ can also do this with )Tj
/T1_3 1 Tf
(curry)Tj
/T1_2 1 Tf
(. ])Tj
/T1_0 1 Tf
( But suppose we don't already have a reduce procedure, and we don't )Tj
0 -1.205 TD
(want to leave one lying around. A cleaner solution is to define the gene\ral )Tj
/T1_1 1 Tf
(reduce)Tj
/T1_0 1 Tf
( procedure as a local )Tj
0 -1.2 TD
(procedure, and create closures of it in different environments to custom\ize it for different functions and )Tj
T*
(base values. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(make-reducer fn base-value\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_127.html \(17 of 18\)\11/3/2006 9:11:15 PM)Tj
ET
EMC 

endstreamendobj5054 0 obj(An Introduction to Scheme and its Implementation - Recursion in Scheme)endobj5055 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_127.html)/S 700 0 R>>endobj5056 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_127.html)endobj5057 0 obj(®ˆºU˙˜[Ù ’ ÷\rî)endobj5058 0 obj<</TS(D:20061104051115)/ID 5057 0 R/CT(text/html)/O[4939 0 R 4951 0 R 4954 0 R 4959 0 R 4961 0 R 4963 0 R 4965 0 R 4968 0 R 4970 0 R 4972 0 R 4974 0 R 4986 0 R 4990 0 R 4996 0 R 5002 0 R 5005 0 R 5008 0 R 5012 0 R]/S/SPS/T 5054 0 R/TID 5060 0 R/SI 5059 0 R>>endobj5059 0 obj<</TS(D:20061104051115)/AU 5056 0 R>>endobj5060 0 obj(\\RKÈ∞ÀN	Ÿ ù6)endobj5061 0 obj<</Parent 710 0 R/Next 5087 0 R/Dest[4939 0 R/XYZ 0 792 null]/Prev 4936 0 R/SE 4938 0 R/Title(An Introduction to Scheme and its Implementation - Recursion in Scheme)>>endobj5062 0 obj<</TextDecorationType/Underline/O/Layout>>endobj5063 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 5064 0 R>>endobj5064 0 obj<</Annots 5067 0 R/Parent 5105 0 R/ID 5083 0 R/StructParents 296/Contents 5079 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5065 0 obj[5063 0 R]endobj5066 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5067 0 obj[5066 0 R 5068 0 R 5069 0 R 5070 0 R 5071 0 R 5073 0 R 5074 0 R 5075 0 R 5076 0 R 5077 0 R 5078 0 R]endobj5068 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4939 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html)/S/URI>>/Border[0 0 0]>>endobj5069 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5090 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_129.html)/S/URI>>/Border[0 0 0]>>endobj5070 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5071 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5072 0 obj[5064 0 R/XYZ 0 731.2 null]endobj5073 0 obj<</Rect[10.0 683.954 336.186 709.723]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC180)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC180)/S/URI>>/Border[0 0 0]>>endobj5074 0 obj<</Rect[65.608 248.477 88.162 263.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5075 0 obj<</Rect[95.162 248.477 143.378 263.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[4939 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_127.html)/S/URI>>/Border[0 0 0]>>endobj5076 0 obj<</Rect[150.378 248.477 174.486 263.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5090 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_129.html)/S/URI>>/Border[0 0 0]>>endobj5077 0 obj<</Rect[181.486 248.477 200.932 263.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5078 0 obj<</Rect[251.094 248.477 343.634 263.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5079 0 obj<</Length 4186>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Quasiquotation and Ma\cros)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
2.081 w 
10 684.255 m
336.186 684.255 l
S
0 0 1 rg
BT
/T1_1 1 Tf
24.7692 0 0 24.7692 10 690.4968 Tm
(Quasiquotation and Macros)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 649.4525 Tm
(Scheme provides facilities for transforming expressions automatically to\ create new expressions. These )Tj
0 -1.2 TD
(facilities are called )Tj
/T1_2 1 Tf
(quasiquotation)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(syntax extension)Tj
/T1_0 1 Tf
( \(or "macros"\). Transformational programming )Tj
T*
(is one of the most powerful features of Scheme. )Tj
0 -2.557 TD
(Quasiquotation allows you to specify patterns that can be used to constr\uct data structures, and also )Tj
0 -1.2 TD
(specify how to fill in "holes" in the patterns. In effect, you can defin\e a template for a data structure, )Tj
T*
(much like a quoted data structure, but also specify how to fill in holes\ to create variations on the data )Tj
T*
(structure. )Tj
0 -2.557 TD
(Syntax extension allows you to do something very similar for code. You c\an write "macros" that specify )Tj
0 -1.2 TD
(most of an expression, and you can fill in the holes in these templates \to create particular expressions. )Tj
T*
(With macros, you can write "templates" for programs, which you can custo\mize by filling in the holes. )Tj
T*
(This lets you create both code-structuring and data-structuring faciliti\es that express stereotyped patterns )Tj
T*
(with variations. )Tj
0 -2.557 TD
([ Scheme macros are actually more powerful than this, however, because y\ou can use them to analyze )Tj
0 -1.2 TD
(code before transforming it... sort of... ] )Tj
0 -2.557 TD
(With Scheme macros, you can define new control constructs, data structur\ing facilities, full-blown )Tj
0 -1.2 TD
(object systems with inheritance, parameterized coding facilities \(like \C++ templates\), and other more )Tj
T*
(application-specific facilities to make your life easier. )Tj
ET
0.5 0.5 0.5 rg
10 271.877 m
10 273.877 l
602 273.877 l
601 272.877 l
11 272.877 l
11 272.877 l
h
f
0.875 0.875 0.875 rg
602 273.877 m
602 271.877 l
10 271.877 l
11 272.877 l
601 272.877 l
601 272.877 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 252.8525 Tm
(Go to the )Tj
ET
0.706 w 
65.608 250.736 m
88.162 250.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 252.8525 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 250.736 m
143.378 250.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 252.8525 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 250.736 m
174.486 250.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 252.8525 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 250.736 m
200.932 250.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 252.8525 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 250.736 m
343.634 250.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 252.8525 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_128.html11/3/2006 9:\11:36 PM)Tj
ET
EMC 

endstreamendobj5080 0 obj(An Introduction to Scheme and its Implementation - Quasiquotation and Macros)endobj5081 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_128.html)/S 700 0 R>>endobj5082 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_128.html)endobj5083 0 obj(®ÀF•ÊºTÔÂ§Ç˝vì˙)endobj5084 0 obj<</TS(D:20061104051136)/ID 5083 0 R/CT(text/html)/O[5064 0 R]/S/SPS/T 5080 0 R/TID 5086 0 R/SI 5085 0 R>>endobj5085 0 obj<</TS(D:20061104051136)/AU 5082 0 R>>endobj5086 0 obj(üIX—i≠FŒ°F≠Ò]1⁄)endobj5087 0 obj<</Parent 710 0 R/Next 5130 0 R/Dest[5064 0 R/XYZ 0 792 null]/Prev 5061 0 R/SE 5063 0 R/Title(An Introduction to Scheme and its Implementation - Quasiquotation and Macros)>>endobj5088 0 obj<</TextDecorationType/Underline/O/Layout>>endobj5089 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 5102 0 R/Type/MCR>><</MCID 0/Pg 5104 0 R/Type/MCR>><</MCID 0/Pg 5110 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 5090 0 R>>endobj5090 0 obj<</Annots 5093 0 R/Parent 5105 0 R/ID 5126 0 R/StructParents 297/Contents 5119 0 R/PZ 1.00719/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5091 0 obj[5089 0 R]endobj5092 0 obj<</Rect[65.1397 749.774 87.5327 764.667]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5093 0 obj[5092 0 R 5094 0 R 5095 0 R 5096 0 R 5097 0 R 5099 0 R 5101 0 R]endobj5094 0 obj<</Rect[94.4827 749.774 142.355 764.667]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5064 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_128.html)/S/URI>>/Border[0 0 0]>>endobj5095 0 obj<</Rect[149.305 749.774 173.24 764.667]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5133 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html)/S/URI>>/Border[0 0 0]>>endobj5096 0 obj<</Rect[180.191 749.774 199.498 764.667]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5097 0 obj<</Rect[249.302 749.774 341.181 764.667]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5098 0 obj[5090 0 R/XYZ 0 731.505 null]endobj5099 0 obj<</Rect[9.92862 690.477 125.406 710.717]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC181)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC181)/S/URI>>/Border[0 0 0]>>endobj5100 0 obj[5090 0 R/XYZ 0 485.186 null]endobj5101 0 obj<</Rect[268.609 480.842 291.766 495.735]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_foot.html#FOOT11)/S/URI>>/Border[0 0 0]>>endobj5102 0 obj<</Parent 5105 0 R/ID 5126 0 R/StructParents 298/Contents 5120 0 R/PZ 1.00719/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5103 0 obj[5089 0 R]endobj5104 0 obj<</Annots 5109 0 R/Parent 5150 0 R/ID 5126 0 R/StructParents 299/Contents 5121 0 R/PZ 1.00719/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5105 0 obj<</Parent 5111 0 R/Count 5/Type/Pages/Kids[5008 0 R 5012 0 R 5064 0 R 5090 0 R 5102 0 R]>>endobj5106 0 obj[5089 0 R]endobj5107 0 obj[5104 0 R/XYZ 0 352.362 null]endobj5108 0 obj<</Rect[9.92862 333.727 163.899 350.758]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC182)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC182)/S/URI>>/Border[0 0 0]>>endobj5109 0 obj[5108 0 R]endobj5110 0 obj<</Annots 5114 0 R/Parent 5150 0 R/ID 5126 0 R/StructParents 300/Contents 5122 0 R/PZ 1.00719/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5111 0 obj<</Parent 5944 0 R/Count 25/Type/Pages/Kids[4952 0 R 4966 0 R 4987 0 R 5009 0 R 5105 0 R]>>endobj5112 0 obj[5089 0 R]endobj5113 0 obj<</Rect[65.1397 612.625 87.5327 627.518]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5114 0 obj[5113 0 R 5115 0 R 5116 0 R 5117 0 R 5118 0 R]endobj5115 0 obj<</Rect[94.4827 612.625 142.355 627.518]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5064 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_128.html)/S/URI>>/Border[0 0 0]>>endobj5116 0 obj<</Rect[149.305 612.625 173.24 627.518]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5133 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html)/S/URI>>/Border[0 0 0]>>endobj5117 0 obj<</Rect[180.191 612.625 199.498 627.518]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5118 0 obj<</Rect[249.302 612.625 341.181 627.518]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5119 0 obj<</Length 5541>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.0642 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.9358 0 0 8.9358 18 780.2187 Tm
(An Introduction to Scheme and its Implementation - Quasiquote)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 9.9286 754.1185 Tm
(Go to the )Tj
ET
0 0 1 RG
0.701 w 10 M 0 j 0 J []0 d 
65.14 752.017 m
87.533 752.017 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 65.1397 754.1185 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
94.483 752.017 m
142.355 752.017 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 94.4827 754.1185 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
149.305 752.017 m
173.24 752.017 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 149.3046 754.1185 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
180.191 752.017 m
199.498 752.017 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 180.1905 754.1185 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
249.302 752.017 m
341.181 752.017 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 249.3016 754.1185 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
9.929 738.456 m
9.929 740.441 l
602.071 740.441 l
601.079 739.448 l
10.921 739.448 l
10.921 739.448 l
h
f
0.875 0.875 0.875 rg
602.071 740.441 m
602.071 738.456 l
9.929 738.456 l
10.921 739.448 l
601.079 739.448 l
601.079 739.448 l
h
f
0.97 w 
9.929 693.108 m
125.406 693.108 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.2462 0 0 19.2462 9.9286 696.0181 Tm
(quasiquote)Tj
0 0 0 rg
/T1_0 1 Tf
13.9001 0 0 13.9001 9.9286 656.69 Tm
(The special form )Tj
/T1_2 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
( behaves a lot like )Tj
/T1_2 1 Tf
(quote)Tj
/T1_0 1 Tf
(, allowing you to write out literal expressions )Tj
0 -1.2 TD
(in your program, using the standard textual representation of s-expressi\ons. Scheme automatically )Tj
0 -1.205 TD
(constructs the data structures. )Tj
/T1_2 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
( is much more powerful than )Tj
/T1_2 1 Tf
(quote)Tj
/T1_0 1 Tf
(, however, because you )Tj
0 -1.2 TD
(can write expressions that are )Tj
/T1_3 1 Tf
(mostly)Tj
/T1_0 1 Tf
( literal, but leave holes to be filled in with values computed at )Tj
T*
(runtime. )Tj
0 -2.562 TD
(For example, the value of the expression )Tj
/T1_2 1 Tf
(\(quote \(foo bar baz\)\))Tj
/T1_0 1 Tf
( is a list )Tj
/T1_2 1 Tf
(\(foo bar baz\))Tj
/T1_0 1 Tf
(. )Tj
0 -1.205 TD
(Likewise, the value of the expression )Tj
/T1_2 1 Tf
(\(quasiquote \(foo bar baz\)\))Tj
/T1_0 1 Tf
( is a list )Tj
/T1_2 1 Tf
(\(foo bar baz\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(There's a big difference, though. )Tj
/T1_2 1 Tf
(quote)Tj
/T1_0 1 Tf
( constructs an s-expression at compile time, when the procedure )Tj
0 -1.205 TD
(containing the )Tj
/T1_2 1 Tf
(quote)Tj
/T1_0 1 Tf
( expression is compiled.)Tj
ET
0.701 w 
268.609 483.084 m
291.766 483.084 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 268.6088 485.1861 Tm
(\(11\))Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
( constructs an s-expression at )Tj
/T1_3 1 Tf
(run time)Tj
/T1_0 1 Tf
(, )Tj
-18.61 -1.348 Td
(when the )Tj
/T1_2 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
( form is executed. This allows Scheme to "customize" a data structure, s\o that )Tj
T*
(you actually get a )Tj
/T1_3 1 Tf
(different)Tj
/T1_0 1 Tf
( data structure each time you execute the same )Tj
/T1_2 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
( form. You can )Tj
0 -1.205 TD
(use the )Tj
/T1_2 1 Tf
(unquote)Tj
/T1_0 1 Tf
( operator to specify which parts should be customized. )Tj
0 -2.557 TD
(For example, suppose you want to write a procedure that creates a three-\element list whose first and last )Tj
0 -1.205 TD
(elements are the literal symbols )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(baz)Tj
/T1_0 1 Tf
(, but whose middle element is the )Tj
/T1_2 1 Tf
(value)Tj
/T1_0 1 Tf
( of the variable )Tj
/T1_2 1 Tf
0 -1.205 TD
(bar)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Try this in your scheme system: )Tj
/T1_2 1 Tf
0 -2.562 TD
(Scheme>\(define bar 2\))Tj
0 -1.2 TD
(baz)Tj
T*
(Scheme>\(quasiquote \(foo \(unquote bar\) baz\)\))Tj
T*
(\(foo 2 baz\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Without )Tj
/T1_2 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(unquote)Tj
/T1_0 1 Tf
(, you could get the same effect by replacing )Tj
/T1_2 1 Tf
(\(quasiquote )Tj
0 -1.205 TD
(\(foo \(unquote bar\) baz\)\))Tj
/T1_0 1 Tf
( with )Tj
/T1_2 1 Tf
(\(list \(quote foo\) bar \(quote baz\)\))Tj
/T1_0 1 Tf
(, or the )Tj
0 -1.205 TD
(equivalent sugared form )Tj
/T1_2 1 Tf
(\(list 'quote foo 'baz\))Tj
/T1_0 1 Tf
(. For this simple example, that's probably at )Tj
T*
(least as clear, because the use of )Tj
/T1_2 1 Tf
(\(quasiquote ...\))Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(\(unquote ...\))Tj
/T1_0 1 Tf
( is rather clunky. )Tj
0 -2.557 TD
(To make it easier to write quasiquoted expressions, Scheme provides a li\ttle syntactic sugar. Just as you )Tj
0 -1.205 TD
(can use a single quote character and write )Tj
/T1_2 1 Tf
('\(foo bar baz\))Tj
/T1_0 1 Tf
( instead of )Tj
/T1_2 1 Tf
(\(quote \(foo bar baz\))Tj
/T1_0 1 Tf
(, )Tj
T*
(you can use a )Tj
/T1_3 1 Tf
(backquote)Tj
/T1_0 1 Tf
( character \()Tj
/T1_2 1 Tf
(`)Tj
/T1_0 1 Tf
(\) to replace )Tj
/T1_2 1 Tf
(\(quote ...\))Tj
/T1_0 1 Tf
( and a )Tj
/T1_3 1 Tf
(comma)Tj
/T1_0 1 Tf
( character \()Tj
/T1_2 1 Tf
(,)Tj
/T1_0 1 Tf
(\) to replace )Tj
/T1_2 1 Tf
0 -1.205 TD
(\(unquote ...\))Tj
/T1_0 1 Tf
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.0642 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.9358 0 0 8.9358 18 7.2187 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_129.html \(1 of 4\)1\1/3/2006 9:11:48 PM)Tj
ET
EMC 

endstreamendobj5120 0 obj<</Length 3135>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.0642 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.9358 0 0 8.9358 18 780.2187 Tm
(An Introduction to Scheme and its Implementation - Quasiquote)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 9.9286 754.1185 Tm
(Now we can do this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme>`\(foo ,bar baz\))Tj
0 -1.2 TD
(\(foo 2 baz\))Tj
/T1_0 1 Tf
0 -2.552 TD
(This is much clearer. Intuitively, the backquote character means "constr\uct an s-expresson of the )Tj
0 -1.2 TD
(following \(literal\) form, except where commas appear," and the comma c\haracter means "use the )Tj
/T1_2 1 Tf
(value)Tj
/T1_0 1 Tf
( of )Tj
T*
(the following expression here, instead of using it literally." )Tj
0 -2.562 TD
(Now you can see why it's called )Tj
/T1_1 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
(---it's a way of writing "mostly quoted" expressions, )Tj
0 -1.2 TD
(instead of pure literals. You can turn quoting off where you want to. Th\is is particularly useful in )Tj
T*
(constructing s-expressions that are in fact )Tj
/T1_2 1 Tf
(mostly)Tj
/T1_0 1 Tf
( literal, especially if they're complicated. )Tj
0 -2.557 TD
(For a simple example, suppose you want to write a procedure that constru\cts a greeting to print to a user. )Tj
0 -1.2 TD
(The greeting is always mostly the same, but includes the current day of \the week: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme> \(define day-of-week 'Sunday\))Tj
0 -1.2 TD
(day-of-week)Tj
0 -2.4 TD
(Scheme> \(define \(make-greeting\))Tj
0 -1.2 TD
(           `\(Welcome to the FooBar system!  We hope you)Tj
T*
(             enjoy your visit on this fine ,day-of-week\)\)\))Tj
T*
(greet)Tj
0 -2.557 TD
(Scheme>\(make-greeting\))Tj
0 -1.2 TD
(\(Welcome to the FooBar system! We hope you enjoy your visit on this)Tj
T*
(fine Sunday\))Tj
0 -2.4 TD
(Scheme>\(set! day-of-week 'Monday\))Tj
0 -1.2 TD
(day-of-week)Tj
0 -2.4 TD
(Scheme>\(make-greeting\))Tj
0 -1.2 TD
(\(Welcome to the FooBar system! We hope you enjoy your visit on this)Tj
T*
(fine Monday\))Tj
/T1_0 1 Tf
0 -2.552 TD
(You may have notice that this is somewhat similar to formatted output in\ other languages you've used, )Tj
0 -1.205 TD
(like C. \(C's )Tj
/T1_1 1 Tf
(printf)Tj
/T1_0 1 Tf
( procedure takes a string that is \(mostly\) quoted, but has special esc\ape characters in )Tj
T*
(it to tell where to substitute the printed representation of runtime val\ues. For example, if )Tj
/T1_1 1 Tf
(day_of_week)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(holds a pointer to the string )Tj
/T1_1 1 Tf
("Sunday")Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(printf\("Welcome. It's %s.", day_of_week\))Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(prints ")Tj
/T1_1 1 Tf
(Welcome. It's Sunday.)Tj
/T1_0 1 Tf
("\) )Tj
0 -2.557 TD
(The nice thing about Scheme quasiquotation is that it works on normal da\ta structures. For example, )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.0642 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.9358 0 0 8.9358 18 7.2187 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_129.html \(2 of 4\)1\1/3/2006 9:11:48 PM)Tj
ET
EMC 

endstreamendobj5121 0 obj<</Length 3085>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.0642 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.9358 0 0 8.9358 18 780.2187 Tm
(An Introduction to Scheme and its Implementation - Quasiquote)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 9.9286 754.1185 Tm
(suppose you want to write a routine that creates an association list wit\h several literal elements, and a )Tj
0 -1.2 TD
(several customized ones. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(create-shipping-employee-association name\))Tj
0 -1.2 TD
(  `\(\(name ,name\))Tj
T*
(    \(employee-id-no ,\(get-next-employee-id!\)\))Tj
0 -1.2 TD
(    \(department shipping\))Tj
0 -1.2 TD
(    \(hire-date ,\(get-day\) ,\(get-month\) ,\(get-year\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Notice that here that most of the unquoted expressions are calls to pr\ocedures, whose return values will )Tj
0 -1.2 TD
(be used. We can fill the holes in our templates with anything we want, n\ot just variable values.\) )Tj
0 -2.562 TD
(Depending on the value of the variable the values returned by the proced\ure calls, )Tj
/T1_1 1 Tf
(\(new-shipping-)Tj
0 -1.205 TD
(employee-alist "Philboyd Studge"\))Tj
/T1_0 1 Tf
( will return something like )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(\(name "Philboyd Studge"\))Tj
0 -1.2 TD
( \(employee-id-no 6357\))Tj
T*
( \(department shipping\))Tj
T*
( \(hire-date 18 August 1997\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Here it should be clear that )Tj
/T1_1 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
( has let us write out a stereotyped data structure, and )Tj
/T1_1 1 Tf
0 -1.205 TD
(unquote)Tj
/T1_0 1 Tf
( lets us fill in the varying parts. More complicated examples would be m\ake this benefit )Tj
0 -1.2 TD
(clearer, but I'll leave them to your imagination. )Tj
ET
0 0 1 RG
0.808 w 10 M 0 j 0 J []0 d 
9.929 336.084 m
163.899 336.084 l
S
0 0 1 rg
BT
/T1_2 1 Tf
16.0385 0 0 16.0385 9.9286 338.5093 Tm
(unquote-splicing)Tj
0 0 0 rg
/T1_0 1 Tf
13.9001 0 0 13.9001 9.9286 300.2599 Tm
(Scheme provides a variant of )Tj
/T1_1 1 Tf
(unquote)Tj
/T1_0 1 Tf
( for use when you want to merge an unquoted list into a literal )Tj
T*
(list, rather than nesting it. )Tj
0 -2.557 TD
(For example, suppose you want to embed a phrase in a sentence, where the\ phrase is a list of symbols, )Tj
0 -1.2 TD
(and the sentence is a list of symbols. )Tj
0 -2.557 TD
(If you tried this with unquote, you'd get a nested list, rather than jus\t a list of symbols: )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme> \(define phrase-of-the-day '\(the Lord helps those who take a bi\g)Tj
0 -1.2 TD
(                            helping for themselves\)\))Tj
T*
(phrase-of-the-day)Tj
0 -2.4 TD
(Scheme> `\(Remember that ,phrase-of-the-day\))Tj
0 -1.2 TD
(\(Remember that \(the Lord helps those who take a big helping for)Tj
T*
(themselves\)\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.0642 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.9358 0 0 8.9358 18 7.2187 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_129.html \(3 of 4\)1\1/3/2006 9:11:48 PM)Tj
ET
EMC 

endstreamendobj5122 0 obj<</Length 2118>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.0642 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.9358 0 0 8.9358 18 780.2187 Tm
(An Introduction to Scheme and its Implementation - Quasiquote)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 9.9286 754.0516 Tm
(Rather than using )Tj
/T1_1 1 Tf
(,)Tj
/T1_2 1 Tf
(expr)Tj
/T1_1 1 Tf
(\))Tj
/T1_0 1 Tf
(, we can use use )Tj
/T1_1 1 Tf
(\(unquote-splicing )Tj
/T1_2 1 Tf
(expr)Tj
/T1_1 1 Tf
(\))Tj
/T1_0 1 Tf
(, or the syntactically sugared )Tj
0 -1.205 TD
(form, )Tj
/T1_1 1 Tf
(,@)Tj
/T1_2 1 Tf
(expr)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(Scheme> `\(And remember that ,@phrase of the day\))Tj
0 -1.2 TD
(\(And remember that the Lord helps those who take a big helping for)Tj
T*
(themselves\))Tj
ET
0.5 0.5 0.5 rg
9.929 635.858 m
9.929 637.844 l
602.071 637.844 l
601.079 636.851 l
10.921 636.851 l
10.921 636.851 l
h
f
0.875 0.875 0.875 rg
602.071 637.844 m
602.071 635.858 l
9.929 635.858 l
10.921 636.851 l
601.079 636.851 l
601.079 636.851 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 9.9286 616.9697 Tm
(Go to the )Tj
ET
0 0 1 RG
0.701 w 10 M 0 j 0 J []0 d 
65.14 614.868 m
87.533 614.868 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 65.1397 616.9697 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
94.483 614.868 m
142.355 614.868 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 94.4827 616.9697 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
149.305 614.868 m
173.24 614.868 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 149.3046 616.9697 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
180.191 614.868 m
199.498 614.868 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 180.1905 616.9697 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
249.302 614.868 m
341.181 614.868 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.9001 0 0 13.9001 249.3016 616.9697 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.0642 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.9358 0 0 8.9358 18 7.2187 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_129.html \(4 of 4\)1\1/3/2006 9:11:48 PM)Tj
ET
EMC 

endstreamendobj5123 0 obj(An Introduction to Scheme and its Implementation - Quasiquote)endobj5124 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_129.html)/S 700 0 R>>endobj5125 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_129.html)endobj5126 0 obj(é+Ï|Ÿ"géü&t<ùæ)endobj5127 0 obj<</TS(D:20061104051148)/ID 5126 0 R/CT(text/html)/O[5090 0 R 5102 0 R 5104 0 R 5110 0 R]/S/SPS/T 5123 0 R/TID 5129 0 R/SI 5128 0 R>>endobj5128 0 obj<</TS(D:20061104051148)/AU 5125 0 R>>endobj5129 0 obj(MU]LßÇ∞W¸–˜É™ù)endobj5130 0 obj<</Parent 710 0 R/Next 5285 0 R/Dest[5090 0 R/XYZ 0 792 null]/Prev 5087 0 R/SE 5089 0 R/Title(An Introduction to Scheme and its Implementation - Quasiquote)>>endobj5131 0 obj<</TextDecorationType/Underline/O/Layout>>endobj5132 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 5145 0 R/Type/MCR>><</MCID 0/Pg 5147 0 R/Type/MCR>><</MCID 0/Pg 5149 0 R/Type/MCR>><</MCID 0/Pg 5152 0 R/Type/MCR>><</MCID 0/Pg 5154 0 R/Type/MCR>><</MCID 0/Pg 5156 0 R/Type/MCR>><</MCID 0/Pg 5158 0 R/Type/MCR>><</MCID 0/Pg 5165 0 R/Type/MCR>><</MCID 0/Pg 5168 0 R/Type/MCR>><</MCID 0/Pg 5173 0 R/Type/MCR>><</MCID 0/Pg 5183 0 R/Type/MCR>><</MCID 0/Pg 5189 0 R/Type/MCR>><</MCID 0/Pg 5192 0 R/Type/MCR>><</MCID 0/Pg 5199 0 R/Type/MCR>><</MCID 0/Pg 5205 0 R/Type/MCR>><</MCID 0/Pg 5211 0 R/Type/MCR>><</MCID 0/Pg 5223 0 R/Type/MCR>><</MCID 0/Pg 5229 0 R/Type/MCR>><</MCID 0/Pg 5236 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 5133 0 R>>endobj5133 0 obj<</Annots 5136 0 R/Parent 5150 0 R/ID 5281 0 R/StructParents 301/Contents 5258 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5134 0 obj[5132 0 R]endobj5135 0 obj<</Rect[61.7725 751.026 83.0079 765.15]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5136 0 obj[5135 0 R 5137 0 R 5138 0 R 5139 0 R 5140 0 R 5142 0 R 5144 0 R]endobj5137 0 obj<</Rect[89.5987 751.026 134.996 765.15]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5090 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_129.html)/S/URI>>/Border[0 0 0]>>endobj5138 0 obj<</Rect[141.587 751.026 164.285 765.15]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5288 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_131.html)/S/URI>>/Border[0 0 0]>>endobj5139 0 obj<</Rect[170.876 751.026 189.185 765.15]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5140 0 obj<</Rect[236.415 751.026 323.545 765.15]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5141 0 obj[5133 0 R/XYZ 0 733.702 null]endobj5142 0 obj<</Rect[9.41539 694.795 254.86 713.988]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC183)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC183)/S/URI>>/Border[0 0 0]>>endobj5143 0 obj[5133 0 R/XYZ 0 72.3076 null]endobj5144 0 obj<</Rect[9.41539 54.6357 175.944 70.7867]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC184)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC184)/S/URI>>/Border[0 0 0]>>endobj5145 0 obj<</Parent 5150 0 R/ID 5281 0 R/StructParents 302/Contents 5259 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5146 0 obj[5132 0 R]endobj5147 0 obj<</Parent 5150 0 R/ID 5281 0 R/StructParents 303/Contents 5260 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5148 0 obj[5132 0 R]endobj5149 0 obj<</Parent 5166 0 R/ID 5281 0 R/StructParents 304/Contents 5261 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5150 0 obj<</Parent 5362 0 R/Count 5/Type/Pages/Kids[5104 0 R 5110 0 R 5133 0 R 5145 0 R 5147 0 R]>>endobj5151 0 obj[5132 0 R]endobj5152 0 obj<</Parent 5166 0 R/ID 5281 0 R/StructParents 305/Contents 5262 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5153 0 obj[5132 0 R]endobj5154 0 obj<</Parent 5166 0 R/ID 5281 0 R/StructParents 306/Contents 5263 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5155 0 obj[5132 0 R]endobj5156 0 obj<</Parent 5166 0 R/ID 5281 0 R/StructParents 307/Contents 5264 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5157 0 obj[5132 0 R]endobj5158 0 obj<</Annots 5162 0 R/Parent 5166 0 R/ID 5281 0 R/StructParents 308/Contents 5265 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 736 0 R/T1_4 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5159 0 obj[5132 0 R]endobj5160 0 obj[5158 0 R/XYZ 0 472.523 null]endobj5161 0 obj<</Rect[9.41539 451.505 381.652 470.698]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC185)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC185)/S/URI>>/Border[0 0 0]>>endobj5162 0 obj[5161 0 R 5164 0 R]endobj5163 0 obj[5158 0 R/XYZ 0 299.91 null]endobj5164 0 obj<</Rect[9.41539 282.238 36.7924 298.389]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC186)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC186)/S/URI>>/Border[0 0 0]>>endobj5165 0 obj<</Parent 5193 0 R/ID 5281 0 R/StructParents 309/Contents 5266 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5166 0 obj<</Parent 5362 0 R/Count 5/Type/Pages/Kids[5149 0 R 5152 0 R 5154 0 R 5156 0 R 5158 0 R]>>endobj5167 0 obj[5132 0 R]endobj5168 0 obj<</Annots 5172 0 R/Parent 5193 0 R/ID 5281 0 R/StructParents 310/Contents 5267 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5169 0 obj[5132 0 R]endobj5170 0 obj[5168 0 R/XYZ 0 356.518 null]endobj5171 0 obj<</Rect[9.41539 338.846 45.9181 354.997]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC187)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC187)/S/URI>>/Border[0 0 0]>>endobj5172 0 obj[5171 0 R]endobj5173 0 obj<</Annots 5178 0 R/Parent 5193 0 R/ID 5281 0 R/StructParents 311/Contents 5269 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 1287 0 R/T1_3 736 0 R/T1_4 766 0 R/T1_5 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5174 0 obj<</Length 4641>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.1815 0 0 13.1815 9.4154 755.1462 Tm
(Go to the )Tj
ET
0 0 1 RG
0.664 w 10 M 0 j 0 J []0 d 
61.772 753.153 m
83.008 753.153 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 61.7725 755.1462 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
89.599 753.153 m
134.996 753.153 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 89.5987 755.1462 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
141.587 753.153 m
164.285 753.153 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 141.5867 755.1462 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
170.876 753.153 m
189.185 753.153 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 170.8761 755.1462 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
236.415 753.153 m
323.545 753.153 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 236.4147 755.1462 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
9.415 740.293 m
9.415 742.176 l
602.585 742.176 l
601.643 741.234 l
10.357 741.234 l
10.357 741.234 l
h
f
0.875 0.875 0.875 rg
602.585 742.176 m
602.585 740.293 l
9.415 740.293 l
10.357 741.234 l
601.643 741.234 l
601.643 741.234 l
h
f
1.533 w 
9.415 695.221 m
254.86 695.221 l
S
0 0 1 rg
BT
/T1_1 1 Tf
18.2514 0 0 18.2514 9.4154 699.8208 Tm
(Defining New Special Forms)Tj
0 0 0 rg
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 662.8175 Tm
(Sometimes we want to write stereotyped )Tj
/T1_2 1 Tf
(code)Tj
/T1_0 1 Tf
(, not just stereotyped data structures. As with data, we sometimes )Tj
0 -1.2 TD
(want part of our stereotyped piece of code to vary. We can do this with \)Tj
/T1_2 1 Tf
(syntax extensions)Tj
/T1_0 1 Tf
(, also known as )Tj
T*
(macros. )Tj
0 -2.557 TD
(\(If you're familiar with macros from C, don't scoff. Macros in C are st\unningly lame and hard to use compared )Tj
0 -1.2 TD
(to Lisp or Scheme macros. Read on to find out what you've been missing. \If you're familiar with Lisp macros, )Tj
T*
(but have never done advanced programming with them, you probably don't r\ealize how powerful they are--Lisp )Tj
0 -1.2 TD
(macros are so error-prone that people often avoid them. Scheme macros ar\e very powerful, but automate away )Tj
0 -1.2 TD
(some of the tricky parts.\) )Tj
0 -2.557 TD
(Macros are syntax extensions to a programming language, expressed as a t\ranslation of expressions. By writing )Tj
0 -1.2 TD
(a macro, what you're really doing is extending the functionality of the \compiler or interpreter--you're telling it )Tj
T*
(how to compile \(or interpret\) a new construct, by telling it how to re\write that construct into something it )Tj
T*
(already knows how to compile or interpret. )Tj
0 -2.557 TD
(\(Conceptually, defining a macro is extending the compiler--you're telli\ng the parser how to recognize a new )Tj
0 -1.2 TD
(construct, to change the grammar of the language, and also specifying ho\w to generate code for the new )Tj
0 -1.2 TD
(construct. This is something you can't do in most languages, but it's ea\sy in Scheme.\) )Tj
0 -2.557 TD
(Scheme recognizes macro definitions, and then uses them to recognize and\ translate the new constructs into )Tj
0 -1.2 TD
(other constructs. The interpreter or compiler's process of translating a\ level constructs is often called "macro )Tj
T*
(expansion," despite the fact that the resulting expression may not be bi\gger than the original expression. )Tj
T*
(Macroexpansion can be recursive, because macros can use macros, and a ma\cro can even use itself, like a )Tj
T*
(recursive procedure. )Tj
0 -2.557 TD
(Syntax extension is powerful, and hence somewhat dangerous when used too\ casually. Be aware that when you )Tj
0 -1.2 TD
(write a macro, you can change the syntax of your programming language, a\nd that )Tj
/T1_2 1 Tf
(can)Tj
/T1_0 1 Tf
( be a bad thing--you and )Tj
0 -1.2 TD
(others may no longer be able to easily understand what the program does.\ Used judiciously, however, such )Tj
T*
(syntactic extensions are often just what you need to simplify your progr\ams. They are especially useful for )Tj
T*
(writing programs that write programs, so that you can avoid a lot of ted\ious repetitive coding. )Tj
0 -2.557 TD
(Macros are so useful that they're usually used in the implementation of \Scheme itself. Most Scheme compilers )Tj
0 -1.2 TD
(actually understand only a few special forms, and the rest are written a\s macros. )Tj
0 -2.557 TD
(In a later chapter, I'll describe some advanced uses of macros, which le\t your "roll your own" language with )Tj
0 -1.2 TD
(powerful new features. )Tj
ET
1.278 w 
9.415 55.148 m
175.944 55.148 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.2095 0 0 15.2095 9.4154 58.9808 Tm
(Macros vs. Procedures)Tj
ET
EMC 
Q

endstreamendobj5175 0 obj[5132 0 R]endobj5176 0 obj[5173 0 R/XYZ 0 635.528 null]endobj5177 0 obj<</Rect[9.41539 617.856 45.9181 634.007]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC188)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC188)/S/URI>>/Border[0 0 0]>>endobj5178 0 obj[5177 0 R 5180 0 R 5182 0 R]endobj5179 0 obj[5173 0 R/XYZ 0 597.505 null]endobj5180 0 obj<</Rect[9.41539 579.833 90.5579 595.984]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC189)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC189)/S/URI>>/Border[0 0 0]>>endobj5181 0 obj[5173 0 R/XYZ 0 460.368 null]endobj5182 0 obj<</Rect[9.41539 439.35 163.585 458.543]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC190)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC190)/S/URI>>/Border[0 0 0]>>endobj5183 0 obj<</Annots 5188 0 R/Parent 5193 0 R/ID 5281 0 R/StructParents 312/Contents 5270 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5184 0 obj<</Length 3536>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.1815 0 0 13.1815 9.4154 754.4825 Tm
(Why do we want macros? In Scheme, the main code abstraction mechanism is\ procedural abstraction, e.g. )Tj
0 -1.205 TD
(using )Tj
/T1_1 1 Tf
(define)Tj
/T1_0 1 Tf
( or )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( to write procedures that do stereotyped things. In a sense, we "special\ize" )Tj
0 -1.2 TD
(procedures by passing them argument values--a procedure can do different\ things depending on the values it's )Tj
0 -1.2 TD
(given to work with. We can also "specialize" procedures by creating clos\ures in different environments. Isn't )Tj
0 -1.2 TD
(this enough? )Tj
0 -2.557 TD
(Not in general. While procedural abstraction is very powerful, there are\ times when we may want to write )Tj
0 -1.2 TD
(stereotyped routines that can't be written as procedures. )Tj
0 -2.562 TD
(Suppose, for example, you have a Scheme system which gives you things li\ke )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(, but not )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
(. \(Real )Tj
0 -1.205 TD
(Schemes all provide )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
(, but pretend they don't. It makes a nice, simple example.\) )Tj
0 -2.562 TD
(You want an )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( construct \(rather like the one actually built into Scheme\). This )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( can take two arguments; it )Tj
0 -1.2 TD
(evaluates the first one and returns the result if it's a true value, oth\erwise it evaluates the second one and returns )Tj
T*
(that result. )Tj
0 -2.562 TD
(Notice that you can't write )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( as a procedure. If )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( were a procedure, both of its arguments would always be )Tj
0 -1.205 TD
(evaluated )Tj
/T1_2 1 Tf
(before)Tj
/T1_0 1 Tf
( the actual procedure call. Since )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( is only supposed to evaluate its second argument if the )Tj
0 -1.205 TD
(first one returns )Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
(, it just wouldn't work. )Tj
0 -2.562 TD
(If Scheme didn't have )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
(, you could fake it at any given point in your program, by writing an eq\uivalent )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(expression with an )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( statement in it. )Tj
0 -2.562 TD
(For example, suppose you wanted to write the equivalent of )Tj
/T1_1 1 Tf
(\(or \(foo?\) \(bar?\)\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(As a first try, you might do this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(if \(foo?\))Tj
0 -1.2 TD
(    \(foo?\))Tj
T*
(    \(bar?\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(That is, test )Tj
/T1_1 1 Tf
(\(foo?\))Tj
/T1_0 1 Tf
(, and return its value if it's a true value. That's not really quite rig\ht though, because this if )Tj
0 -1.205 TD
(statement evaluates )Tj
/T1_1 1 Tf
(foo?)Tj
/T1_0 1 Tf
( twice: once to test it, and once to return it. )Tj
0 -2.562 TD
(We really only want to evaluate it once--if )Tj
/T1_1 1 Tf
(\(foo?\))Tj
/T1_0 1 Tf
( is an expression with side effects, evaluating it twice could )Tj
0 -1.2 TD
(make the program incorrect as well as inefficient. )Tj
0 -2.557 TD
(To avoid this, we can always evaluate the first expression just once to \get the value, and store that value in a )Tj
0 -1.2 TD
(temporary variable so that we can return it without evaluating it again:\ )Tj
0 -2.557 TD
(You could instead write )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(temp \(foo?\)\)\))Tj
0 -1.2 TD
(   \(if temp)Tj
ET
EMC 
Q

endstreamendobj5185 0 obj[5183 0 R/XYZ 0 750.498 null]endobj5186 0 obj[5132 0 R]endobj5187 0 obj<</Rect[9.41539 732.826 212.264 748.977]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC191)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC191)/S/URI>>/Border[0 0 0]>>endobj5188 0 obj[5187 0 R]endobj5189 0 obj<</Parent 5193 0 R/ID 5281 0 R/StructParents 313/Contents 5271 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 737 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5190 0 obj<</Length 4032>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.1815 0 0 13.1815 9.4154 755.0828 Tm
(       temp)Tj
0 -1.2 TD
(       \(bar?\)\)\))Tj
/T1_1 1 Tf
0 -2.557 TD
(This )Tj
/T1_0 1 Tf
(let)Tj
/T1_1 1 Tf
( expression gives the same effect as )Tj
/T1_0 1 Tf
(\(or \(foo?\) \(bar?\)\))Tj
/T1_1 1 Tf
(, because it evaluates )Tj
/T1_0 1 Tf
(foo)Tj
/T1_1 1 Tf
( exactly )Tj
0 -1.205 TD
(once, and then tests the value; if the value is true, it returns that va\lue. \(The use of a )Tj
/T1_0 1 Tf
(let)Tj
/T1_1 1 Tf
( variable to stash the )Tj
0 -1.205 TD
(value allows us to test it without evaluating )Tj
/T1_0 1 Tf
(\(foo?\))Tj
/T1_1 1 Tf
( again.\) If the value is )Tj
/T1_0 1 Tf
(#f)Tj
/T1_1 1 Tf
(, it evaluates )Tj
/T1_0 1 Tf
(\(bar?\))Tj
/T1_1 1 Tf
( and )Tj
0 -1.2 TD
(returns the result. )Tj
0 -2.562 TD
(This is the transformation we'd like to be able to automate by defining \)Tj
/T1_0 1 Tf
(or)Tj
/T1_1 1 Tf
( as a macro. )Tj
T*
(Here's a simple version of )Tj
/T1_0 1 Tf
(or)Tj
/T1_1 1 Tf
( written as a macro. I've called it )Tj
/T1_0 1 Tf
(or2)Tj
/T1_1 1 Tf
( to distinguish it from Scheme's normal )Tj
/T1_0 1 Tf
(or)Tj
/T1_1 1 Tf
(. )Tj
/T1_0 1 Tf
T*
(\(define-syntax or2)Tj
0 -1.2 TD
(   \(syntax-rules \(\))Tj
T*
(      \(\(or2 a b\)        ; pattern)Tj
T*
(       \(let \(\(temp a\)\) ; template)Tj
T*
(          \(if temp)Tj
T*
(              temp)Tj
T*
(              b\)\)\)\)\))Tj
/T1_1 1 Tf
0 -2.557 TD
(What we're saying to Scheme is that we want to define the syntax of )Tj
/T1_0 1 Tf
(or)Tj
/T1_1 1 Tf
( by giving )Tj
/T1_2 1 Tf
(syntax rules)Tj
/T1_1 1 Tf
( for recognizing )Tj
0 -1.205 TD
(it and translating it. For this simple version of )Tj
/T1_0 1 Tf
(or)Tj
/T1_1 1 Tf
(, we only need one rule, which says to translate )Tj
/T1_0 1 Tf
(\(or )Tj
/T1_2 1 Tf
(a b)Tj
/T1_0 1 Tf
(\))Tj
/T1_1 1 Tf
( )Tj
0 -1.205 TD
(into the desired )Tj
/T1_0 1 Tf
(let)Tj
/T1_1 1 Tf
( expression. )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(or a b\))Tj
/T1_1 1 Tf
( is called the rule's )Tj
/T1_2 1 Tf
(pattern)Tj
/T1_1 1 Tf
(, which specifies what counts as a call to the )Tj
/T1_0 1 Tf
(or)Tj
/T1_1 1 Tf
( macro, and the )Tj
/T1_0 1 Tf
(let)Tj
/T1_1 1 Tf
( )Tj
0 -1.2 TD
(expression is the rule's )Tj
/T1_2 1 Tf
(template)Tj
/T1_1 1 Tf
(, which specifies the equivalent code that Scheme should translate calls\ into. )Tj
0 -1.205 TD
(The variables )Tj
/T1_0 1 Tf
(a)Tj
/T1_1 1 Tf
( and )Tj
/T1_0 1 Tf
(b)Tj
/T1_1 1 Tf
( are called )Tj
/T1_2 1 Tf
(pattern variables)Tj
/T1_1 1 Tf
(. They stand for the actual expressions passed as arguments )Tj
0 -1.2 TD
(to the macro. They are "matched" to the actual expressions when the patt\ern is recognized, and when the )Tj
T*
(template is interpreted or compiled, the actual expressions are used whe\re the pattern variables occur. )Tj
0 -2.557 TD
(You can think of this in two steps. When a macro is used, )Tj
1.607 -2.557 Td
(1.  )Tj
(the template is copied, except that the pattern variables are replaced w\ith the macro's argument )Tj
1.25 -1.2 Td
(expressions, )Tj
-1.25 -1.2 Td
(2.  )Tj
(the result is interpreted \(or compiled\) in place of the call expressio\n. )Tj
-1.607 -2.557 Td
(\(It's really not quite this simple, but that's the basic idea.\) )Tj
0 -2.557 TD
(In some ways, macro arguments are a lot like procedure arguments, but in\ other ways they're very different. )Tj
0 -1.2 TD
(The pattern variables are )Tj
/T1_2 1 Tf
(not)Tj
/T1_1 1 Tf
( bound at run time, and don't refer to storage locations. They're only u\sed in )Tj
T*
(translating a macro call into the equivalent expression. )Tj
0 -2.557 TD
(Always remember that arguments to a macro are )Tj
/T1_2 1 Tf
(expressions)Tj
/T1_1 1 Tf
( used in transforming the code, and )Tj
/T1_2 1 Tf
(then)Tj
/T1_1 1 Tf
( the code )Tj
0 -1.205 TD
(is executed. \(For example, the output of the )Tj
/T1_0 1 Tf
(or)Tj
/T1_1 1 Tf
( macro doesn't contain a variable named )Tj
/T1_0 1 Tf
(a)Tj
/T1_1 1 Tf
(; )Tj
/T1_0 1 Tf
(a)Tj
/T1_1 1 Tf
( is just a shorthand )Tj
ET
EMC 
Q

endstreamendobj5191 0 obj[5132 0 R]endobj5192 0 obj<</Annots 5198 0 R/Parent 5230 0 R/ID 5281 0 R/StructParents 314/Contents 5272 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5193 0 obj<</Parent 5362 0 R/Count 5/Type/Pages/Kids[5165 0 R 5168 0 R 5173 0 R 5183 0 R 5189 0 R]>>endobj5194 0 obj<</Length 3154>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.1815 0 0 13.1815 9.4154 755.0828 Tm
(for whatever expression is passed as an argument to the macro. In the ex\ample use )Tj
/T1_1 1 Tf
(\(or \(foo?\) \(bar?\)\))Tj
/T1_0 1 Tf
(, )Tj
0 -1.205 TD
(the expression )Tj
/T1_1 1 Tf
(\(foo?\))Tj
/T1_0 1 Tf
( is what gets evaluated at the point where )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( is used in the macro body.\) )Tj
0 -2.562 TD
(This is why our macro has to use a temporary variable, like the hand-wri\tten equivalent of )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
(. If we tried to )Tj
0 -1.2 TD
(write the macro like a procedure, without using a temporary variable, li\ke this )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-syntax or)Tj
0 -1.2 TD
(   \(syntax-rules \(\))Tj
T*
(      \(\(or a b\))Tj
T*
(       \(if a)Tj
T*
(           a)Tj
T*
(           b\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(then )Tj
/T1_1 1 Tf
(\(or \(foo?\) \(bar?\)\))Tj
/T1_0 1 Tf
( would be translated into )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(if \(foo?\))Tj
0 -1.2 TD
(    \(foo?\))Tj
0 -1.2 TD
(    \(bar?\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(As with the buggy handwritten version, )Tj
/T1_1 1 Tf
(\(foo?\))Tj
/T1_0 1 Tf
( would be evaluated twice when this expression was )Tj
0 -1.2 TD
(evaluated. )Tj
0 -2.557 TD
(\(This is the most common mistake in writing macros--forgetting that whi\le macros give you the ability to )Tj
0 -1.2 TD
(control when argument expressions are evaluated, they also )Tj
/T1_2 1 Tf
(require)Tj
/T1_0 1 Tf
( you to control it. It's safe to use a )Tj
T*
(procedure argument multiple times, because that's just referring to a va\lue in a run-time binding. Using a macro )Tj
T*
(argument causes evaluation of the entire argument expression at that poi\nt.\) )Tj
0 -2.562 TD
(We can make a better )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( by using more rules. We might want )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( to work with any number of arguments, so )Tj
0 -1.2 TD
(that )Tj
1.607 -2.562 Td
(1.  )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( of zero arguments returns )Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
(, because it has zero true arguments, )Tj
0 -1.205 TD
(2.  )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( of one argument is equivalent to that argument--it's true if and only i\f that argument is true. )Tj
0 -1.205 TD
(3.  )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( of two or more arguments evaluates its first argument, and returns its \value if it's true. Otherwise, it )Tj
1.25 -1.205 Td
(computes the )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( of the rest of its arguments, and returns its result. )Tj
-2.857 -2.557 Td
(Here's the Scheme definition with these three rules: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-syntax or)Tj
0 -1.2 TD
(   \(syntax-rules \(\))Tj
0 -1.2 TD
(      \(\(or\)             ; OR of zero arguments)Tj
0 -1.2 TD
(       #f\)              ;   is always false)Tj
T*
(      \(\(or a\)           ; OR of one argument)Tj
T*
(       a\)               ;   is equivalent to the argument expression)Tj
T*
(      \(\(or a b c ...\)   ; OR of two or more arguments )Tj
T*
(       \(let \(\(temp a\)\)  ;   is the first or the OR of the rest)Tj
ET
EMC 
Q

endstreamendobj5195 0 obj[5132 0 R]endobj5196 0 obj[5192 0 R/XYZ 0 732.761 null]endobj5197 0 obj<</Rect[9.41539 717.319 162.506 731.442]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC192)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC192)/S/URI>>/Border[0 0 0]>>endobj5198 0 obj[5197 0 R]endobj5199 0 obj<</Annots 5204 0 R/Parent 5230 0 R/ID 5281 0 R/StructParents 315/Contents 5273 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5200 0 obj<</Length 3946>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.1815 0 0 13.1815 9.4154 753.4513 Tm
(          \(if temp           )Tj
0 -1.2 TD
(              temp             )Tj
T*
(              \(or b c ...\)\)\)\)\)\) )Tj
/T1_1 1 Tf
0 -2.557 TD
(Notice that this definition is recursive. \(The third rule's template us\es the )Tj
/T1_0 1 Tf
(or)Tj
/T1_1 1 Tf
( macro recursively.\) If we hand )Tj
/T1_0 1 Tf
(or)Tj
/T1_1 1 Tf
( )Tj
0 -1.205 TD
(four arguments, like this: )Tj
/T1_0 1 Tf
(\(or foo bar baz quux\))Tj
/T1_1 1 Tf
(, it should be equivalent to )Tj
/T1_0 1 Tf
(\(or foo \(or bar )Tj
0 -1.205 TD
(\(or baz \(or quux\)\)\)\))Tj
/T1_1 1 Tf
(. )Tj
0 -2.557 TD
(Scheme will use recursion to translate the expression, one step at a tim\e. When Scheme encounters a macro )Tj
0 -1.2 TD
(call, it transforms the call into the equivalent code, using the appropr\iate rule. It then interprets \(or compiles\) )Tj
T*
(the resulting expression. If the result itself includes a macro call, th\en the interpreter \(or compiler\) calls itself )Tj
T*
(recursively to translate )Tj
/T1_2 1 Tf
(that)Tj
/T1_1 1 Tf
( before evaluating it. For a correctly written macro, the recursive tran\slation will )Tj
T*
(eventually "bottom out" when no more macro calls result, and the code wi\ll be evaluated in the usual way. )Tj
0 -2.557 TD
(\(As I'll show later, this fits in very neatly with the interpreter's or\ compiler's recursive evaluation of )Tj
0 -1.2 TD
(expressions.\) )Tj
0 -2.557 TD
(This recursion is recursion in Scheme's )Tj
/T1_2 1 Tf
(transformation)Tj
/T1_1 1 Tf
( of the call expression into equivalent code--it doesn't )Tj
0 -1.2 TD
(mean that the resulting code is recursive. A Scheme compiler will do all\ of the recursive transformation at )Tj
T*
(compile time, so there's no runtime overhead. Of course, the recursion h\as to terminate, or the compiler will not )Tj
T*
(be able to finish the translation. )Tj
0 -2.562 TD
(In this definition of )Tj
/T1_0 1 Tf
(or)Tj
/T1_1 1 Tf
(, the third rule contains the symbols )Tj
/T1_0 1 Tf
(c ...)Tj
/T1_1 1 Tf
(. The Scheme identifier )Tj
/T1_0 1 Tf
(...)Tj
/T1_1 1 Tf
( is treated )Tj
0 -1.205 TD
(specially, to help you write recursive rules. \(In previous examples, I \used )Tj
/T1_0 1 Tf
(...)Tj
/T1_1 1 Tf
( as an ellipsis to stand for code I )Tj
T*
(didn't want to write out, but here we're usuing the )Tj
/T1_2 1 Tf
(actual Scheme identifier)Tj
/T1_1 1 Tf
( )Tj
/T1_0 1 Tf
(...)Tj
/T1_1 1 Tf
(; it's actually used in the )Tj
0 -1.2 TD
(Scheme code for macros.\) )Tj
0 -2.562 TD
(Scheme treats a pattern variable followed by )Tj
/T1_0 1 Tf
(...)Tj
/T1_1 1 Tf
( as matching )Tj
/T1_0 1 Tf
(zero or more)Tj
/T1_1 1 Tf
( subexpressions. In this )Tj
/T1_0 1 Tf
(or)Tj
/T1_1 1 Tf
( )Tj
0 -1.205 TD
(macro, )Tj
/T1_0 1 Tf
(c ...)Tj
/T1_1 1 Tf
( matches )Tj
/T1_2 1 Tf
(all)Tj
/T1_1 1 Tf
( of the arguments after the first two. )Tj
0 -2.562 TD
(Scheme matches )Tj
/T1_0 1 Tf
(\(or foo bar baz quux\))Tj
/T1_1 1 Tf
( by the third rule, whose pattern )Tj
/T1_0 1 Tf
(\(or a b c ...\))Tj
/T1_1 1 Tf
(, because )Tj
0 -1.205 TD
(it has at least two arguments. In applying the rule, Scheme matches )Tj
/T1_0 1 Tf
(a)Tj
/T1_1 1 Tf
( to )Tj
/T1_0 1 Tf
(foo)Tj
/T1_1 1 Tf
(, )Tj
/T1_0 1 Tf
(b)Tj
/T1_1 1 Tf
( to )Tj
/T1_0 1 Tf
(bar)Tj
/T1_1 1 Tf
(, and )Tj
/T1_0 1 Tf
(c ...)Tj
/T1_1 1 Tf
( to the )Tj
/T1_2 1 Tf
T*
(sequence)Tj
/T1_1 1 Tf
( of expressions )Tj
/T1_0 1 Tf
(baz bleen)Tj
/T1_1 1 Tf
(. )Tj
0 -2.562 TD
([ This is similar to how you use )Tj
/T1_0 1 Tf
(unquote-splicing)Tj
/T1_1 1 Tf
( inside backquote--you can splice a list into a list at the )Tj
0 -1.2 TD
(same level, rather than nesting it. ] )Tj
0 -2.562 TD
(The result of processing this )Tj
/T1_0 1 Tf
(or)Tj
/T1_1 1 Tf
( is )Tj
/T1_0 1 Tf
T*
(\(let \(\(temp foo\)\))Tj
0 -1.2 TD
(      \(if temp)Tj
T*
(          temp)Tj
T*
(          \(or bar baz quux\)\)\))Tj
ET
EMC 
Q

endstreamendobj5201 0 obj[5132 0 R]endobj5202 0 obj[5199 0 R/XYZ 0 355.951 null]endobj5203 0 obj<</Rect[9.41539 340.51 218.171 354.633]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC193)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC193)/S/URI>>/Border[0 0 0]>>endobj5204 0 obj[5203 0 R]endobj5205 0 obj<</Annots 5210 0 R/Parent 5230 0 R/ID 5281 0 R/StructParents 316/Contents 5274 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5206 0 obj<</Length 2585>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.1815 0 0 13.1815 9.4154 755.1462 Tm
(Now Scheme evaluates this expression. )Tj
0 -2.562 TD
(But there's another )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( in there--when Scheme gets to )Tj
/T1_1 1 Tf
(\(or bar baz quux\))Tj
/T1_0 1 Tf
( it will match the third rule )Tj
0 -1.205 TD
(again, with )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( matched to )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
( matched to )Tj
/T1_1 1 Tf
(baz)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(c ...)Tj
/T1_0 1 Tf
( being matched to just )Tj
/T1_1 1 Tf
(quux)Tj
/T1_0 1 Tf
(. The result of this )Tj
0 -1.2 TD
(macro-processing step is )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(temp foo\)\))Tj
0 -1.2 TD
(   \(if temp)Tj
T*
(       temp)Tj
T*
(       \(let \(\(temp bar\)\))Tj
T*
(          \(if temp)Tj
T*
(              temp)Tj
T*
(              \(or baz quux\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(And the new let expression is evaluated. )Tj
0 -2.562 TD
(There )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( is again, so Scheme will treat )Tj
/T1_1 1 Tf
(\(or baz quux\))Tj
/T1_0 1 Tf
( the same way, again using the third rule--this time )Tj
0 -1.205 TD
(matching )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( to )Tj
/T1_1 1 Tf
(baz)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
( to )Tj
/T1_1 1 Tf
(quux)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(c ...)Tj
/T1_0 1 Tf
( to nothing at all, producing )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(temp foo\)\))Tj
0 -1.2 TD
(   \(if temp)Tj
T*
(       temp)Tj
T*
(       \(let \(\(temp bar\)\))Tj
T*
(          \(if temp)Tj
T*
(              temp)Tj
T*
(              \(let \(\(temp baz\))Tj
T*
(                 \(if temp)Tj
0 -1.2 TD
(                     temp)Tj
0 -1.2 TD
(                     \(or quux\)\)\)\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(And this will be evaluated. )Tj
0 -2.562 TD
(Now the resulting )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( matches the )Tj
/T1_2 1 Tf
(second)Tj
/T1_0 1 Tf
( rule in the )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( macro, because it has only one argument )Tj
/T1_1 1 Tf
(quux)Tj
/T1_0 1 Tf
(, which )Tj
0 -1.205 TD
(is matched to )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
(. The whole translation is therefore: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(temp foo\)\))Tj
0 -1.2 TD
(   \(if temp)Tj
T*
(       temp)Tj
T*
(       \(let \(\(temp bar\)\))Tj
T*
(          \(if temp)Tj
T*
(              temp)Tj
T*
(              \(let \(\(temp baz\))Tj
T*
(                 \(if temp)Tj
T*
(                     temp)Tj
T*
(                     quux\)\)\)\)\)\)\))Tj
ET
EMC 
Q

endstreamendobj5207 0 obj[5132 0 R]endobj5208 0 obj[5205 0 R/XYZ 0 488.961 null]endobj5209 0 obj<</Rect[9.41539 473.52 230.615 487.643]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC194)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC194)/S/URI>>/Border[0 0 0]>>endobj5210 0 obj[5209 0 R]endobj5211 0 obj<</Annots 5216 0 R/Parent 5230 0 R/ID 5281 0 R/StructParents 317/Contents 5275 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R/T1_3 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5212 0 obj<</Length 3506>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.1815 0 0 13.1815 9.4154 740.0221 Tm
(There are no more macro calls here, so the recursion terminates. )Tj
0 -2.562 TD
(You might have noticed that the example translation of )Tj
/T1_1 1 Tf
(\(or foo bar baz quux\))Tj
/T1_0 1 Tf
( has several different )Tj
0 -1.205 TD
(variables named )Tj
/T1_1 1 Tf
(temp)Tj
/T1_0 1 Tf
( in it. You might have wondered if this could cause problems--is there a\ potential for )Tj
0 -1.2 TD
(accidentally referring to the wrong variable in the wrong place in the c\ode generated by a macro? )Tj
0 -2.557 TD
(The answer no. Scheme's macro system actually does some magic to avoid t\his, which I'll discuss later in a )Tj
0 -1.2 TD
(later section. Scheme actually keeps track of which variables are introd\uced by different applications of )Tj
0 -1.205 TD
(macros, and keeps them distinct--the different variables named )Tj
/T1_1 1 Tf
(temp)Tj
/T1_0 1 Tf
( are treated as though they had different )Tj
0 -1.2 TD
(names, so that macros follow the same scope rules as procedures. \(Schem\e macros are said to be )Tj
/T1_2 1 Tf
(hygienic)Tj
/T1_0 1 Tf
(; what )Tj
T*
(that really means is that they respect lexical scope.\) )Tj
0 -2.557 TD
(You can think of this as a )Tj
/T1_2 1 Tf
(renaming)Tj
/T1_0 1 Tf
(, as though Scheme had sneakily changed the names each time the macro )Tj
0 -1.2 TD
(was applied to transform the expression, and the result were )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(temp_1 foo\)\))Tj
0 -1.2 TD
(   \(if temp_1)Tj
T*
(       temp_1)Tj
T*
(       \(let \(\(temp_2 bar\)\))Tj
0 -1.2 TD
(          \(if temp_2)Tj
0 -1.2 TD
(              temp_2)Tj
T*
(              \(let \(\(temp_3 baz\))Tj
T*
(                 \(if temp_3)Tj
T*
(                     temp_3)Tj
T*
(                     quux\)\)\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Scheme implements the same scoping rule for macros and their arguments a\s for procedures and their )Tj
0 -1.2 TD
(arguments. When you call a procedure, the argument expressions are evalu\ated at the call site, i.e., in the call )Tj
T*
(site environment, and the values are passed to the procedure--the enviro\nment inside the called procedure )Tj
T*
(doesn't affect the meaning of the argument expressions. Likewise )Tj
0 -2.562 TD
(In writing macros like )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
(, we want to control )Tj
/T1_2 1 Tf
(when)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(whether)Tj
/T1_0 1 Tf
( the arguments are evaluated, but otherwise we )Tj
0 -1.2 TD
(want them to mean the same thing they would if they were arguments to a \procedure. )Tj
0 -2.562 TD
(For example, suppose we call )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( with an argument expression that happens to use a name that's used insi\de )Tj
/T1_1 1 Tf
0 -1.205 TD
(or)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( uses a local variable named )Tj
/T1_1 1 Tf
(temp)Tj
/T1_0 1 Tf
(, and we might just happen to pass it an expression using the name )Tj
/T1_1 1 Tf
0 -1.205 TD
(temp)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Consider the following procedure, which uses local variables )Tj
/T1_1 1 Tf
(perm)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(temp)Tj
/T1_0 1 Tf
(, and calls )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( in their scope. )Tj
/T1_1 1 Tf
T*
(\(define \(employee? person\))Tj
0 -1.2 TD
(  \(let \(\(perm \(member person permanent-employees\)\))Tj
T*
(        \(temp \(member person temporary-employees\)\)\))Tj
T*
(     \(or perm temp\)\))Tj
ET
EMC 
Q

endstreamendobj5213 0 obj[5132 0 R]endobj5214 0 obj[5211 0 R/XYZ 0 376.229 null]endobj5215 0 obj<</Rect[9.41539 355.211 404.959 374.404]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC195)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC195)/S/URI>>/Border[0 0 0]>>endobj5216 0 obj[5215 0 R 5218 0 R 5220 0 R 5222 0 R]endobj5217 0 obj[5211 0 R/XYZ 0 334.555 null]endobj5218 0 obj<</Rect[9.41539 316.883 219.869 333.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC196)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC196)/S/URI>>/Border[0 0 0]>>endobj5219 0 obj[5211 0 R/XYZ 0 296.531 null]endobj5220 0 obj<</Rect[9.41539 278.669 303.156 295.01]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC197)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC197)/S/URI>>/Border[0 0 0]>>endobj5221 0 obj[5211 0 R/XYZ 0 159.204 null]endobj5222 0 obj<</Rect[9.41539 143.598 256.24 157.886]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC198)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC198)/S/URI>>/Border[0 0 0]>>endobj5223 0 obj<</Annots 5228 0 R/Parent 5230 0 R/ID 5281 0 R/StructParents 318/Contents 5276 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5224 0 obj<</Length 3712>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.1815 0 0 13.1815 9.4154 738.5175 Tm
(If we translated the or macro naively, without worrying about accidental\ naming conflicts, we'd get this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(employee? person\))Tj
0 -1.2 TD
(  \(let \(\(perm \(member person permanent-employees\)\))Tj
T*
(        \(temp \(member person temporary-employees\)\)\))Tj
T*
(     \(let \(\(temp perm\))Tj
T*
(        \(if temp)Tj
T*
(            temp)Tj
T*
(            temp\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(\(This is )Tj
/T1_2 1 Tf
(not)Tj
/T1_0 1 Tf
( what R5RS Scheme macros do!\) )Tj
0 -2.562 TD
(Note what's wrong here. The name )Tj
/T1_1 1 Tf
(temp)Tj
/T1_0 1 Tf
( was passed into the macro from the call site, but it appeared in the )Tj
0 -1.205 TD
(body of the macro inside the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( binding of )Tj
/T1_1 1 Tf
(temp)Tj
/T1_0 1 Tf
(. At the call site, it referred to the "outer" )Tj
/T1_1 1 Tf
(temp)Tj
/T1_0 1 Tf
(, but inside )Tj
0 -1.2 TD
(the macro, it turne out to refer to something else--in the process of mo\ving the expression around, we )Tj
T*
(accidentally changed its meaning. )Tj
ET
0 0 1 RG
1.533 w 10 M 0 j 0 J []0 d 
9.415 451.932 m
381.652 451.932 l
S
0 0 1 rg
BT
/T1_3 1 Tf
18.2514 0 0 18.2514 9.4154 456.5311 Tm
(Implementing More Scheme Special Forms)Tj
0 0 0 rg
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 419.4643 Tm
(As examples of Scheme macros, I'll show how to implement several special\ forms in terms of )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
(. This is )Tj
T*
(how most real Scheme compilers work--the compiler itself only "understan\ds" how to compile a few special )Tj
T*
(forms directly, but the others can be defined as macros. )Tj
0 -2.562 TD
(Traditionally, the compiler understands )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
(, and all other binding forms are implemented in terms of )Tj
/T1_1 1 Tf
0 -1.205 TD
(lambda)Tj
/T1_0 1 Tf
( and procedure calling. The compiler must also understand a few other sp\ecial forms, )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(set!)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
0 -1.205 TD
(quote)Tj
/T1_0 1 Tf
(, a simple version of )Tj
/T1_1 1 Tf
(define)Tj
/T1_0 1 Tf
( [ did I leave one out? ].\) )Tj
ET
0.767 w 
9.415 284.474 m
36.792 284.474 l
S
0 0 1 rg
BT
/T1_4 1 Tf
15.2095 0 0 15.2095 9.4154 286.7734 Tm
(let)Tj
0 0 0 rg
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 250.5013 Tm
(Recall that in chapter [ whatever ], I explained how the semantics of )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( can be explained in terms of )Tj
/T1_1 1 Tf
0 -1.205 TD
(lambda)Tj
/T1_0 1 Tf
(. For any )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( expression, which binds variables and evaluates body expressions in tha\t scope, there is )Tj
0 -1.205 TD
(an exactly equivalent expression using )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( and procedure calling. The )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( creates a procedure )Tj
0 -1.205 TD
(which will bind the variables as its argument variables, and execute the\ body of the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(. This )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( is then )Tj
0 -1.2 TD
(used in a combination--calling the procedure makes it bind variables whe\n it accepts arguments. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-syntax let \(\))Tj
0 -1.2 TD
(   \(syntax-rules)Tj
T*
(     \(\(_ \(\(var value-expr\) ...\) body-expr ...\)  ; pattern)Tj
T*
(      \(\(lambda \(var ...\))Tj
T*
(          body-expr ...\))Tj
T*
(       \(value-expr ...\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Here I've used an underscore to stand for the keyword )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( in the macro call pattern. This is allowable, and )Tj
ET
EMC 
Q

endstreamendobj5225 0 obj[5132 0 R]endobj5226 0 obj[5223 0 R/XYZ 0 716.943 null]endobj5227 0 obj<</Rect[9.41539 701.502 88.5046 715.625]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC199)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC199)/S/URI>>/Border[0 0 0]>>endobj5228 0 obj[5227 0 R]endobj5229 0 obj<</Annots 5235 0 R/Parent 5359 0 R/ID 5281 0 R/StructParents 319/Contents 5277 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5230 0 obj<</Parent 5362 0 R/Count 5/Type/Pages/Kids[5192 0 R 5199 0 R 5205 0 R 5211 0 R 5223 0 R]>>endobj5231 0 obj<</Length 3906>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.1815 0 0 13.1815 9.4154 755.1462 Tm
(recommended, because it avoids having to write the keyword in several pl\aces. \(If you had to write out the )Tj
0 -1.2 TD
(keyword in each pattern, it would make it more difficult and error-prone\ to change the name of a macro.\) )Tj
0 -2.562 TD
(I've also taken advantage of the fact that Scheme is pretty smart about \patterns using the )Tj
/T1_1 1 Tf
(...)Tj
/T1_0 1 Tf
( \(ellipsis\) symbol. )Tj
0 -1.2 TD
(The pattern has two ellipses. One matches any number of binding forms \(\variable names and initial value )Tj
T*
(expressions\); the other matches any number of body expressions. )Tj
0 -2.562 TD
(The body expressions matched by )Tj
/T1_1 1 Tf
(body-expr ...)Tj
/T1_0 1 Tf
( are simply used in the body of the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression. )Tj
0 -2.562 TD
(The expressions matched by )Tj
/T1_1 1 Tf
(\(var value-expr\) ...)Tj
/T1_0 1 Tf
( are used differently, however--they are not simply )Tj
0 -1.205 TD
(substituted into the macro template. Instead, )Tj
/T1_1 1 Tf
(\(var ...\))Tj
/T1_0 1 Tf
( is used to generate the argument list for the )Tj
/T1_1 1 Tf
0 -1.205 TD
(lambda)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(value-expr ...)Tj
/T1_0 1 Tf
( is used to generate the list of initial expressions. )Tj
0 -2.557 TD
(Scheme's macro system is smart enough to figure out what's going on. If \the pattern contains an ellipsis )Tj
0 -1.205 TD
(following a compound form \(like )Tj
/T1_1 1 Tf
(\(var init-expr\) ...)Tj
/T1_0 1 Tf
(, and the template uses one of the pattern )Tj
0 -1.2 TD
(variables from that compound form \(followed by an ellipsis\), then Sche\me assumes you want )Tj
/T1_2 1 Tf
(the )Tj
T*
(corresponding part)Tj
/T1_0 1 Tf
( of each form matched by the pattern form. )Tj
0 -2.557 TD
(If we think of the expressions as s-expressions, we've matched a pattern\ that is one list of two-element lists, and )Tj
0 -1.205 TD
(restructured it into two separate lists of elements. \(That is, we're go\ing from a list of )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
(s and )Tj
/T1_1 1 Tf
(cadr)Tj
/T1_0 1 Tf
(s to a list )Tj
T*
(of )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
(s and a list of )Tj
/T1_1 1 Tf
(cadr)Tj
/T1_0 1 Tf
(s.\) )Tj
0 -2.557 TD
(As an example of use, consider )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(var-a \(some-procedure foo\)\))Tj
0 -1.2 TD
(      \(var-b \(some-procedure bar\)\)\))Tj
0 -1.2 TD
(   \(quux var-a\))Tj
T*
(   \(quux var-b\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(which translates to )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(\(lambda \(var-a var-b\))Tj
0 -1.2 TD
(    \(quux var-a\))Tj
T*
(    \(quux var-b\)\))Tj
0 -1.2 TD
( \(some-procedure foo\))Tj
0 -1.2 TD
( \(some-procedure bar\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
([ The following is out of place--here I should just be showing some uses\ of macros. The problem is that I don't )Tj
0 -1.2 TD
(want to lie and pretend that it's all very simple--Scheme does something\ sophisticated when you write binding )Tj
T*
(contstructs as macros... This stuff will all be clearer after I've talke\d about hygiene problems with Lisp macros, )Tj
T*
(and laziness and call-by-name... how to fwd ref gracefully? ] An extraor\dinarily astute and thoughtful reader )Tj
T*
(might wonder if there's something wrong here. \(Luckily, there's actuall\y nothing to worry about.\) Recall that )Tj
0 -1.205 TD
(when discussing )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
(, I said that Scheme is careful to treat names introduced by a macro as \though they were )Tj
0 -1.205 TD
(distinct, effectively renaming variables introduced in a macro. What abo\ut the argument variables to )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(in this example? One might think )Tj
/T1_1 1 Tf
(var-a)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(var-b)Tj
/T1_0 1 Tf
( would just be renamed and we'd get: )Tj
ET
EMC 
Q

endstreamendobj5232 0 obj[5132 0 R]endobj5233 0 obj[5229 0 R/XYZ 0 301.348 null]endobj5234 0 obj<</Rect[9.41539 285.906 128.049 300.029]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC200)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC200)/S/URI>>/Border[0 0 0]>>endobj5235 0 obj[5234 0 R]endobj5236 0 obj<</Annots 5243 0 R/Parent 5359 0 R/ID 5281 0 R/StructParents 320/Contents 5268 0 R/PZ 1.06209/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 1287 0 R/T1_4 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5237 0 obj<</Length 3551>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.1815 0 0 13.1815 9.4154 735.4986 Tm
(\(\(lambda \(var-a-1 var-b-1\))Tj
0 -1.2 TD
(    \(quux var-a\))Tj
T*
(    \(quux var-b\)\))Tj
T*
( \(some-procedure foo\))Tj
T*
( \(some-procedure bar\)\))Tj
/T1_1 1 Tf
0 -2.557 TD
(Clearly, this isn't what we want--we )Tj
/T1_2 1 Tf
(want)Tj
/T1_1 1 Tf
( )Tj
/T1_0 1 Tf
(var-a)Tj
/T1_1 1 Tf
( and )Tj
/T1_0 1 Tf
(var-b)Tj
/T1_1 1 Tf
( in the )Tj
/T1_0 1 Tf
(lambda)Tj
/T1_1 1 Tf
( body to refer to the variables )Tj
0 -1.205 TD
(introduced in by )Tj
/T1_0 1 Tf
(lambda)Tj
/T1_1 1 Tf
(---that's what it's for. )Tj
0 -2.557 TD
(Scheme's macro processor is smart enough to infer that this is what you \want. When you write a macro that )Tj
0 -1.2 TD
(accepts a )Tj
/T1_2 1 Tf
(name)Tj
/T1_1 1 Tf
( as an argument and )Tj
/T1_2 1 Tf
(binds)Tj
/T1_1 1 Tf
( it, Scheme assumes you're doing that for a good reason. If you then )Tj
0 -1.2 TD
(take another argument to the same macro and use it in the scope of that \new variable, Scheme assumes you )Tj
0 -1.205 TD
(want occurrences of the name to refer to the )Tj
/T1_0 1 Tf
(new)Tj
/T1_1 1 Tf
( variable. )Tj
0 -2.557 TD
(That is, Scheme uses an algorithm that checks what you do with names in \forms that get passed as arguments )Tj
0 -1.2 TD
(into a macro. If you just use them in the normal ways, evaluating or ass\igning to them as variable names, )Tj
T*
(Scheme assumes you mean to refer to whatever those names refer to at the\ call site of the macro. \(That's )Tj
0 -1.205 TD
(normal lexical scope.\) But if you take the name and use it )Tj
/T1_0 1 Tf
(as the name of a new variable)Tj
/T1_1 1 Tf
(, Scheme )Tj
0 -1.2 TD
(assumes you're defining a binding construct, and that any other argument\s you put in that scope should see the )Tj
T*
(new binding, instead of being scoped at the call site.\) )Tj
0 -2.562 TD
(Scheme can generally assume this, because if you're not implementing a s\coping binding form \(like )Tj
/T1_0 1 Tf
(let)Tj
/T1_1 1 Tf
( or )Tj
/T1_0 1 Tf
0 -1.205 TD
(do)Tj
/T1_1 1 Tf
(\), there's no reason for a macro to accept a name as an argument and th\en turn around and bind it. )Tj
ET
0 0 1 RG
0.767 w 10 M 0 j 0 J []0 d 
9.415 341.081 m
45.918 341.081 l
S
0 0 1 rg
BT
/T1_3 1 Tf
15.2095 0 0 15.2095 9.4154 343.3811 Tm
(let*)Tj
0 0 0 rg
/T1_1 1 Tf
13.1815 0 0 13.1815 9.4154 307.109 Tm
(Once we have )Tj
/T1_0 1 Tf
(let)Tj
/T1_1 1 Tf
(, we can implement )Tj
/T1_0 1 Tf
(let*)Tj
/T1_1 1 Tf
( in terms of that. We simply write a recursive macro that peels off )Tj
T*
(one binding form at a time and generates a )Tj
/T1_0 1 Tf
(let)Tj
/T1_1 1 Tf
(, so that we get a nested set of )Tj
/T1_0 1 Tf
(let)Tj
/T1_1 1 Tf
(s that each bind one )Tj
0 -1.2 TD
(variable. )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(define-syntax let* \(\))Tj
0 -1.2 TD
(   \(syntax_rules)Tj
T*
(      \(\(_ \(\) body-expr ...\))Tj
T*
(       \(begin body-expr ...\)\))Tj
T*
(      \(\(_ \(\(var1 value-expr1\)\(var value-expr\) ...\))Tj
T*
(       \(let \(\(var1 value-expr\)\))Tj
T*
(          \(_ \(\(var value-expr\) ...\))Tj
0 -1.2 TD
(             body-expr ...\)\)\)\)\))Tj
/T1_1 1 Tf
0 -2.557 TD
(This macro uses two syntax rules. The first is the termination case for \recursive macroexpansion. A )Tj
/T1_0 1 Tf
(let*)Tj
/T1_1 1 Tf
( that )Tj
0 -1.205 TD
(has an empty binding form \(i.e., binds zero variables\) should be trans\lated into a )Tj
/T1_0 1 Tf
(begin)Tj
/T1_1 1 Tf
(; it will just sequence )Tj
0 -1.2 TD
(the body expressions. )Tj
ET
EMC 
Q

endstreamendobj5238 0 obj[5132 0 R]endobj5239 0 obj<</Limits[256 287]/Nums[256 4753 0 R 257 4757 0 R 258 4759 0 R 259 4762 0 R 260 4767 0 R 261 4769 0 R 262 4771 0 R 263 4797 0 R 264 4808 0 R 265 4813 0 R 266 4834 0 R 267 4844 0 R 268 4846 0 R 269 4849 0 R 270 4873 0 R 271 4885 0 R 272 4887 0 R 273 4890 0 R 274 4895 0 R 275 4901 0 R 276 4908 0 R 277 4910 0 R 278 4940 0 R 279 4953 0 R 280 4955 0 R 281 4960 0 R 282 4962 0 R 283 4964 0 R 284 4967 0 R 285 4969 0 R 286 4971 0 R 287 4973 0 R]>>endobj5240 0 obj<</Limits[288 352]/Nums[]>>endobj5241 0 obj[5236 0 R/XYZ 0 451.048 null]endobj5242 0 obj<</Rect[9.41539 435.607 104.322 449.73]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC201)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC201)/S/URI>>/Border[0 0 0]>>endobj5243 0 obj[5242 0 R 5244 0 R 5245 0 R 5246 0 R 5247 0 R 5248 0 R]endobj5244 0 obj<</Rect[61.7725 89.5568 83.0079 103.68]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5245 0 obj<</Rect[89.5987 89.5568 134.996 103.68]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5090 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_129.html)/S/URI>>/Border[0 0 0]>>endobj5246 0 obj<</Rect[141.587 89.5568 164.285 103.68]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5288 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_131.html)/S/URI>>/Border[0 0 0]>>endobj5247 0 obj<</Rect[170.876 89.5568 189.185 103.68]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5248 0 obj<</Rect[236.415 89.5568 323.545 103.68]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5249 0 obj<</Length 4986>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.1815 0 0 13.1815 9.4154 755.0828 Tm
(The recursive rule says that a )Tj
/T1_1 1 Tf
(let*)Tj
/T1_0 1 Tf
( with one or more binding subforms should translate into a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( that )Tj
0 -1.205 TD
(performs the first binding and another )Tj
/T1_1 1 Tf
(let*)Tj
/T1_0 1 Tf
( to bind the rest and evaluate the body. \(Note that I've used the )Tj
/T1_1 1 Tf
(_)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(shorthand for )Tj
/T1_1 1 Tf
(let*)Tj
/T1_0 1 Tf
( in the recursive call, as well as in the pattern.\) )Tj
0 -2.562 TD
(As with )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, Scheme recognizes this as a binding construct, and does the right thin\g--it notices that the )Tj
/T1_1 1 Tf
(var)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(argument passed into the macro is used as a name of a new binding in the\ macro, so it assumes that the new )Tj
T*
(binding should be visible to the body expressions. )Tj
ET
0 0 1 RG
0.767 w 10 M 0 j 0 J []0 d 
9.415 620.092 m
45.918 620.092 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.2095 0 0 15.2095 9.4154 622.3919 Tm
(cond)Tj
ET
1.278 w 
9.415 580.345 m
90.558 580.345 l
S
BT
/T1_3 1 Tf
15.2095 0 0 15.2095 9.4154 584.1779 Tm
(Discussion)Tj
0 0 0 rg
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 548.1595 Tm
(Scheme macros also have several features I haven't demonstrated, to make\ it easier to write more sophisticated )Tj
0 -1.205 TD
(macros than )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
(, and I'll demonstrate those later, too. )Tj
0 -2.557 TD
(In the next section, though, I will discuss a different and simpler kind\ of macro system, which is )Tj
/T1_4 1 Tf
(not)Tj
/T1_0 1 Tf
( standard )Tj
0 -1.2 TD
(Scheme, and )Tj
/T1_4 1 Tf
(does)Tj
/T1_0 1 Tf
( have problems with variable names. )Tj
ET
1.533 w 
9.415 439.776 m
163.585 439.776 l
S
0 0 1 rg
BT
/T1_3 1 Tf
18.2514 0 0 18.2514 9.4154 444.3756 Tm
(Lisp-style Macros)Tj
0 0 0 rg
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 407.3723 Tm
(In this section, I'll discuss a simple kind of macro system that isn't s\tandard in Scheme \(and you might be able )Tj
T*
(to skim this section without too much loss\) but is interesting for seve\ral reasons. )Tj
/T1_5 1 Tf
6.5908 0 0 6.5908 33.6252 357.8474 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 357.8474 Tm
(It is very easy to explain how it works--it is a real macro system, but \one which is very easy to )Tj
T*
(implement. We can add it to our interpreter with a few function definiti\ons. This should clear up any )Tj
T*
(confusion about what macros basically are, and how to think about them. \\(It's also another nice example )Tj
0 -1.205 TD
(of Scheme programming--we'll get to cheat and use )Tj
/T1_1 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
( to do most of our work for us. Then )Tj
0 -1.205 TD
(I'll show how to implement )Tj
/T1_1 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
(, too.\) )Tj
/T1_5 1 Tf
6.5908 0 0 6.5908 33.6252 278.6312 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 278.6312 Tm
(The simple Lisp-style macro system also demonstrates two important issue\s in macros: the power of )Tj
0 -1.2 TD
(procedural transformation, and problems with scoping when code is transf\ormed. An understanding of )Tj
T*
(Lisp macros can only help later when we return to Scheme macros for an i\n-depth discussion of how to )Tj
T*
(work and how to use them. )Tj
/T1_5 1 Tf
6.5908 0 0 6.5908 33.6252 215.3598 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 215.3598 Tm
(The new standard Scheme macro system is safer than Lisp macros, and very\ useful, but not quite as )Tj
T*
(powerful. Sometimes it's they're still useful, if you use them for simpl\e things they're appropriate for. )Tj
T*
(Some of our later examples will use this kind of macro. )Tj
/T1_5 1 Tf
6.5908 0 0 6.5908 33.6252 167.9063 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 167.9063 Tm
([ R5RS will have macros, but IEEE/ANSI Scheme does not, and may not for \some time. Most Schemes )Tj
T*
(do support Lisp-style macros, even though they're not part of the standa\rd... and you can use them to )Tj
T*
(bootstrap a portable implementation of R5RS macros. [Guile uses Lisp-sty\le macros fairly heavily, so )Tj
T*
(Guile programmers should definitely pay attention.] ] )Tj
/T1_5 1 Tf
6.5908 0 0 6.5908 33.6252 104.6349 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 104.6349 Tm
([ You might need to program in Lisp some day, or talk intelligently abou\t Lisp. ] )Tj
/T1_5 1 Tf
6.5908 0 0 6.5908 33.6252 88.8171 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 88.8171 Tm
([ People keep reinventing them, and not noticing that they were invented\ decades ago, for Lisp--I've )Tj
T*
(seen at least three languages with reinventions of Lisp macros, usually \in an inferior form. I want to )Tj
T*
(make it clear what Lisp macros do, and what's good and bad about them, t\o avoid further awkward )Tj
T*
(reinventions of the wheel. ] )Tj
ET
EMC 
Q

endstreamendobj5250 0 obj<</Length 3309>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 1 RG
0 i 1.278 w 10 M 0 j 0 J []0 d 
9.415 733.338 m
212.264 733.338 l
S
0 0 1 rg
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 15.2095 0 0 15.2095 9.4154 737.1711 Tm
(Ultra-simple Lispish Macros)Tj
0 0 0 rg
/T1_1 1 Tf
13.1815 0 0 13.1815 9.4154 701.1528 Tm
(The classic macro system is the Lisp macro system, which allows the user\ to define an arbitrary Lisp procedure )Tj
0 -1.2 TD
(to rewrite a new construct. \(Most dialects of Lisp, e.g., Common Lisp, \have a macro facility of the same )Tj
0 -1.205 TD
(general kind, called )Tj
/T1_2 1 Tf
(defmacro)Tj
/T1_1 1 Tf
(.\) We'll talk for a moment about a simplified version of Lisp-style mac\ros. )Tj
0 -1.2 TD
(Later we'll explain why and how Scheme macros are better, at least for m\ost purposes. )Tj
0 -2.557 TD
(Suppose we have a macro system that we can use to tell the interpreter o\r compiler that when it sees an )Tj
0 -1.2 TD
(expression that's a list starting with a particular symbol, it should ca\ll a particular routine to rewrite that )Tj
T*
(expression, and use the rewritten version in its place. )Tj
0 -2.562 TD
(For the )Tj
/T1_2 1 Tf
(or)Tj
/T1_1 1 Tf
( example, we want to tell the compiler that if it sees an expression of \the form )Tj
/T1_2 1 Tf
(\(or )Tj
/T1_3 1 Tf
(a b)Tj
/T1_2 1 Tf
(\))Tj
/T1_1 1 Tf
( it should )Tj
0 -1.2 TD
(rewrite that into an expression of the form )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(let \(\(temp a\))Tj
0 -1.2 TD
(   \(if temp)Tj
0 -1.2 TD
(       temp)Tj
T*
(       b\)\))Tj
/T1_1 1 Tf
0 -2.552 TD
(So now we want to tell the compiler how to rewrite expressions like that\. Since Lisp expressions are )Tj
0 -1.2 TD
(represented as lists, we can use normal list operations to examine the e\xpression and generate the new )Tj
0 -1.205 TD
(expression. Let's assume our system has a special form called )Tj
/T1_2 1 Tf
(define-rewriter)Tj
/T1_1 1 Tf
( that lets us specify a )Tj
0 -1.2 TD
(procedure of one argument to write a particular kind of expression. )Tj
0 -2.562 TD
(Here's a rather ugly rewriter macro for )Tj
/T1_2 1 Tf
(or)Tj
/T1_1 1 Tf
(: )Tj
/T1_2 1 Tf
T*
(; OR with subtle scope bug)Tj
0 -1.2 TD
(\(define-rewriter 'or          ; tell compiler how to rewrite \(or ...\)\)Tj
T*
(   \(lambda \(expr\))Tj
T*
(      \(let \(\(a \(cadr expr\)\)              )Tj
T*
(            \(b \(caddr expr\)\)\))Tj
T*
(         \(cons 'let                                 ; make LET form)Tj
T*
(               \(cons \(list \(list 'temp a\)\)\)         ; make let bin\ding form)Tj
T*
(                     \(append '\(if temp temp\)        ; make IF form)Tj
T*
(                             \(list b\)\))Tj
/T1_1 1 Tf
0 -2.552 TD
(There's actually a scoping problem with this macro, which I'll ignore fo\r now--it's the problem that define-)Tj
0 -1.2 TD
(syntax fixes. Later, I'll show what's wrong and fix it, but for a while \I just want to talk about basic syntax of )Tj
T*
(Lisp-style macros. )Tj
0 -2.557 TD
(Now when the interpreter or compiler is about to evaluate an expression \represented as a list, it will check to )Tj
0 -1.205 TD
(see if it starts with )Tj
/T1_2 1 Tf
(or)Tj
/T1_1 1 Tf
(. If so, it will pass the expression to the above rewriter procedure, an\d interpret or )Tj
0 -1.2 TD
(compile the resulting list instead. )Tj
ET
EMC 
Q

endstreamendobj5251 0 obj<</Length 3687>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.1815 0 0 13.1815 9.4154 749.3635 Tm
(\(Actually, macroexpansion doesn't have to happen just before interpreti\ng or compiling a particular expression. )Tj
0 -1.2 TD
(The system might rewrite all of the macro calls in a whole procedure, or\ a whole program, before feeding the )Tj
T*
(procedure or program to the normal part of the compiler. It's easier to \understand macros if they're interleaved )Tj
T*
(with expression evaluation or compilation, though--it's just an extra ca\se in the main dispatch of your )Tj
T*
(interpreter or compiler.\) )Tj
0 -2.562 TD
(Implementing )Tj
/T1_1 1 Tf
(define-rewriter)Tj
/T1_0 1 Tf
( is easy. \(We'll show an implementation for our example interpreter in \a )Tj
0 -1.2 TD
(later section.\) We only need to do two simple things: )Tj
/T1_2 1 Tf
6.5908 0 0 6.5908 33.6252 602.7967 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 602.7967 Tm
(Provide a procedure that can add rewriter procedures to a table, keyed b\y the name of the forms they )Tj
T*
(rewrite. )Tj
/T1_2 1 Tf
6.5908 0 0 6.5908 33.6252 571.0975 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 571.0975 Tm
(Modify the interpreter \(or compiler\) to check whether expressions of t\he form )Tj
/T1_1 1 Tf
(\()Tj
/T1_3 1 Tf
(symbol)Tj
/T1_0 1 Tf
( )Tj
/T1_3 1 Tf
(...)Tj
/T1_1 1 Tf
(\))Tj
/T1_0 1 Tf
( begin with )Tj
T*
(the name of a rewriter macro, and if so, to call the rewriter to transfo\rm the expression before )Tj
T*
(interpreting \(or compiling\) it. )Tj
-2.857 -2.557 Td
(That's all. )Tj
0 -2.557 TD
(The above system works, but it has several awkwardnesses. One is that it\ is tedious to write routines that )Tj
0 -1.205 TD
(construct s-expressions directly. We can use )Tj
/T1_1 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
( to make this easier. It will allow us to simply write )Tj
0 -1.2 TD
(the s-expression we want the macro to produce, and use unquote to fill i\n the parts we get from the arguments )Tj
T*
(to the macro. )Tj
/T1_1 1 Tf
0 -2.562 TD
(; OR with subtle scope bug)Tj
0 -1.2 TD
(\(define-rewriter 'or       ; tell compiler how to rewrite \(or ...\))Tj
T*
(   \(lambda \(expr\))Tj
T*
(      \(let \(\(a \(cadr expr\)\)              )Tj
T*
(            \(b \(caddr expr\)\)\))Tj
T*
(         `\(let \(\(temp ,a\)\) ; return an s-expression of this form)Tj
T*
(             \(if temp)Tj
T*
(                 temp)Tj
T*
(                 ,b\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(This is much easier to read. The backquoted expression is now readable a\s code--it tells us the general structure )Tj
0 -1.2 TD
(of the code produced by the macro, and the commas indicate the parts tha\t vary depending on the arguments )Tj
0 -1.2 TD
(passed to the macro. )Tj
0 -2.562 TD
(Note that there is no magic here: )Tj
/T1_1 1 Tf
(define-rewriter)Tj
/T1_0 1 Tf
( and quasiquotation can be used independently, and are )Tj
0 -1.2 TD
(very different things. It just happens that quasiquotation is often very\ useful for the things you want to do in )Tj
T*
(macros--returning an s-expression of a particular form. )Tj
0 -2.557 TD
(This simple rewriting system is still rather tedious to use, for several\ of reasons. First, we always have to quote )Tj
0 -1.205 TD
(the name of the special form we're defining. Second, it's tedious to wri\te a )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( every time. Third, it's )Tj
0 -1.2 TD
(tedious to always have to destructure the expression we're rewriting to \get the parts we want to put into the )Tj
T*
(expression we generate. \("Destructure" means take apart to get at the c\omponents--in this case, )Tj
ET
EMC 
Q

endstreamendobj5252 0 obj<</Length 3303>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.1815 0 0 13.1815 9.4154 755.1462 Tm
(subexpressions.\) )Tj
ET
0 0 1 RG
1.107 w 10 M 0 j 0 J []0 d 
9.415 717.889 m
162.506 717.889 l
S
0 0 1 rg
BT
/T1_1 1 Tf
13.1815 0 0 13.1815 9.4154 721.2107 Tm
(Better Lisp-style Macros)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(It would be nice if the macro facility allowed you to declare the argume\nt pattern to the macro, and )Tj
0 -1.205 TD
(automatically destructured it for you. Most Lisp systems have a special \form called )Tj
/T1_2 1 Tf
(defmacro)Tj
/T1_0 1 Tf
( that does this )Tj
0 -1.205 TD
(for you, and avoids the need to write a )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression every time. For consistency with Scheme naming )Tj
0 -1.205 TD
(conventions, we'll call our equivalent )Tj
/T1_2 1 Tf
(define-macro)Tj
/T1_0 1 Tf
(. )Tj
/T1_2 1 Tf
0 -2.562 TD
(define-macro)Tj
/T1_0 1 Tf
( implicitly creates a transformation procedure whose body is the body of\ the define-macro )Tj
0 -1.2 TD
(form. It also implicitly destructures the expression to be transformed, \and passes the subexpressions to the )Tj
0 -1.2 TD
(transformation procedure. )Tj
0 -2.562 TD
(Using )Tj
/T1_2 1 Tf
(define-macro)Tj
/T1_0 1 Tf
(, we can write )Tj
/T1_2 1 Tf
(or)Tj
/T1_0 1 Tf
( this way, specifying that )Tj
/T1_2 1 Tf
(or)Tj
/T1_0 1 Tf
( takes two arguments: )Tj
/T1_2 1 Tf
0 -2.562 TD
(; OR with subtle scope bug)Tj
0 -1.2 TD
(\(define-macro \(or a b\))Tj
T*
(   `\(let \(\(temp ,a\)\))Tj
T*
(       \(if temp)Tj
T*
(           temp)Tj
T*
(           ,b\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(We didn't have to write the code that destructures the form into )Tj
/T1_2 1 Tf
(a)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(b)Tj
/T1_0 1 Tf
(---)Tj
/T1_2 1 Tf
(define-macro)Tj
/T1_0 1 Tf
( did that for us. We )Tj
0 -1.205 TD
(also didn't have to explicitly write a )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
( to generate the transformation procedure; )Tj
/T1_2 1 Tf
(define-macro)Tj
/T1_0 1 Tf
( did )Tj
0 -1.2 TD
(that too. )Tj
0 -2.562 TD
(This makes the syntax of )Tj
/T1_2 1 Tf
(define-macro)Tj
/T1_0 1 Tf
( similar to a procedure-defining )Tj
/T1_2 1 Tf
(define)Tj
/T1_0 1 Tf
( form. Still, you should )Tj
0 -1.2 TD
(always remember that you're not writing a normal procedure: you're writi\ng a procedure to transform code )Tj
T*
(before it is interpreted or compiled. The combination of automatic argum\ent destructuring and template-filling )Tj
T*
(\(using backwuote and comma\) makes it easier to do this in many cases. \)Tj
0 -2.557 TD
(Like a procedure, a macro can take a variable number of arguments, with \the non-required ones automatically )Tj
0 -1.205 TD
(packaged up into a rest list. We can define a variable-arity )Tj
/T1_2 1 Tf
(or)Tj
/T1_0 1 Tf
( with )Tj
/T1_2 1 Tf
(define-macro)Tj
/T1_0 1 Tf
(: )Tj
0 -2.557 TD
([ need to check this example--it's off the top of my head ] )Tj
/T1_2 1 Tf
0 -2.562 TD
(; variable arity OR with subtle scope bug)Tj
0 -1.2 TD
(\(define-macro \(or . args\))Tj
T*
(   \(if \(null? args\)  ; zero arg or?)Tj
T*
(       #f)Tj
T*
(       \(if \(null? \(cdr? arg-exprs\)\) ; one arg or?)Tj
T*
(           \(car arg-exprs\)          )Tj
T*
(           `\(let \(\(temp ,\(car arg-exprs\)\)\))Tj
T*
(               \(if temp)Tj
ET
EMC 
Q

endstreamendobj5253 0 obj<</Length 3660>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.1815 0 0 13.1815 9.4154 755.0828 Tm
(                   temp)Tj
0 -1.2 TD
(                   \(or ,@\(cdr arg-exprs\)\)\)\)\)\)\))Tj
/T1_1 1 Tf
0 -2.557 TD
(Here we're just accepting the list of argument expressions to the )Tj
/T1_0 1 Tf
(or)Tj
/T1_1 1 Tf
( expression as the rest list )Tj
/T1_0 1 Tf
(args)Tj
/T1_1 1 Tf
(. )Tj
0 -2.562 TD
(If it's an empty list, we return )Tj
/T1_0 1 Tf
(#f)Tj
/T1_1 1 Tf
(. Keep in mind that we're returning the )Tj
/T1_0 1 Tf
(#f)Tj
/T1_1 1 Tf
( object, which will be used in place )Tj
0 -1.205 TD
(of the )Tj
/T1_0 1 Tf
(or)Tj
/T1_1 1 Tf
( expression, i.e. as the literal )Tj
/T1_0 1 Tf
(#f)Tj
/T1_1 1 Tf
( to use in the resulting code. \(Conceptually, it's a fragment of a )Tj
0 -1.2 TD
(program code, even though that program fragment will in fact return the \value #f when it executes, because #f )Tj
T*
(is self-evaluating. We could have quoted it to make that clearer.\) )Tj
0 -2.557 TD
(If it's a one-element list, we just return the code \(s-expression\) for\ the first argument. )Tj
0 -2.562 TD
(If it's a list of more than one argument expression, we return an s-expr\ession for the )Tj
/T1_0 1 Tf
(let)Tj
/T1_1 1 Tf
( with a nested )Tj
/T1_0 1 Tf
(if)Tj
/T1_1 1 Tf
(. )Tj
0 -1.205 TD
(\(Note the use of )Tj
/T1_0 1 Tf
(unquote-splicing)Tj
/T1_1 1 Tf
( \()Tj
/T1_0 1 Tf
(,@)Tj
/T1_1 1 Tf
(\) to splice the )Tj
/T1_0 1 Tf
(cdr)Tj
/T1_1 1 Tf
( of the expression list into the )Tj
/T1_0 1 Tf
(or)Tj
/T1_1 1 Tf
( form as its )Tj
0 -1.2 TD
(whole list of arguments.\) )Tj
0 -2.557 TD
(You should be aware, though, that what you're really doing is specifying\ a procedure for transforming )Tj
0 -1.2 TD
(expressions before they're compiled or interpreted, and that quasiquote \is just syntactic sugar for procedural )Tj
T*
(code that constructs an s-expression. )Tj
/T1_0 1 Tf
0 -2.562 TD
(define-macro)Tj
/T1_1 1 Tf
( is easy to write, once we've got )Tj
/T1_0 1 Tf
(define-rewriter)Tj
/T1_1 1 Tf
(; we don't have to modify the )Tj
0 -1.205 TD
(interpreter or compiler at all. We just use )Tj
/T1_0 1 Tf
(define-rewriter)Tj
/T1_1 1 Tf
( to write )Tj
/T1_0 1 Tf
(define-macro)Tj
/T1_1 1 Tf
( as a simple macro. )Tj
T*
(We'll make )Tj
/T1_0 1 Tf
(define-macro)Tj
/T1_1 1 Tf
( a macro that generates transformation procedures, and uses )Tj
/T1_0 1 Tf
(define-)Tj
0 -1.205 TD
(rewriter)Tj
/T1_1 1 Tf
( to register them with the interpreter. )Tj
ET
0 0 1 RG
1.107 w 10 M 0 j 0 J []0 d 
9.415 341.079 m
218.171 341.079 l
S
0 0 1 rg
BT
/T1_2 1 Tf
13.1815 0 0 13.1815 9.4154 344.4009 Tm
(Problems With Lisp-Style Macros)Tj
0 0 0 rg
/T1_1 1 Tf
0 -2.687 TD
(Earlier we alluded to a lurking bug in our )Tj
/T1_0 1 Tf
(define-rewriter)Tj
/T1_1 1 Tf
( and )Tj
/T1_0 1 Tf
(define-macro)Tj
/T1_1 1 Tf
( definitions for )Tj
/T1_0 1 Tf
(or)Tj
/T1_1 1 Tf
(. )Tj
0 -2.562 TD
(Suppose we use the )Tj
/T1_0 1 Tf
(or)Tj
/T1_1 1 Tf
( macro this way--we check to see if someone is employed as either a perm\anent or )Tj
0 -1.2 TD
(temporary employee, and generate a w2 tax form if either of those is tru\e. )Tj
/T1_0 1 Tf
0 -2.562 TD
(  \(let \(\(temp \(member x temporary-employees\)\))Tj
0 -1.2 TD
(        \(perm \(member x permanent-employees\)\)\))Tj
T*
(     \(if \(or temp perm\))Tj
T*
(         \(generate-w2 x\)\)\))Tj
/T1_1 1 Tf
0 -2.552 TD
(The expansion of this is: )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(let \(\(temp \(member x temporary-employees\)\))Tj
0 -1.2 TD
(      \(perm \(member x permanent-employees\)\)\))Tj
T*
(   \(if \(let \(\(temp temp\)\))Tj
T*
(          \(if temp)Tj
T*
(              temp)Tj
ET
EMC 
Q

endstreamendobj5254 0 obj<</Length 3828>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.1815 0 0 13.1815 9.4154 755.0828 Tm
(              temp\)\)\)    ;BUG! \(should refer to outer temp, not inne\r\))Tj
0 -1.2 TD
(       \(generate-w2 x\)\)\))Tj
/T1_1 1 Tf
0 -2.557 TD
(The problem here is that we happened to use the same name, )Tj
/T1_0 1 Tf
(temp)Tj
/T1_1 1 Tf
(, at both the call site and inside the macro )Tj
0 -1.205 TD
(definition. The reference to )Tj
/T1_0 1 Tf
(temp)Tj
/T1_1 1 Tf
( in )Tj
/T1_0 1 Tf
(\(or temp perm\))Tj
/T1_1 1 Tf
( gets "captured" by the binding of temp introduced in )Tj
0 -1.2 TD
(the macro. )Tj
0 -2.562 TD
(This occurs because a normal macro facility does not understand issues o\f name binding--the name )Tj
/T1_0 1 Tf
(temp)Tj
/T1_1 1 Tf
( )Tj
0 -1.2 TD
(refers to one program variable at the call site, and another at the site\ of its use inside the macro--and the )Tj
0 -1.205 TD
(macroexpander doesn't know the difference. To the macroexpansion mechani\sm, the symbol )Tj
/T1_0 1 Tf
(temp)Tj
/T1_1 1 Tf
( is just a )Tj
0 -1.2 TD
(symbol object, not a name of anything in particular, i.e., a particular \program variable. )Tj
0 -2.557 TD
(There are two ways to get around this problem. One is for the macro-writ\er to be very careful to use names that )Tj
0 -1.2 TD
(are very unlikely to conflict with other names. This makes code very ugl\y, because of the unnatural names )Tj
T*
(given to variables, but more importantly, it's harder to get right than \it may seem. The other way around the )Tj
0 -1.205 TD
(problem is to get a much smarter macro facility, like the new Scheme )Tj
/T1_0 1 Tf
(define-syntax)Tj
/T1_1 1 Tf
( macro system. )Tj
ET
0 0 1 RG
1.107 w 10 M 0 j 0 J []0 d 
9.415 474.09 m
230.615 474.09 l
S
0 0 1 rg
BT
/T1_2 1 Tf
13.1815 0 0 13.1815 9.4154 477.4116 Tm
(Ugly Hacks Around Name Conflicts)Tj
0 0 0 rg
/T1_1 1 Tf
0 -2.683 TD
(One way to avoid name conflicts is to pick names for variables used insi\de macros in such a way that they're )Tj
0 -1.2 TD
(unlikely to conflict with names that users of the macros might pick, e.g\., )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(define-macro \(or first-arg second-arg\))Tj
0 -1.2 TD
(   `\(let \(\(temp!in!or!macro ,first-arg\))Tj
T*
(       \(if temp!in!or!macro)Tj
T*
(           temp!in!or!macro)Tj
T*
(           ,second-arg\)\)\))Tj
/T1_1 1 Tf
0 -2.557 TD
(It's unlikely that anyone will name a different variable )Tj
/T1_0 1 Tf
(temp!in!or!macro)Tj
/T1_1 1 Tf
( someplace else, so the problem )Tj
0 -1.2 TD
(is solved, right? Not necessarily. )Tj
0 -2.557 TD
(Besides the fact that this is incredibly tacky, there's still a situatio\n where this kind of solution is )Tj
/T1_3 1 Tf
(likely)Tj
/T1_1 1 Tf
( to fail--)Tj
0 -1.2 TD
(when people nest calls to the same macro. Each nested call will use the \same name for different variables, and )Tj
0 -1.205 TD
(things can go nuts. \(Food for thought: is this true of the )Tj
/T1_0 1 Tf
(or)Tj
/T1_1 1 Tf
( macro above? Does it nest properly?\) )Tj
0 -2.557 TD
(The standard hack around that problem is to have each )Tj
/T1_3 1 Tf
(use)Tj
/T1_1 1 Tf
( of the macro use a different name for each local )Tj
0 -1.2 TD
(variable that might get captured. This requires some extra machinery fro\m the underlying system--there has to )Tj
T*
(be a procedure that generates new, unique symbols, and which can be call\ed by the macro code each time the )Tj
0 -1.205 TD
(macro is expanded. The traditional Lisp name for this procedure is )Tj
/T1_0 1 Tf
(gensym)Tj
/T1_1 1 Tf
(, but we'll call it )Tj
/T1_0 1 Tf
(generate-)Tj
0 -1.205 TD
(symbol)Tj
/T1_1 1 Tf
( for clarity. )Tj
0 -2.562 TD
(Now we can write a fixed version of the two-argument )Tj
/T1_0 1 Tf
(OR)Tj
/T1_1 1 Tf
( macro. )Tj
/T1_0 1 Tf
T*
(; Version of 2-arg OR with scope bug fixed)Tj
ET
EMC 
Q

endstreamendobj5255 0 obj<</Length 4017>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.1815 0 0 13.1815 9.4154 739.2649 Tm
(\(define-macro \(or first-arg second-arg\))Tj
0 -1.2 TD
(   \(let \(\(temp-name \(generate-symbol\)\)\) )Tj
T*
(      `\(let \(\(,temp-name ,first-arg\))Tj
T*
(          \(if ,temp-name)Tj
T*
(              ,temp-name)Tj
T*
(              ,second-arg\)\)\))Tj
/T1_1 1 Tf
0 -2.557 TD
(Notice that the outer )Tj
/T1_0 1 Tf
(let)Tj
/T1_1 1 Tf
( is outside the backquote--it will be executed when the macro is used \(\i.e., once each )Tj
0 -1.205 TD
(time an )Tj
/T1_0 1 Tf
(or)Tj
/T1_1 1 Tf
( expression is rewritten; the quasiquoted part is the code to be interpr\eted or compiled \(after the )Tj
0 -1.2 TD
(comma'd holes are filled in\). )Tj
0 -2.562 TD
(Each time a call to )Tj
/T1_0 1 Tf
(or)Tj
/T1_1 1 Tf
( is processed by the compiler \(or interpreter\), this )Tj
/T1_0 1 Tf
(let)Tj
/T1_1 1 Tf
( will generate a new symbol before )Tj
0 -1.2 TD
(translating it; quasiquote will fill in the holes for the new symbol. \(\Be sure to get your metalevels right here: )Tj
/T1_0 1 Tf
0 -1.205 TD
(temp-name)Tj
/T1_1 1 Tf
( is the name of a variable in the macro transformation procedure, whose \binding will hold a )Tj
0 -1.2 TD
(pointer to the the actual name symbol that will be used for the variable\.\) )Tj
0 -2.557 TD
(Isn't this ugly? To some degree, Lisp macros are nice because you can us\e the same language \(Lisp\) in macros )Tj
0 -1.2 TD
(as you can in normal code. But due to these funky scoping issues, you ef\fectively end up having to learn a new )Tj
T*
(language--one with lots of generate-symbol calls and commas. )Tj
0 -2.557 TD
(On the other hand, maybe it builds character and abstract reasoning abil\ities, because you have to think a lot )Tj
0 -1.2 TD
(about names of names and things like that. Fun, maybe, but not for the f\aint of heart. )Tj
ET
0 0 1 RG
1.533 w 10 M 0 j 0 J []0 d 
9.415 355.637 m
404.959 355.637 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.2514 0 0 18.2514 9.4154 360.2365 Tm
(Implementing Simple Macros and Quasiquote)Tj
ET
1.278 w 
9.415 317.395 m
219.869 317.395 l
S
BT
/T1_2 1 Tf
15.2095 0 0 15.2095 9.4154 321.2279 Tm
(Implementing Simple Macros)Tj
ET
9.415 279.371 m
112.52 279.371 l
S
0.767 w 
112.52 280.905 m
203.777 280.905 l
S
1.278 w 
203.777 279.371 m
239.276 279.371 l
S
0.767 w 
239.276 280.905 m
303.156 280.905 l
S
BT
/T1_2 1 Tf
15.2095 0 0 15.2095 9.4154 283.2043 Tm
(Implementing )Tj
/T1_3 1 Tf
(quasiquote)Tj
/T1_2 1 Tf
( and )Tj
/T1_3 1 Tf
(unquote)Tj
0 0 0 rg
/T1_1 1 Tf
13.1815 0 0 13.1815 9.4154 246.9956 Tm
([ This section is particularly rough and needs to be reworked. Sorry. ] \)Tj
/T1_0 1 Tf
0 -2.562 TD
(quasiquote)Tj
/T1_1 1 Tf
( is a special form that \(like )Tj
/T1_0 1 Tf
(quote)Tj
/T1_1 1 Tf
(\) has a very special sugared syntax. Part of this syntax is )Tj
0 -1.2 TD
(recognized by the reader, rather than the compiler or interpreter proper\; the rest of the work is done by the )Tj
T*
(compiler or interpreter. )Tj
ET
1.107 w 
9.415 144.332 m
177.15 144.332 l
S
0.664 w 
177.15 145.661 m
256.24 145.661 l
S
0 0 1 rg
BT
/T1_2 1 Tf
13.1815 0 0 13.1815 9.4154 147.6539 Tm
(Translating backquotes to )Tj
/T1_3 1 Tf
(quasiquote)Tj
0 0 0 rg
/T1_1 1 Tf
0 -2.695 TD
(A backquote character is interpreted very specially by the Scheme \(or L\isp\) reader, and backquoted expressions )Tj
0 -1.205 TD
(are converted into )Tj
/T1_0 1 Tf
(quasiquote)Tj
/T1_1 1 Tf
( expressions with a normal-looking nested-prefix-expression syntax. The \)Tj
0 -1.205 TD
(expression )Tj
/T1_0 1 Tf
(`\(a b c\))Tj
/T1_1 1 Tf
( is actually just shorthand for )Tj
/T1_0 1 Tf
(\(quasiquote \(a b c\)\))Tj
/T1_1 1 Tf
( Similarly, comma'd )Tj
0 -1.205 TD
(expressions are converted, e.g. `\(a ,b ,c\) is read in as )Tj
/T1_0 1 Tf
(\(quasiquote \(a \(unquote b\) \(unquote )Tj
T*
(c\)\)\))Tj
/T1_1 1 Tf
(. Notice that as far as the reader is concerned, these are just lists--i\t is up to the compiler or interpreter to )Tj
ET
EMC 
Q

endstreamendobj5256 0 obj<</Length 2911>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.1815 0 0 13.1815 9.4154 755.1462 Tm
(process them further, and the reader just preprocesses them into lists t\hat the compiler or interpreter can deal )Tj
0 -1.2 TD
(with. )Tj
ET
0 0 1 RG
0.664 w 10 M 0 j 0 J []0 d 
9.415 703.565 m
88.505 703.565 l
S
0 0 1 rg
BT
/T1_1 1 Tf
13.1815 0 0 13.1815 9.4154 705.5578 Tm
(quasiquote)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.7 TD
(The )Tj
/T1_2 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
( special form may be built into the compiler or interpreter, but it can \be implemented as a )Tj
0 -1.2 TD
(macro, in Scheme. That's the easy way to do it, and it's what we'll do. \)Tj
0 -2.562 TD
(I'll show a simplified version of )Tj
/T1_2 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
( that only deals with commas at the top level of a list, e.g., )Tj
/T1_2 1 Tf
T*
(\(quasiquote \(foo ,bar \(baz x y\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(but not )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(quasiquote \(foo ,bar \(baz ,x y\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that )Tj
/T1_2 1 Tf
(\(quasiquote \(foo ,bar \(baz x y\)\)\))Tj
/T1_0 1 Tf
( should expand to something like )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(list 'foo bar '\(baz x y\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(We'll actually generate an expression that uses )Tj
/T1_2 1 Tf
(cons)Tj
/T1_0 1 Tf
( instead of )Tj
/T1_2 1 Tf
(list)Tj
/T1_0 1 Tf
(, because we want to write )Tj
/T1_2 1 Tf
0 -1.205 TD
(quasiquote)Tj
/T1_0 1 Tf
( recursively; if its argument is a list, it will peel one element at a t\ime of off the list of )Tj
0 -1.2 TD
(arguments, and either quote it or not before using it in the resulting e\xpression that is the rewritten version of )Tj
T*
(the macro call. )Tj
0 -2.562 TD
(Given this strategy, )Tj
/T1_2 1 Tf
(\(quasiquote \(foo ,bar \(baz x y\)\)\))Tj
/T1_0 1 Tf
( should expand to )Tj
/T1_2 1 Tf
T*
(\(cons 'foo)Tj
0 -1.2 TD
(      \(cons bar)Tj
T*
(            \(cons '\(baz x y\)\))Tj
T*
(                  '\(\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Notice that what we've done is generate an expression to generate a list\ whose components are explicitly )Tj
0 -1.2 TD
(quoted where necessary, as opposed to the original backquoted list where\ things are quoted by default and )Tj
0 -1.205 TD
(explicitly unquoted. And since )Tj
/T1_2 1 Tf
(')Tj
/T1_3 1 Tf
(thing)Tj
/T1_0 1 Tf
( is just a shorthand for )Tj
/T1_2 1 Tf
(\(quote )Tj
/T1_3 1 Tf
(thing)Tj
/T1_2 1 Tf
(\))Tj
/T1_0 1 Tf
(, we'll really generate an ugly )Tj
0 -1.2 TD
(expression like )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(cons \(quote foo\))Tj
0 -1.2 TD
(      \(cons bar)Tj
T*
(            \(cons \(quote baz x y\))Tj
0 -1.2 TD
(                  '\(\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(written as a straighforward low-level macro. We'll define it as a trivia\l macro that just calls a procedure )Tj
/T1_2 1 Tf
0 -1.205 TD
(quasiquote1)Tj
/T1_0 1 Tf
( to do the actual transformation. )Tj
ET
EMC 
Q

endstreamendobj5257 0 obj<</Length 3324>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.1815 0 0 13.1815 9.4154 741.4017 Tm
([ NEED TO DEBUG THIS... PRW ] )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-macro \(quasiquote expr\))Tj
0 -1.2 TD
(   \(quasiquote1 expr\)\))Tj
0 -2.557 TD
(\(define \(quasiquote1 expr\))Tj
0 -1.2 TD
(   \(if \(not \(pair? expr\)\) ; if quoted expr is not a list, it's just\)Tj
T*
(       expr               ; a literal)Tj
T*
(       ; else we'll grab a subexpression and cons it \(appropriately)Tj
T*
(       ; quoted or not\) onto the result of recursively quasiquoting)Tj
T*
(       ; the remaining arguments)Tj
T*
(       \(let \(\(first-subexpr \(car expr\)\))Tj
0 -1.2 TD
(             \(rest-subexprs \(cdr expr\)\)\))Tj
0 -1.2 TD
(          \(if \(and \(pair? next-subexpr\))Tj
T*
(                   \(eq? \(car first-subexpr\) 'unquote\)\)\))Tj
T*
(              \(list 'cons)Tj
T*
(                    first-subexpr       ; gen expr to eval this subexpr)Tj
T*
(                    \(quasiquote1 rest-subexprs\)\)                     \)Tj
T*
(              \(list 'cons)Tj
T*
(                    \(list 'quote first-subexpr\)    ; quote this subexp\r)Tj
T*
(                    \(quasiquote1 rest-subexprs\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(A full implementation of quasiquote is a little trickier, because it mus\t deal with nested uses of )Tj
/T1_1 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(and )Tj
/T1_1 1 Tf
(unquote)Tj
/T1_0 1 Tf
(; each subexpression that is not unquoted must be traversed and treated \similarly to the top-level )Tj
0 -1.2 TD
(list--i.e., rather than just using the subexpressions as literals and qu\oting them, an equivalent expression should )Tj
T*
(be constructed to create a similarly-structured list with the unquoted h\oles filled in. Also, a full implementation )Tj
0 -1.205 TD
(should handle )Tj
/T1_1 1 Tf
(unquote-splicing)Tj
/T1_0 1 Tf
( as well as )Tj
/T1_1 1 Tf
(unquote)Tj
/T1_0 1 Tf
(. )Tj
ET
0 0 1 RG
0.664 w 10 M 0 j 0 J []0 d 
9.415 287.97 m
128.049 287.97 l
S
0 0 1 rg
BT
/T1_2 1 Tf
13.1815 0 0 13.1815 9.4154 289.9626 Tm
(define-rewriter)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.695 TD
(In Chapter [ whatever ], I showed the code for an interpretive evaluator\ that was designed to support macros. In )Tj
0 -1.2 TD
(this section, I'll explain how to implement the macro processor and inst\all it in the interpreter. )Tj
0 -2.562 TD
(Recall that when )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
( encounters an expression that's represented as a list, it must determin\e whether the list )Tj
0 -1.205 TD
(represents a combination \(procedure call\), a built-in special form, or\ a macro call. It calls )Tj
/T1_1 1 Tf
(eval-list)Tj
/T1_0 1 Tf
( to do )Tj
0 -1.2 TD
(this dispatching. )Tj
0 -2.557 TD
(Also recall that we implemented environments that can hold different kin\ds of bindings--of normal variables or )Tj
0 -1.2 TD
(macros. A macro binding holds a transformation procedure that can be use\d to rewrite an expression before it is )Tj
T*
(interpreted. )Tj
/T1_1 1 Tf
0 -2.562 TD
(eval-list)Tj
/T1_0 1 Tf
( checks to see if the list begins with a symbol, which might be the name\ of a macro, or the name )Tj
0 -1.2 TD
(of a procedure. It looks in the environment to find the current binding \of the symbol. )Tj
ET
EMC 
Q

endstreamendobj5258 0 obj<</Length 5082>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Defining New Special \Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 755.1462 Tm
(Go to the )Tj
ET
0 0 1 RG
0.664 w 10 M 0 j 0 J []0 d 
61.772 753.153 m
83.008 753.153 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 61.7725 755.1462 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
89.599 753.153 m
134.996 753.153 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 89.5987 755.1462 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
141.587 753.153 m
164.285 753.153 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 141.5867 755.1462 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
170.876 753.153 m
189.185 753.153 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 170.8761 755.1462 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
236.415 753.153 m
323.545 753.153 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 236.4147 755.1462 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
9.415 740.293 m
9.415 742.176 l
602.585 742.176 l
601.643 741.234 l
10.357 741.234 l
10.357 741.234 l
h
f
0.875 0.875 0.875 rg
602.585 742.176 m
602.585 740.293 l
9.415 740.293 l
10.357 741.234 l
601.643 741.234 l
601.643 741.234 l
h
f
1.533 w 
9.415 695.221 m
254.86 695.221 l
S
0 0 1 rg
BT
/T1_1 1 Tf
18.2514 0 0 18.2514 9.4154 699.8208 Tm
(Defining New Special Forms)Tj
0 0 0 rg
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 662.8175 Tm
(Sometimes we want to write stereotyped )Tj
/T1_2 1 Tf
(code)Tj
/T1_0 1 Tf
(, not just stereotyped data structures. As with data, we sometimes )Tj
0 -1.2 TD
(want part of our stereotyped piece of code to vary. We can do this with \)Tj
/T1_2 1 Tf
(syntax extensions)Tj
/T1_0 1 Tf
(, also known as )Tj
T*
(macros. )Tj
0 -2.557 TD
(\(If you're familiar with macros from C, don't scoff. Macros in C are st\unningly lame and hard to use compared )Tj
0 -1.2 TD
(to Lisp or Scheme macros. Read on to find out what you've been missing. \If you're familiar with Lisp macros, )Tj
T*
(but have never done advanced programming with them, you probably don't r\ealize how powerful they are--Lisp )Tj
T*
(macros are so error-prone that people often avoid them. Scheme macros ar\e very powerful, but automate away )Tj
0 -1.2 TD
(some of the tricky parts.\) )Tj
0 -2.557 TD
(Macros are syntax extensions to a programming language, expressed as a t\ranslation of expressions. By writing )Tj
0 -1.2 TD
(a macro, what you're really doing is extending the functionality of the \compiler or interpreter--you're telling it )Tj
T*
(how to compile \(or interpret\) a new construct, by telling it how to re\write that construct into something it )Tj
T*
(already knows how to compile or interpret. )Tj
0 -2.557 TD
(\(Conceptually, defining a macro is extending the compiler--you're telli\ng the parser how to recognize a new )Tj
0 -1.2 TD
(construct, to change the grammar of the language, and also specifying ho\w to generate code for the new )Tj
T*
(construct. This is something you can't do in most languages, but it's ea\sy in Scheme.\) )Tj
0 -2.557 TD
(Scheme recognizes macro definitions, and then uses them to recognize and\ translate the new constructs into )Tj
0 -1.2 TD
(other constructs. The interpreter or compiler's process of translating a\ level constructs is often called "macro )Tj
T*
(expansion," despite the fact that the resulting expression may not be bi\gger than the original expression. )Tj
T*
(Macroexpansion can be recursive, because macros can use macros, and a ma\cro can even use itself, like a )Tj
T*
(recursive procedure. )Tj
0 -2.557 TD
(Syntax extension is powerful, and hence somewhat dangerous when used too\ casually. Be aware that when you )Tj
0 -1.2 TD
(write a macro, you can change the syntax of your programming language, a\nd that )Tj
/T1_2 1 Tf
(can)Tj
/T1_0 1 Tf
( be a bad thing--you and )Tj
T*
(others may no longer be able to easily understand what the program does.\ Used judiciously, however, such )Tj
0 -1.2 TD
(syntactic extensions are often just what you need to simplify your progr\ams. They are especially useful for )Tj
T*
(writing programs that write programs, so that you can avoid a lot of ted\ious repetitive coding. )Tj
0 -2.557 TD
(Macros are so useful that they're usually used in the implementation of \Scheme itself. Most Scheme compilers )Tj
0 -1.2 TD
(actually understand only a few special forms, and the rest are written a\s macros. )Tj
0 -2.557 TD
(In a later chapter, I'll describe some advanced uses of macros, which le\t your "roll your own" language with )Tj
0 -1.2 TD
(powerful new features. )Tj
ET
1.278 w 
9.415 55.148 m
175.944 55.148 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.2095 0 0 15.2095 9.4154 58.9808 Tm
(Macros vs. Procedures)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_130.html \(1 of 20\)\11/3/2006 9:12:02 PM)Tj
ET
EMC 

endstreamendobj5259 0 obj<</Length 3982>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Defining New Special \Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 754.4825 Tm
(Why do we want macros? In Scheme, the main code abstraction mechanism is\ procedural abstraction, e.g. )Tj
0 -1.205 TD
(using )Tj
/T1_1 1 Tf
(define)Tj
/T1_0 1 Tf
( or )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( to write procedures that do stereotyped things. In a sense, we "special\ize" )Tj
0 -1.2 TD
(procedures by passing them argument values--a procedure can do different\ things depending on the values it's )Tj
0 -1.2 TD
(given to work with. We can also "specialize" procedures by creating clos\ures in different environments. Isn't )Tj
0 -1.2 TD
(this enough? )Tj
0 -2.557 TD
(Not in general. While procedural abstraction is very powerful, there are\ times when we may want to write )Tj
0 -1.2 TD
(stereotyped routines that can't be written as procedures. )Tj
0 -2.562 TD
(Suppose, for example, you have a Scheme system which gives you things li\ke )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(, but not )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
(. \(Real )Tj
0 -1.205 TD
(Schemes all provide )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
(, but pretend they don't. It makes a nice, simple example.\) )Tj
0 -2.562 TD
(You want an )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( construct \(rather like the one actually built into Scheme\). This )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( can take two arguments; it )Tj
0 -1.2 TD
(evaluates the first one and returns the result if it's a true value, oth\erwise it evaluates the second one and returns )Tj
T*
(that result. )Tj
0 -2.562 TD
(Notice that you can't write )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( as a procedure. If )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( were a procedure, both of its arguments would always be )Tj
0 -1.205 TD
(evaluated )Tj
/T1_2 1 Tf
(before)Tj
/T1_0 1 Tf
( the actual procedure call. Since )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( is only supposed to evaluate its second argument if the )Tj
T*
(first one returns )Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
(, it just wouldn't work. )Tj
0 -2.562 TD
(If Scheme didn't have )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
(, you could fake it at any given point in your program, by writing an eq\uivalent )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(expression with an )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( statement in it. )Tj
0 -2.562 TD
(For example, suppose you wanted to write the equivalent of )Tj
/T1_1 1 Tf
(\(or \(foo?\) \(bar?\)\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(As a first try, you might do this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(if \(foo?\))Tj
0 -1.2 TD
(    \(foo?\))Tj
T*
(    \(bar?\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(That is, test )Tj
/T1_1 1 Tf
(\(foo?\))Tj
/T1_0 1 Tf
(, and return its value if it's a true value. That's not really quite rig\ht though, because this if )Tj
0 -1.205 TD
(statement evaluates )Tj
/T1_1 1 Tf
(foo?)Tj
/T1_0 1 Tf
( twice: once to test it, and once to return it. )Tj
0 -2.562 TD
(We really only want to evaluate it once--if )Tj
/T1_1 1 Tf
(\(foo?\))Tj
/T1_0 1 Tf
( is an expression with side effects, evaluating it twice could )Tj
0 -1.2 TD
(make the program incorrect as well as inefficient. )Tj
0 -2.557 TD
(To avoid this, we can always evaluate the first expression just once to \get the value, and store that value in a )Tj
0 -1.2 TD
(temporary variable so that we can return it without evaluating it again:\ )Tj
0 -2.557 TD
(You could instead write )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(temp \(foo?\)\)\))Tj
0 -1.2 TD
(   \(if temp)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_130.html \(2 of 20\)\11/3/2006 9:12:02 PM)Tj
ET
EMC 

endstreamendobj5260 0 obj<</Length 4466>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Defining New Special \Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.1815 0 0 13.1815 9.4154 755.0828 Tm
(       temp)Tj
0 -1.2 TD
(       \(bar?\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(This )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( expression gives the same effect as )Tj
/T1_1 1 Tf
(\(or \(foo?\) \(bar?\)\))Tj
/T1_0 1 Tf
(, because it evaluates )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( exactly )Tj
0 -1.205 TD
(once, and then tests the value; if the value is true, it returns that va\lue. \(The use of a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( variable to stash the )Tj
T*
(value allows us to test it without evaluating )Tj
/T1_1 1 Tf
(\(foo?\))Tj
/T1_0 1 Tf
( again.\) If the value is )Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
(, it evaluates )Tj
/T1_1 1 Tf
(\(bar?\))Tj
/T1_0 1 Tf
( and )Tj
0 -1.2 TD
(returns the result. )Tj
0 -2.562 TD
(This is the transformation we'd like to be able to automate by defining \)Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( as a macro. )Tj
0 -2.562 TD
(Here's a simple version of )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( written as a macro. I've called it )Tj
/T1_1 1 Tf
(or2)Tj
/T1_0 1 Tf
( to distinguish it from Scheme's normal )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
T*
(\(define-syntax or2)Tj
0 -1.2 TD
(   \(syntax-rules \(\))Tj
0 -1.2 TD
(      \(\(or2 a b\)        ; pattern)Tj
T*
(       \(let \(\(temp a\)\) ; template)Tj
T*
(          \(if temp)Tj
T*
(              temp)Tj
T*
(              b\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(What we're saying to Scheme is that we want to define the syntax of )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( by giving )Tj
/T1_2 1 Tf
(syntax rules)Tj
/T1_0 1 Tf
( for recognizing )Tj
0 -1.205 TD
(it and translating it. For this simple version of )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
(, we only need one rule, which says to translate )Tj
/T1_1 1 Tf
(\(or )Tj
/T1_2 1 Tf
(a b)Tj
/T1_1 1 Tf
(\))Tj
/T1_0 1 Tf
( )Tj
T*
(into the desired )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( expression. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(or a b\))Tj
/T1_0 1 Tf
( is called the rule's )Tj
/T1_2 1 Tf
(pattern)Tj
/T1_0 1 Tf
(, which specifies what counts as a call to the )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( macro, and the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(expression is the rule's )Tj
/T1_2 1 Tf
(template)Tj
/T1_0 1 Tf
(, which specifies the equivalent code that Scheme should translate calls\ into. )Tj
0 -1.205 TD
(The variables )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
( are called )Tj
/T1_2 1 Tf
(pattern variables)Tj
/T1_0 1 Tf
(. They stand for the actual expressions passed as arguments )Tj
0 -1.2 TD
(to the macro. They are "matched" to the actual expressions when the patt\ern is recognized, and when the )Tj
T*
(template is interpreted or compiled, the actual expressions are used whe\re the pattern variables occur. )Tj
0 -2.557 TD
(You can think of this in two steps. When a macro is used, )Tj
1.607 -2.557 Td
(1.  the template is copied, except that the pattern variables are replac\ed with the macro's argument )Tj
1.25 -1.2 Td
(expressions, )Tj
-1.25 -1.2 Td
(2.  the result is interpreted \(or compiled\) in place of the call expre\ssion. )Tj
-1.607 -2.557 Td
(\(It's really not quite this simple, but that's the basic idea.\) )Tj
T*
(In some ways, macro arguments are a lot like procedure arguments, but in\ other ways they're very different. )Tj
0 -1.2 TD
(The pattern variables are )Tj
/T1_2 1 Tf
(not)Tj
/T1_0 1 Tf
( bound at run time, and don't refer to storage locations. They're only u\sed in )Tj
T*
(translating a macro call into the equivalent expression. )Tj
0 -2.557 TD
(Always remember that arguments to a macro are )Tj
/T1_2 1 Tf
(expressions)Tj
/T1_0 1 Tf
( used in transforming the code, and )Tj
/T1_2 1 Tf
(then)Tj
/T1_0 1 Tf
( the code )Tj
0 -1.205 TD
(is executed. \(For example, the output of the )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( macro doesn't contain a variable named )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
(; )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( is just a shorthand )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_130.html \(3 of 20\)\11/3/2006 9:12:02 PM)Tj
ET
EMC 

endstreamendobj5261 0 obj<</Length 3579>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Defining New Special \Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 755.0828 Tm
(for whatever expression is passed as an argument to the macro. In the ex\ample use )Tj
/T1_1 1 Tf
(\(or \(foo?\) \(bar?\)\))Tj
/T1_0 1 Tf
(, )Tj
0 -1.205 TD
(the expression )Tj
/T1_1 1 Tf
(\(foo?\))Tj
/T1_0 1 Tf
( is what gets evaluated at the point where )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( is used in the macro body.\) )Tj
0 -2.562 TD
(This is why our macro has to use a temporary variable, like the hand-wri\tten equivalent of )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
(. If we tried to )Tj
0 -1.2 TD
(write the macro like a procedure, without using a temporary variable, li\ke this )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-syntax or)Tj
0 -1.2 TD
(   \(syntax-rules \(\))Tj
T*
(      \(\(or a b\))Tj
T*
(       \(if a)Tj
T*
(           a)Tj
T*
(           b\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(then )Tj
/T1_1 1 Tf
(\(or \(foo?\) \(bar?\)\))Tj
/T1_0 1 Tf
( would be translated into )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(if \(foo?\))Tj
0 -1.2 TD
(    \(foo?\))Tj
T*
(    \(bar?\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(As with the buggy handwritten version, )Tj
/T1_1 1 Tf
(\(foo?\))Tj
/T1_0 1 Tf
( would be evaluated twice when this expression was )Tj
0 -1.2 TD
(evaluated. )Tj
0 -2.557 TD
(\(This is the most common mistake in writing macros--forgetting that whi\le macros give you the ability to )Tj
0 -1.2 TD
(control when argument expressions are evaluated, they also )Tj
/T1_2 1 Tf
(require)Tj
/T1_0 1 Tf
( you to control it. It's safe to use a )Tj
T*
(procedure argument multiple times, because that's just referring to a va\lue in a run-time binding. Using a macro )Tj
T*
(argument causes evaluation of the entire argument expression at that poi\nt.\) )Tj
0 -2.562 TD
(We can make a better )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( by using more rules. We might want )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( to work with any number of arguments, so )Tj
0 -1.2 TD
(that )Tj
1.607 -2.562 Td
(1.  )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( of zero arguments returns )Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
(, because it has zero true arguments, )Tj
0 -1.205 TD
(2.  )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( of one argument is equivalent to that argument--it's true if and only i\f that argument is true. )Tj
T*
(3.  )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( of two or more arguments evaluates its first argument, and returns its \value if it's true. Otherwise, it )Tj
1.25 -1.205 Td
(computes the )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( of the rest of its arguments, and returns its result. )Tj
-2.857 -2.557 Td
(Here's the Scheme definition with these three rules: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-syntax or)Tj
0 -1.2 TD
(   \(syntax-rules \(\))Tj
T*
(      \(\(or\)             ; OR of zero arguments)Tj
T*
(       #f\)              ;   is always false)Tj
T*
(      \(\(or a\)           ; OR of one argument)Tj
T*
(       a\)               ;   is equivalent to the argument expression)Tj
T*
(      \(\(or a b c ...\)   ; OR of two or more arguments )Tj
T*
(       \(let \(\(temp a\)\)  ;   is the first or the OR of the rest)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_130.html \(4 of 20\)\11/3/2006 9:12:02 PM)Tj
ET
EMC 

endstreamendobj5262 0 obj<</Length 4392>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Defining New Special \Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.1815 0 0 13.1815 9.4154 753.4513 Tm
(          \(if temp           )Tj
0 -1.2 TD
(              temp             )Tj
T*
(              \(or b c ...\)\)\)\)\)\) )Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that this definition is recursive. \(The third rule's template us\es the )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( macro recursively.\) If we hand )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(four arguments, like this: )Tj
/T1_1 1 Tf
(\(or foo bar baz quux\))Tj
/T1_0 1 Tf
(, it should be equivalent to )Tj
/T1_1 1 Tf
(\(or foo \(or bar )Tj
T*
(\(or baz \(or quux\)\)\)\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Scheme will use recursion to translate the expression, one step at a tim\e. When Scheme encounters a macro )Tj
0 -1.2 TD
(call, it transforms the call into the equivalent code, using the appropr\iate rule. It then interprets \(or compiles\) )Tj
T*
(the resulting expression. If the result itself includes a macro call, th\en the interpreter \(or compiler\) calls itself )Tj
T*
(recursively to translate )Tj
/T1_2 1 Tf
(that)Tj
/T1_0 1 Tf
( before evaluating it. For a correctly written macro, the recursive tran\slation will )Tj
T*
(eventually "bottom out" when no more macro calls result, and the code wi\ll be evaluated in the usual way. )Tj
0 -2.557 TD
(\(As I'll show later, this fits in very neatly with the interpreter's or\ compiler's recursive evaluation of )Tj
0 -1.2 TD
(expressions.\) )Tj
0 -2.557 TD
(This recursion is recursion in Scheme's )Tj
/T1_2 1 Tf
(transformation)Tj
/T1_0 1 Tf
( of the call expression into equivalent code--it doesn't )Tj
0 -1.2 TD
(mean that the resulting code is recursive. A Scheme compiler will do all\ of the recursive transformation at )Tj
T*
(compile time, so there's no runtime overhead. Of course, the recursion h\as to terminate, or the compiler will not )Tj
T*
(be able to finish the translation. )Tj
0 -2.562 TD
(In this definition of )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
(, the third rule contains the symbols )Tj
/T1_1 1 Tf
(c ...)Tj
/T1_0 1 Tf
(. The Scheme identifier )Tj
/T1_1 1 Tf
(...)Tj
/T1_0 1 Tf
( is treated )Tj
0 -1.205 TD
(specially, to help you write recursive rules. \(In previous examples, I \used )Tj
/T1_1 1 Tf
(...)Tj
/T1_0 1 Tf
( as an ellipsis to stand for code I )Tj
T*
(didn't want to write out, but here we're usuing the )Tj
/T1_2 1 Tf
(actual Scheme identifier)Tj
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
(...)Tj
/T1_0 1 Tf
(; it's actually used in the )Tj
0 -1.2 TD
(Scheme code for macros.\) )Tj
0 -2.562 TD
(Scheme treats a pattern variable followed by )Tj
/T1_1 1 Tf
(...)Tj
/T1_0 1 Tf
( as matching )Tj
/T1_1 1 Tf
(zero or more)Tj
/T1_0 1 Tf
( subexpressions. In this )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(macro, )Tj
/T1_1 1 Tf
(c ...)Tj
/T1_0 1 Tf
( matches )Tj
/T1_2 1 Tf
(all)Tj
/T1_0 1 Tf
( of the arguments after the first two. )Tj
0 -2.562 TD
(Scheme matches )Tj
/T1_1 1 Tf
(\(or foo bar baz quux\))Tj
/T1_0 1 Tf
( by the third rule, whose pattern )Tj
/T1_1 1 Tf
(\(or a b c ...\))Tj
/T1_0 1 Tf
(, because )Tj
0 -1.205 TD
(it has at least two arguments. In applying the rule, Scheme matches )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( to )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
( to )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(c ...)Tj
/T1_0 1 Tf
( to the )Tj
/T1_2 1 Tf
T*
(sequence)Tj
/T1_0 1 Tf
( of expressions )Tj
/T1_1 1 Tf
(baz bleen)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
([ This is similar to how you use )Tj
/T1_1 1 Tf
(unquote-splicing)Tj
/T1_0 1 Tf
( inside backquote--you can splice a list into a list at the )Tj
0 -1.2 TD
(same level, rather than nesting it. ] )Tj
0 -2.562 TD
(The result of processing this )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( is )Tj
/T1_1 1 Tf
T*
(\(let \(\(temp foo\)\))Tj
0 -1.2 TD
(      \(if temp)Tj
T*
(          temp)Tj
T*
(          \(or bar baz quux\)\)\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_130.html \(5 of 20\)\11/3/2006 9:12:02 PM)Tj
ET
EMC 

endstreamendobj5263 0 obj<</Length 3033>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Defining New Special \Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 755.1462 Tm
(Now Scheme evaluates this expression. )Tj
0 -2.562 TD
(But there's another )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( in there--when Scheme gets to )Tj
/T1_1 1 Tf
(\(or bar baz quux\))Tj
/T1_0 1 Tf
( it will match the third rule )Tj
0 -1.205 TD
(again, with )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( matched to )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
( matched to )Tj
/T1_1 1 Tf
(baz)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(c ...)Tj
/T1_0 1 Tf
( being matched to just )Tj
/T1_1 1 Tf
(quux)Tj
/T1_0 1 Tf
(. The result of this )Tj
0 -1.2 TD
(macro-processing step is )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(temp foo\)\))Tj
0 -1.2 TD
(   \(if temp)Tj
T*
(       temp)Tj
T*
(       \(let \(\(temp bar\)\))Tj
T*
(          \(if temp)Tj
T*
(              temp)Tj
T*
(              \(or baz quux\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(And the new let expression is evaluated. )Tj
0 -2.562 TD
(There )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( is again, so Scheme will treat )Tj
/T1_1 1 Tf
(\(or baz quux\))Tj
/T1_0 1 Tf
( the same way, again using the third rule--this time )Tj
0 -1.205 TD
(matching )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( to )Tj
/T1_1 1 Tf
(baz)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
( to )Tj
/T1_1 1 Tf
(quux)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(c ...)Tj
/T1_0 1 Tf
( to nothing at all, producing )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(temp foo\)\))Tj
0 -1.2 TD
(   \(if temp)Tj
T*
(       temp)Tj
T*
(       \(let \(\(temp bar\)\))Tj
T*
(          \(if temp)Tj
T*
(              temp)Tj
T*
(              \(let \(\(temp baz\))Tj
T*
(                 \(if temp)Tj
0 -1.2 TD
(                     temp)Tj
T*
(                     \(or quux\)\)\)\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(And this will be evaluated. )Tj
0 -2.562 TD
(Now the resulting )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( matches the )Tj
/T1_2 1 Tf
(second)Tj
/T1_0 1 Tf
( rule in the )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( macro, because it has only one argument )Tj
/T1_1 1 Tf
(quux)Tj
/T1_0 1 Tf
(, which )Tj
0 -1.205 TD
(is matched to )Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
(. The whole translation is therefore: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(temp foo\)\))Tj
0 -1.2 TD
(   \(if temp)Tj
T*
(       temp)Tj
T*
(       \(let \(\(temp bar\)\))Tj
T*
(          \(if temp)Tj
T*
(              temp)Tj
T*
(              \(let \(\(temp baz\))Tj
T*
(                 \(if temp)Tj
T*
(                     temp)Tj
T*
(                     quux\)\)\)\)\)\)\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_130.html \(6 of 20\)\11/3/2006 9:12:02 PM)Tj
ET
EMC 

endstreamendobj5264 0 obj<</Length 3938>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Defining New Special \Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 740.0221 Tm
(There are no more macro calls here, so the recursion terminates. )Tj
0 -2.562 TD
(You might have noticed that the example translation of )Tj
/T1_1 1 Tf
(\(or foo bar baz quux\))Tj
/T1_0 1 Tf
( has several different )Tj
0 -1.205 TD
(variables named )Tj
/T1_1 1 Tf
(temp)Tj
/T1_0 1 Tf
( in it. You might have wondered if this could cause problems--is there a\ potential for )Tj
0 -1.2 TD
(accidentally referring to the wrong variable in the wrong place in the c\ode generated by a macro? )Tj
0 -2.557 TD
(The answer no. Scheme's macro system actually does some magic to avoid t\his, which I'll discuss later in a )Tj
0 -1.2 TD
(later section. Scheme actually keeps track of which variables are introd\uced by different applications of )Tj
0 -1.205 TD
(macros, and keeps them distinct--the different variables named )Tj
/T1_1 1 Tf
(temp)Tj
/T1_0 1 Tf
( are treated as though they had different )Tj
0 -1.2 TD
(names, so that macros follow the same scope rules as procedures. \(Schem\e macros are said to be )Tj
/T1_2 1 Tf
(hygienic)Tj
/T1_0 1 Tf
(; what )Tj
T*
(that really means is that they respect lexical scope.\) )Tj
0 -2.557 TD
(You can think of this as a )Tj
/T1_2 1 Tf
(renaming)Tj
/T1_0 1 Tf
(, as though Scheme had sneakily changed the names each time the macro )Tj
0 -1.2 TD
(was applied to transform the expression, and the result were )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(temp_1 foo\)\))Tj
0 -1.2 TD
(   \(if temp_1)Tj
T*
(       temp_1)Tj
T*
(       \(let \(\(temp_2 bar\)\))Tj
T*
(          \(if temp_2)Tj
T*
(              temp_2)Tj
T*
(              \(let \(\(temp_3 baz\))Tj
T*
(                 \(if temp_3)Tj
T*
(                     temp_3)Tj
T*
(                     quux\)\)\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Scheme implements the same scoping rule for macros and their arguments a\s for procedures and their )Tj
0 -1.2 TD
(arguments. When you call a procedure, the argument expressions are evalu\ated at the call site, i.e., in the call )Tj
T*
(site environment, and the values are passed to the procedure--the enviro\nment inside the called procedure )Tj
T*
(doesn't affect the meaning of the argument expressions. Likewise )Tj
0 -2.562 TD
(In writing macros like )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
(, we want to control )Tj
/T1_2 1 Tf
(when)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(whether)Tj
/T1_0 1 Tf
( the arguments are evaluated, but otherwise we )Tj
0 -1.2 TD
(want them to mean the same thing they would if they were arguments to a \procedure. )Tj
0 -2.562 TD
(For example, suppose we call )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( with an argument expression that happens to use a name that's used insi\de )Tj
/T1_1 1 Tf
0 -1.205 TD
(or)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( uses a local variable named )Tj
/T1_1 1 Tf
(temp)Tj
/T1_0 1 Tf
(, and we might just happen to pass it an expression using the name )Tj
/T1_1 1 Tf
T*
(temp)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Consider the following procedure, which uses local variables )Tj
/T1_1 1 Tf
(perm)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(temp)Tj
/T1_0 1 Tf
(, and calls )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( in their scope. )Tj
/T1_1 1 Tf
T*
(\(define \(employee? person\))Tj
0 -1.2 TD
(  \(let \(\(perm \(member person permanent-employees\)\))Tj
T*
(        \(temp \(member person temporary-employees\)\)\))Tj
T*
(     \(or perm temp\)\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_130.html \(7 of 20\)\11/3/2006 9:12:02 PM)Tj
ET
EMC 

endstreamendobj5265 0 obj<</Length 4170>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Defining New Special \Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 738.5175 Tm
(If we translated the or macro naively, without worrying about accidental\ naming conflicts, we'd get this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(employee? person\))Tj
0 -1.2 TD
(  \(let \(\(perm \(member person permanent-employees\)\))Tj
0 -1.2 TD
(        \(temp \(member person temporary-employees\)\)\))Tj
T*
(     \(let \(\(temp perm\))Tj
T*
(        \(if temp)Tj
0 -1.2 TD
(            temp)Tj
T*
(            temp\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(\(This is )Tj
/T1_2 1 Tf
(not)Tj
/T1_0 1 Tf
( what R5RS Scheme macros do!\) )Tj
0 -2.562 TD
(Note what's wrong here. The name )Tj
/T1_1 1 Tf
(temp)Tj
/T1_0 1 Tf
( was passed into the macro from the call site, but it appeared in the )Tj
0 -1.205 TD
(body of the macro inside the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( binding of )Tj
/T1_1 1 Tf
(temp)Tj
/T1_0 1 Tf
(. At the call site, it referred to the "outer" )Tj
/T1_1 1 Tf
(temp)Tj
/T1_0 1 Tf
(, but inside )Tj
0 -1.2 TD
(the macro, it turne out to refer to something else--in the process of mo\ving the expression around, we )Tj
T*
(accidentally changed its meaning. )Tj
ET
0 0 1 RG
1.533 w 10 M 0 j 0 J []0 d 
9.415 451.932 m
381.652 451.932 l
S
0 0 1 rg
BT
/T1_3 1 Tf
18.2514 0 0 18.2514 9.4154 456.5311 Tm
(Implementing More Scheme Special Forms)Tj
0 0 0 rg
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 419.4643 Tm
(As examples of Scheme macros, I'll show how to implement several special\ forms in terms of )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
(. This is )Tj
0 -1.2 TD
(how most real Scheme compilers work--the compiler itself only "understan\ds" how to compile a few special )Tj
T*
(forms directly, but the others can be defined as macros. )Tj
0 -2.562 TD
(Traditionally, the compiler understands )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
(, and all other binding forms are implemented in terms of )Tj
/T1_1 1 Tf
0 -1.205 TD
(lambda)Tj
/T1_0 1 Tf
( and procedure calling. The compiler must also understand a few other sp\ecial forms, )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(set!)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
T*
(quote)Tj
/T1_0 1 Tf
(, a simple version of )Tj
/T1_1 1 Tf
(define)Tj
/T1_0 1 Tf
( [ did I leave one out? ].\) )Tj
ET
0.767 w 
9.415 284.474 m
36.792 284.474 l
S
0 0 1 rg
BT
/T1_4 1 Tf
15.2095 0 0 15.2095 9.4154 286.7734 Tm
(let)Tj
0 0 0 rg
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 250.5013 Tm
(Recall that in chapter [ whatever ], I explained how the semantics of )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( can be explained in terms of )Tj
/T1_1 1 Tf
0 -1.205 TD
(lambda)Tj
/T1_0 1 Tf
(. For any )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( expression, which binds variables and evaluates body expressions in tha\t scope, there is )Tj
T*
(an exactly equivalent expression using )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( and procedure calling. The )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( creates a procedure )Tj
0 -1.205 TD
(which will bind the variables as its argument variables, and execute the\ body of the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(. This )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( is then )Tj
0 -1.2 TD
(used in a combination--calling the procedure makes it bind variables whe\n it accepts arguments. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-syntax let \(\))Tj
0 -1.2 TD
(   \(syntax-rules)Tj
T*
(     \(\(_ \(\(var value-expr\) ...\) body-expr ...\)  ; pattern)Tj
T*
(      \(\(lambda \(var ...\))Tj
T*
(          body-expr ...\))Tj
T*
(       \(value-expr ...\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Here I've used an underscore to stand for the keyword )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( in the macro call pattern. This is allowable, and )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_130.html \(8 of 20\)\11/3/2006 9:12:02 PM)Tj
ET
EMC 

endstreamendobj5266 0 obj<</Length 4320>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Defining New Special \Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 755.1462 Tm
(recommended, because it avoids having to write the keyword in several pl\aces. \(If you had to write out the )Tj
0 -1.2 TD
(keyword in each pattern, it would make it more difficult and error-prone\ to change the name of a macro.\) )Tj
0 -2.562 TD
(I've also taken advantage of the fact that Scheme is pretty smart about \patterns using the )Tj
/T1_1 1 Tf
(...)Tj
/T1_0 1 Tf
( \(ellipsis\) symbol. )Tj
0 -1.2 TD
(The pattern has two ellipses. One matches any number of binding forms \(\variable names and initial value )Tj
T*
(expressions\); the other matches any number of body expressions. )Tj
0 -2.562 TD
(The body expressions matched by )Tj
/T1_1 1 Tf
(body-expr ...)Tj
/T1_0 1 Tf
( are simply used in the body of the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression. )Tj
0 -2.562 TD
(The expressions matched by )Tj
/T1_1 1 Tf
(\(var value-expr\) ...)Tj
/T1_0 1 Tf
( are used differently, however--they are not simply )Tj
0 -1.205 TD
(substituted into the macro template. Instead, )Tj
/T1_1 1 Tf
(\(var ...\))Tj
/T1_0 1 Tf
( is used to generate the argument list for the )Tj
/T1_1 1 Tf
T*
(lambda)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(value-expr ...)Tj
/T1_0 1 Tf
( is used to generate the list of initial expressions. )Tj
0 -2.557 TD
(Scheme's macro system is smart enough to figure out what's going on. If \the pattern contains an ellipsis )Tj
0 -1.205 TD
(following a compound form \(like )Tj
/T1_1 1 Tf
(\(var init-expr\) ...)Tj
/T1_0 1 Tf
(, and the template uses one of the pattern )Tj
0 -1.2 TD
(variables from that compound form \(followed by an ellipsis\), then Sche\me assumes you want )Tj
/T1_2 1 Tf
(the )Tj
T*
(corresponding part)Tj
/T1_0 1 Tf
( of each form matched by the pattern form. )Tj
0 -2.557 TD
(If we think of the expressions as s-expressions, we've matched a pattern\ that is one list of two-element lists, and )Tj
0 -1.205 TD
(restructured it into two separate lists of elements. \(That is, we're go\ing from a list of )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
(s and )Tj
/T1_1 1 Tf
(cadr)Tj
/T1_0 1 Tf
(s to a list )Tj
T*
(of )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
(s and a list of )Tj
/T1_1 1 Tf
(cadr)Tj
/T1_0 1 Tf
(s.\) )Tj
0 -2.557 TD
(As an example of use, consider )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(var-a \(some-procedure foo\)\))Tj
0 -1.2 TD
(      \(var-b \(some-procedure bar\)\)\))Tj
0 -1.2 TD
(   \(quux var-a\))Tj
T*
(   \(quux var-b\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(which translates to )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(\(lambda \(var-a var-b\))Tj
0 -1.2 TD
(    \(quux var-a\))Tj
T*
(    \(quux var-b\)\))Tj
T*
( \(some-procedure foo\))Tj
T*
( \(some-procedure bar\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
([ The following is out of place--here I should just be showing some uses\ of macros. The problem is that I don't )Tj
0 -1.2 TD
(want to lie and pretend that it's all very simple--Scheme does something\ sophisticated when you write binding )Tj
T*
(contstructs as macros... This stuff will all be clearer after I've talke\d about hygiene problems with Lisp macros, )Tj
T*
(and laziness and call-by-name... how to fwd ref gracefully? ] An extraor\dinarily astute and thoughtful reader )Tj
T*
(might wonder if there's something wrong here. \(Luckily, there's actuall\y nothing to worry about.\) Recall that )Tj
0 -1.205 TD
(when discussing )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
(, I said that Scheme is careful to treat names introduced by a macro as \though they were )Tj
T*
(distinct, effectively renaming variables introduced in a macro. What abo\ut the argument variables to )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( )Tj
T*
(in this example? One might think )Tj
/T1_1 1 Tf
(var-a)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(var-b)Tj
/T1_0 1 Tf
( would just be renamed and we'd get: )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_130.html \(9 of 20\)\11/3/2006 9:12:02 PM)Tj
ET
EMC 

endstreamendobj5267 0 obj<</Length 4023>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Defining New Special \Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.1815 0 0 13.1815 9.4154 735.4986 Tm
(\(\(lambda \(var-a-1 var-b-1\))Tj
0 -1.2 TD
(    \(quux var-a\))Tj
T*
(    \(quux var-b\)\))Tj
0 -1.2 TD
( \(some-procedure foo\))Tj
0 -1.2 TD
( \(some-procedure bar\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Clearly, this isn't what we want--we )Tj
/T1_2 1 Tf
(want)Tj
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
(var-a)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(var-b)Tj
/T1_0 1 Tf
( in the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( body to refer to the variables )Tj
0 -1.205 TD
(introduced in by )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
(---that's what it's for. )Tj
0 -2.557 TD
(Scheme's macro processor is smart enough to infer that this is what you \want. When you write a macro that )Tj
0 -1.2 TD
(accepts a )Tj
/T1_2 1 Tf
(name)Tj
/T1_0 1 Tf
( as an argument and )Tj
/T1_2 1 Tf
(binds)Tj
/T1_0 1 Tf
( it, Scheme assumes you're doing that for a good reason. If you then )Tj
T*
(take another argument to the same macro and use it in the scope of that \new variable, Scheme assumes you )Tj
0 -1.205 TD
(want occurrences of the name to refer to the )Tj
/T1_1 1 Tf
(new)Tj
/T1_0 1 Tf
( variable. )Tj
0 -2.557 TD
(That is, Scheme uses an algorithm that checks what you do with names in \forms that get passed as arguments )Tj
0 -1.2 TD
(into a macro. If you just use them in the normal ways, evaluating or ass\igning to them as variable names, )Tj
T*
(Scheme assumes you mean to refer to whatever those names refer to at the\ call site of the macro. \(That's )Tj
0 -1.205 TD
(normal lexical scope.\) But if you take the name and use it )Tj
/T1_1 1 Tf
(as the name of a new variable)Tj
/T1_0 1 Tf
(, Scheme )Tj
0 -1.2 TD
(assumes you're defining a binding construct, and that any other argument\s you put in that scope should see the )Tj
T*
(new binding, instead of being scoped at the call site.\) )Tj
0 -2.562 TD
(Scheme can generally assume this, because if you're not implementing a s\coping binding form \(like )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( or )Tj
/T1_1 1 Tf
0 -1.205 TD
(do)Tj
/T1_0 1 Tf
(\), there's no reason for a macro to accept a name as an argument and th\en turn around and bind it. )Tj
ET
0 0 1 RG
0.767 w 10 M 0 j 0 J []0 d 
9.415 341.081 m
45.918 341.081 l
S
0 0 1 rg
BT
/T1_3 1 Tf
15.2095 0 0 15.2095 9.4154 343.3811 Tm
(let*)Tj
0 0 0 rg
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 307.109 Tm
(Once we have )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, we can implement )Tj
/T1_1 1 Tf
(let*)Tj
/T1_0 1 Tf
( in terms of that. We simply write a recursive macro that peels off )Tj
0 -1.205 TD
(one binding form at a time and generates a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, so that we get a nested set of )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(s that each bind one )Tj
0 -1.2 TD
(variable. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-syntax let* \(\))Tj
0 -1.2 TD
(   \(syntax_rules)Tj
T*
(      \(\(_ \(\) body-expr ...\))Tj
T*
(       \(begin body-expr ...\)\))Tj
0 -1.2 TD
(      \(\(_ \(\(var1 value-expr1\)\(var value-expr\) ...\))Tj
T*
(       \(let \(\(var1 value-expr\)\))Tj
T*
(          \(_ \(\(var value-expr\) ...\))Tj
T*
(             body-expr ...\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(This macro uses two syntax rules. The first is the termination case for \recursive macroexpansion. A )Tj
/T1_1 1 Tf
(let*)Tj
/T1_0 1 Tf
( that )Tj
0 -1.205 TD
(has an empty binding form \(i.e., binds zero variables\) should be trans\lated into a )Tj
/T1_1 1 Tf
(begin)Tj
/T1_0 1 Tf
(; it will just sequence )Tj
0 -1.2 TD
(the body expressions. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_130.html \(10 of 20\)\11/3/2006 9:12:02 PM)Tj
ET
EMC 

endstreamendobj5268 0 obj<</Length 4813>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Defining New Special \Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 755.0828 Tm
(If it's a syntax \(macro\) binding, )Tj
/T1_1 1 Tf
(eval-list)Tj
/T1_0 1 Tf
( it extracts the transfromer procedure from the binding )Tj
0 -1.205 TD
(information, and calls )Tj
/T1_1 1 Tf
(eval-macro-call)Tj
/T1_0 1 Tf
( to evaluate the list expression. )Tj
0 -2.562 TD
(Here's )Tj
/T1_1 1 Tf
(eval-macro-call)Tj
/T1_0 1 Tf
(: )Tj
/T1_1 1 Tf
T*
(\(define \(eval-macro-call transformer expr envt\))Tj
0 -1.2 TD
(   \(eval \(transformer expr\) envt\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(All it does is apply the transformation procedure to the expression, and\ call )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
( recursively to evaluate the )Tj
0 -1.2 TD
(result. )Tj
0 -2.557 TD
(This is sufficient to be able to )Tj
/T1_2 1 Tf
(use)Tj
/T1_0 1 Tf
( macros, once they're defined. We also need to be able to define macros,\ so )Tj
0 -1.2 TD
(that we can use them. )Tj
0 -2.562 TD
(For that, we'll add one special form to our interpreter, )Tj
/T1_1 1 Tf
(define-rewriter)Tj
/T1_0 1 Tf
(, which takes a name symbol and a )Tj
0 -1.2 TD
(transformation procedure as its arguments. )Tj
0 -2.562 TD
([ Show )Tj
/T1_1 1 Tf
(define-rewriter)Tj
/T1_0 1 Tf
( ... has to accept a closure in our language, not the underlying Scheme \] )Tj
ET
0 0 1 RG
0.664 w 10 M 0 j 0 J []0 d 
9.415 437.67 m
104.322 437.67 l
S
0 0 1 rg
BT
/T1_3 1 Tf
13.1815 0 0 13.1815 9.4154 439.6633 Tm
(define-macro)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.695 TD
(Once we've added define-rewriter to our interpreter, we don't have to mo\dify the interpreter at all to add )Tj
/T1_1 1 Tf
0 -1.205 TD
(define-macro)Tj
/T1_0 1 Tf
(. We can simply define it as a macro in the languauge we interpret, usin\g )Tj
/T1_1 1 Tf
(define-)Tj
0 -1.205 TD
(rewriter)Tj
/T1_0 1 Tf
( "from the inside." We had to add )Tj
/T1_1 1 Tf
(define-rewriter)Tj
/T1_0 1 Tf
( to the language implementation itself, but )Tj
0 -1.2 TD
(once that's done, we can bootstrap a better macro system with no extra h\elp from the interpreter. )Tj
/T1_1 1 Tf
0 -2.562 TD
(define-macro)Tj
/T1_0 1 Tf
( does three things: )Tj
/T1_4 1 Tf
6.5908 0 0 6.5908 33.6252 289.0785 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 289.0785 Tm
(It analyzes the calling form of a macro \(the argument pattern\) and gen\erates code to )Tj
/T1_2 1 Tf
(destructure)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(expressions of that form. )Tj
/T1_4 1 Tf
6.5908 0 0 6.5908 33.6252 257.4428 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 257.4428 Tm
(it creates a procedure that will do the destructuring )Tj
/T1_2 1 Tf
(and)Tj
/T1_0 1 Tf
( the transformation expressed in the macro body. )Tj
/T1_4 1 Tf
6.5908 0 0 6.5908 33.6252 241.625 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 241.625 Tm
(it installs a new syntax binding in the current binding environment, hol\ding that transformation )Tj
T*
(procedure. )Tj
-2.857 -2.557 Td
(Bear in mind that the following code is )Tj
/T1_2 1 Tf
(not)Tj
/T1_0 1 Tf
( code in the interpreter, but code to be interpreted, to create a )Tj
/T1_1 1 Tf
0 -1.205 TD
(define-macro)Tj
/T1_0 1 Tf
( macro, from inside our language. )Tj
0 -2.562 TD
([ show )Tj
/T1_1 1 Tf
(define-macro)Tj
/T1_0 1 Tf
( ... pattern matching on arg form and creating a routine to destructure \and bind... ] )Tj
ET
0.5 0.5 0.5 rg
9.415 111.589 m
9.415 113.472 l
602.585 113.472 l
601.643 112.53 l
10.357 112.53 l
10.357 112.53 l
h
f
0.875 0.875 0.875 rg
602.585 113.472 m
602.585 111.589 l
9.415 111.589 l
10.357 112.53 l
601.643 112.53 l
601.643 112.53 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 93.6765 Tm
(Go to the )Tj
ET
61.772 91.683 m
83.008 91.683 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 61.7725 93.6765 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
89.599 91.683 m
134.996 91.683 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 89.5987 93.6765 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
141.587 91.683 m
164.285 91.683 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 141.5867 93.6765 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
170.876 91.683 m
189.185 91.683 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 170.8761 93.6765 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
236.415 91.683 m
323.545 91.683 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 236.4147 93.6765 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_130.html \(20 of 20\)\11/3/2006 9:12:02 PM)Tj
ET
EMC 

endstreamendobj5269 0 obj<</Length 5475>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Defining New Special \Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 755.0828 Tm
(The recursive rule says that a )Tj
/T1_1 1 Tf
(let*)Tj
/T1_0 1 Tf
( with one or more binding subforms should translate into a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( that )Tj
0 -1.205 TD
(performs the first binding and another )Tj
/T1_1 1 Tf
(let*)Tj
/T1_0 1 Tf
( to bind the rest and evaluate the body. \(Note that I've used the )Tj
/T1_1 1 Tf
(_)Tj
/T1_0 1 Tf
( )Tj
T*
(shorthand for )Tj
/T1_1 1 Tf
(let*)Tj
/T1_0 1 Tf
( in the recursive call, as well as in the pattern.\) )Tj
0 -2.562 TD
(As with )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, Scheme recognizes this as a binding construct, and does the right thin\g--it notices that the )Tj
/T1_1 1 Tf
(var)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(argument passed into the macro is used as a name of a new binding in the\ macro, so it assumes that the new )Tj
T*
(binding should be visible to the body expressions. )Tj
ET
0 0 1 RG
0.767 w 10 M 0 j 0 J []0 d 
9.415 620.092 m
45.918 620.092 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.2095 0 0 15.2095 9.4154 622.3919 Tm
(cond)Tj
ET
1.278 w 
9.415 580.345 m
90.558 580.345 l
S
BT
/T1_3 1 Tf
15.2095 0 0 15.2095 9.4154 584.1779 Tm
(Discussion)Tj
0 0 0 rg
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 548.1595 Tm
(Scheme macros also have several features I haven't demonstrated, to make\ it easier to write more sophisticated )Tj
0 -1.205 TD
(macros than )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
(, and I'll demonstrate those later, too. )Tj
0 -2.557 TD
(In the next section, though, I will discuss a different and simpler kind\ of macro system, which is )Tj
/T1_4 1 Tf
(not)Tj
/T1_0 1 Tf
( standard )Tj
0 -1.2 TD
(Scheme, and )Tj
/T1_4 1 Tf
(does)Tj
/T1_0 1 Tf
( have problems with variable names. )Tj
ET
1.533 w 
9.415 439.776 m
163.585 439.776 l
S
0 0 1 rg
BT
/T1_3 1 Tf
18.2514 0 0 18.2514 9.4154 444.3756 Tm
(Lisp-style Macros)Tj
0 0 0 rg
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 407.3723 Tm
(In this section, I'll discuss a simple kind of macro system that isn't s\tandard in Scheme \(and you might be able )Tj
0 -1.2 TD
(to skim this section without too much loss\) but is interesting for seve\ral reasons. )Tj
/T1_5 1 Tf
6.5908 0 0 6.5908 33.6252 357.8474 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 357.8474 Tm
(It is very easy to explain how it works--it is a real macro system, but \one which is very easy to )Tj
T*
(implement. We can add it to our interpreter with a few function definiti\ons. This should clear up any )Tj
T*
(confusion about what macros basically are, and how to think about them. \\(It's also another nice example )Tj
0 -1.205 TD
(of Scheme programming--we'll get to cheat and use )Tj
/T1_1 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
( to do most of our work for us. Then )Tj
0 -1.205 TD
(I'll show how to implement )Tj
/T1_1 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
(, too.\) )Tj
/T1_5 1 Tf
6.5908 0 0 6.5908 33.6252 278.6312 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 278.6312 Tm
(The simple Lisp-style macro system also demonstrates two important issue\s in macros: the power of )Tj
0 -1.2 TD
(procedural transformation, and problems with scoping when code is transf\ormed. An understanding of )Tj
T*
(Lisp macros can only help later when we return to Scheme macros for an i\n-depth discussion of how to )Tj
0 -1.2 TD
(work and how to use them. )Tj
/T1_5 1 Tf
6.5908 0 0 6.5908 33.6252 215.3598 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 215.3598 Tm
(The new standard Scheme macro system is safer than Lisp macros, and very\ useful, but not quite as )Tj
0 -1.2 TD
(powerful. Sometimes it's they're still useful, if you use them for simpl\e things they're appropriate for. )Tj
T*
(Some of our later examples will use this kind of macro. )Tj
/T1_5 1 Tf
6.5908 0 0 6.5908 33.6252 167.9063 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 167.9063 Tm
([ R5RS will have macros, but IEEE/ANSI Scheme does not, and may not for \some time. Most Schemes )Tj
T*
(do support Lisp-style macros, even though they're not part of the standa\rd... and you can use them to )Tj
T*
(bootstrap a portable implementation of R5RS macros. [Guile uses Lisp-sty\le macros fairly heavily, so )Tj
0 -1.2 TD
(Guile programmers should definitely pay attention.] ] )Tj
/T1_5 1 Tf
6.5908 0 0 6.5908 33.6252 104.6349 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 104.6349 Tm
([ You might need to program in Lisp some day, or talk intelligently abou\t Lisp. ] )Tj
/T1_5 1 Tf
6.5908 0 0 6.5908 33.6252 88.8171 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 88.8171 Tm
([ People keep reinventing them, and not noticing that they were invented\ decades ago, for Lisp--I've )Tj
0 -1.2 TD
(seen at least three languages with reinventions of Lisp macros, usually \in an inferior form. I want to )Tj
T*
(make it clear what Lisp macros do, and what's good and bad about them, t\o avoid further awkward )Tj
0 -1.2 TD
(reinventions of the wheel. ] )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_130.html \(11 of 20\)\11/3/2006 9:12:02 PM)Tj
ET
EMC 

endstreamendobj5270 0 obj<</Length 3782>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Defining New Special \Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 1 RG
1.278 w 10 M 0 j 0 J []0 d 
9.415 733.338 m
212.264 733.338 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.2095 0 0 15.2095 9.4154 737.1711 Tm
(Ultra-simple Lispish Macros)Tj
0 0 0 rg
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 701.1528 Tm
(The classic macro system is the Lisp macro system, which allows the user\ to define an arbitrary Lisp procedure )Tj
0 -1.2 TD
(to rewrite a new construct. \(Most dialects of Lisp, e.g., Common Lisp, \have a macro facility of the same )Tj
0 -1.205 TD
(general kind, called )Tj
/T1_2 1 Tf
(defmacro)Tj
/T1_0 1 Tf
(.\) We'll talk for a moment about a simplified version of Lisp-style mac\ros. )Tj
0 -1.2 TD
(Later we'll explain why and how Scheme macros are better, at least for m\ost purposes. )Tj
0 -2.557 TD
(Suppose we have a macro system that we can use to tell the interpreter o\r compiler that when it sees an )Tj
0 -1.2 TD
(expression that's a list starting with a particular symbol, it should ca\ll a particular routine to rewrite that )Tj
T*
(expression, and use the rewritten version in its place. )Tj
0 -2.562 TD
(For the )Tj
/T1_2 1 Tf
(or)Tj
/T1_0 1 Tf
( example, we want to tell the compiler that if it sees an expression of \the form )Tj
/T1_2 1 Tf
(\(or )Tj
/T1_3 1 Tf
(a b)Tj
/T1_2 1 Tf
(\))Tj
/T1_0 1 Tf
( it should )Tj
0 -1.2 TD
(rewrite that into an expression of the form )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(let \(\(temp a\))Tj
0 -1.2 TD
(   \(if temp)Tj
0 -1.2 TD
(       temp)Tj
T*
(       b\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(So now we want to tell the compiler how to rewrite expressions like that\. Since Lisp expressions are )Tj
0 -1.2 TD
(represented as lists, we can use normal list operations to examine the e\xpression and generate the new )Tj
0 -1.205 TD
(expression. Let's assume our system has a special form called )Tj
/T1_2 1 Tf
(define-rewriter)Tj
/T1_0 1 Tf
( that lets us specify a )Tj
0 -1.2 TD
(procedure of one argument to write a particular kind of expression. )Tj
0 -2.562 TD
(Here's a rather ugly rewriter macro for )Tj
/T1_2 1 Tf
(or)Tj
/T1_0 1 Tf
(: )Tj
/T1_2 1 Tf
T*
(; OR with subtle scope bug)Tj
0 -1.2 TD
(\(define-rewriter 'or          ; tell compiler how to rewrite \(or ...\)\)Tj
T*
(   \(lambda \(expr\))Tj
0 -1.2 TD
(      \(let \(\(a \(cadr expr\)\)              )Tj
T*
(            \(b \(caddr expr\)\)\))Tj
T*
(         \(cons 'let                                 ; make LET form)Tj
T*
(               \(cons \(list \(list 'temp a\)\)\)         ; make let bin\ding form)Tj
T*
(                     \(append '\(if temp temp\)        ; make IF form)Tj
T*
(                             \(list b\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(There's actually a scoping problem with this macro, which I'll ignore fo\r now--it's the problem that define-)Tj
0 -1.2 TD
(syntax fixes. Later, I'll show what's wrong and fix it, but for a while \I just want to talk about basic syntax of )Tj
T*
(Lisp-style macros. )Tj
0 -2.557 TD
(Now when the interpreter or compiler is about to evaluate an expression \represented as a list, it will check to )Tj
0 -1.205 TD
(see if it starts with )Tj
/T1_2 1 Tf
(or)Tj
/T1_0 1 Tf
(. If so, it will pass the expression to the above rewriter procedure, an\d interpret or )Tj
0 -1.2 TD
(compile the resulting list instead. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_130.html \(12 of 20\)\11/3/2006 9:12:02 PM)Tj
ET
EMC 

endstreamendobj5271 0 obj<</Length 4164>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Defining New Special \Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 749.3635 Tm
(\(Actually, macroexpansion doesn't have to happen just before interpreti\ng or compiling a particular expression. )Tj
0 -1.2 TD
(The system might rewrite all of the macro calls in a whole procedure, or\ a whole program, before feeding the )Tj
T*
(procedure or program to the normal part of the compiler. It's easier to \understand macros if they're interleaved )Tj
0 -1.2 TD
(with expression evaluation or compilation, though--it's just an extra ca\se in the main dispatch of your )Tj
0 -1.2 TD
(interpreter or compiler.\) )Tj
0 -2.562 TD
(Implementing )Tj
/T1_1 1 Tf
(define-rewriter)Tj
/T1_0 1 Tf
( is easy. \(We'll show an implementation for our example interpreter in \a )Tj
0 -1.2 TD
(later section.\) We only need to do two simple things: )Tj
/T1_2 1 Tf
6.5908 0 0 6.5908 33.6252 602.7967 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 602.7967 Tm
(Provide a procedure that can add rewriter procedures to a table, keyed b\y the name of the forms they )Tj
0 -1.2 TD
(rewrite. )Tj
/T1_2 1 Tf
6.5908 0 0 6.5908 33.6252 571.0975 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.1815 0 0 13.1815 47.0769 571.0975 Tm
(Modify the interpreter \(or compiler\) to check whether expressions of t\he form )Tj
/T1_1 1 Tf
(\()Tj
/T1_3 1 Tf
(symbol)Tj
/T1_0 1 Tf
( )Tj
/T1_3 1 Tf
(...)Tj
/T1_1 1 Tf
(\))Tj
/T1_0 1 Tf
( begin with )Tj
T*
(the name of a rewriter macro, and if so, to call the rewriter to transfo\rm the expression before )Tj
T*
(interpreting \(or compiling\) it. )Tj
-2.857 -2.557 Td
(That's all. )Tj
0 -2.557 TD
(The above system works, but it has several awkwardnesses. One is that it\ is tedious to write routines that )Tj
0 -1.205 TD
(construct s-expressions directly. We can use )Tj
/T1_1 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
( to make this easier. It will allow us to simply write )Tj
0 -1.2 TD
(the s-expression we want the macro to produce, and use unquote to fill i\n the parts we get from the arguments )Tj
T*
(to the macro. )Tj
/T1_1 1 Tf
0 -2.562 TD
(; OR with subtle scope bug)Tj
0 -1.2 TD
(\(define-rewriter 'or       ; tell compiler how to rewrite \(or ...\))Tj
T*
(   \(lambda \(expr\))Tj
T*
(      \(let \(\(a \(cadr expr\)\)              )Tj
T*
(            \(b \(caddr expr\)\)\))Tj
T*
(         `\(let \(\(temp ,a\)\) ; return an s-expression of this form)Tj
T*
(             \(if temp)Tj
T*
(                 temp)Tj
T*
(                 ,b\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(This is much easier to read. The backquoted expression is now readable a\s code--it tells us the general structure )Tj
0 -1.2 TD
(of the code produced by the macro, and the commas indicate the parts tha\t vary depending on the arguments )Tj
T*
(passed to the macro. )Tj
0 -2.562 TD
(Note that there is no magic here: )Tj
/T1_1 1 Tf
(define-rewriter)Tj
/T1_0 1 Tf
( and quasiquotation can be used independently, and are )Tj
0 -1.2 TD
(very different things. It just happens that quasiquotation is often very\ useful for the things you want to do in )Tj
0 -1.2 TD
(macros--returning an s-expression of a particular form. )Tj
0 -2.557 TD
(This simple rewriting system is still rather tedious to use, for several\ of reasons. First, we always have to quote )Tj
0 -1.205 TD
(the name of the special form we're defining. Second, it's tedious to wri\te a )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( every time. Third, it's )Tj
0 -1.2 TD
(tedious to always have to destructure the expression we're rewriting to \get the parts we want to put into the )Tj
T*
(expression we generate. \("Destructure" means take apart to get at the c\omponents--in this case, )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_130.html \(13 of 20\)\11/3/2006 9:12:02 PM)Tj
ET
EMC 

endstreamendobj5272 0 obj<</Length 3741>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Defining New Special \Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 755.1462 Tm
(subexpressions.\) )Tj
ET
0 0 1 RG
1.107 w 10 M 0 j 0 J []0 d 
9.415 717.889 m
162.506 717.889 l
S
0 0 1 rg
BT
/T1_1 1 Tf
13.1815 0 0 13.1815 9.4154 721.2107 Tm
(Better Lisp-style Macros)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(It would be nice if the macro facility allowed you to declare the argume\nt pattern to the macro, and )Tj
0 -1.205 TD
(automatically destructured it for you. Most Lisp systems have a special \form called )Tj
/T1_2 1 Tf
(defmacro)Tj
/T1_0 1 Tf
( that does this )Tj
0 -1.205 TD
(for you, and avoids the need to write a )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression every time. For consistency with Scheme naming )Tj
T*
(conventions, we'll call our equivalent )Tj
/T1_2 1 Tf
(define-macro)Tj
/T1_0 1 Tf
(. )Tj
/T1_2 1 Tf
0 -2.562 TD
(define-macro)Tj
/T1_0 1 Tf
( implicitly creates a transformation procedure whose body is the body of\ the define-macro )Tj
0 -1.2 TD
(form. It also implicitly destructures the expression to be transformed, \and passes the subexpressions to the )Tj
T*
(transformation procedure. )Tj
0 -2.562 TD
(Using )Tj
/T1_2 1 Tf
(define-macro)Tj
/T1_0 1 Tf
(, we can write )Tj
/T1_2 1 Tf
(or)Tj
/T1_0 1 Tf
( this way, specifying that )Tj
/T1_2 1 Tf
(or)Tj
/T1_0 1 Tf
( takes two arguments: )Tj
/T1_2 1 Tf
T*
(; OR with subtle scope bug)Tj
0 -1.2 TD
(\(define-macro \(or a b\))Tj
T*
(   `\(let \(\(temp ,a\)\))Tj
T*
(       \(if temp)Tj
T*
(           temp)Tj
T*
(           ,b\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(We didn't have to write the code that destructures the form into )Tj
/T1_2 1 Tf
(a)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(b)Tj
/T1_0 1 Tf
(---)Tj
/T1_2 1 Tf
(define-macro)Tj
/T1_0 1 Tf
( did that for us. We )Tj
0 -1.205 TD
(also didn't have to explicitly write a )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
( to generate the transformation procedure; )Tj
/T1_2 1 Tf
(define-macro)Tj
/T1_0 1 Tf
( did )Tj
0 -1.2 TD
(that too. )Tj
0 -2.562 TD
(This makes the syntax of )Tj
/T1_2 1 Tf
(define-macro)Tj
/T1_0 1 Tf
( similar to a procedure-defining )Tj
/T1_2 1 Tf
(define)Tj
/T1_0 1 Tf
( form. Still, you should )Tj
0 -1.2 TD
(always remember that you're not writing a normal procedure: you're writi\ng a procedure to transform code )Tj
0 -1.2 TD
(before it is interpreted or compiled. The combination of automatic argum\ent destructuring and template-filling )Tj
T*
(\(using backwuote and comma\) makes it easier to do this in many cases. \)Tj
0 -2.557 TD
(Like a procedure, a macro can take a variable number of arguments, with \the non-required ones automatically )Tj
0 -1.205 TD
(packaged up into a rest list. We can define a variable-arity )Tj
/T1_2 1 Tf
(or)Tj
/T1_0 1 Tf
( with )Tj
/T1_2 1 Tf
(define-macro)Tj
/T1_0 1 Tf
(: )Tj
0 -2.557 TD
([ need to check this example--it's off the top of my head ] )Tj
/T1_2 1 Tf
0 -2.562 TD
(; variable arity OR with subtle scope bug)Tj
0 -1.2 TD
(\(define-macro \(or . args\))Tj
T*
(   \(if \(null? args\)  ; zero arg or?)Tj
T*
(       #f)Tj
T*
(       \(if \(null? \(cdr? arg-exprs\)\) ; one arg or?)Tj
T*
(           \(car arg-exprs\)          )Tj
T*
(           `\(let \(\(temp ,\(car arg-exprs\)\)\))Tj
T*
(               \(if temp)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_130.html \(14 of 20\)\11/3/2006 9:12:02 PM)Tj
ET
EMC 

endstreamendobj5273 0 obj<</Length 4107>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Defining New Special \Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.1815 0 0 13.1815 9.4154 755.0828 Tm
(                   temp)Tj
0 -1.2 TD
(                   \(or ,@\(cdr arg-exprs\)\)\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Here we're just accepting the list of argument expressions to the )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( expression as the rest list )Tj
/T1_1 1 Tf
(args)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(If it's an empty list, we return )Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
(. Keep in mind that we're returning the )Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
( object, which will be used in place )Tj
0 -1.205 TD
(of the )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( expression, i.e. as the literal )Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
( to use in the resulting code. \(Conceptually, it's a fragment of a )Tj
0 -1.2 TD
(program code, even though that program fragment will in fact return the \value #f when it executes, because #f )Tj
T*
(is self-evaluating. We could have quoted it to make that clearer.\) )Tj
0 -2.557 TD
(If it's a one-element list, we just return the code \(s-expression\) for\ the first argument. )Tj
0 -2.562 TD
(If it's a list of more than one argument expression, we return an s-expr\ession for the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( with a nested )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(. )Tj
0 -1.205 TD
(\(Note the use of )Tj
/T1_1 1 Tf
(unquote-splicing)Tj
/T1_0 1 Tf
( \()Tj
/T1_1 1 Tf
(,@)Tj
/T1_0 1 Tf
(\) to splice the )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
( of the expression list into the )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( form as its )Tj
0 -1.2 TD
(whole list of arguments.\) )Tj
0 -2.557 TD
(You should be aware, though, that what you're really doing is specifying\ a procedure for transforming )Tj
0 -1.2 TD
(expressions before they're compiled or interpreted, and that quasiquote \is just syntactic sugar for procedural )Tj
T*
(code that constructs an s-expression. )Tj
/T1_1 1 Tf
0 -2.562 TD
(define-macro)Tj
/T1_0 1 Tf
( is easy to write, once we've got )Tj
/T1_1 1 Tf
(define-rewriter)Tj
/T1_0 1 Tf
(; we don't have to modify the )Tj
0 -1.205 TD
(interpreter or compiler at all. We just use )Tj
/T1_1 1 Tf
(define-rewriter)Tj
/T1_0 1 Tf
( to write )Tj
/T1_1 1 Tf
(define-macro)Tj
/T1_0 1 Tf
( as a simple macro. )Tj
T*
(We'll make )Tj
/T1_1 1 Tf
(define-macro)Tj
/T1_0 1 Tf
( a macro that generates transformation procedures, and uses )Tj
/T1_1 1 Tf
(define-)Tj
T*
(rewriter)Tj
/T1_0 1 Tf
( to register them with the interpreter. )Tj
ET
0 0 1 RG
1.107 w 10 M 0 j 0 J []0 d 
9.415 341.079 m
218.171 341.079 l
S
0 0 1 rg
BT
/T1_2 1 Tf
13.1815 0 0 13.1815 9.4154 344.4009 Tm
(Problems With Lisp-Style Macros)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.687 TD
(Earlier we alluded to a lurking bug in our )Tj
/T1_1 1 Tf
(define-rewriter)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(define-macro)Tj
/T1_0 1 Tf
( definitions for )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Suppose we use the )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( macro this way--we check to see if someone is employed as either a perm\anent or )Tj
0 -1.2 TD
(temporary employee, and generate a w2 tax form if either of those is tru\e. )Tj
/T1_1 1 Tf
0 -2.562 TD
(  \(let \(\(temp \(member x temporary-employees\)\))Tj
0 -1.2 TD
(        \(perm \(member x permanent-employees\)\)\))Tj
T*
(     \(if \(or temp perm\))Tj
T*
(         \(generate-w2 x\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(The expansion of this is: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(temp \(member x temporary-employees\)\))Tj
0 -1.2 TD
(      \(perm \(member x permanent-employees\)\)\))Tj
T*
(   \(if \(let \(\(temp temp\)\))Tj
T*
(          \(if temp)Tj
T*
(              temp)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_130.html \(15 of 20\)\11/3/2006 9:12:02 PM)Tj
ET
EMC 

endstreamendobj5274 0 obj<</Length 4282>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Defining New Special \Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.1815 0 0 13.1815 9.4154 755.0828 Tm
(              temp\)\)\)    ;BUG! \(should refer to outer temp, not inne\r\))Tj
0 -1.2 TD
(       \(generate-w2 x\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(The problem here is that we happened to use the same name, )Tj
/T1_1 1 Tf
(temp)Tj
/T1_0 1 Tf
(, at both the call site and inside the macro )Tj
0 -1.205 TD
(definition. The reference to )Tj
/T1_1 1 Tf
(temp)Tj
/T1_0 1 Tf
( in )Tj
/T1_1 1 Tf
(\(or temp perm\))Tj
/T1_0 1 Tf
( gets "captured" by the binding of temp introduced in )Tj
0 -1.2 TD
(the macro. )Tj
0 -2.562 TD
(This occurs because a normal macro facility does not understand issues o\f name binding--the name )Tj
/T1_1 1 Tf
(temp)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(refers to one program variable at the call site, and another at the site\ of its use inside the macro--and the )Tj
0 -1.205 TD
(macroexpander doesn't know the difference. To the macroexpansion mechani\sm, the symbol )Tj
/T1_1 1 Tf
(temp)Tj
/T1_0 1 Tf
( is just a )Tj
0 -1.2 TD
(symbol object, not a name of anything in particular, i.e., a particular \program variable. )Tj
0 -2.557 TD
(There are two ways to get around this problem. One is for the macro-writ\er to be very careful to use names that )Tj
0 -1.2 TD
(are very unlikely to conflict with other names. This makes code very ugl\y, because of the unnatural names )Tj
T*
(given to variables, but more importantly, it's harder to get right than \it may seem. The other way around the )Tj
0 -1.205 TD
(problem is to get a much smarter macro facility, like the new Scheme )Tj
/T1_1 1 Tf
(define-syntax)Tj
/T1_0 1 Tf
( macro system. )Tj
ET
0 0 1 RG
1.107 w 10 M 0 j 0 J []0 d 
9.415 474.09 m
230.615 474.09 l
S
0 0 1 rg
BT
/T1_2 1 Tf
13.1815 0 0 13.1815 9.4154 477.4116 Tm
(Ugly Hacks Around Name Conflicts)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(One way to avoid name conflicts is to pick names for variables used insi\de macros in such a way that they're )Tj
0 -1.2 TD
(unlikely to conflict with names that users of the macros might pick, e.g\., )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-macro \(or first-arg second-arg\))Tj
0 -1.2 TD
(   `\(let \(\(temp!in!or!macro ,first-arg\))Tj
T*
(       \(if temp!in!or!macro)Tj
0 -1.2 TD
(           temp!in!or!macro)Tj
T*
(           ,second-arg\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(It's unlikely that anyone will name a different variable )Tj
/T1_1 1 Tf
(temp!in!or!macro)Tj
/T1_0 1 Tf
( someplace else, so the problem )Tj
0 -1.2 TD
(is solved, right? Not necessarily. )Tj
0 -2.557 TD
(Besides the fact that this is incredibly tacky, there's still a situatio\n where this kind of solution is )Tj
/T1_3 1 Tf
(likely)Tj
/T1_0 1 Tf
( to fail--)Tj
0 -1.2 TD
(when people nest calls to the same macro. Each nested call will use the \same name for different variables, and )Tj
0 -1.205 TD
(things can go nuts. \(Food for thought: is this true of the )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( macro above? Does it nest properly?\) )Tj
0 -2.557 TD
(The standard hack around that problem is to have each )Tj
/T1_3 1 Tf
(use)Tj
/T1_0 1 Tf
( of the macro use a different name for each local )Tj
0 -1.2 TD
(variable that might get captured. This requires some extra machinery fro\m the underlying system--there has to )Tj
T*
(be a procedure that generates new, unique symbols, and which can be call\ed by the macro code each time the )Tj
0 -1.205 TD
(macro is expanded. The traditional Lisp name for this procedure is )Tj
/T1_1 1 Tf
(gensym)Tj
/T1_0 1 Tf
(, but we'll call it )Tj
/T1_1 1 Tf
(generate-)Tj
T*
(symbol)Tj
/T1_0 1 Tf
( for clarity. )Tj
0 -2.562 TD
(Now we can write a fixed version of the two-argument )Tj
/T1_1 1 Tf
(OR)Tj
/T1_0 1 Tf
( macro. )Tj
/T1_1 1 Tf
T*
(; Version of 2-arg OR with scope bug fixed)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_130.html \(16 of 20\)\11/3/2006 9:12:02 PM)Tj
ET
EMC 

endstreamendobj5275 0 obj<</Length 4485>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Defining New Special \Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.1815 0 0 13.1815 9.4154 739.2649 Tm
(\(define-macro \(or first-arg second-arg\))Tj
0 -1.2 TD
(   \(let \(\(temp-name \(generate-symbol\)\)\) )Tj
T*
(      `\(let \(\(,temp-name ,first-arg\))Tj
0 -1.2 TD
(          \(if ,temp-name)Tj
0 -1.2 TD
(              ,temp-name)Tj
T*
(              ,second-arg\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that the outer )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( is outside the backquote--it will be executed when the macro is used \(\i.e., once each )Tj
0 -1.205 TD
(time an )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( expression is rewritten; the quasiquoted part is the code to be interpr\eted or compiled \(after the )Tj
0 -1.2 TD
(comma'd holes are filled in\). )Tj
0 -2.562 TD
(Each time a call to )Tj
/T1_1 1 Tf
(or)Tj
/T1_0 1 Tf
( is processed by the compiler \(or interpreter\), this )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( will generate a new symbol before )Tj
0 -1.2 TD
(translating it; quasiquote will fill in the holes for the new symbol. \(\Be sure to get your metalevels right here: )Tj
/T1_1 1 Tf
0 -1.205 TD
(temp-name)Tj
/T1_0 1 Tf
( is the name of a variable in the macro transformation procedure, whose \binding will hold a )Tj
0 -1.2 TD
(pointer to the the actual name symbol that will be used for the variable\.\) )Tj
0 -2.557 TD
(Isn't this ugly? To some degree, Lisp macros are nice because you can us\e the same language \(Lisp\) in macros )Tj
0 -1.2 TD
(as you can in normal code. But due to these funky scoping issues, you ef\fectively end up having to learn a new )Tj
T*
(language--one with lots of generate-symbol calls and commas. )Tj
0 -2.557 TD
(On the other hand, maybe it builds character and abstract reasoning abil\ities, because you have to think a lot )Tj
0 -1.2 TD
(about names of names and things like that. Fun, maybe, but not for the f\aint of heart. )Tj
ET
0 0 1 RG
1.533 w 10 M 0 j 0 J []0 d 
9.415 355.637 m
404.959 355.637 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.2514 0 0 18.2514 9.4154 360.2365 Tm
(Implementing Simple Macros and Quasiquote)Tj
ET
1.278 w 
9.415 317.395 m
219.869 317.395 l
S
BT
/T1_2 1 Tf
15.2095 0 0 15.2095 9.4154 321.2279 Tm
(Implementing Simple Macros)Tj
ET
9.415 279.371 m
112.52 279.371 l
S
0.767 w 
112.52 280.905 m
203.777 280.905 l
S
1.278 w 
203.777 279.371 m
239.276 279.371 l
S
0.767 w 
239.276 280.905 m
303.156 280.905 l
S
BT
/T1_2 1 Tf
15.2095 0 0 15.2095 9.4154 283.2043 Tm
(Implementing )Tj
/T1_3 1 Tf
(quasiquote)Tj
/T1_2 1 Tf
( and )Tj
/T1_3 1 Tf
(unquote)Tj
0 0 0 rg
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 246.9956 Tm
([ This section is particularly rough and needs to be reworked. Sorry. ] \)Tj
/T1_1 1 Tf
0 -2.562 TD
(quasiquote)Tj
/T1_0 1 Tf
( is a special form that \(like )Tj
/T1_1 1 Tf
(quote)Tj
/T1_0 1 Tf
(\) has a very special sugared syntax. Part of this syntax is )Tj
0 -1.2 TD
(recognized by the reader, rather than the compiler or interpreter proper\; the rest of the work is done by the )Tj
0 -1.2 TD
(compiler or interpreter. )Tj
ET
1.107 w 
9.415 144.332 m
177.15 144.332 l
S
0.664 w 
177.15 145.661 m
256.24 145.661 l
S
0 0 1 rg
BT
/T1_2 1 Tf
13.1815 0 0 13.1815 9.4154 147.6539 Tm
(Translating backquotes to )Tj
/T1_3 1 Tf
(quasiquote)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.695 TD
(A backquote character is interpreted very specially by the Scheme \(or L\isp\) reader, and backquoted expressions )Tj
0 -1.205 TD
(are converted into )Tj
/T1_1 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
( expressions with a normal-looking nested-prefix-expression syntax. The \)Tj
0 -1.205 TD
(expression )Tj
/T1_1 1 Tf
(`\(a b c\))Tj
/T1_0 1 Tf
( is actually just shorthand for )Tj
/T1_1 1 Tf
(\(quasiquote \(a b c\)\))Tj
/T1_0 1 Tf
( Similarly, comma'd )Tj
T*
(expressions are converted, e.g. `\(a ,b ,c\) is read in as )Tj
/T1_1 1 Tf
(\(quasiquote \(a \(unquote b\) \(unquote )Tj
T*
(c\)\)\))Tj
/T1_0 1 Tf
(. Notice that as far as the reader is concerned, these are just lists--i\t is up to the compiler or interpreter to )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_130.html \(17 of 20\)\11/3/2006 9:12:02 PM)Tj
ET
EMC 

endstreamendobj5276 0 obj<</Length 3367>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Defining New Special \Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 755.1462 Tm
(process them further, and the reader just preprocesses them into lists t\hat the compiler or interpreter can deal )Tj
0 -1.2 TD
(with. )Tj
ET
0 0 1 RG
0.664 w 10 M 0 j 0 J []0 d 
9.415 703.565 m
88.505 703.565 l
S
0 0 1 rg
BT
/T1_1 1 Tf
13.1815 0 0 13.1815 9.4154 705.5578 Tm
(quasiquote)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.7 TD
(The )Tj
/T1_2 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
( special form may be built into the compiler or interpreter, but it can \be implemented as a )Tj
0 -1.2 TD
(macro, in Scheme. That's the easy way to do it, and it's what we'll do. \)Tj
0 -2.562 TD
(I'll show a simplified version of )Tj
/T1_2 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
( that only deals with commas at the top level of a list, e.g., )Tj
/T1_2 1 Tf
T*
(\(quasiquote \(foo ,bar \(baz x y\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(but not )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(quasiquote \(foo ,bar \(baz ,x y\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Notice that )Tj
/T1_2 1 Tf
(\(quasiquote \(foo ,bar \(baz x y\)\)\))Tj
/T1_0 1 Tf
( should expand to something like )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(list 'foo bar '\(baz x y\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(We'll actually generate an expression that uses )Tj
/T1_2 1 Tf
(cons)Tj
/T1_0 1 Tf
( instead of )Tj
/T1_2 1 Tf
(list)Tj
/T1_0 1 Tf
(, because we want to write )Tj
/T1_2 1 Tf
0 -1.205 TD
(quasiquote)Tj
/T1_0 1 Tf
( recursively; if its argument is a list, it will peel one element at a t\ime of off the list of )Tj
0 -1.2 TD
(arguments, and either quote it or not before using it in the resulting e\xpression that is the rewritten version of )Tj
T*
(the macro call. )Tj
0 -2.562 TD
(Given this strategy, )Tj
/T1_2 1 Tf
(\(quasiquote \(foo ,bar \(baz x y\)\)\))Tj
/T1_0 1 Tf
( should expand to )Tj
/T1_2 1 Tf
T*
(\(cons 'foo)Tj
0 -1.2 TD
(      \(cons bar)Tj
0 -1.2 TD
(            \(cons '\(baz x y\)\))Tj
T*
(                  '\(\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Notice that what we've done is generate an expression to generate a list\ whose components are explicitly )Tj
0 -1.2 TD
(quoted where necessary, as opposed to the original backquoted list where\ things are quoted by default and )Tj
0 -1.205 TD
(explicitly unquoted. And since )Tj
/T1_2 1 Tf
(')Tj
/T1_3 1 Tf
(thing)Tj
/T1_0 1 Tf
( is just a shorthand for )Tj
/T1_2 1 Tf
(\(quote )Tj
/T1_3 1 Tf
(thing)Tj
/T1_2 1 Tf
(\))Tj
/T1_0 1 Tf
(, we'll really generate an ugly )Tj
0 -1.2 TD
(expression like )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(cons \(quote foo\))Tj
0 -1.2 TD
(      \(cons bar)Tj
T*
(            \(cons \(quote baz x y\))Tj
T*
(                  '\(\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(written as a straighforward low-level macro. We'll define it as a trivia\l macro that just calls a procedure )Tj
/T1_2 1 Tf
0 -1.205 TD
(quasiquote1)Tj
/T1_0 1 Tf
( to do the actual transformation. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_130.html \(18 of 20\)\11/3/2006 9:12:02 PM)Tj
ET
EMC 

endstreamendobj5277 0 obj<</Length 3787>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.5261 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.4738 0 0 8.4738 18 780.5693 Tm
(An Introduction to Scheme and its Implementation - Defining New Special \Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.1815 0 0 13.1815 9.4154 741.4017 Tm
([ NEED TO DEBUG THIS... PRW ] )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-macro \(quasiquote expr\))Tj
0 -1.2 TD
(   \(quasiquote1 expr\)\))Tj
0 -2.557 TD
(\(define \(quasiquote1 expr\))Tj
0 -1.2 TD
(   \(if \(not \(pair? expr\)\) ; if quoted expr is not a list, it's just\)Tj
T*
(       expr               ; a literal)Tj
0 -1.2 TD
(       ; else we'll grab a subexpression and cons it \(appropriately)Tj
T*
(       ; quoted or not\) onto the result of recursively quasiquoting)Tj
T*
(       ; the remaining arguments)Tj
T*
(       \(let \(\(first-subexpr \(car expr\)\))Tj
T*
(             \(rest-subexprs \(cdr expr\)\)\))Tj
T*
(          \(if \(and \(pair? next-subexpr\))Tj
0 -1.2 TD
(                   \(eq? \(car first-subexpr\) 'unquote\)\)\))Tj
0 -1.2 TD
(              \(list 'cons)Tj
T*
(                    first-subexpr       ; gen expr to eval this subexpr)Tj
T*
(                    \(quasiquote1 rest-subexprs\)\)                     \)Tj
T*
(              \(list 'cons)Tj
T*
(                    \(list 'quote first-subexpr\)    ; quote this subexp\r)Tj
T*
(                    \(quasiquote1 rest-subexprs\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(A full implementation of quasiquote is a little trickier, because it mus\t deal with nested uses of )Tj
/T1_1 1 Tf
(quasiquote)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(and )Tj
/T1_1 1 Tf
(unquote)Tj
/T1_0 1 Tf
(; each subexpression that is not unquoted must be traversed and treated \similarly to the top-level )Tj
0 -1.2 TD
(list--i.e., rather than just using the subexpressions as literals and qu\oting them, an equivalent expression should )Tj
T*
(be constructed to create a similarly-structured list with the unquoted h\oles filled in. Also, a full implementation )Tj
0 -1.205 TD
(should handle )Tj
/T1_1 1 Tf
(unquote-splicing)Tj
/T1_0 1 Tf
( as well as )Tj
/T1_1 1 Tf
(unquote)Tj
/T1_0 1 Tf
(. )Tj
ET
0 0 1 RG
0.664 w 10 M 0 j 0 J []0 d 
9.415 287.97 m
128.049 287.97 l
S
0 0 1 rg
BT
/T1_2 1 Tf
13.1815 0 0 13.1815 9.4154 289.9626 Tm
(define-rewriter)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.695 TD
(In Chapter [ whatever ], I showed the code for an interpretive evaluator\ that was designed to support macros. In )Tj
0 -1.2 TD
(this section, I'll explain how to implement the macro processor and inst\all it in the interpreter. )Tj
0 -2.562 TD
(Recall that when )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
( encounters an expression that's represented as a list, it must determin\e whether the list )Tj
0 -1.205 TD
(represents a combination \(procedure call\), a built-in special form, or\ a macro call. It calls )Tj
/T1_1 1 Tf
(eval-list)Tj
/T1_0 1 Tf
( to do )Tj
0 -1.2 TD
(this dispatching. )Tj
0 -2.557 TD
(Also recall that we implemented environments that can hold different kin\ds of bindings--of normal variables or )Tj
0 -1.2 TD
(macros. A macro binding holds a transformation procedure that can be use\d to rewrite an expression before it is )Tj
T*
(interpreted. )Tj
/T1_1 1 Tf
0 -2.562 TD
(eval-list)Tj
/T1_0 1 Tf
( checks to see if the list begins with a symbol, which might be the name\ of a macro, or the name )Tj
0 -1.2 TD
(of a procedure. It looks in the environment to find the current binding \of the symbol. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.5262 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.4738 0 0 8.4738 18 7.5693 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_130.html \(19 of 20\)\11/3/2006 9:12:02 PM)Tj
ET
EMC 

endstreamendobj5278 0 obj(An Introduction to Scheme and its Implementation - Defining New Special Forms)endobj5279 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_130.html)/S 700 0 R>>endobj5280 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_130.html)endobj5281 0 obj(™{L≠˝U»‚ﬁ¿x:å˝ )endobj5282 0 obj<</TS(D:20061104051202)/ID 5281 0 R/CT(text/html)/O[5133 0 R 5145 0 R 5147 0 R 5149 0 R 5152 0 R 5154 0 R 5156 0 R 5158 0 R 5165 0 R 5168 0 R 5173 0 R 5183 0 R 5189 0 R 5192 0 R 5199 0 R 5205 0 R 5211 0 R 5223 0 R 5229 0 R 5236 0 R]/S/SPS/T 5278 0 R/TID 5284 0 R/SI 5283 0 R>>endobj5283 0 obj<</TS(D:20061104051202)/AU 5280 0 R>>endobj5284 0 obj(tﬂ÷Û1ë£„ëë=çﬁRå)endobj5285 0 obj<</Parent 710 0 R/Next 5311 0 R/Dest[5133 0 R/XYZ 0 792 null]/Prev 5130 0 R/SE 5132 0 R/Title(An Introduction to Scheme and its Implementation - Defining New Special Forms)>>endobj5286 0 obj<</TextDecorationType/Underline/O/Layout>>endobj5287 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 5288 0 R>>endobj5288 0 obj<</Annots 5291 0 R/Parent 5359 0 R/ID 5307 0 R/StructParents 321/Contents 5303 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5289 0 obj[5287 0 R]endobj5290 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5291 0 obj[5290 0 R 5292 0 R 5293 0 R 5294 0 R 5295 0 R 5297 0 R 5298 0 R 5299 0 R 5300 0 R 5301 0 R 5302 0 R]endobj5292 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5133 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html)/S/URI>>/Border[0 0 0]>>endobj5293 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5314 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_132.html)/S/URI>>/Border[0 0 0]>>endobj5294 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5295 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5296 0 obj[5288 0 R/XYZ 0 731.2 null]endobj5297 0 obj<</Rect[10.0 689.877 438.749 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC202)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC202)/S/URI>>/Border[0 0 0]>>endobj5298 0 obj<</Rect[65.608 635.538 88.162 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5299 0 obj<</Rect[95.162 635.538 143.378 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5133 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_130.html)/S/URI>>/Border[0 0 0]>>endobj5300 0 obj<</Rect[150.378 635.538 174.486 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5314 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_132.html)/S/URI>>/Border[0 0 0]>>endobj5301 0 obj<</Rect[181.486 635.538 200.932 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5302 0 obj<</Rect[251.094 635.538 343.634 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5303 0 obj<</Length 2461>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Procedural Macros vs.\ Template-filling Macros)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
438.749 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Procedural Macros vs. Template-filling Macros)Tj
ET
0.5 0.5 0.5 rg
10 658.938 m
10 660.938 l
602 660.938 l
601 659.938 l
11 659.938 l
11 659.938 l
h
f
0.875 0.875 0.875 rg
602 660.938 m
602 658.938 l
10 658.938 l
11 659.938 l
601 659.938 l
601 659.938 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 639.914 Tm
(Go to the )Tj
ET
0.706 w 
65.608 637.797 m
88.162 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 639.914 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 637.797 m
143.378 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 639.914 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 637.797 m
174.486 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 639.914 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 637.797 m
200.932 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 639.914 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 637.797 m
343.634 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 639.914 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_131.html11/3/2006 9:\12:34 PM)Tj
ET
EMC 

endstreamendobj5304 0 obj(An Introduction to Scheme and its Implementation - Procedural Macros vs. Template-filling Macros)endobj5305 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_131.html)/S 700 0 R>>endobj5306 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_131.html)endobj5307 0 obj(Jú‰SFÜPÖ√Ú')endobj5308 0 obj<</TS(D:20061104051234)/ID 5307 0 R/CT(text/html)/O[5288 0 R]/S/SPS/T 5304 0 R/TID 5310 0 R/SI 5309 0 R>>endobj5309 0 obj<</TS(D:20061104051234)/AU 5306 0 R>>endobj5310 0 obj(-2ô˙¢0Ÿ˙Ú}¥≤fA™)endobj5311 0 obj<</Parent 710 0 R/Next 5339 0 R/Dest[5288 0 R/XYZ 0 792 null]/Prev 5285 0 R/SE 5287 0 R/Title(An Introduction to Scheme and its Implementation - Procedural Macros vs. Template-filling Macros)>>endobj5312 0 obj<</TextDecorationType/Underline/O/Layout>>endobj5313 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 5314 0 R>>endobj5314 0 obj<</Annots 5317 0 R/Parent 5359 0 R/ID 5333 0 R/StructParents 322/Contents 5329 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5315 0 obj[5313 0 R]endobj5316 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5317 0 obj[5316 0 R 5318 0 R 5319 0 R 5320 0 R 5321 0 R 5323 0 R 5324 0 R 5325 0 R 5326 0 R 5327 0 R 5328 0 R]endobj5318 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5288 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_131.html)/S/URI>>/Border[0 0 0]>>endobj5319 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5342 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html)/S/URI>>/Border[0 0 0]>>endobj5320 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5321 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5322 0 obj[5314 0 R/XYZ 0 731.2 null]endobj5323 0 obj<</Rect[10.0 689.877 364.409 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC203)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC203)/S/URI>>/Border[0 0 0]>>endobj5324 0 obj<</Rect[65.608 635.538 88.162 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5325 0 obj<</Rect[95.162 635.538 143.378 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5288 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_131.html)/S/URI>>/Border[0 0 0]>>endobj5326 0 obj<</Rect[150.378 635.538 174.486 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5342 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html)/S/URI>>/Border[0 0 0]>>endobj5327 0 obj<</Rect[181.486 635.538 200.932 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5328 0 obj<</Rect[251.094 635.538 343.634 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5329 0 obj<</Length 2437>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Programming Examples \Using Macros)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
364.409 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Programming Examples Using Macros)Tj
ET
0.5 0.5 0.5 rg
10 658.938 m
10 660.938 l
602 660.938 l
601 659.938 l
11 659.938 l
11 659.938 l
h
f
0.875 0.875 0.875 rg
602 660.938 m
602 658.938 l
10 658.938 l
11 659.938 l
601 659.938 l
601 659.938 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 639.914 Tm
(Go to the )Tj
ET
0.706 w 
65.608 637.797 m
88.162 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 639.914 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 637.797 m
143.378 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 639.914 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 637.797 m
174.486 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 639.914 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 637.797 m
200.932 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 639.914 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 637.797 m
343.634 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 639.914 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_132.html11/3/2006 9:\12:57 PM)Tj
ET
EMC 

endstreamendobj5330 0 obj(An Introduction to Scheme and its Implementation - Programming Examples Using Macros)endobj5331 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_132.html)/S 700 0 R>>endobj5332 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_132.html)endobj5333 0 obj(·oƒ`æÅñó¿À»∞ì‘.â)endobj5334 0 obj<</TS(D:20061104051257)/ID 5333 0 R/CT(text/html)/O[5314 0 R]/S/SPS/T 5330 0 R/TID 5336 0 R/SI 5335 0 R>>endobj5335 0 obj<</TS(D:20061104051257)/AU 5332 0 R>>endobj5336 0 obj(Á‹z]˘;˛r=◊¬3Pça)endobj5337 0 obj<</Limits[(http://www.federated.com/~jim/schintro-v14/schintro_10.html)(http://www.federated.com/~jim/schintro-v14/schintro_128.html)]/Names[1006 0 R 1008 0 R 3878 0 R 3880 0 R 3910 0 R 3912 0 R 3946 0 R 3948 0 R 3981 0 R 3983 0 R 4014 0 R 4016 0 R 4066 0 R 4068 0 R 4130 0 R 4132 0 R 4156 0 R 4158 0 R 4194 0 R 4196 0 R 4225 0 R 4227 0 R 1039 0 R 1041 0 R 4259 0 R 4261 0 R 4285 0 R 4287 0 R 4315 0 R 4317 0 R 4342 0 R 4344 0 R 4376 0 R 4378 0 R 4450 0 R 4452 0 R 4511 0 R 4513 0 R 4556 0 R 4558 0 R 4582 0 R 4584 0 R 4608 0 R 4610 0 R 1069 0 R 1071 0 R 4634 0 R 4636 0 R 4671 0 R 4673 0 R 4732 0 R 4734 0 R 4788 0 R 4790 0 R 4825 0 R 4827 0 R 4864 0 R 4866 0 R 4931 0 R 4933 0 R 5056 0 R 5058 0 R 5082 0 R 5084 0 R]>>endobj5338 0 obj<</Limits[(http://www.federated.com/~jim/schintro-v14/schintro_129.html)(http://www.federated.com/~jim/schintro-v14/schintro_39.html)]/Names[5125 0 R 5127 0 R 1101 0 R 1103 0 R 5280 0 R 5282 0 R 5306 0 R 5308 0 R 5332 0 R 5334 0 R 5579 0 R 5581 0 R 5605 0 R 5607 0 R 5632 0 R 5634 0 R 5659 0 R 5661 0 R 5685 0 R 5687 0 R 5713 0 R 5715 0 R 5739 0 R 5741 0 R 1138 0 R 1140 0 R 5782 0 R 5784 0 R 5837 0 R 5839 0 R 6143 0 R 6145 0 R 6327 0 R 6329 0 R 1166 0 R 1168 0 R 1192 0 R 1194 0 R 1223 0 R 1225 0 R 1262 0 R 1264 0 R 1291 0 R 1293 0 R 741 0 R 743 0 R 1319 0 R 1321 0 R 1357 0 R 1359 0 R 1390 0 R 1392 0 R 1417 0 R 1419 0 R 1455 0 R 1457 0 R 1481 0 R 1483 0 R 1507 0 R 1509 0 R 1534 0 R 1536 0 R 1562 0 R 1564 0 R 1592 0 R 1594 0 R 770 0 R 772 0 R 1624 0 R 1626 0 R 1657 0 R 1659 0 R 1689 0 R 1691 0 R 1717 0 R 1719 0 R 1753 0 R 1755 0 R 1783 0 R 1785 0 R 1817 0 R 1819 0 R 1856 0 R 1858 0 R 1888 0 R 1890 0 R 1915 0 R 1917 0 R]>>endobj5339 0 obj<</Parent 710 0 R/Next 5584 0 R/Dest[5314 0 R/XYZ 0 792 null]/Prev 5311 0 R/SE 5313 0 R/Title(An Introduction to Scheme and its Implementation - Programming Examples Using Macros)>>endobj5340 0 obj<</TextDecorationType/Underline/O/Layout>>endobj5341 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 5358 0 R/Type/MCR>><</MCID 0/Pg 5361 0 R/Type/MCR>><</MCID 0/Pg 5367 0 R/Type/MCR>><</MCID 0/Pg 5369 0 R/Type/MCR>><</MCID 0/Pg 5376 0 R/Type/MCR>><</MCID 0/Pg 5381 0 R/Type/MCR>><</MCID 0/Pg 5387 0 R/Type/MCR>><</MCID 0/Pg 5392 0 R/Type/MCR>><</MCID 0/Pg 5394 0 R/Type/MCR>><</MCID 0/Pg 5396 0 R/Type/MCR>><</MCID 0/Pg 5399 0 R/Type/MCR>><</MCID 0/Pg 5408 0 R/Type/MCR>><</MCID 0/Pg 5414 0 R/Type/MCR>><</MCID 0/Pg 5422 0 R/Type/MCR>><</MCID 0/Pg 5425 0 R/Type/MCR>><</MCID 0/Pg 5431 0 R/Type/MCR>><</MCID 0/Pg 5438 0 R/Type/MCR>><</MCID 0/Pg 5444 0 R/Type/MCR>><</MCID 0/Pg 5447 0 R/Type/MCR>><</MCID 0/Pg 5450 0 R/Type/MCR>><</MCID 0/Pg 5456 0 R/Type/MCR>><</MCID 0/Pg 5467 0 R/Type/MCR>><</MCID 0/Pg 5473 0 R/Type/MCR>><</MCID 0/Pg 5513 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 5342 0 R>>endobj5342 0 obj<</Annots 5345 0 R/Parent 5359 0 R/ID 5580 0 R/StructParents 323/Contents 5552 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5343 0 obj[5341 0 R]endobj5344 0 obj<</Rect[59.467 751.884 79.9099 765.48]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5345 0 obj[5344 0 R 5346 0 R 5347 0 R 5348 0 R 5349 0 R 5351 0 R 5355 0 R 5357 0 R]endobj5346 0 obj<</Rect[86.2547 751.884 129.958 765.48]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5314 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_132.html)/S/URI>>/Border[0 0 0]>>endobj5347 0 obj<</Rect[136.302 751.884 158.154 765.48]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5587 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_134.html)/S/URI>>/Border[0 0 0]>>endobj5348 0 obj<</Rect[164.499 751.884 182.124 765.48]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5349 0 obj<</Rect[227.591 751.884 311.469 765.48]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5350 0 obj[5342 0 R/XYZ 0 735.206 null]endobj5351 0 obj<</Rect[9.06398 692.382 347.15 715.74]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC204)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC204)/S/URI>>/Border[0 0 0]>>endobj5352 0 obj[5342 0 R/XYZ 0 452.659 null]endobj5353 0 obj<</Limits[(:’Z\\pˆdê‚Òi_\r6IDX72)([Dd˙7¸…A∂Û-rudSEC57)]/Names[]>>endobj5354 0 obj<</Limits[(\\—’ ¨$Úó7J´CR¥IDX103)(dx#jÄÃ∏ÓÖ∆ËâΩ∫ SEC270)]/Names[(\\—’ ¨$Úó7J´CR¥IDX103)3928 0 R(\\—’ ¨$Úó7J´CR¥SEC112)3926 0 R(_∞é±≈'HÕúÑÄÊûpIDX62)2535 0 R(_∞é±≈'HÕúÑÄÊûpSEC66)2533 0 R(`•cöulå∞7˛8DCW‚IDX47)2202 0 R(`•cöulå∞7˛8DCW‚SEC55)2200 0 R(`æß\)¯Á8;∏úÆI7~IDX111)4088 0 R(`æß\)¯Á8;∏úÆI7~IDX112)4089 0 R(`æß\)¯Á8;∏úÆI7~IDX113)4103 0 R(`æß\)¯Á8;∏úÆI7~IDX114)4104 0 R(`æß\)¯Á8;∏úÆI7~IDX115)4110 0 R(`æß\)¯Á8;∏úÆI7~IDX116)4113 0 R(`æß\)¯Á8;∏úÆI7~IDX117)4114 0 R(`æß\)¯Á8;∏úÆI7~SEC118)4082 0 R(`æß\)¯Á8;∏úÆI7~SEC119)4084 0 R(`æß\)¯Á8;∏úÆI7~SEC120)4086 0 R(`æß\)¯Á8;∏úÆI7~SEC121)4093 0 R(`æß\)¯Á8;∏úÆI7~SEC122)4096 0 R(`æß\)¯Á8;∏úÆI7~SEC123)4100 0 R(`æß\)¯Á8;∏úÆI7~SEC124)4105 0 R(`æß\)¯Á8;∏úÆI7~SEC125)4111 0 R(aÇÛXíS&É∆‡˙¬≠OB€IDX106)4034 0 R(aÇÛXíS&É∆‡˙¬≠OB€IDX107)4044 0 R(aÇÛXíS&É∆‡˙¬≠OB€IDX108)4045 0 R(aÇÛXíS&É∆‡˙¬≠OB€IDX109)4048 0 R(aÇÛXíS&É∆‡˙¬≠OB€IDX110)4049 0 R(aÇÛXíS&É∆‡˙¬≠OB€SEC115)4030 0 R(aÇÛXíS&É∆‡˙¬≠OB€SEC116)4032 0 R(aÇÛXíS&É∆‡˙¬≠OB€SEC117)4038 0 R(a©¶%ùa§Zc—∫ß˜òIDX74)2775 0 R(a©¶%ùa§Zc—∫ß˜òIDX75)2776 0 R(a©¶%ùa§Zc—∫ß˜òIDX76)2777 0 R(a©¶%ùa§Zc—∫ß˜òSEC73)2773 0 R(cî˝ ¶#Ú÷\(ïaÙ\\0nSSEC250)5622 0 R(dx#jÄÃ∏ÓÖ∆ËâΩ∫ SEC264)5798 0 R(dx#jÄÃ∏ÓÖ∆ËâΩ∫ SEC265)5811 0 R(dx#jÄÃ∏ÓÖ∆ËâΩ∫ SEC266)5814 0 R(dx#jÄÃ∏ÓÖ∆ËâΩ∫ SEC267)5816 0 R(dx#jÄÃ∏ÓÖ∆ËâΩ∫ SEC268)5818 0 R(dx#jÄÃ∏ÓÖ∆ËâΩ∫ SEC269)5820 0 R(dx#jÄÃ∏ÓÖ∆ËâΩ∫ SEC270)5822 0 R]>>endobj5355 0 obj<</Rect[9.06398 432.425 183.817 450.902]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC205)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC205)/S/URI>>/Border[0 0 0]>>endobj5356 0 obj[5342 0 R/XYZ 0 412.54 null]endobj5357 0 obj<</Rect[9.06398 395.528 432.125 411.076]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC206)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC206)/S/URI>>/Border[0 0 0]>>endobj5358 0 obj<</Parent 5382 0 R/ID 5580 0 R/StructParents 324/Contents 5553 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5359 0 obj<</Parent 5362 0 R/Count 5/Type/Pages/Kids[5229 0 R 5236 0 R 5288 0 R 5314 0 R 5342 0 R]>>endobj5360 0 obj[5341 0 R]endobj5361 0 obj<</Annots 5366 0 R/Parent 5382 0 R/ID 5580 0 R/StructParents 325/Contents 5554 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5362 0 obj<</Parent 5944 0 R/Count 25/Type/Pages/Kids[5150 0 R 5166 0 R 5193 0 R 5230 0 R 5359 0 R]>>endobj5363 0 obj[5341 0 R]endobj5364 0 obj[5361 0 R/XYZ 0 671.396 null]endobj5365 0 obj<</Rect[9.06398 654.383 463.824 669.932]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC207)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC207)/S/URI>>/Border[0 0 0]>>endobj5366 0 obj[5365 0 R]endobj5367 0 obj<</Parent 5382 0 R/ID 5580 0 R/StructParents 326/Contents 5555 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5368 0 obj[5341 0 R]endobj5369 0 obj<</Annots 5373 0 R/Parent 5382 0 R/ID 5580 0 R/StructParents 327/Contents 5556 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5370 0 obj[5341 0 R]endobj5371 0 obj[5369 0 R/XYZ 0 627.707 null]endobj5372 0 obj<</Rect[9.06398 607.474 248.3 625.95]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC208)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC208)/S/URI>>/Border[0 0 0]>>endobj5373 0 obj[5372 0 R 5375 0 R]endobj5374 0 obj[5369 0 R/XYZ 0 461.781 null]endobj5375 0 obj<</Rect[9.06398 444.768 97.7348 460.317]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC209)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC209)/S/URI>>/Border[0 0 0]>>endobj5376 0 obj<</Annots 5380 0 R/Parent 5382 0 R/ID 5580 0 R/StructParents 328/Contents 5557 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5377 0 obj[5341 0 R]endobj5378 0 obj[5376 0 R/XYZ 0 58.844 null]endobj5379 0 obj<</Rect[9.06398 41.8316 293.027 57.3798]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC210)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC210)/S/URI>>/Border[0 0 0]>>endobj5380 0 obj[5379 0 R]endobj5381 0 obj<</Annots 5386 0 R/Parent 5400 0 R/ID 5580 0 R/StructParents 329/Contents 5558 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5382 0 obj<</Parent 5641 0 R/Count 5/Type/Pages/Kids[5358 0 R 5361 0 R 5367 0 R 5369 0 R 5376 0 R]>>endobj5383 0 obj[5341 0 R]endobj5384 0 obj[5381 0 R/XYZ 0 411.788 null]endobj5385 0 obj<</Rect[87.2952 407.822 108.436 421.418]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_foot.html#FOOT12)/S/URI>>/Border[0 0 0]>>endobj5386 0 obj[5385 0 R]endobj5387 0 obj<</Annots 5391 0 R/Parent 5400 0 R/ID 5580 0 R/StructParents 330/Contents 5559 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5388 0 obj[5341 0 R]endobj5389 0 obj[5387 0 R/XYZ 0 122.418 null]endobj5390 0 obj<</Rect[9.06398 105.406 242.586 120.954]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC211)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC211)/S/URI>>/Border[0 0 0]>>endobj5391 0 obj[5390 0 R]endobj5392 0 obj<</Parent 5400 0 R/ID 5580 0 R/StructParents 331/Contents 5560 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5393 0 obj[5341 0 R]endobj5394 0 obj<</Parent 5400 0 R/ID 5580 0 R/StructParents 332/Contents 5561 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5395 0 obj[5341 0 R]endobj5396 0 obj<</Parent 5400 0 R/ID 5580 0 R/StructParents 333/Contents 5562 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5397 0 obj<</Length 5139>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 755.8499 Tm
(Go to the )Tj
ET
0 0 1 RG
0.64 w 10 M 0 j 0 J []0 d 
59.467 753.931 m
79.91 753.931 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 59.467 755.8499 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
86.255 753.931 m
129.958 753.931 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 86.2547 755.8499 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
136.302 753.931 m
158.154 753.931 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 136.3023 755.8499 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
164.499 753.931 m
182.124 753.931 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 164.4986 755.8499 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
227.591 753.931 m
311.469 753.931 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 227.5911 755.8499 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
9.064 741.551 m
9.064 743.364 l
602.936 743.364 l
602.03 742.457 l
9.97 742.457 l
9.97 742.457 l
h
f
0.875 0.875 0.875 rg
602.936 743.364 m
602.936 741.551 l
9.064 741.551 l
9.97 742.457 l
602.03 742.457 l
602.03 742.457 l
h
f
1.886 w 
9.064 692.655 m
347.15 692.655 l
S
0 0 1 rg
BT
/T1_1 1 Tf
22.4508 0 0 22.4508 9.064 698.3129 Tm
(Records and Object Orientation)Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 661.1104 Tm
(Most programming languages have a standard facility for defining new typ\es of )Tj
/T1_2 1 Tf
(records)Tj
/T1_0 1 Tf
( or )Tj
/T1_2 1 Tf
(structures)Tj
/T1_0 1 Tf
(. A record is )Tj
0 -1.205 TD
(an object with named fields. For example, we might define a )Tj
/T1_3 1 Tf
(point)Tj
/T1_0 1 Tf
( record type, to represent geometric points in a )Tj
0 -1.205 TD
(plane. Each )Tj
/T1_3 1 Tf
(point)Tj
/T1_0 1 Tf
( object might have a )Tj
/T1_3 1 Tf
(x)Tj
/T1_0 1 Tf
( field and a )Tj
/T1_3 1 Tf
(y)Tj
/T1_0 1 Tf
( field, giving the horizontal and vertical coordinates of a )Tj
0 -1.205 TD
(point relative to the origin. Once this )Tj
/T1_3 1 Tf
(point)Tj
/T1_0 1 Tf
( class is defined, we can create )Tj
/T1_2 1 Tf
(instances)Tj
/T1_0 1 Tf
( of it, i.e., actual objects of )Tj
0 -1.2 TD
(type point, to represent particular points in space. )Tj
0 -2.557 TD
(Scheme is an unusual language in that there is not a standard facility f\or defining new types. We can build a type-)Tj
0 -1.2 TD
(definition facility, however, using macros. )Tj
0 -2.557 TD
(In this chapter, I'll show a simple record definition facility written i\n Scheme. Then I'll describe a simple object-)Tj
0 -1.2 TD
(oriented programming system for Scheme, and show how it can be implement\ed in Scheme, too. \(Both of these )Tj
T*
(systems rely on Lisp-style macros, which are not standard Scheme, but ar\e available in almost every Scheme )Tj
T*
(implementation.\) )Tj
ET
1.476 w 
9.064 432.836 m
183.817 432.836 l
S
0 0 1 rg
BT
/T1_1 1 Tf
17.5702 0 0 17.5702 9.064 437.2637 Tm
(Records \(Structures\))Tj
ET
1.23 w 
9.064 396.021 m
432.125 396.021 l
S
BT
/T1_1 1 Tf
14.6418 0 0 14.6418 9.064 399.711 Tm
(Using Procedural Abstraction to Implement Data Abstraction)Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 365.0369 Tm
(Scheme's main abstraction mechanism is procedural abstraction. We can de\fine procedures that represent higher-)Tj
T*
(level operations, i.e., operations not built into the language, but whic\h are useful for our purposes. We can construct )Tj
/T1_2 1 Tf
T*
(abstract data types)Tj
/T1_0 1 Tf
(, which are data types that represent higher-level concepts \(such as po\ints in a coordinate space\), )Tj
T*
(and use procedures to implement the operations. )Tj
0 -2.562 TD
(For example, we can fake a )Tj
/T1_3 1 Tf
(point)Tj
/T1_0 1 Tf
( data type by hand, by writing a set of procedures that will construct p\oint )Tj
0 -1.2 TD
(objects and access their fields. We can choose a representation of point\s in terms of preexisting Scheme types, and )Tj
T*
(write our procedures accordingly. )Tj
0 -2.557 TD
(For example, we can use Scheme vectors to represent points, with each po\int represented as a small vector, with a )Tj
0 -1.2 TD
(slot for the x field and a slot for the y field. We can write a handful \of procedures to create and operate on instances )Tj
0 -1.205 TD
(of our )Tj
/T1_3 1 Tf
(point)Tj
/T1_0 1 Tf
( data type, which will really allocate Scheme vectors and operate on the\m in ways that are consistent )Tj
T*
(with our higher-level )Tj
/T1_3 1 Tf
(point)Tj
/T1_0 1 Tf
( abstraction. )Tj
0 -2.562 TD
(We start with a )Tj
/T1_2 1 Tf
(constructor)Tj
/T1_0 1 Tf
( procedure )Tj
/T1_3 1 Tf
(make-point)Tj
/T1_0 1 Tf
(, which will create \("construct"\) a point object and initialize )Tj
0 -1.205 TD
(its )Tj
/T1_3 1 Tf
(x)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(y)Tj
/T1_0 1 Tf
( fields. It really allocates a Scheme vector. The zeroth slot of the vec\tor holds the symbol )Tj
/T1_3 1 Tf
(point)Tj
/T1_0 1 Tf
(, so that )Tj
0 -1.2 TD
(we can tell it represents a point object. )Tj
/T1_3 1 Tf
0 -2.562 TD
(; a point is represented as a three-element vector, with the 0th)Tj
0 -1.2 TD
(; slot holding the symbol point, the 1st slot representing)Tj
T*
(; the x field,, and the 2nd slot representing the y field.)Tj
ET
EMC 
Q

endstreamendobj5398 0 obj[5341 0 R]endobj5399 0 obj<</Annots 5405 0 R/Parent 5432 0 R/ID 5580 0 R/StructParents 334/Contents 5563 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5400 0 obj<</Parent 5641 0 R/Count 5/Type/Pages/Kids[5381 0 R 5387 0 R 5392 0 R 5394 0 R 5396 0 R]>>endobj5401 0 obj<</Length 2828>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 754.123 Tm
(\(define \(make-point x y\))Tj
0 -1.2 TD
(   \(vector 'point x y\)\))Tj
/T1_1 1 Tf
0 -2.557 TD
(We also define a predicate for testing whether an object is a )Tj
/T1_0 1 Tf
(point)Tj
/T1_1 1 Tf
( record. It checks to see if the object is actuall a )Tj
0 -1.205 TD
(Scheme vector and its zeroth slot holds the symbol )Tj
/T1_0 1 Tf
(point)Tj
/T1_1 1 Tf
(. This isn't perfect--we might mistake another vector that )Tj
0 -1.2 TD
(happens to hold that symbol in its zeroth slot for a point, but we'll ig\nore that for now. \(It's easy to fix, and we'll fix )Tj
T*
(it later when we build a more sophisticated object system.\) )Tj
/T1_0 1 Tf
0 -2.562 TD
(; check to see if something is a point by checking to see if it's)Tj
0 -1.2 TD
(; a vector whose 0th slot holds the symbol point.)Tj
T*
(\(define \(point? obj\))Tj
T*
(   \(and \(vector? obj\))Tj
T*
(        \(eq? \(vector-ref obj 0\) 'point\)\)\))Tj
/T1_1 1 Tf
0 -2.552 TD
(Now we define accessor procedures to get and set the x and y fields of o\ur points--the 1st and 2nd slots of the )Tj
0 -1.2 TD
(vector we use to represent a point. )Tj
/T1_0 1 Tf
0 -2.562 TD
(; accessors to get and set the value of a point's x field.)Tj
0 -1.2 TD
(\(define \(point-x obj\))Tj
T*
(   \(vector-ref obj 1\)\))Tj
T*
(   )Tj
T*
(\(define \(point-x-set! obj value\))Tj
T*
(   \(vector-set obj 1 value\)\))Tj
0 -2.4 TD
(; accessors to get and set the value of a point's y field.)Tj
0 -1.2 TD
(\(define \(point-y obj\))Tj
0 -1.2 TD
(   \(vector-ref obj 2\)\))Tj
0 -1.2 TD
(   )Tj
0 -1.2 TD
(\(define \(point-y-set! obj\))Tj
0 -1.2 TD
(   \(vector-set! obj 2 value\)\))Tj
/T1_1 1 Tf
0 -2.557 TD
(This isn't perfect, either--we should probably test to make sure an obje\ct is a )Tj
/T1_0 1 Tf
(point)Tj
/T1_1 1 Tf
( before operating on it as a )Tj
/T1_0 1 Tf
0 -1.205 TD
(point)Tj
/T1_1 1 Tf
(. For example, )Tj
/T1_0 1 Tf
(point-x)Tj
/T1_1 1 Tf
( should be more like this: )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(define \(point-x obj\))Tj
0 -1.2 TD
(   \(if \(point? obj\))Tj
T*
(       \(vector-ref obj 1\))Tj
T*
(       \(error "attempt to apply point-x to a non-point\)\)\))Tj
/T1_1 1 Tf
0 -2.552 TD
(Once we've defined the procedures that represent operations on an abstra\ct data type, we can ignore how it's )Tj
0 -1.205 TD
(implemented--we no longer have to worry about how )Tj
/T1_0 1 Tf
(point)Tj
/T1_1 1 Tf
(s are represented. )Tj
0 -2.557 TD
(We can also change the implementation of an abstract data type by redefi\ning the procedures that create and operate )Tj
0 -1.2 TD
(on instances of that type. )Tj
0 -2.557 TD
(For example, we could decide to represent points as lists, rather than v\ectors, and redefine the constructor, )Tj
ET
EMC 
Q

endstreamendobj5402 0 obj[5341 0 R]endobj5403 0 obj[5399 0 R/XYZ 0 686.623 null]endobj5404 0 obj<</Rect[9.06398 666.39 410.42 684.866]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC212)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC212)/S/URI>>/Border[0 0 0]>>endobj5405 0 obj[5404 0 R 5407 0 R]endobj5406 0 obj[5399 0 R/XYZ 0 392.589 null]endobj5407 0 obj<</Rect[9.06398 372.355 343.969 390.832]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC213)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC213)/S/URI>>/Border[0 0 0]>>endobj5408 0 obj<</Annots 5413 0 R/Parent 5432 0 R/ID 5580 0 R/StructParents 335/Contents 5564 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 1287 0 R/T1_3 828 0 R/T1_4 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5409 0 obj<</Length 3565>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 755.8499 Tm
(predicate, and accessors to use that representation. )Tj
0 -2.557 TD
(We could also change the representation to polar form, rather than Carte\sian, storing a direction and distance from )Tj
0 -1.2 TD
(the origin rather than x and y distances. With a polar representation, w\e could still support the operations that return )Tj
T*
(or set x coordinates, using trigonometric functions to compute them from\ the direction and distance. )Tj
ET
0 0 1 RG
1.23 w 10 M 0 j 0 J []0 d 
9.064 654.877 m
463.824 654.877 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14.6418 0 0 14.6418 9.064 658.5663 Tm
(Automating the Construction of Abstract Data Types with Macros)Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 623.8923 Tm
(As I just showed, it's easy to define an abstract data type in Scheme, b\y hand, using procedural abstraction. Doing )Tj
T*
(this for every abstract data type is very tedious, however, so it would \be good to automate the process and provide a )Tj
T*
(declarative interface to it. )Tj
0 -2.557 TD
(We'd like to be able to write something like this: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define-structure point)Tj
0 -1.2 TD
(   x)Tj
T*
(   y\))Tj
/T1_0 1 Tf
0 -2.552 TD
(and have Scheme automatically construct the constructor, type predicate,\ and accessor procedures for us. In most )Tj
0 -1.205 TD
(languages, this is done by the compiler, but we can tell Scheme how to d\o it by defining )Tj
/T1_2 1 Tf
(define-structure)Tj
/T1_0 1 Tf
( as )Tj
T*
(a macro. Whenever the interpreter or compiler encounters a )Tj
/T1_2 1 Tf
(define-structure)Tj
/T1_0 1 Tf
( form, our macro )Tj
0 -1.2 TD
(transformation procedure will be called and will generate the relevant p\rocedures, which will then be interpreted or )Tj
0 -1.205 TD
(compiled in place of the )Tj
/T1_2 1 Tf
(define-structure)Tj
/T1_0 1 Tf
( form. )Tj
0 -2.562 TD
(We'll use a )Tj
/T1_2 1 Tf
(define-macro)Tj
/T1_0 1 Tf
( \(Lisp-style\) macro for this. this macro will intercept each )Tj
/T1_2 1 Tf
(define-structure)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(form, analyze it, and produce an s-expression that is a sequence of proc\edure definitions to be interpreted or )Tj
0 -1.205 TD
(compiled. Each define-structure form will be translated into a )Tj
/T1_2 1 Tf
(begin)Tj
/T1_0 1 Tf
( form containing a series of procedure )Tj
0 -1.2 TD
(definitions. )Tj
/T1_2 1 Tf
0 -2.562 TD
(; define-struct is a macro that takes a struct name and any number of fi\eld)Tj
0 -1.2 TD
(; names, all of which should be symbols.  Then it generates a begin expr\ession)Tj
T*
(; to be compiled, where the begin expression contains the constructor fo\r this)Tj
T*
(; structure type, a predicate to identify instances of this structure ty\pe,)Tj
T*
(; and all of the accessor definitions for its fields.)Tj
0 -2.4 TD
(\(define-macro \(define-struct struct-name . field-names\))Tj
T*
(   ; analyze the macro call expression and construct some handy symbols)Tj
0 -1.2 TD
(   ; and an s-expression that will define and record the accessor method\s.)Tj
0 -2.4 TD
(   \(let* \(\(maker-name \(string->symbol)Tj
0 -1.2 TD
(                       \(string-append "make-")Tj
T*
(                                      \(symbol->string struct-name\)\)\)\\))Tj
T*
(          \(pred-name \(string->symbol)Tj
T*
(                      \(string-append \(symbol->string struct-name\) "?"\\)\)\))Tj
T*
(          \(accessor-defns \(generate-accessor-defns struct-name field-n\ames\)\)\))Tj
ET
EMC 
Q

endstreamendobj5410 0 obj[5341 0 R]endobj5411 0 obj[5408 0 R/XYZ 0 578.037 null]endobj5412 0 obj<</Rect[9.06398 560.841 213.742 576.573]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC214)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC214)/S/URI>>/Border[0 0 0]>>endobj5413 0 obj[5412 0 R]endobj5414 0 obj<</Annots 5419 0 R/Parent 5432 0 R/ID 5580 0 R/StructParents 336/Contents 5565 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5415 0 obj<</Length 3163>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 755.7888 Tm
(      ; return an s-expression that's a series of definitions to be)Tj
0 -1.2 TD
(      ; interpreted or compiled.)Tj
T*
(      `\(begin \(define \(,maker-name ,@field-names\))Tj
T*
(                 \(vector ',struct-name ,@field-names\)\))Tj
T*
(              \(define \(,pred-name obj\)        )Tj
T*
(                 \(and \(vector? obj\))Tj
T*
(                      \(eq? \(vector-ref obj 0\) ,struct-name\)\)\))Tj
T*
(              ,@accessor-defns\)\)\))Tj
/T1_1 1 Tf
0 -2.557 TD
(To generate all of the accessor definitions, we call a special helper ro\utine, )Tj
/T1_0 1 Tf
(generate-accessor-defns)Tj
/T1_1 1 Tf
(, and )Tj
0 -1.205 TD
(splice the result into the sequence of definitions using )Tj
/T1_0 1 Tf
(unquote-splicing)Tj
/T1_1 1 Tf
( \()Tj
/T1_0 1 Tf
(,@)Tj
/T1_1 1 Tf
(\). )Tj
/T1_0 1 Tf
(generate-accessor-)Tj
0 -1.205 TD
(definitions)Tj
/T1_1 1 Tf
( simply iterates over the list of slot names tail-recursively \(using na\med )Tj
/T1_0 1 Tf
(let)Tj
/T1_1 1 Tf
(\), consing two )Tj
0 -1.2 TD
(definitions onto the definitions for the rest of the slots: )Tj
/T1_0 1 Tf
0 -2.562 TD
(; generate-accessor-defns generates a list of s-expressions that)Tj
0 -1.2 TD
(; define the accessors \(getters and setters\) for a structure.)Tj
0 -2.4 TD
(\(define \(generate-accessor-defns structname fnames\))Tj
T*
(   \(let \(\(structname-string \(symbol->string structname\)\)\))Tj
T*
(      ; loop over the fieldnames, and for each fieldname, generate two)Tj
0 -1.2 TD
(      ; s-expressions:  one that is a definition of a getter, and one th\at's)Tj
T*
(      ; a definition of a setter.)Tj
T*
(      ; As we loop, increment a counter i so that we can use it as the i\ndex)Tj
T*
(      ; for each slot we're generating accessors for)Tj
0 -2.4 TD
(      \(let loop \(\(fieldnames fnames\))Tj
0 -1.2 TD
(                 \(i 1\)\))Tj
T*
(         \(if \(null? fieldnames\))Tj
T*
(             '\(\))Tj
T*
(             ; take a fieldname symbol, convert to string, append it to \the)Tj
T*
(             ; struct name string with a hyphen in the middle, and conve\rt)Tj
T*
(             ; that to a symbol...)Tj
T*
(             \(let* \(\(fieldname-string \(symbol->string \(car fieldnam\es\)\)\))Tj
T*
(                    \(getter-name \(string->symbol)Tj
T*
(                                  \(string-append structname-string)Tj
T*
(                                                 "-")Tj
T*
(                                                 fieldname-string\)\)\))Tj
T*
(                    \(setter-name \(string->symbol)Tj
T*
(                                  \(string-append structname-string)Tj
T*
(                                                 "-")Tj
T*
(                                                 fieldname-string)Tj
T*
(                                                 "-set!"\)\)\)\))Tj
0 -2.4 TD
(                 ; now construct the define forms and cons them onto the\)Tj
0 -1.2 TD
(                 ; front of the list of the remaining define forms, gene\rated)Tj
ET
EMC 
Q

endstreamendobj5416 0 obj[5341 0 R]endobj5417 0 obj[5414 0 R/XYZ 0 325.248 null]endobj5418 0 obj<</Rect[329.82 321.282 350.961 334.878]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_foot.html#FOOT13)/S/URI>>/Border[0 0 0]>>endobj5419 0 obj[5418 0 R 5421 0 R]endobj5420 0 obj[5414 0 R/XYZ 0 277.752 null]endobj5421 0 obj<</Rect[90.7993 273.786 111.94 287.382]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_foot.html#FOOT14)/S/URI>>/Border[0 0 0]>>endobj5422 0 obj<</Parent 5432 0 R/ID 5580 0 R/StructParents 337/Contents 5566 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5423 0 obj<</Length 3337>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 755.7888 Tm
(                 ; iteratively \(tail-recursively\))Tj
0 -2.4 TD
(                 \(cons `\(define \(,getter-name obj\))Tj
0 -1.2 TD
(                           \(vector-ref obj ,i\)\))Tj
T*
(                       \(cons `\(define \(,setter-name obj value\))Tj
T*
(                                 \(vector-set! obj ,i value\)\))Tj
T*
(                             \(loop \(cdr fieldnames\))Tj
T*
(                                   \(+ i 1\)\)\)\)\)\)\)\)\) )Tj
ET
0 0 1 RG
1.476 w 10 M 0 j 0 J []0 d 
9.064 607.884 m
248.3 607.884 l
S
0 0 1 rg
BT
/T1_1 1 Tf
17.5702 0 0 17.5702 9.064 612.3121 Tm
(Simple Uses of OOP Objects)Tj
0 0 0 rg
/T1_2 1 Tf
12.6896 0 0 12.6896 9.064 576.6898 Tm
(In this section, I'll discuss a simple object system and how it it used.\ This object system is not part of Standard )Tj
T*
(Scheme, but can be [almost entirely ?] implemented in portable Scheme, a\nd used in any Scheme system with a )Tj
T*
(reasonably powerful macro system. )Tj
0 -2.557 TD
(The object system is based on )Tj
/T1_3 1 Tf
(classes)Tj
/T1_2 1 Tf
( and )Tj
/T1_3 1 Tf
(generic procedures)Tj
/T1_2 1 Tf
(. It is a subset of the RScheme object system, and its )Tj
0 -1.2 TD
(basic functionality is similar to a subset of CLOS object system for Com\mon Lisp, the Dylan object system, )Tj
T*
(Meroon, TinyCLOS, and STkLOS. )Tj
ET
1.23 w 
9.064 445.262 m
97.735 445.262 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14.6418 0 0 14.6418 9.064 448.9513 Tm
(Late Binding)Tj
0 0 0 rg
/T1_2 1 Tf
12.6896 0 0 12.6896 9.064 414.2772 Tm
(One of the major features of object-based and object-oriented programmin\g is )Tj
/T1_3 1 Tf
(late binding of methods)Tj
/T1_2 1 Tf
(, which )Tj
T*
(means that we can write code in terms of abstract operations without kno\wing exactly which concrete operations )Tj
T*
(will be executed at run time. )Tj
0 -2.557 TD
(For example, consider a graphical program that maintains a list of objec\ts whose graphical reprsentations are )Tj
0 -1.2 TD
(visiblle on the user's screen, and periodically redraws those objects. I\t might iterate over this "display list" of )Tj
T*
(objects, applying a drawing routine to each object to display it on the \screen. In most interesting applications, there )Tj
T*
(would be a variety of graphical object types, each of which is drawn in \a different ways. )Tj
0 -2.557 TD
(If our graphical objects are represented as traditional records, such as\ C structs or Pascal records, the drawing )Tj
0 -1.2 TD
(routine must be modified each time a new graphical type is added to the \program. For example, suppose we have a )Tj
0 -1.205 TD
(routine )Tj
/T1_0 1 Tf
(draw)Tj
/T1_2 1 Tf
( which can draw any kind of object on the screen. )Tj
/T1_0 1 Tf
(draw)Tj
/T1_2 1 Tf
( might be written with a case expression, like )Tj
0 -1.2 TD
(this: )Tj
/T1_0 1 Tf
0 -2.562 TD
( \(define \(draw obj\))Tj
0 -1.2 TD
(    \(cond \(\(triangle? obj\))Tj
T*
(           \(draw-triangle obj\)\))Tj
T*
(          \(\(square? obj\))Tj
T*
(           \(draw-square obj\)\))Tj
T*
(          \(\(circle? obj\))Tj
T*
(           \(draw-circle obj\)\))Tj
T*
(          ; more branches...)Tj
T*
(          ;    .)Tj
T*
(          ;    .)Tj
T*
(          ;    .)Tj
ET
EMC 
Q

endstreamendobj5424 0 obj[5341 0 R]endobj5425 0 obj<</Annots 5430 0 R/Parent 5432 0 R/ID 5580 0 R/StructParents 338/Contents 5568 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5426 0 obj<</Length 4655>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 755.7888 Tm
(          \(\(regular-pentagon? obj\))Tj
0 -1.2 TD
(           \(draw-regular-pentagon obj\)\))Tj
/T1_1 1 Tf
0 -2.557 TD
(Each time we define a new kind of record that represents a graphical obj\ect, we must add a branch to this )Tj
/T1_0 1 Tf
(cond)Tj
/T1_1 1 Tf
( to )Tj
0 -1.2 TD
(check for that kind of object, and call the appropriate drawing routine.\ )Tj
0 -2.562 TD
(In large, sophisticated programs that deal with many kinds of objects, t\he code may be littered with )Tj
/T1_0 1 Tf
(cond)Tj
/T1_1 1 Tf
( or )Tj
/T1_0 1 Tf
(case)Tj
/T1_1 1 Tf
( )Tj
0 -1.2 TD
(statements like this, which represent )Tj
/T1_2 1 Tf
(abstract operations)Tj
/T1_1 1 Tf
(, and map them onto concrete operations for specific types. )Tj
0 -1.205 TD
(\(This example maps the abstract operation "draw an object" onto concret\e operations like )Tj
/T1_0 1 Tf
(draw-triangle)Tj
/T1_1 1 Tf
(, )Tj
/T1_0 1 Tf
0 -1.205 TD
(draw-square)Tj
/T1_1 1 Tf
(, and so on.\) )Tj
0 -2.562 TD
(Such code is very difficult to maintain and extend. Whenever a new type \is added to the system, all of the )Tj
/T1_0 1 Tf
(cond)Tj
/T1_1 1 Tf
( or )Tj
/T1_0 1 Tf
0 -1.205 TD
(case)Tj
/T1_1 1 Tf
( expressions that could be affected must be located and modified. )Tj
0 -2.557 TD
(What we would like is a way of specifying how an abstract operation is i\mplemented for a particular kind of object, )Tj
0 -1.2 TD
(and having the system keep track of the details. For example, we'd like \to say at )Tj
/T1_2 1 Tf
(one)Tj
/T1_1 1 Tf
( point in the program, "here's )Tj
T*
(how you draw a regular pentagon," and then be able to use regular pentag\ons freely. We can then use the abstract )Tj
0 -1.205 TD
(operation )Tj
/T1_0 1 Tf
(draw)Tj
/T1_1 1 Tf
(, and rely on the system to automatically check what kind of object is b\eing drawn, find the )Tj
0 -1.2 TD
(appropriate drawing routine for that type, and call it to draw that part\icular object. )Tj
0 -2.557 TD
(For example, the routine that draws all of the visible objects might jus\t look like this: )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(map draw display-list\))Tj
/T1_1 1 Tf
( )Tj
T*
(When we later add a new type, such as )Tj
/T1_0 1 Tf
(irregular-hexagon)Tj
/T1_1 1 Tf
(, we can just define a )Tj
/T1_2 1 Tf
(method)Tj
/T1_1 1 Tf
( for drawing irregular )Tj
0 -1.205 TD
(hexagons, and the system will automatically make the )Tj
/T1_0 1 Tf
(draw)Tj
/T1_1 1 Tf
( operation work for irregular hexagons. We don't have )Tj
0 -1.2 TD
(to go find all of the code that might encounter irregular hexagons and m\odify it. )Tj
0 -2.557 TD
(This feature is called )Tj
/T1_2 1 Tf
(late binding of methods)Tj
/T1_1 1 Tf
(. When we write code that uses an abstract operation, we don't have to )Tj
0 -1.2 TD
(specify exactly what concrete operation should be performed. )Tj
0 -2.557 TD
(\(Note: here we're using a fairly general sense of the word "binding," w\hich is more general than the notion of )Tj
0 -1.2 TD
(variable binding. We're making an association between a piece of code an\d the operation it represents, rather than )Tj
0 -1.2 TD
(between a name and a piece of storage. In this general sense, "binding" \means to associate something with )Tj
0 -1.205 TD
(something else, and in this example, we associating the abstract operati\on )Tj
/T1_0 1 Tf
(draw)Tj
/T1_1 1 Tf
( with the particular procedure )Tj
0 -1.2 TD
(needed to draw a particular object at run time.\) )Tj
0 -2.562 TD
(As we'll see a little later, we can define a )Tj
/T1_2 1 Tf
(generic procedure)Tj
/T1_1 1 Tf
( that reprsents the abstract )Tj
/T1_0 1 Tf
(draw)Tj
/T1_1 1 Tf
( operation, and rely on )Tj
0 -1.2 TD
(an object system to bind that abstract operation to the appropriate draw\ing procedure for a particular type at run )Tj
0 -1.2 TD
(time. When we later define new types and methods for drawing them, the g\eneric procedure will be automatically )Tj
T*
(updated to handle them. This lets us write most of our code at a higher \level of abstraction, in terms of operations )Tj
T*
(that "just work" for all of the relevant types. \(E.g., we might have ab\stract operations that can draw, move, and hide )Tj
T*
(any kind of graphical object, so that we don't need to worry about the d\ifferences between the different kinds of )Tj
T*
(graphical objects if those differences don't matter for what we're tryin\g to do.\) )Tj
ET
0 0 1 RG
1.23 w 10 M 0 j 0 J []0 d 
9.064 42.325 m
293.027 42.325 l
S
0 0 1 rg
BT
/T1_3 1 Tf
14.6418 0 0 14.6418 9.064 46.0146 Tm
(Class Definitions and Slot Specifications)Tj
ET
EMC 
Q

endstreamendobj5427 0 obj[5341 0 R]endobj5428 0 obj[5425 0 R/XYZ 0 582.06 null]endobj5429 0 obj<</Rect[291.762 578.094 312.903 591.69]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_foot.html#FOOT15)/S/URI>>/Border[0 0 0]>>endobj5430 0 obj[5429 0 R]endobj5431 0 obj<</Annots 5437 0 R/Parent 5457 0 R/ID 5580 0 R/StructParents 339/Contents 5569 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R/T1_3 1287 0 R/T1_4 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5432 0 obj<</Parent 5641 0 R/Count 5/Type/Pages/Kids[5399 0 R 5408 0 R 5414 0 R 5422 0 R 5425 0 R]>>endobj5433 0 obj<</Length 4584>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 743.7742 Tm
(A )Tj
/T1_1 1 Tf
(class)Tj
/T1_0 1 Tf
( is an object that describes a particular kind of object. A )Tj
/T1_1 1 Tf
(class definition)Tj
/T1_0 1 Tf
( is an expression like a record or )Tj
0 -1.2 TD
(structure definition, which defines the structure of that kind of object\. Classes can also have associated behavior or )Tj
/T1_1 1 Tf
T*
(methods)Tj
/T1_0 1 Tf
(, which are routines for performing particular operations on instances o\f a class. )Tj
0 -2.557 TD
(For example, suppose we would like to have a class of objects that can b\e used to represent points in two-)Tj
0 -1.205 TD
(dimensional space. Each point object will have an )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( slot and a )Tj
/T1_2 1 Tf
(y)Tj
/T1_0 1 Tf
( slot, which hold the object's position in the x and y )Tj
0 -1.2 TD
(dimensions. )Tj
0 -2.557 TD
(\(A )Tj
/T1_1 1 Tf
(slot)Tj
/T1_0 1 Tf
( is a field of an object, which in other languages may be known as an )Tj
/T1_1 1 Tf
(instance variable)Tj
/T1_0 1 Tf
(, a )Tj
/T1_1 1 Tf
(data member)Tj
/T1_0 1 Tf
(, an )Tj
/T1_1 1 Tf
0 -1.2 TD
(attribute)Tj
/T1_0 1 Tf
(, or a )Tj
/T1_1 1 Tf
(feature)Tj
/T1_0 1 Tf
(.\) )Tj
0 -2.557 TD
(We can define our point class like this: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define-class <point> \(<object>\))Tj
0 -1.2 TD
(   \(x init-value: 0\))Tj
T*
(   \(y init-value: 0\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Here we have chosen to name the class )Tj
/T1_2 1 Tf
(<point>)Tj
/T1_0 1 Tf
(. By convention, we use angle brackets to begin and end the )Tj
0 -1.2 TD
(names of classes, so that it's clear that they are class names, not name\s of normal objects. )Tj
0 -2.562 TD
(The parenthesized expression after the class name )Tj
/T1_2 1 Tf
(<point>)Tj
/T1_0 1 Tf
( is a sequence of )Tj
/T1_1 1 Tf
(superclass)Tj
/T1_0 1 Tf
( names, which will be )Tj
0 -1.205 TD
(explained later.)Tj
ET
0 0 1 RG
0.64 w 10 M 0 j 0 J []0 d 
87.295 409.869 m
108.436 409.869 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 87.2952 411.7881 Tm
(\(12\))Tj
0 0 0 rg
( \(When in doubt, it is a good idea to use )Tj
/T1_2 1 Tf
(<object>)Tj
/T1_0 1 Tf
( as the sole superclass, so use )Tj
/T1_2 1 Tf
-6.165 -1.348 Td
(\(<object>\))Tj
/T1_0 1 Tf
( after the class name in the class definition.\) )Tj
0 -2.557 TD
(The two remaining fields after the superclasses are the )Tj
/T1_1 1 Tf
(slot specifications)Tj
/T1_0 1 Tf
(, which say what kinds of fields an )Tj
0 -1.205 TD
(instance of )Tj
/T1_2 1 Tf
(<point>)Tj
/T1_0 1 Tf
( will have. A slot specification is written in parentheses, and the firs\t thing is the name of the )Tj
0 -1.205 TD
(slot. After that come )Tj
/T1_1 1 Tf
(keyword/value)Tj
/T1_0 1 Tf
( pairs. Here we use the keyword )Tj
/T1_2 1 Tf
(init-value:)Tj
/T1_0 1 Tf
( followed by the value )Tj
/T1_2 1 Tf
(0)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(The specification )Tj
/T1_2 1 Tf
(\(x init-value: 0\))Tj
/T1_0 1 Tf
( says that each instance of <point> will have a slot \(field\) named )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
(, and )Tj
0 -1.205 TD
(that the initial value of the field is )Tj
/T1_2 1 Tf
(0)Tj
/T1_0 1 Tf
(. That is, when we create a )Tj
/T1_2 1 Tf
(<point>)Tj
/T1_0 1 Tf
( instance to represent a 2-d point, the )Tj
T*
(initial x value will be zero. Likewise, the slot specification )Tj
/T1_2 1 Tf
(\(y init-value 0)Tj
/T1_0 1 Tf
( says that each point will also )Tj
0 -1.205 TD
(have a )Tj
/T1_2 1 Tf
(y)Tj
/T1_0 1 Tf
( slot whose initial value is )Tj
/T1_2 1 Tf
(0)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(We can create an instance of an object by using the special form )Tj
/T1_2 1 Tf
(make)Tj
/T1_0 1 Tf
(, which is actually implemented as a macro. )Tj
0 -1.205 TD
(The )Tj
/T1_2 1 Tf
(make)Tj
/T1_0 1 Tf
( operation takes a class as its first argument, and returns a new object\ that is an instance of that class. )Tj
0 -2.562 TD
(To make a )Tj
/T1_2 1 Tf
(<point>)Tj
/T1_0 1 Tf
(, we might use the )Tj
/T1_2 1 Tf
(make)Tj
/T1_0 1 Tf
( expression )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(make <point>\))Tj
/T1_0 1 Tf
0 -2.552 TD
(This expression returns a new point whose x and y slots are initialized \to zero. )Tj
0 -2.557 TD
(If we want the slots of an object to be initialized to a requested value\ at the time the object is initialized--rather than )Tj
0 -1.2 TD
(always being initialized the to the same value for every object, we can \omit the initial value specification in the )Tj
0 -1.205 TD
(class definition, and provide it to the )Tj
/T1_2 1 Tf
(make)Tj
/T1_0 1 Tf
( call that creates an object. )Tj
ET
EMC 
Q

endstreamendobj5434 0 obj[5341 0 R]endobj5435 0 obj[5431 0 R/XYZ 0 562.809 null]endobj5436 0 obj<</Rect[9.06398 547.786 112.865 561.54]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC215)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC215)/S/URI>>/Border[0 0 0]>>endobj5437 0 obj[5436 0 R]endobj5438 0 obj<</Annots 5443 0 R/Parent 5457 0 R/ID 5580 0 R/StructParents 340/Contents 5570 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R/T1_3 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5439 0 obj<</Length 3884>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 745.0361 Tm
(\(define-class <point> \(<object>\))Tj
0 -1.2 TD
(   \(x\))Tj
T*
(   \(y\)\))Tj
/T1_1 1 Tf
0 -2.557 TD
(Given this class definition, we can use )Tj
/T1_0 1 Tf
(make)Tj
/T1_1 1 Tf
( to create a )Tj
/T1_0 1 Tf
(<point>)Tj
/T1_1 1 Tf
( instance with particular x and y values: )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(define my-point)Tj
0 -1.2 TD
(        \(make <point> x: 10 y: 20\)\) )Tj
/T1_1 1 Tf
0 -2.552 TD
(Here we've created a point object with an x value of 10 and a y value of\ 20. Note that the x value is labeled by a )Tj
0 -1.205 TD
(keyword )Tj
/T1_0 1 Tf
(x:)Tj
/T1_1 1 Tf
(. As in a class definition, a keyword argument to )Tj
/T1_0 1 Tf
(make)Tj
/T1_1 1 Tf
( looks sort of like an argument, but it really isn't: )Tj
0 -1.2 TD
(it's the )Tj
/T1_2 1 Tf
(name)Tj
/T1_1 1 Tf
( of the following argument. )Tj
0 -2.562 TD
(Keyword arguments to )Tj
/T1_0 1 Tf
(define-class)Tj
/T1_1 1 Tf
( and )Tj
/T1_0 1 Tf
(make)Tj
/T1_1 1 Tf
( let you write the arguments in any order, by giving the name )Tj
0 -1.205 TD
(before the value. We could have written the above call to )Tj
/T1_0 1 Tf
(make)Tj
/T1_1 1 Tf
( with the values in the opposite order: )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(define my-point \(make <point> y: 20 x: 10\)\))Tj
/T1_1 1 Tf
0 -2.557 TD
(The result of this definition is exactly the same as the earlier one. Th\e )Tj
/T1_0 1 Tf
(make)Tj
/T1_1 1 Tf
( macro will sort out the arguments, )Tj
0 -1.2 TD
(looking at the keyword to figure out what the following arguments are fo\r. )Tj
0 -2.562 TD
(By default, when we define a class with slots )Tj
/T1_0 1 Tf
(x)Tj
/T1_1 1 Tf
( and )Tj
/T1_0 1 Tf
(y)Tj
/T1_1 1 Tf
(, we implicitly define operations on those fields of those )Tj
0 -1.2 TD
(objects. )Tj
0 -2.557 TD
(For each field, two routines are defined, a )Tj
/T1_2 1 Tf
(getter)Tj
/T1_1 1 Tf
(, which fetches the value of the field, and a )Tj
/T1_2 1 Tf
(setter)Tj
/T1_1 1 Tf
(, which sets the )Tj
0 -1.205 TD
(value of the field. The name of the getter is just the name of the field\. The name of the setter starts with )Tj
/T1_0 1 Tf
(set-)Tj
/T1_1 1 Tf
(, )Tj
0 -1.2 TD
(followed by the name of the field, followed by an exclamation point to i\ndicate that the operation is destructive \(i.)Tj
T*
(e., modifies the state of the object by replacing an old value with a ne\w one.\) )Tj
0 -2.562 TD
(Given the point we created, we can ask the value of its )Tj
/T1_0 1 Tf
(x)Tj
/T1_1 1 Tf
( field by evaluating the expression )Tj
/T1_0 1 Tf
(\(x my-point\))Tj
/T1_1 1 Tf
(, )Tj
0 -1.205 TD
(which will return )Tj
/T1_0 1 Tf
(10)Tj
/T1_1 1 Tf
(. We can change teh value to 50 by evaluating the expression )Tj
/T1_0 1 Tf
(\(set-x! my-point 50\))Tj
/T1_1 1 Tf
(. )Tj
0 -1.2 TD
(We can increment it by 1 with the expression )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(set-x! my-point)Tj
0 -1.2 TD
(        \(+ 1 \(x my-point\)\)\))Tj
/T1_1 1 Tf
0 -2.552 TD
(Different kinds of objects can have fields with the same name, and the g\etters and setters will operate on the )Tj
0 -1.2 TD
(appropriate field of whatever kind of object they are applied to. \(Acce\ssors are actually generic procedures, which )Tj
T*
(will be explained later.\) )Tj
ET
0 0 1 RG
1.23 w 10 M 0 j 0 J []0 d 
9.064 105.899 m
242.586 105.899 l
S
0 0 1 rg
BT
/T1_3 1 Tf
14.6418 0 0 14.6418 9.064 109.5885 Tm
(Generic Procedures and Methods)Tj
0 0 0 rg
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 74.9144 Tm
(A )Tj
/T1_2 1 Tf
(generic procedure)Tj
/T1_1 1 Tf
( is a procedure that does a certain operation, but may do it in differen\t ways depending on what )Tj
T*
(kind of argument it is given. A generic procedure can be )Tj
/T1_2 1 Tf
(specialized)Tj
/T1_1 1 Tf
(, telling it how to perform a particular kind of )Tj
T*
(operation for a particular kind of argument. )Tj
ET
EMC 
Q

endstreamendobj5440 0 obj[5341 0 R]endobj5441 0 obj[5438 0 R/XYZ 0 206.534 null]endobj5442 0 obj<</Rect[9.06398 189.338 231.312 205.07]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC216)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC216)/S/URI>>/Border[0 0 0]>>endobj5443 0 obj[5442 0 R]endobj5444 0 obj<</Parent 5457 0 R/ID 5580 0 R/StructParents 341/Contents 5571 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5445 0 obj<</Length 4083>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 744.4441 Tm
(A )Tj
/T1_1 1 Tf
(method definition)Tj
/T1_0 1 Tf
( specifies how a generic operation should be done for an object of a par\ticular type. )Tj
0 -1.2 TD
(Conceptually, a generic function keeps track of all of the methods which\ perform a particular operation on different )Tj
T*
(kinds of objects. A generic procedure is called just like any other func\tion, but the first thing it does is to look up )Tj
T*
(the appropriate method for the kind of object being operated on. Then it\ applies that method. A generic procedure is )Tj
T*
(therefore a kind of dispatcher, which maps abstract operations onto the \actual procedures for performing them. )Tj
0 -2.557 TD
(For example, suppose we would like to define several classes, @code<stac\k>, @code<queue>, and @code<d-e-)Tj
0 -1.2 TD
(queue>, to represent stacks, queues, and double-ended queues, respective\ly. )Tj
0 -2.557 TD
(We could define stack this way: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define-class <stack> \(<object>\))Tj
0 -1.2 TD
(   \(items init-value: '\(\)\)   ; list of items in the stack)Tj
/T1_0 1 Tf
0 -2.557 TD
(An instance of )Tj
/T1_2 1 Tf
(<stack>)Tj
/T1_0 1 Tf
( has one field, )Tj
/T1_2 1 Tf
(items)Tj
/T1_0 1 Tf
(, which points to a list of items in the stack. We can push items onto )Tj
0 -1.205 TD
(the stack by )Tj
/T1_2 1 Tf
(cons)Tj
/T1_0 1 Tf
(ing them onto the front of its list of items, or pop items off of the st\ack by )Tj
/T1_2 1 Tf
(cdr)Tj
/T1_0 1 Tf
(ing the list. )Tj
0 -2.562 TD
(To define the behavior of )Tj
/T1_2 1 Tf
(<stack>)Tj
/T1_0 1 Tf
(---and things like stacks--we need some generic procedures, )Tj
/T1_2 1 Tf
(insert-)Tj
0 -1.205 TD
(first!)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(remove-first!)Tj
/T1_0 1 Tf
(. These will add an item to the front \(top\) of a stack, or remove and \return the item )Tj
0 -1.2 TD
(from the front \(top\) of a stack, respectively. )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define-generic \(insert-first! obj item\)\))Tj
0 -2.4 TD
(\(define-generic \(remove-first! obj\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(These two generic procedures define "generic operations" which may be su\pported by different classes, but do )Tj
0 -1.2 TD
(semantically "the same thing." That is, the generic procedures don't rep\resent how to do a particular kind of )Tj
T*
(operation on a particular kind of object, but instead represent a genera\l kind of operation that we can define for )Tj
T*
(different kinds of objects. )Tj
0 -2.557 TD
(This pair of generic procedures therefore acts as an )Tj
/T1_1 1 Tf
(abstract data type)Tj
/T1_0 1 Tf
(, which represents object that can behave as )Tj
0 -1.2 TD
(stacks. The don't say how any particular implementation of stacks works.\ )Tj
0 -2.562 TD
(To make the generic operations work for the particular class )Tj
/T1_2 1 Tf
(<stack>)Tj
/T1_0 1 Tf
(, we need to define )Tj
/T1_1 1 Tf
(methods)Tj
/T1_0 1 Tf
( that say )Tj
/T1_1 1 Tf
(how)Tj
/T1_0 1 Tf
( to )Tj
0 -1.205 TD
(perform the )Tj
/T1_2 1 Tf
(insert-first!)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(remove-first!)Tj
/T1_0 1 Tf
( operations on objects that are instances of class )Tj
/T1_2 1 Tf
(<stack>)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(For this, we use the macro )Tj
/T1_2 1 Tf
(define-method)Tj
/T1_0 1 Tf
(. Here's the definition of the )Tj
/T1_2 1 Tf
(insert-first!)Tj
/T1_0 1 Tf
( operation for the )Tj
0 -1.205 TD
(class )Tj
/T1_2 1 Tf
(<stack>)Tj
/T1_0 1 Tf
(: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define-method \(insert-first! \(self <stack>\) item\))Tj
0 -1.2 TD
(   \(set-items! self)Tj
T*
(               \(cons item \(items self\)\)\)\)    )Tj
/T1_0 1 Tf
0 -2.552 TD
(This )Tj
/T1_1 1 Tf
(method)Tj
/T1_0 1 Tf
( definition is very much like a procedure definition. Here we're definin\g a method that takes two )Tj
0 -1.205 TD
(arguments, named )Tj
/T1_1 1 Tf
(self)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(item)Tj
/T1_0 1 Tf
(. The calling form )Tj
/T1_2 1 Tf
(\(insert-first! \(<stack> self\) item\))Tj
/T1_0 1 Tf
( says that )Tj
ET
EMC 
Q

endstreamendobj5446 0 obj[5341 0 R]endobj5447 0 obj<</Parent 5457 0 R/ID 5580 0 R/StructParents 342/Contents 5572 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5448 0 obj<</Length 4360>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 755.7888 Tm
(this is the particular procedure to use for the generic procedure )Tj
/T1_1 1 Tf
(insert-first!)Tj
/T1_0 1 Tf
( operation when it's given two )Tj
0 -1.205 TD
(arguments, and the first argument is an instance of class )Tj
/T1_1 1 Tf
(<stack>)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(That is, we're defining a procedure of two arguments, )Tj
/T1_1 1 Tf
(self)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(item)Tj
/T1_0 1 Tf
(, but we're also saying that this procedure is )Tj
0 -1.205 TD
(to be used )Tj
/T1_2 1 Tf
(by)Tj
/T1_0 1 Tf
( the generic procedure )Tj
/T1_1 1 Tf
(insert-first!)Tj
/T1_0 1 Tf
( only when its first argument is a stack. \(The names )Tj
/T1_1 1 Tf
(self)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(and )Tj
/T1_1 1 Tf
(item)Tj
/T1_0 1 Tf
( were chosen for convenience--as with a normal procedure, we can name ar\guments anything we want.\) )Tj
0 -2.562 TD
(Given this definition, when )Tj
/T1_1 1 Tf
(insert-first!)Tj
/T1_0 1 Tf
( is called with two arguments, and the first is a stack, this procedure \)Tj
0 -1.2 TD
(will be executed to perform the operation in the appropriate way for sta\cks. We say that we are )Tj
/T1_2 1 Tf
(specializing)Tj
/T1_0 1 Tf
( the )Tj
0 -1.205 TD
(generic procedure )Tj
/T1_1 1 Tf
(insert-first!)Tj
/T1_0 1 Tf
( for instances of the class )Tj
/T1_1 1 Tf
(<stack>)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(The body of this method definition refers to the stack being operated on\ as )Tj
/T1_1 1 Tf
(self)Tj
/T1_0 1 Tf
(, the name given as the first )Tj
0 -1.205 TD
(argument name; it refers to the second argument, which is being pushed o\n the stack, as )Tj
/T1_1 1 Tf
(item)Tj
/T1_0 1 Tf
(. The body of the )Tj
0 -1.2 TD
(method is )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(set-items! self)Tj
0 -1.2 TD
(            \(cons item \(items self\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(which relies on the getter and setter implicitly defined for the )Tj
/T1_1 1 Tf
(items)Tj
/T1_0 1 Tf
( slot by the class definition. It fetches the )Tj
0 -1.205 TD
(value of the )Tj
/T1_1 1 Tf
(head)Tj
/T1_0 1 Tf
( slot of )Tj
/T1_1 1 Tf
(self)Tj
/T1_0 1 Tf
( using )Tj
/T1_1 1 Tf
(head)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(cons)Tj
/T1_0 1 Tf
(es the argument )Tj
/T1_1 1 Tf
(item)Tj
/T1_0 1 Tf
( onto that list, and assigns the result to the )Tj
T*
(head slot using )Tj
/T1_1 1 Tf
(set-head!)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(The method for the generic procedure )Tj
/T1_1 1 Tf
(remove-first!)Tj
/T1_0 1 Tf
( when applied to stacks could be defined like this: )Tj
/T1_1 1 Tf
T*
(\(define-method \(remove-first! \(self <stack>\)\))Tj
0 -1.2 TD
(   \(let \(\(first-item \(car \(items self\)\)\)\))Tj
T*
(      \(set-items! \(cdr \(items self\)\)\)\)\) )Tj
/T1_0 1 Tf
0 -2.552 TD
(Now let's implement a queue data type. Like a stack, a queue data type a\llows you to push an item on the front of an )Tj
0 -1.205 TD
(ordered sequence of items--it supports the )Tj
/T1_1 1 Tf
(insert-first!)Tj
/T1_0 1 Tf
( operation. )Tj
0 -2.562 TD
(However, a queue doesn't let you add items to the front--it only lets yo\u add items to the rear. So our )Tj
/T1_1 1 Tf
(<queue>)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(class should support )Tj
/T1_1 1 Tf
(remove-first!)Tj
/T1_0 1 Tf
(, like )Tj
/T1_1 1 Tf
(<stack>)Tj
/T1_0 1 Tf
(, but )Tj
/T1_1 1 Tf
(insert-last!)Tj
/T1_0 1 Tf
( instead of )Tj
/T1_1 1 Tf
(insert-first!)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(This means that we can define a method for )Tj
/T1_1 1 Tf
(<queue>)Tj
/T1_0 1 Tf
( on the )Tj
/T1_1 1 Tf
(remove-first!)Tj
/T1_0 1 Tf
( generic procedures, but we need )Tj
0 -1.205 TD
(a new generic procedure )Tj
/T1_1 1 Tf
(insert-last!)Tj
/T1_0 1 Tf
(, which represents the abstract operation of removing the last item from\ )Tj
0 -1.2 TD
(an ordered sequence. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-generic insert-last!\))Tj
/T1_0 1 Tf
0 -2.557 TD
(The pair of generic operations )Tj
/T1_1 1 Tf
(insert-last!)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(remove-first!)Tj
/T1_0 1 Tf
( represent the abstract datatype of queues )Tj
0 -1.2 TD
(and things that can behave like queues. )Tj
0 -2.557 TD
(To actually implement queues, we need a class definition and some method\ definitions, to say how a queue should )Tj
0 -1.2 TD
(be represented, and how the queue operations should be done on it. )Tj
ET
EMC 
Q

endstreamendobj5449 0 obj[5341 0 R]endobj5450 0 obj<</Annots 5455 0 R/Parent 5457 0 R/ID 5580 0 R/StructParents 343/Contents 5573 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R/T1_3 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5451 0 obj<</Length 3254>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 755.8499 Tm
(For a queue, it's good for accesses to be fast at either end, so we'll w\ant a doubly-linked list, rather than a simple list )Tj
0 -1.205 TD
(of pairs. Here's a class definition for )Tj
/T1_1 1 Tf
(<queue>)Tj
/T1_0 1 Tf
(: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-class <queue> \(<object>\))Tj
0 -1.2 TD
(   \(front '\(\)\))Tj
T*
(   \(rear '\(\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Each )Tj
/T1_1 1 Tf
(<queue>)Tj
/T1_0 1 Tf
(s keep a pointer to the beginning of the linked list and a pointer to th\e end of the linked list. The )Tj
0 -1.2 TD
(queue itself is structured as a doubly-linked list of queue nodes, each \of which has a pointer to an )Tj
/T1_2 1 Tf
(item)Tj
/T1_0 1 Tf
( that's )Tj
0 -1.205 TD
(conceptually in the queue, plus a )Tj
/T1_1 1 Tf
(next)Tj
/T1_0 1 Tf
( pointer to the next doubly-linked list node, and a )Tj
/T1_1 1 Tf
(prev)Tj
/T1_0 1 Tf
( pointer to the )Tj
0 -1.2 TD
(previous one. )Tj
0 -2.562 TD
(To implement the doubly-linked list, we'll use a helper class to impleme\nt the list nodes, called )Tj
/T1_1 1 Tf
(<d-l-list-)Tj
0 -1.205 TD
(node>)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-class <d-l-list-node> \(<object>\))Tj
0 -1.2 TD
(   \(item\))Tj
T*
(   \(next\))Tj
T*
(   \(prev\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(This definition will implicitly define setters and getters for the field\s, e.g., )Tj
/T1_1 1 Tf
(set-next!)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(set-next!)Tj
/T1_0 1 Tf
( for the )Tj
/T1_1 1 Tf
0 -1.205 TD
(next)Tj
/T1_0 1 Tf
( field of a )Tj
/T1_1 1 Tf
(<d-l-list-node>)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Now we can define the methods for the )Tj
/T1_1 1 Tf
(remove-first!)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(insert-last!)Tj
/T1_0 1 Tf
( operations on instances of )Tj
/T1_1 1 Tf
0 -1.205 TD
(<queue>)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(insert-last! \(self <queue>\) item\))Tj
0 -1.2 TD
(   \(let \(\(new-node \(make <d-l-list-node> item: item)Tj
T*
(                                         prev: \(rear self\)\))Tj
T*
(                                         next: '\(\)\)\)\))Tj
T*
(      \(cond \(\(null? \(front self\)\)          ; nothing in queue yet?\)Tj
T*
(             \(set-front! self new-node\)              ; this will be fi\rst)Tj
T*
(            \(else                              ; otherwise)Tj
T*
(             \(set-next! \(rear self\) new-node\)\)\) ; append to rear o\f list)Tj
T*
(      \(set-rear! self new-node\)\)\)\)   ; update rear pointer)Tj
0 -2.557 TD
(\(define \(remove-first! \(self <queue>\)\))Tj
0 -1.2 TD
(   \(let \(\(first-node \(front self\)\)\))Tj
T*
(      \(if \(null? first-node\))Tj
T*
(          \(error "attempt to remove-first! from an empty queue:" self\)\)Tj
0 -1.2 TD
(          \(let* \(\(first-item \(item first-node\)\))Tj
0 -1.2 TD
(                 \(rest \(next first-node\)\)\))Tj
0 -1.2 TD
(             \(cond\(\(null? rest\)    ; no nodes left in queue?)Tj
0 -1.2 TD
(                   \(set-front! self '\(\)\) )Tj
0 -1.2 TD
(                   \(set-rear! self '\(\)\)\))Tj
T*
(                  \(else)Tj
T*
(                   \(set-prev! rest '\(\)\))Tj
ET
EMC 
Q

endstreamendobj5452 0 obj[5341 0 R]endobj5453 0 obj[5450 0 R/XYZ 0 597.252 null]endobj5454 0 obj<</Rect[9.06398 580.057 222.527 595.788]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC217)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC217)/S/URI>>/Border[0 0 0]>>endobj5455 0 obj[5454 0 R]endobj5456 0 obj<</Annots 5462 0 R/Parent 5614 0 R/ID 5580 0 R/StructParents 344/Contents 5574 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5457 0 obj<</Parent 5641 0 R/Count 5/Type/Pages/Kids[5431 0 R 5438 0 R 5444 0 R 5447 0 R 5450 0 R]>>endobj5458 0 obj<</Length 4152>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 755.7888 Tm
(                   \(set-front! self rest\)\)\)\)\)\)\))Tj
/T1_1 1 Tf
0 -2.552 TD
(Note that what stacks and queues both support the abstract operation of \removing the first item, but each does it in a )Tj
0 -1.2 TD
(different way--the same operation \(generic procedure\) is implemented b\y different code \(methods\). )Tj
ET
0 0 1 RG
1.476 w 10 M 0 j 0 J []0 d 
9.064 666.8 m
410.42 666.8 l
S
0 0 1 rg
BT
/T1_2 1 Tf
17.5702 0 0 17.5702 9.064 671.228 Tm
(Generic Procedures and Classes are First-Class)Tj
0 0 0 rg
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 635.6057 Tm
(A generic procedure is a procedure, like any other--it is a first-class \object that happens to be callable as a )Tj
T*
(procedure. You can therefore use store generic procedures in data struct\ures, pass them as arguments to other )Tj
T*
(procedures, and so on. )Tj
0 -2.562 TD
(For example, in a graphical program, we may have a generic )Tj
/T1_0 1 Tf
(draw)Tj
/T1_1 1 Tf
( procedure to display any kind of graphical )Tj
0 -1.205 TD
(object, and each class of graphical object may have its own )Tj
/T1_0 1 Tf
(draw)Tj
/T1_1 1 Tf
( method. By mapping the generic procedure )Tj
/T1_0 1 Tf
T*
(draw)Tj
/T1_1 1 Tf
( over a list of graphical objects, like this, )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(map draw list-of-objects-to-be-drawn\))Tj
/T1_1 1 Tf
0 -2.552 TD
(we can invoke the appropriate draw method for each kind of object. )Tj
0 -2.562 TD
(In our system, classes are also first class. When we use )Tj
/T1_0 1 Tf
(define-class)Tj
/T1_1 1 Tf
( to define a class named )Tj
/T1_0 1 Tf
(<point>)Tj
/T1_1 1 Tf
(, we )Tj
0 -1.2 TD
(are actually doing two things: we are creating a special kind of object \to represent the class, and we are defining a )Tj
0 -1.205 TD
(variable named )Tj
/T1_0 1 Tf
(<point>)Tj
/T1_1 1 Tf
( initialized with a pointer to the class object. )Tj
ET
9.064 372.766 m
343.969 372.766 l
S
0 0 1 rg
BT
/T1_2 1 Tf
17.5702 0 0 17.5702 9.064 377.1938 Tm
(Implementing the Simple Object System)Tj
0 0 0 rg
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 341.5715 Tm
(In this section, I'll present a simple implementation of the simple obje\ct system described so far. Our object system )Tj
0 -1.2 TD
(is based on )Tj
/T1_3 1 Tf
(metaobjects)Tj
/T1_1 1 Tf
(, i.e., objects which represent or manipulate other objects such as clas\s instances and )Tj
T*
(methods. \(The )Tj
/T1_3 1 Tf
(meta-)Tj
/T1_1 1 Tf
( is Greek for "about," "beyond," or "after". )Tj
0 -2.557 TD
(In programming language terminology, metaobjects are objects that are "a\bout" other objects or procedures. The )Tj
0 -1.2 TD
(two most important kinds of metaobjects are class objects and generic pr\ocedure objects. A )Tj
/T1_3 1 Tf
(class)Tj
/T1_1 1 Tf
( object represents )Tj
T*
(instances of a particular class, and a generic procedure object represen\ts a generic operation. )Tj
0 -2.557 TD
(Metaobjects control how other objects behave. For example, a class objec\t controls how instances of the class are )Tj
0 -1.2 TD
(constructed, and a generic procedure object controls when and how the pa\rticular methods on that generic )Tj
T*
(procedure are invoked to do the right thing for particular kinds of obje\cts. )Tj
0 -2.557 TD
(A big advantage of the metaobject approach is that since metaobjects are\ just objects in the language, we can )Tj
0 -1.2 TD
(implement most or all of the object system in the language--in this sect\ion, we'll show how to implement a simple )Tj
T*
(object system for Scheme, in portable Scheme. \(We will rely on macros, \which some versions of Scheme don't )Tj
T*
(support yet, however.\) An advantage of writing a Scheme object system i\n Scheme is that we can modify and )Tj
T*
(extend the object system without having to change the compiler. )Tj
0 -2.557 TD
(We will use macros to translate class, generic procedure, and method def\initions into standard Scheme data )Tj
0 -1.2 TD
(structures and procedures. A class object in our system is just a data s\tructure, for which we'll use a vector \(one-)Tj
ET
EMC 
Q

endstreamendobj5459 0 obj[5341 0 R]endobj5460 0 obj[5456 0 R/XYZ 0 688.617 null]endobj5461 0 obj<</Rect[9.06398 673.752 181.122 687.348]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC218)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC218)/S/URI>>/Border[0 0 0]>>endobj5462 0 obj[5461 0 R 5464 0 R 5466 0 R]endobj5463 0 obj[5456 0 R/XYZ 0 374.095 null]endobj5464 0 obj<</Rect[9.06398 359.23 112.002 372.826]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC219)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC219)/S/URI>>/Border[0 0 0]>>endobj5465 0 obj[5456 0 R/XYZ 0 339.833 null]endobj5466 0 obj<</Rect[9.06398 322.821 87.1781 338.369]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC220)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC220)/S/URI>>/Border[0 0 0]>>endobj5467 0 obj<</Annots 5472 0 R/Parent 5614 0 R/ID 5580 0 R/StructParents 345/Contents 5575 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5468 0 obj<</Length 3960>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 755.8499 Tm
(dimensional array\) as the main representation. A class object will reco\rd all of the information necessary to create )Tj
0 -1.2 TD
(instances of that class. )Tj
0 -2.557 TD
(Instances of a class will also be represented as Scheme vectors. Each sl\ot of an object will be represented as a field )Tj
0 -1.2 TD
(of a vector, and we'll translate slot names into vector indexes. )Tj
0 -2.557 TD
(Generic procedures will be represented as Scheme procedures, constructed\ in a way that lets us define methods--)Tj
0 -1.2 TD
(each generic procedure will maintain a table of methods indexed by which\ classes they work for. When a generic )Tj
0 -1.2 TD
(procedure is called in the normal way, it check the class of the object \it's being applied to, and will search its table )Tj
T*
(of methods for the appropriate method, and call that method, passing alo\ng the same arguments. Methods will also )Tj
T*
(be represented as Scheme procedures. )Tj
ET
0 0 1 RG
1.23 w 10 M 0 j 0 J []0 d 
9.064 561.518 m
108.321 561.518 l
S
0.738 w 
108.321 562.993 m
213.742 562.993 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14.6418 0 0 14.6418 9.064 565.2073 Tm
(Implementing )Tj
/T1_2 1 Tf
(define-class)Tj
0 0 0 rg
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 530.289 Tm
(define-class)Tj
/T1_0 1 Tf
( is a macro which accepts the users's description of a class, massages i\t a little, and passes it on to )Tj
0 -1.205 TD
(the procedure )Tj
/T1_3 1 Tf
(create-class)Tj
/T1_0 1 Tf
( to construct a class object. )Tj
0 -2.562 TD
(The reason that )Tj
/T1_3 1 Tf
(define-class)Tj
/T1_0 1 Tf
( is written as a macro and not a procedure is so that the arguments to t\he macro )Tj
0 -1.205 TD
(won't be evaluated immediately. For example, the class name \(e.g., )Tj
/T1_3 1 Tf
(<point>)Tj
/T1_0 1 Tf
( or )Tj
/T1_3 1 Tf
(<queue)Tj
/T1_0 1 Tf
( passed to )Tj
/T1_3 1 Tf
(define-)Tj
0 -1.205 TD
(class)Tj
/T1_0 1 Tf
( isn't a variable to be evaluated--it's a symbol to be used as the name \of the class. )Tj
0 -2.562 TD
(When a call to )Tj
/T1_3 1 Tf
(define-macro)Tj
/T1_0 1 Tf
( is compiled \(or interpreted\), the transformation procedure for the ma\cro does two )Tj
0 -1.205 TD
(things. First, it constructs the class object and adds it to a special d\ata structure by calling )Tj
/T1_3 1 Tf
(register-class)Tj
/T1_0 1 Tf
(. )Tj
0 -1.2 TD
(Then it generates code to define a variable whose name is the name of th\e class, and initialize that with a pointer to )Tj
T*
(the class. The generated code \(the variable definition\) is returned by\ the transformer, and that's what's interpreted or )Tj
T*
(compiled at the point where the macro was called. )Tj
0 -2.562 TD
(For example, consider a call to create a )Tj
/T1_3 1 Tf
(<point>)Tj
/T1_0 1 Tf
( class: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define-class <point> \(<object>\))Tj
0 -1.2 TD
(   \(x\))Tj
T*
(   \(y\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(This should be translated by macro processing into a variable definition\ for )Tj
/T1_3 1 Tf
(<point>)Tj
/T1_0 1 Tf
(, which will hold a pointer to )Tj
0 -1.2 TD
(the class object, like this: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define <point>)Tj
/T1_0 1 Tf
( )Tj
/T1_4 1 Tf
(complicated_expression)Tj
/T1_3 1 Tf
(\))Tj
/T1_0 1 Tf
( )Tj
0 -2.557 TD
(where )Tj
/T1_4 1 Tf
(complicated_expression)Tj
/T1_0 1 Tf
( has the side-effect of constructing the class object, registering its e\xistence with )Tj
0 -1.205 TD
(related objects \(virtual procedures for the accessors\), and so on. )Tj
/T1_3 1 Tf
(complicated_expression)Tj
/T1_0 1 Tf
( should look )Tj
0 -1.205 TD
(something like this, for our )Tj
/T1_3 1 Tf
(<point>)Tj
/T1_0 1 Tf
( definition: )Tj
/T1_3 1 Tf
0 -2.562 TD
(; construct an association list describing the slots of this kind of obj\ect,)Tj
0 -1.2 TD
(; indexed by slot name and holding the routines to get and set the slot)Tj
T*
(; values.)Tj
ET
EMC 
Q

endstreamendobj5469 0 obj[5341 0 R]endobj5470 0 obj[5467 0 R/XYZ 0 514.415 null]endobj5471 0 obj<</Rect[9.06398 497.402 306.015 512.95]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC221)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC221)/S/URI>>/Border[0 0 0]>>endobj5472 0 obj[5471 0 R]endobj5473 0 obj<</Annots 5478 0 R/Parent 5614 0 R/ID 5580 0 R/StructParents 346/Contents 5576 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5474 0 obj<</Length 5047>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 755.7888 Tm
(\(let \(\(slots-alist \(generate-slots-alist '\(\(x\) \(y\)\)\)\)\))Tj
0 -2.4 TD
(   ; create the class object, implemented as a Scheme vector)Tj
0 -1.2 TD
(   \(let \(\(class-object \(vector <<class>>       ; pointer to class of\ class)Tj
T*
(                               '<point>        ; name symbol for this cl\ass)Tj
T*
(                               \(list <object>\) ; list of superclass ob\jects)Tj
T*
(                               slots-alist     ; slot names/getters/sett\ers)Tj
T*
(                               '*dummy*\)\)\)     ; placeholder)Tj
T*
(                               )Tj
T*
(      ; create and install the instance allocation routine, which will c\reate)Tj
T*
(      ; and initialize an instance of this class, implemented as a vecto\r)Tj
T*
(      \(vector-set! class-object 4 \(lambda \(x y\))Tj
T*
(                                     \(vector class-object x y\)\)\))Tj
T*
(                                     )Tj
T*
(      )Tj
T*
(      ; register accessor methods with appropriate generic procedures)Tj
T*
(      \(register-accessor-methods class-object slots-alist\))Tj
T*
(      )Tj
T*
(      ; and return the class object we constructed)Tj
T*
(      class-object\)\))Tj
/T1_1 1 Tf
0 -2.552 TD
(In more detail, what this generated code does is: )Tj
/T1_2 1 Tf
6.3448 0 0 6.3448 32.3702 401.6295 Tm
(l)Tj
/T1_1 1 Tf
(     )Tj
12.6896 0 0 12.6896 45.3199 401.6295 Tm
(builds an association list, indexed by slot name, holding getter and set\ter procedures for each slot of a )Tj
/T1_0 1 Tf
0 -1.205 TD
(<point>)Tj
/T1_1 1 Tf
( object. It creates procedures that will get and set the values of the s\lots )Tj
/T1_0 1 Tf
(x)Tj
/T1_1 1 Tf
( and )Tj
/T1_0 1 Tf
(y)Tj
/T1_1 1 Tf
(, which have been )Tj
0 -1.205 TD
(mapped to indexed fields )Tj
/T1_0 1 Tf
(1)Tj
/T1_1 1 Tf
( and )Tj
/T1_0 1 Tf
(2)Tj
/T1_1 1 Tf
( of the vector used to represent an instance. \(These are the methods fo\r the )Tj
0 -1.205 TD
(generic procedures )Tj
/T1_0 1 Tf
(x)Tj
/T1_1 1 Tf
(, )Tj
/T1_0 1 Tf
(set-x!)Tj
/T1_1 1 Tf
(, )Tj
/T1_0 1 Tf
(y)Tj
/T1_1 1 Tf
(, and )Tj
/T1_0 1 Tf
(set-y!)Tj
/T1_1 1 Tf
(, which will be registered with those generic procedures.\) )Tj
/T1_2 1 Tf
6.3448 0 0 6.3448 32.3702 340.5363 Tm
(l)Tj
/T1_1 1 Tf
(     )Tj
12.6896 0 0 12.6896 45.3199 340.5363 Tm
(creates a vector that will be the class object. Its 0th slot is initiali\zed with a pointer to the special object )Tj
/T1_0 1 Tf
T*
(<class>)Tj
/T1_1 1 Tf
(, which identifies this object as a class object.)Tj
ET
0 0 1 RG
0.64 w 10 M 0 j 0 J []0 d 
329.82 323.329 m
350.961 323.329 l
S
0 0 1 rg
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 329.8201 325.2477 Tm
(\(13\))Tj
0 0 0 rg
( The 1st slot holds a pointer to the name symbol )Tj
-22.42 -1.343 Td
(that is this class's class name. \(This is just for documentation purpos\es.\) The 2nd slot holds a list of pointers )Tj
0 -1.2 TD
(to this object's immediate superclasses. \(Note that this is a list of p\ointers to actual class objects, not name )Tj
T*
(symbols.)Tj
ET
90.799 275.834 m
111.94 275.834 l
S
0 0 1 rg
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 90.7993 277.7525 Tm
(\(14\))Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
6.3448 0 0 6.3448 32.3702 260.7122 Tm
(l)Tj
/T1_1 1 Tf
(     )Tj
12.6896 0 0 12.6896 45.3199 260.7122 Tm
(creates a procedure that will allocate and initialize an instance, given\ the initial values of the slots. A pointer )Tj
T*
(to this object is stored in the class object. \(This side-effect is need\ed because the class object must be created )Tj
T*
(before this procedure, so that the class pointer is available to it.\) T\his procedure takes the slot values in the )Tj
0 -1.205 TD
(same order the slots are laid out. \(The )Tj
/T1_0 1 Tf
(make)Tj
/T1_1 1 Tf
( macro will ensure that arguments are passed in the right order )Tj
0 -1.205 TD
(from calls to )Tj
/T1_0 1 Tf
(make)Tj
/T1_1 1 Tf
( using keywords.\) )Tj
/T1_2 1 Tf
6.3448 0 0 6.3448 32.3702 184.4526 Tm
(l)Tj
/T1_1 1 Tf
(     )Tj
12.6896 0 0 12.6896 45.3199 184.4526 Tm
(registers the accessor methods for the slots with the appropriate generi\c procedures. For now, we'll assume )Tj
0 -1.2 TD
(that the generic procedure objects already exist--they must be defined e\xplicitly, like any other generic )Tj
T*
(procedures. Later we'll show how the necessary generic procedure definit\ions can be automatically )Tj
T*
(generated as needed. )Tj
/T1_2 1 Tf
6.3448 0 0 6.3448 32.3702 123.5426 Tm
(l)Tj
/T1_1 1 Tf
(     )Tj
12.6896 0 0 12.6896 45.3199 123.5426 Tm
(returns the class object. )Tj
-2.857 -2.562 Td
(Since this is all done in the initial value expression of the definition\ of the variable )Tj
/T1_0 1 Tf
(<point>)Tj
/T1_1 1 Tf
(, the returned class )Tj
T*
(object becomes the initial value of that variable binding. )Tj
0 -2.557 TD
(Once all this is done, we could create an instance of class point by ext\racting the allocator procedure from the class )Tj
ET
EMC 
Q

endstreamendobj5475 0 obj[5341 0 R]endobj5476 0 obj[5473 0 R/XYZ 0 656.107 null]endobj5477 0 obj<</Rect[9.06398 639.095 210.023 654.643]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC222)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC222)/S/URI>>/Border[0 0 0]>>endobj5478 0 obj[5477 0 R 5480 0 R 5482 0 R 5484 0 R 5486 0 R 5488 0 R 5490 0 R 5492 0 R 5494 0 R 5496 0 R 5498 0 R 5500 0 R 5504 0 R 5506 0 R 5508 0 R 5510 0 R 5512 0 R]endobj5479 0 obj[5473 0 R/XYZ 0 619.503 null]endobj5480 0 obj<</Rect[9.06398 602.49 346.734 618.038]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC223)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC223)/S/URI>>/Border[0 0 0]>>endobj5481 0 obj[5473 0 R/XYZ 0 582.898 null]endobj5482 0 obj<</Rect[9.06398 565.886 190.52 581.434]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC224)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC224)/S/URI>>/Border[0 0 0]>>endobj5483 0 obj[5473 0 R/XYZ 0 546.294 null]endobj5484 0 obj<</Rect[9.06398 526.06 455.259 544.536]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC225)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC225)/S/URI>>/Border[0 0 0]>>endobj5485 0 obj[5473 0 R/XYZ 0 473.726 null]endobj5486 0 obj<</Rect[9.06398 456.714 143.315 472.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC226)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC226)/S/URI>>/Border[0 0 0]>>endobj5487 0 obj[5473 0 R/XYZ 0 437.121 null]endobj5488 0 obj<</Rect[9.06398 422.256 45.0262 435.852]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC227)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC227)/S/URI>>/Border[0 0 0]>>endobj5489 0 obj[5473 0 R/XYZ 0 402.86 null]endobj5490 0 obj<</Rect[9.06398 387.995 95.7972 401.591]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC228)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC228)/S/URI>>/Border[0 0 0]>>endobj5491 0 obj[5473 0 R/XYZ 0 368.598 null]endobj5492 0 obj<</Rect[9.06398 353.733 133.155 367.329]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC229)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC229)/S/URI>>/Border[0 0 0]>>endobj5493 0 obj[5473 0 R/XYZ 0 334.336 null]endobj5494 0 obj<</Rect[9.06398 319.471 128.232 333.067]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC230)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC230)/S/URI>>/Border[0 0 0]>>endobj5495 0 obj[5473 0 R/XYZ 0 300.074 null]endobj5496 0 obj<</Rect[9.06398 285.209 123.993 298.805]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC231)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC231)/S/URI>>/Border[0 0 0]>>endobj5497 0 obj[5473 0 R/XYZ 0 265.812 null]endobj5498 0 obj<</Rect[9.06398 250.947 163.471 264.543]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC232)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC232)/S/URI>>/Border[0 0 0]>>endobj5499 0 obj[5473 0 R/XYZ 0 231.55 null]endobj5500 0 obj<</Rect[9.06398 216.685 143.028 230.281]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC233)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC233)/S/URI>>/Border[0 0 0]>>endobj5501 0 obj[5473 0 R/XYZ 0 197.288 null]endobj5502 0 obj<</Limits[(:’Z\\pˆdê‚Òi_\r6IDX72)(A=˛`ÓG14ü‹ìùÖ:ùSEC221)]/Names[(:’Z\\pˆdê‚Òi_\r6IDX72)2708 0 R(:’Z\\pˆdê‚Òi_\r6SEC71)2704 0 R(?úG‹v#ñõI:êçÆASEC96)3502 0 R(?'⁄\\\\Á‘?öøÈ9|π/≠SEC84)3128 0 R(?TÉW\n¨ÿUΩÆ%|DUIDX34)1959 0 R(?TÉW\n¨ÿUΩÆ%|DUSEC43)1957 0 R(?úØG’\\0À÷™ù$á ø˙IDX52)2291 0 R(?úØG’\\0À÷™ù$á ø˙IDX53)2292 0 R(?úØG’\\0À÷™ù$á ø˙IDX54)2293 0 R(?úØG’\\0À÷™ù$á ø˙SEC58)2289 0 R(A=˛`ÓG14ü‹ìùÖ:ùFOOT12)5384 0 R(A=˛`ÓG14ü‹ìùÖ:ùFOOT13)5417 0 R(A=˛`ÓG14ü‹ìùÖ:ùFOOT14)5420 0 R(A=˛`ÓG14ü‹ìùÖ:ùFOOT15)5428 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC204)5350 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC205)5352 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC206)5356 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC207)5364 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC208)5371 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC209)5374 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC210)5378 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC211)5389 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC212)5403 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC213)5406 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC214)5411 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC215)5435 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC216)5441 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC217)5453 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC218)5460 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC219)5463 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC220)5465 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC221)5470 0 R]>>endobj5503 0 obj<</Limits[(A=˛`ÓG14ü‹ìùÖ:ùSEC222)([Dd˙7¸…A∂Û-rudSEC57)]/Names[(A=˛`ÓG14ü‹ìùÖ:ùSEC222)5476 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC223)5479 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC224)5481 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC225)5483 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC226)5485 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC227)5487 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC228)5489 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC229)5491 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC230)5493 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC231)5495 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC232)5497 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC233)5499 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC234)5501 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC235)5505 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC236)5507 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC237)5509 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC238)5511 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC239)5515 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC240)5519 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC241)5521 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC242)5524 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC243)5526 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC244)5528 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC245)5530 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC246)5532 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC247)5534 0 R(A=˛`ÓG14ü‹ìùÖ:ùSEC248)5536 0 R(Dï∂J‚∆MìË∫·i SEC16)1182 0 R(E<z¯\\dÍHH6Nöà0IDX123)4360 0 R(E<z¯\\dÍHH6Nöà0SEC134)4358 0 R(Jú‰SFÜPÖ√Ú'SEC202)5296 0 R(J˝sòﬁ2›?ÂRtì]ä–SEC95)3476 0 R(K¯^¬F8%]m¯ìÕ~©∏SEC74)2814 0 R(L\\0µXï—w&|dﬁÍ¨aIDX118)4175 0 R(L\\0µXï—w&|dﬁÍ¨aSEC127)4173 0 R(Pc]•`\rS≠uíJVUIDX122)4244 0 R(Pc]•`\rS≠uíJVUSEC129)4242 0 R(Pc]•`\rS≠uíJVUSEC130)4247 0 R(Q˚<˚‚‹df·§OÀ@;SEC85)3155 0 R(U*⁄|˙˝Ò∏ê‚ù‹˚“HÄIDX105)3999 0 R(U*⁄|˙˝Ò∏ê‚ù‹˚“HÄSEC114)3997 0 R(VÜg!M…ÿZ†∆’‚ò]\\SEC28)1524 0 R(Wg¬@ÉÆ'πæÓÎáøıÅFOOT2)1612 0 R(Wg¬@ÉÆ'πæÓÎáøıÅSEC31)1608 0 R(YˆEàêŸ⁄ê\\\\^¬®\)-yıSEC83)3102 0 R([Dd˙7¸…A∂Û-rudIDX51)2264 0 R([Dd˙7¸…A∂Û-rudSEC57)2262 0 R]>>endobj5504 0 obj<</Rect[9.06398 180.276 221.414 195.824]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC234)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC234)/S/URI>>/Border[0 0 0]>>endobj5505 0 obj[5473 0 R/XYZ 0 160.684 null]endobj5506 0 obj<</Rect[9.06398 145.819 226.931 159.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC235)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC235)/S/URI>>/Border[0 0 0]>>endobj5507 0 obj[5473 0 R/XYZ 0 126.422 null]endobj5508 0 obj<</Rect[9.06398 111.557 188.139 125.153]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC236)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC236)/S/URI>>/Border[0 0 0]>>endobj5509 0 obj[5473 0 R/XYZ 0 92.1602 null]endobj5510 0 obj<</Rect[9.06398 77.2953 179.713 90.8913]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC237)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC237)/S/URI>>/Border[0 0 0]>>endobj5511 0 obj[5473 0 R/XYZ 0 57.8984 null]endobj5512 0 obj<</Rect[9.06398 43.0334 286.877 56.6294]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC238)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC238)/S/URI>>/Border[0 0 0]>>endobj5513 0 obj<</Annots 5518 0 R/Parent 5614 0 R/ID 5580 0 R/StructParents 347/Contents 5567 0 R/PZ 1.10327/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5514 0 obj<</Length 3439>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 755.8499 Tm
(object and calling it with the initial values in the proper order. For e\xample, )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(\(vector-ref <point> 4\) 20 30\))Tj
/T1_0 1 Tf
0 -2.557 TD
(would extract the point-allocator procedure from the <point> class objec\t, and call it to create a )Tj
/T1_1 1 Tf
(<point>)Tj
/T1_0 1 Tf
( instance )Tj
0 -1.205 TD
(with an )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( value of 20 and a )Tj
/T1_1 1 Tf
(y)Tj
/T1_0 1 Tf
( value of 30. \(The )Tj
/T1_1 1 Tf
(make)Tj
/T1_0 1 Tf
( macro will provide a friendlier interface.\) )Tj
0 -2.562 TD
(Now we'll show a simplified version of the procedure )Tj
/T1_1 1 Tf
(generate-class-code)Tj
/T1_0 1 Tf
(, which generates the kind of )Tj
0 -1.2 TD
(class-creating s-expression shown above. )Tj
0 -2.557 TD
(Now let's look at the macro to produce code like this from a simple clas\s definition. )Tj
T*
(For now, we'll assume that the body of the class definition consists of \nothing but slot declarations with no keword )Tj
0 -1.2 TD
(options--initial value specifiers or other options--i.e., they're one-el\ement lists holding just a symbol that names a )Tj
T*
(slot. Ignoring inheritance and assuming that a class includes only the s\lots declared in this class definition, we'll )Tj
T*
(simply assign slots index numbers in the order they're declared. )Tj
0 -2.557 TD
(We'll also continue to ignore issues of inheritance and automatic genera\tion of generic procedures for slot accessor )Tj
0 -1.2 TD
(methods. When we implement inheritance, described later, we'll need to d\o something with the list of superclasses.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-macro \(define-class class-name superclass-list . slot-decls\))Tj
0 -1.2 TD
(   `\(define ,class-name)Tj
T*
(            \(let \(\(slots-slist \(generate-slots-alist ',slot-decls 1\)\\)\))Tj
0 -2.4 TD
(               ; create the class object, implemented as a Scheme vector\)Tj
0 -1.2 TD
(               \(let \(\(class-object \(vector <<class>>            ; me\taclass)Tj
T*
(                                           ',class-name         ; name)Tj
T*
(                                           \(list ,@superclass-list\) ; \supers)Tj
T*
(                                           slots-alist          ; slots)Tj
T*
(                                           '*dummy*\)\)\)          ; cre\ator)Tj
T*
( )Tj
T*
(                   ; install a routine to create )Tj
T*
(instances                             )Tj
T*
(                   \(vector-set! class-object)Tj
T*
(                                4)Tj
T*
(                                ; creation routine takes slot values)Tj
T*
(                                ; as args, creates a vector w/class)Tj
T*
(                                ; pointer for this class followed by)Tj
T*
(                                ; slot values in place.)Tj
T*
(                                \(lambda ,\(map car slot-decls\))Tj
T*
(                                   \(vector class-object)Tj
T*
(                                           ,@\(map car slot-decls\)\)\)\)\)Tj
T*
(                                     )Tj
T*
(      )Tj
T*
(                   ; register accessor methods with appropriate generic \procs )Tj
T*
(                   \(register-accessor-methods class-object slots-alist\)\)Tj
T*
(      )Tj
ET
EMC 
Q

endstreamendobj5515 0 obj[5513 0 R/XYZ 0 756.07 null]endobj5516 0 obj[5341 0 R]endobj5517 0 obj<</Rect[9.06398 741.205 176.871 754.801]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC239)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC239)/S/URI>>/Border[0 0 0]>>endobj5518 0 obj[5517 0 R 5520 0 R 5522 0 R 5523 0 R 5525 0 R 5527 0 R 5529 0 R 5531 0 R 5533 0 R 5535 0 R 5537 0 R 5538 0 R 5539 0 R 5540 0 R 5541 0 R 5542 0 R]endobj5519 0 obj[5513 0 R/XYZ 0 721.808 null]endobj5520 0 obj<</Rect[9.06398 706.943 220.599 720.539]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC240)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC240)/S/URI>>/Border[0 0 0]>>endobj5521 0 obj[5513 0 R/XYZ 0 687.546 null]endobj5522 0 obj<</Rect[9.06398 667.313 509.937 685.789]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC241)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC241)/S/URI>>/Border[0 0 0]>>endobj5523 0 obj<</Rect[9.06398 644.416 138.908 662.892]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC241)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC241)/S/URI>>/Border[0 0 0]>>endobj5524 0 obj[5513 0 R/XYZ 0 624.531 null]endobj5525 0 obj<</Rect[9.06398 607.518 235.251 623.067]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC242)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC242)/S/URI>>/Border[0 0 0]>>endobj5526 0 obj[5513 0 R/XYZ 0 587.926 null]endobj5527 0 obj<</Rect[9.06398 570.914 306.059 586.462]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC243)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC243)/S/URI>>/Border[0 0 0]>>endobj5528 0 obj[5513 0 R/XYZ 0 551.322 null]endobj5529 0 obj<</Rect[9.06398 534.309 369.545 549.858]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC244)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC244)/S/URI>>/Border[0 0 0]>>endobj5530 0 obj[5513 0 R/XYZ 0 514.717 null]endobj5531 0 obj<</Rect[9.06398 497.705 210.038 513.253]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC245)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC245)/S/URI>>/Border[0 0 0]>>endobj5532 0 obj[5513 0 R/XYZ 0 478.113 null]endobj5533 0 obj<</Rect[9.06398 461.1 278.386 476.649]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC246)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC246)/S/URI>>/Border[0 0 0]>>endobj5534 0 obj[5513 0 R/XYZ 0 393.771 null]endobj5535 0 obj<</Rect[9.06398 376.758 190.52 392.306]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC247)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC247)/S/URI>>/Border[0 0 0]>>endobj5536 0 obj[5513 0 R/XYZ 0 324.717 null]endobj5537 0 obj<</Rect[9.06398 307.521 272.514 323.253]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC248)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC248)/S/URI>>/Border[0 0 0]>>endobj5538 0 obj<</Rect[59.467 258.562 79.9099 272.158]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5539 0 obj<</Rect[86.2547 258.562 129.958 272.158]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5314 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_132.html)/S/URI>>/Border[0 0 0]>>endobj5540 0 obj<</Rect[136.302 258.562 158.154 272.158]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5587 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_134.html)/S/URI>>/Border[0 0 0]>>endobj5541 0 obj<</Rect[164.499 258.562 182.124 272.158]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5542 0 obj<</Rect[227.591 258.562 311.469 272.158]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5543 0 obj<</Length 3970>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 755.7888 Tm
(                   class-object\)\))Tj
/T1_1 1 Tf
0 -2.557 TD
(Two important helper routines are used by this macro: )Tj
/T1_0 1 Tf
(generate-slots-alist)Tj
/T1_1 1 Tf
( and )Tj
/T1_0 1 Tf
(register-accessor-)Tj
0 -1.205 TD
(methods)Tj
/T1_1 1 Tf
(. )Tj
0 -2.562 TD
(The initial value expression for )Tj
/T1_0 1 Tf
(slots-alist)Tj
/T1_1 1 Tf
( is a call to )Tj
/T1_0 1 Tf
(generate-slots-alist)Tj
/T1_1 1 Tf
(, with an argument that is )Tj
0 -1.2 TD
(a quoted version of the argument declarations passed to the macro. Notic\e that we're using unquote inside a quoted )Tj
T*
(expression, and this works. The value of slot-decls will be substituted \inside the quote expression during macro )Tj
T*
(processing. )Tj
0 -2.562 TD
(For the )Tj
/T1_0 1 Tf
(<point>)Tj
/T1_1 1 Tf
( definition, the expression )Tj
/T1_0 1 Tf
(\(generate-slots-alist ',slot-decls 1\))Tj
/T1_1 1 Tf
( will translate )Tj
0 -1.205 TD
(to )Tj
/T1_0 1 Tf
(\(generate-slots-alist '\(\(x\) \(y\)\) 1\))Tj
/T1_1 1 Tf
(.)Tj
ET
0 0 1 RG
0.64 w 10 M 0 j 0 J []0 d 
291.762 580.141 m
312.903 580.141 l
S
0 0 1 rg
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 291.7623 582.0598 Tm
(\(15\))Tj
0 0 0 rg
( Several other expressions in the macro work this way, )Tj
-22.278 -1.348 Td
(as well: For the )Tj
/T1_0 1 Tf
(<point>)Tj
/T1_1 1 Tf
( example, )Tj
/T1_0 1 Tf
(',class-name)Tj
/T1_1 1 Tf
( will translate into )Tj
/T1_0 1 Tf
('<point>)Tj
/T1_1 1 Tf
(, a literal referring to the name )Tj
0 -1.2 TD
(symbol for the particular class we're defining. )Tj
0 -2.562 TD
(Likewise, )Tj
/T1_0 1 Tf
(\(list ,@superclass-list\))Tj
/T1_1 1 Tf
(, which uses unquote-splicing, will be translated to )Tj
/T1_0 1 Tf
(\(list )Tj
0 -1.205 TD
(<object>\))Tj
/T1_1 1 Tf
(; when that expression is evaluated, the value of the variable )Tj
/T1_0 1 Tf
(<object>)Tj
/T1_1 1 Tf
( will be fetched and put in a )Tj
T*
(list. \(Notice that this makes a list with the actual class object in it\, not the )Tj
/T1_2 1 Tf
(symbol)Tj
/T1_1 1 Tf
( )Tj
/T1_0 1 Tf
(<object>)Tj
/T1_1 1 Tf
(.\) The lambda )Tj
0 -1.2 TD
(expression that generates an instance creating procedure uses both unquo\te and unquote-splicing: )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(lambda ,\(map car slot-decls\))Tj
0 -1.2 TD
(   \(vector class-name ,@\(map car slot-decls\)\))Tj
/T1_1 1 Tf
0 -2.552 TD
(It will translate to )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(lambda \(x y\))Tj
0 -1.2 TD
(   \(vector class-name x y\)\))Tj
0 -2.557 TD
(generate-slots-alist)Tj
/T1_1 1 Tf
( just traverses the list of slot declarations recursively, inrementing a\n index of which )Tj
0 -1.2 TD
(slot number is next, and constructs list of associations, one per slot. \Each association is a list hose car \(i.e., the key\) )Tj
T*
(is the name of the slot, and its second and third elements are procedure\s to access the slot. The actual accessor )Tj
0 -1.205 TD
(procedures are generated by calls to )Tj
/T1_0 1 Tf
(slot-n-getter)Tj
/T1_1 1 Tf
( and )Tj
/T1_0 1 Tf
(slot-n-setter)Tj
/T1_1 1 Tf
(, which return procedures to get or )Tj
0 -1.2 TD
(set the )Tj
/T1_2 1 Tf
(n)Tj
/T1_1 1 Tf
(th slot of a vector. )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(define \(generate-slots-alist slot-decls slot-num\))Tj
0 -1.2 TD
(   \(if \(null? slot-decls\))Tj
T*
(       '\(\))Tj
T*
(       \(cons `\(,\(caar slot-decls\))Tj
T*
(               ,\(slot-n-getter slot-num\))Tj
T*
(               ,\(slot-n-setter slot-num\)\))Tj
T*
(             \(generate-slots-alist \(cdr slot-decls\))Tj
T*
(                                   \(+ 1 slot-num\)\)\)\)\) )Tj
/T1_1 1 Tf
0 -2.552 TD
(\(This procedure is initially called with a slot-num of 1, reserving the\ zeroth slot for the class pointer.\) )Tj
0 -2.562 TD
(Here are simple versions of )Tj
/T1_0 1 Tf
(slot-n-getter)Tj
/T1_1 1 Tf
( and )Tj
/T1_0 1 Tf
(slot-n-setter)Tj
/T1_1 1 Tf
(. Each one simply makes a closure of an )Tj
ET
EMC 
Q

endstreamendobj5544 0 obj<</Length 4024>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 755.8499 Tm
(accessor procedure, capturing the environment where n is bound, to speci\alize the accessor to access a particular )Tj
0 -1.2 TD
(slot. \(If we handle keyword options, we'll have to make the code a litt\le more complicated.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(slot-n-getter offset\))Tj
0 -1.2 TD
(   \(lambda \(obj\)                        ; return a procedure to read)Tj
T*
(      \(vector-ref obj offset\)\)\)         ; slot n of an object)Tj
T*
(\(define \(slot-n-setter offset\))Tj
T*
(   \(lambda \(obj value\)                  ; return a procedure to updat\e)Tj
T*
(      \(vector-set! obj offset value\)\)\)  ; slot n of an object)Tj
/T1_0 1 Tf
0 -2.552 TD
(We construct a new closure for each slot accessor, but that really isn't\ necessary. We could cache the closures, and )Tj
0 -1.2 TD
(always return the same closure when we need an accessor for a particular\ slot offset. )Tj
ET
0 0 1 RG
1.066 w 10 M 0 j 0 J []0 d 
9.064 548.493 m
44.341 548.493 l
S
0.64 w 
44.341 549.772 m
112.865 549.772 l
S
0 0 1 rg
BT
/T1_2 1 Tf
12.6896 0 0 12.6896 9.064 551.6904 Tm
(class )Tj
/T1_3 1 Tf
(<<class>>)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.695 TD
(Our simple object system implementation assumes that every instance is r\epresented as a Scheme vector whose 0th )Tj
0 -1.2 TD
(slot holds a pointer to a class object, which is also an object in the s\ystem. This implies that a class object must also )Tj
0 -1.2 TD
(have a class pointer in its zeroth slot. A question naturally arises as \to what the class of a class object is, and what )Tj
/T1_4 1 Tf
0 -1.2 TD
(its)Tj
/T1_0 1 Tf
( class pointer points to. )Tj
0 -2.557 TD
(This is actually a deep philosophical question, and for advanced and pow\erful object system, it has practical )Tj
0 -1.2 TD
(consequences. For our little object system, we'll settle the question in\ a simple way. All class objects have a class )Tj
0 -1.205 TD
(pointer that points to a special object, the class of all classes. We ca\ll this object )Tj
/T1_1 1 Tf
(<<class>>)Tj
/T1_0 1 Tf
(, where the doubled )Tj
0 -1.2 TD
(angle brackets suggest that it is not only a class, but the class of oth\er class objects. This is known as a )Tj
/T1_1 1 Tf
0 -1.205 TD
(metaclass)Tj
/T1_0 1 Tf
(, because it's a class that's about classes. )Tj
0 -2.557 TD
(It doesn't do very much--it just gives a special object we can use as th\e class value for other class objects, so that we )Tj
0 -1.2 TD
(can tell that they're classes. )Tj
0 -2.562 TD
(In our simple system, the unique object )Tj
/T1_1 1 Tf
(<<class>>)Tj
/T1_0 1 Tf
( has a class pointer that points )Tj
/T1_4 1 Tf
(to itself)Tj
/T1_0 1 Tf
(---that is, it describes )Tj
0 -1.2 TD
(itself in the same sense that it describes other classes. This circulari\ty isn't harmful, and allows us to terminate the )Tj
T*
(possibly infinite regression of classes, metaclasses, meta-metaclasses, \and so on. )Tj
0 -2.557 TD
(We construct this one special object "by hand." Like other class objects\ in our system, it is represented as a Scheme )Tj
0 -1.2 TD
(vector whose first element points to itself, and which has a few other s\tandard fields. Most of the standard fields )Tj
0 -1.2 TD
(will be empty, because class <<class>> has no superclasses, no slots, an\d no allocator--because we create the one )Tj
0 -1.2 TD
(instance specially. )Tj
0 -2.562 TD
(The following definition suffices to create the class )Tj
/T1_1 1 Tf
(<<class>>)Tj
/T1_0 1 Tf
(: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define <<class>>)Tj
0 -1.2 TD
(        \(let \(\(the-object \(vector '*dummy*   ; placeholder for class\ ptr)Tj
T*
(                                  '<<class>> ; name of this class)Tj
T*
(                                  '\(\)        ; superclasses \(none\))Tj
T*
(                                  '\(\)        ; slots \(none\))Tj
T*
(                                  #f         ; allocator \(none\))Tj
ET
EMC 
Q

endstreamendobj5545 0 obj<</Length 3276>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 755.7888 Tm
(                                  '\(\)\)\)\)     ; prop. list \(initial\ly empty\))Tj
0 -1.2 TD
(           ; set class pointer to refer to itself)Tj
T*
(           \(vector-set! the-object 0 the-object\))Tj
T*
(           ; and return the class object as initial value for define)Tj
T*
(           the-object\)\))Tj
/T1_1 1 Tf
0 -2.552 TD
(Once this is done, we can define a few other routines that will come in \handy in implementing the rest of the object )Tj
0 -1.2 TD
(system: )Tj
/T1_0 1 Tf
0 -2.562 TD
(instance?)Tj
/T1_1 1 Tf
( is a predicate that checks whether an object is an instance of a class \in our class system, as opposed to )Tj
0 -1.2 TD
(a plain old Scheme object like a pair or a number. \(In a better object \system, like RScheme's, all Scheme objects )Tj
T*
(would also be instances of classes, but we'll ignore that for now.\) )Tj
/T1_0 1 Tf
0 -2.562 TD
(; An object is an instance of a class if it's represented as a)Tj
0 -1.2 TD
(; Scheme vector whose 0th slot holds a class object.)Tj
T*
(; Note: we assume that we never shove class objects into other)Tj
T*
(;       vectors.  We could relax this assumption, but our code)Tj
T*
(;       would be slower.)Tj
T*
(\(define \(instance? obj\))Tj
T*
(   \(and \(vector? obj\))Tj
T*
(        \(class? \(vector-ref 0 obj\)\)\))Tj
0 -2.557 TD
(; An object is a class \(meta\)object if it's represented as a Scheme)Tj
0 -1.2 TD
(; vector whose 0th slot holds a pointer to the class <<class>>.)Tj
T*
(; Note: we assume that we never shove the <<class>> object into)Tj
T*
(;       other vectors.  We could relax this, at a speed cost.)Tj
T*
(\(define \(class? obj\))Tj
T*
(   \(and \(vector? obj\))Tj
T*
(        \(eq? \(vector-ref 0 obj\) <<class>>\)\)\))Tj
0 -2.557 TD
(; We can fetch the class of an instance by extracting the value)Tj
0 -1.2 TD
(; in its zeroth slot.  Note that we don't check that the argument)Tj
T*
(; obj *is* an instance, so applying this to a non-instance is an error.)Tj
T*
(\(define \(class-of-instance obj\))Tj
T*
(   \(vector-ref obj 0\)\))Tj
ET
0 0 1 RG
1.23 w 10 M 0 j 0 J []0 d 
9.064 190.015 m
108.321 190.015 l
S
0.738 w 
108.321 191.49 m
231.312 191.49 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14.6418 0 0 14.6418 9.064 193.7043 Tm
(Implementing )Tj
/T1_3 1 Tf
(define-generic)Tj
0 0 0 rg
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 158.847 Tm
(Each generic procedure maintains a table of methods that are defined on \it, indexed by the classes they are )Tj
T*
(applicable to. In our simple object system implementation, this table wi\ll be implemented as an association list, )Tj
T*
(keyed by class pointer. That is, the association list is a list of lists\, and each of those lists holds a class object and a )Tj
T*
(procedure. The class object represents the class on which the method is \defined, and the procedure is the method )Tj
T*
(itself. )Tj
0 -2.557 TD
(When the generic procedure is called on a particular instance, it will e\xtract the class pointer from the zeroth slot of )Tj
0 -1.2 TD
(the instance, and use it as a key to probe its own association list. It \will then extract the procedure that's the second )Tj
ET
EMC 
Q

endstreamendobj5546 0 obj<</Length 3880>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 755.8499 Tm
(element of the resulting list, and call it. When calling the method, it \will pass along the same arguments it received. )Tj
0 -2.557 TD
(This scheme can be rather slow--a linear search of all methods may be sl\ow if there are many methods defined on a )Tj
0 -1.2 TD
(generic procedure, and especially if the frequently-called ones are not \near the front of the list. We could speed this )Tj
T*
(up considerably by using caching tricks, e.g., reorganizing the list to \put recently-used elements at the front. A more )Tj
T*
(aggressive system could figure out how to avoid looking up methods at ru\ntime in most cases, but that's )Tj
T*
(considerably more complicated. We won't bother with any of that for now,\ to keep our example system simple. )Tj
0 -2.557 TD
(\(Understanding this simple system will be a good start toward understan\ding more sophisticated systems that )Tj
0 -1.2 TD
(perform much better, and even this simple system is fast enough for many\ real-world uses, such as most scripting )Tj
T*
(and GUI programming, or coarse-grained object-oriented programming where\ most of the real work is done in non-)Tj
T*
(object-oriented code.\) )Tj
0 -2.557 TD
(When we evaluate an expression such as )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-generic \(insert-first! obj item\)\) )Tj
/T1_0 1 Tf
0 -2.552 TD
(we would like the macro to be translated into code that will do several \things: )Tj
/T1_2 1 Tf
6.3448 0 0 6.3448 32.3702 454.5632 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
12.6896 0 0 12.6896 45.3199 454.5632 Tm
(create an association list to store methods later defined on this generi\c procedure )Tj
/T1_2 1 Tf
6.3448 0 0 6.3448 32.3702 439.3357 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
12.6896 0 0 12.6896 45.3199 439.3357 Tm
(create the generic procedure itself )Tj
/T1_2 1 Tf
6.3448 0 0 6.3448 32.3702 424.1082 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
12.6896 0 0 12.6896 45.3199 424.1082 Tm
(provide a means for adding methods to the association list. )Tj
/T1_2 1 Tf
6.3448 0 0 6.3448 32.3702 408.8196 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
12.6896 0 0 12.6896 45.3199 408.8196 Tm
(bind the name \(e.g., )Tj
/T1_1 1 Tf
(insert-first!)Tj
/T1_0 1 Tf
( and initialize the binding with a pointer to the generic procedure. )Tj
-2.857 -2.562 Td
(The first two and the last are easy, and we'll ignore the third for now.\ )Tj
/T1_1 1 Tf
(define-generic)Tj
/T1_0 1 Tf
( can generate code like )Tj
0 -1.2 TD
(this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define insert-first!)Tj
0 -1.2 TD
(        ;  create an environment that only the generic procedure will)Tj
T*
(        ;  be able to see.)Tj
T*
(        \(let \(\(method-alist '\(\)\)\))Tj
T*
(           ;  create and return the generic procedure that can see that)Tj
T*
(           ;  method a-list.)Tj
T*
(           \(lambda \(obj item\))Tj
T*
(              \(let* \(\(class \(class-of-instance obj\)\))Tj
T*
(                     \(method \(cadr \(assq class method-alist\)\)\)\))Tj
T*
(                 \(if method)Tj
T*
(                     \(method obj item\))Tj
T*
(                     \(error "method not found"\)\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Here we use )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( to create a local variable binding to hold the association list, and ca\pture it by using lambda to )Tj
0 -1.2 TD
(create the generic procedure in its scope. Once the procedure is returne\d from the let, only that procedure will ever )Tj
T*
(be able to operate on that association list. )Tj
0 -2.562 TD
(The procedure returned by )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( will take the two arguments specified by the generic procedure declarat\ion, )Tj
0 -1.2 TD
(extract the class pointer from the first argument object, probe the asso\ciation list to get the appropriate method for )Tj
ET
EMC 
Q

endstreamendobj5547 0 obj<</Length 3318>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 755.8499 Tm
(that class, and \(tail-\)call that method, passing along the original ar\guments. If it fails to find a method for the class )Tj
0 -1.2 TD
(of the instance it's being applied to, it signals an error. )Tj
0 -2.557 TD
(Keeping in mind that this code doesn't quite work because we can't actua\lly add methods to the method association )Tj
0 -1.205 TD
(list, we could define )Tj
/T1_1 1 Tf
(define-generic)Tj
/T1_0 1 Tf
( as a macro this way: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-macro \(define-generic name . args\))Tj
0 -1.2 TD
(   `\(define ,name)Tj
T*
(            \(let \(\(method-alist '\(\)\)\))Tj
T*
(               \(lambda \(,@args\))Tj
T*
(                 \(let* \(\(class \(class-of-instance ,\(car args\)\)\)\)\)Tj
T*
(                        \(method \(cadr \(assq class method-alist\)\)\)\)\)Tj
T*
(                    \(if method)Tj
T*
(                        \(method obj item\))Tj
T*
(                        \(error "method not found"\)\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(To allow methods to be added to the method-alist, we'll change the macro\ to create another procedure, along with )Tj
0 -1.205 TD
(the generic procedure, in the environment where )Tj
/T1_1 1 Tf
(method-list)Tj
/T1_0 1 Tf
( is visible. This procedure can be used to add a )Tj
0 -1.2 TD
(new method to the method association lists. This table will be an associ\ation list stored in the global variable )Tj
/T1_1 1 Tf
0 -1.205 TD
(*generic-procedures*)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(We'll also maintain a table of generic procedures and the corresponding \procedures that add methods to their )Tj
0 -1.205 TD
(association lists. While we're at it, we'll modify )Tj
/T1_1 1 Tf
(define-generic)Tj
/T1_0 1 Tf
( record the name of a generic procedure when )Tj
0 -1.2 TD
(it's defined, so that it can print out a more helpful error message when\ a lookup fails. The inital value expression )Tj
T*
(will be a letrec which lets us define four variables, two of which are p\rocedure-valued, and then returns one of those )Tj
T*
(procedures, the actual generic procedure )Tj
/T1_1 1 Tf
0 -2.562 TD
(         )Tj
0 -1.2 TD
(\(define *generic-procedures* '\(\)\))Tj
0 -2.4 TD
(\(define-macro \(define-generic name . args\))Tj
0 -1.2 TD
(   `\(define ,name)Tj
T*
(            \(letrec \(\(gp-name ,name\))Tj
T*
(                     \(method-alist '\(\)\))Tj
T*
(                     \(method-adder)Tj
T*
(                      \(lambda \(generic-proc method\))Tj
T*
(                            \(set! method-alist)Tj
T*
(                                  \(cons \(list generic-proc method\))Tj
T*
(                                        method-alist\)\)\)\) )Tj
T*
(                     \(generic-proc)Tj
T*
(                      \(lambda \(,@args\))Tj
T*
(                         \(let* \(\(class \(class-of-instance ,\(car arg\s\)\)\)\))Tj
T*
(                                \(method \(cadr \(assq class)Tj
T*
(                                                    method-alist\)\)\)\)\)Tj
T*
(                            \(if method)Tj
T*
(                                \(method obj item\))Tj
T*
(                                \(error "method not found for ")Tj
ET
EMC 
Q

endstreamendobj5548 0 obj<</Length 3396>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 755.7888 Tm
(                                       gp-name\)\)\)\)\)\))Tj
0 -1.2 TD
(                                       )Tj
T*
(               ; add the generic procedure and its method-adding)Tj
T*
(               ; routine to the association list of generic procedures)Tj
T*
(                      )Tj
T*
(               \(set! *generic-procedures*)Tj
T*
(                     \(cons \(list generic-proc method-adder\))Tj
T*
(                           *generic-procedures*\)\))Tj
T*
(                           )Tj
T*
(               generic-procedure\)\)\))Tj
ET
0 0 1 RG
1.23 w 10 M 0 j 0 J []0 d 
9.064 580.733 m
108.321 580.733 l
S
0.738 w 
108.321 582.209 m
222.527 582.209 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14.6418 0 0 14.6418 9.064 584.423 Tm
(Implementing )Tj
/T1_2 1 Tf
(define-method)Tj
0 0 0 rg
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 549.5657 Tm
(Now that each generic procedure is associated with a method-adding proce\dure that can add to its list of methods, )Tj
0 -1.205 TD
(we can define the )Tj
/T1_0 1 Tf
(define-method)Tj
/T1_3 1 Tf
( macro. )Tj
/T1_0 1 Tf
(define-method)Tj
/T1_3 1 Tf
( will create a method using )Tj
/T1_0 1 Tf
(lambda)Tj
/T1_3 1 Tf
(, and add it to )Tj
0 -1.2 TD
(the generic procedure's method association list, indexed by the class th\at it is to be used for. )Tj
0 -2.557 TD
(In this simple system, where only the first argument is dispatched on \(\used in selecting the appropriate method\), we )Tj
0 -1.2 TD
(only need to treat the first argument declaration specially. )Tj
0 -2.562 TD
(Consider an example the example of defining an )Tj
/T1_0 1 Tf
(insert-first!)Tj
/T1_3 1 Tf
( method for class )Tj
/T1_0 1 Tf
(stack)Tj
/T1_3 1 Tf
(. )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(define-method \(insert-first! \(self <stack>\) item\))Tj
0 -1.2 TD
(   \(set-items! self)Tj
T*
(               \(cons item \(items self\)\)\)\)    )Tj
/T1_3 1 Tf
0 -2.552 TD
(We'd like this to be translated by macro processing into the equivalent \)Tj
/T1_0 1 Tf
0 -2.562 TD
(\(add-method-to-generic-proc insert-first!)Tj
0 -1.2 TD
(                            <stack>)Tj
T*
(                            \(lambda \(self item\))Tj
T*
(                               \(set-items! self)Tj
T*
(                                           \(cons item \(items self\)\)\)\\)\)   )Tj
/T1_3 1 Tf
0 -2.557 TD
(The real work is done by the procedure )Tj
/T1_0 1 Tf
(add-method-to-generic-procedure)Tj
/T1_3 1 Tf
(, which we can write as )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(define \(add-method-to-generic-procedure generic-proc class method\))Tj
0 -1.2 TD
(   \(let \(\(method-adder! \(cadr \(assq *generic-procedures* generic-pr\oc\)\)\)\))Tj
T*
(      \(method-adder! class method\)\)\))Tj
/T1_3 1 Tf
0 -2.552 TD
(This procedure expects three arguments--a generic procedure object, a cl\ass object, and a closure that implments the )Tj
0 -1.205 TD
(corresponding method. It searces the association list The calling patter\n for the )Tj
/T1_0 1 Tf
(define-method)Tj
/T1_3 1 Tf
( macro will )Tj
0 -1.2 TD
(ensure that the actual calling expression is destructured into three par\ts, giving us the first argument's name and the )Tj
T*
(name and its class. )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(define-macro \(define-method \(gp \(arg1 class\) . args\) . body\))Tj
ET
EMC 
Q

endstreamendobj5549 0 obj<</Length 4005>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 755.7888 Tm
(   `\(add-method-to-generic-proc ,gp)Tj
0 -1.2 TD
(                                ,class)Tj
T*
(                                \(lambda \(arg1 ,@args\))Tj
T*
(                                   ,@body\)\)\))Tj
ET
0 0 1 RG
1.066 w 10 M 0 j 0 J []0 d 
9.064 674.301 m
181.122 674.301 l
S
0 0 1 rg
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 677.4985 Tm
(Installing Accessor Methods)Tj
0 0 0 rg
/T1_2 1 Tf
0 -2.683 TD
(Given the code we've seen so far, we've almost got a working object syst\em, but we left out a detail when we )Tj
0 -1.205 TD
(defined )Tj
/T1_0 1 Tf
(define-class)Tj
/T1_2 1 Tf
(. Recall that the accessor routines for a class's slots are supposed to \be used as methods on )Tj
0 -1.205 TD
(generic procedures such as )Tj
/T1_0 1 Tf
(x)Tj
/T1_2 1 Tf
(. )Tj
/T1_0 1 Tf
(define-class)Tj
/T1_2 1 Tf
( generates code that calls )Tj
/T1_0 1 Tf
(register-accessor-methods)Tj
/T1_2 1 Tf
(, to )Tj
0 -1.2 TD
(install the accessor routines for the slots of a class as methods on gen\eric procedures. )Tj
/T1_0 1 Tf
0 -2.562 TD
(register-accessor-methods)Tj
/T1_2 1 Tf
( iterates over the slots association list of the class, looking at each \slot name )Tj
0 -1.2 TD
(and its corresponding accessors, and adding the accessor procedures to t\he appropriate generic procedure. For a )Tj
T*
(given slot name, the appropriate generic procedure name is automatically\ constructed using the accessor naming )Tj
T*
(conventions. )Tj
0 -2.557 TD
([ OOPS--theres a hitch here. We didn't index the generic procedures by n\ame... it's also awkward that Scheme )Tj
0 -1.2 TD
(doesn't provide a standard bound? procedure so that we can tell if the g\eneric procedure already exists. Is it even )Tj
T*
(possible to automatically define the generic procedures in absolutely po\rtable Scheme, without doing something )Tj
T*
(painful? I suppose that if we can search the list of generic procedures \by name, the macro transformer for define-)Tj
T*
(class can look to see which accessor names don't have corresponding gene\ric functions, BEFORE actually )Tj
T*
(generating the transformed code. It could then add a \(define-generic ..\.\) to its output for each accessor that doesn't )Tj
T*
(already have an existing generic procedure to add it to. Tedious, and an\noying to have to explain. ] )Tj
ET
9.064 359.779 m
112.002 359.779 l
S
0 0 1 rg
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 362.9764 Tm
(Keyword options)Tj
ET
1.23 w 
9.064 323.314 m
87.178 323.314 l
S
BT
/T1_1 1 Tf
14.6418 0 0 14.6418 9.064 327.0039 Tm
(Inheritance)Tj
0 0 0 rg
/T1_2 1 Tf
12.6896 0 0 12.6896 9.064 292.3298 Tm
(So far we've described a simple object-based programming system and show\n how it can be implemented. A fully )Tj
T*
(object-oriented system requires another feature---)Tj
/T1_3 1 Tf
(inheritance)Tj
/T1_2 1 Tf
(. )Tj
0 -2.557 TD
(Inheritance allows you to define a new class in terms of another class. \For example, we might have a class )Tj
/T1_0 1 Tf
0 -1.205 TD
(<point>)Tj
/T1_2 1 Tf
(, and want to define a similar class, )Tj
/T1_0 1 Tf
(<colored-point>)Tj
/T1_2 1 Tf
(, which records the color to be used to display )Tj
0 -1.2 TD
(a point when it is drawn on the user's screen. )Tj
0 -2.562 TD
(Given our simple object-based system so far, we would have to define )Tj
/T1_0 1 Tf
(colored-point)Tj
/T1_2 1 Tf
( from scratch, defining its )Tj
0 -1.205 TD
(x and y fields as well as its color field. This definition would be most\ly redundant with the definition of )Tj
/T1_0 1 Tf
(<point>)Tj
/T1_2 1 Tf
(, )Tj
0 -1.2 TD
(making the code harder to understand and maintain. )Tj
0 -2.557 TD
(Inheritance lets us define new classes by describing its differences fro\m another class. For example, we could )Tj
0 -1.2 TD
(define colored-point like this: )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(define-class <colored-point> \(<point>\))Tj
0 -1.2 TD
(   \(color\)\) )Tj
ET
EMC 
Q

endstreamendobj5550 0 obj<</Length 4882>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 755.6815 Tm
(This definition says that instances of )Tj
/T1_1 1 Tf
(<colored-point>)Tj
/T1_0 1 Tf
( have all of the slots of )Tj
/T1_1 1 Tf
(<points>)Tj
/T1_0 1 Tf
( \(i.e., )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(y)Tj
/T1_0 1 Tf
(\), as )Tj
0 -1.205 TD
(well as another slot, )Tj
/T1_1 1 Tf
(color)Tj
/T1_0 1 Tf
(. We say that )Tj
/T1_1 1 Tf
(<colored-point>)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(inherits)Tj
/T1_0 1 Tf
( the slotss defined for )Tj
/T1_1 1 Tf
(<point>)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Inheritance applies to methods as well as slots. The definition above te\lls our object system that the methods )Tj
0 -1.205 TD
(defined for the superclass )Tj
/T1_1 1 Tf
(<point>)Tj
/T1_0 1 Tf
( should also be used for )Tj
/T1_1 1 Tf
(<colored-point>s)Tj
/T1_0 1 Tf
(, unless we specifically define )Tj
T*
(new methods just for )Tj
/T1_1 1 Tf
(<colored-point>s)Tj
/T1_0 1 Tf
( on the same generic procedures. )Tj
0 -2.562 TD
(This gives us a concise declarative way of defining classes--we can decl\are that a )Tj
/T1_1 1 Tf
(<colored-point>)Tj
/T1_0 1 Tf
( is like a )Tj
/T1_1 1 Tf
0 -1.205 TD
(<point>)Tj
/T1_0 1 Tf
(, except for the particular differences we specify. The object system th\en infers what slots a )Tj
/T1_1 1 Tf
(<colored-)Tj
0 -1.205 TD
(point>)Tj
/T1_0 1 Tf
( must have from this declaration \(and methods we define for this class\)\ )Tj
/T1_2 1 Tf
(plus)Tj
/T1_0 1 Tf
( the declarations for )Tj
/T1_1 1 Tf
(<point>)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(and its methods. )Tj
0 -2.562 TD
(Note that inheritance is transitive. If we define a subclass of )Tj
/T1_2 1 Tf
(<colored-point>)Tj
/T1_0 1 Tf
(, say )Tj
/T1_1 1 Tf
(<flashing-colored-)Tj
0 -1.205 TD
(point>)Tj
/T1_0 1 Tf
(, it will inherit the slots and methods of )Tj
/T1_1 1 Tf
(<colored-point>)Tj
/T1_0 1 Tf
(, and also the slots and methods of )Tj
/T1_1 1 Tf
0 -1.205 TD
(<point>)Tj
/T1_0 1 Tf
(. )Tj
ET
0 0 1 RG
1.23 w 10 M 0 j 0 J []0 d 
9.064 497.895 m
306.015 497.895 l
S
0 0 1 rg
BT
/T1_3 1 Tf
14.6418 0 0 14.6418 9.064 501.5851 Tm
(Overriding and Refining Inherited Methods)Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 466.9111 Tm
(By default, a class inherits all of the methods defined for its supercla\sses. We can )Tj
/T1_2 1 Tf
(override)Tj
/T1_0 1 Tf
( an inherited definition, )Tj
T*
(though, by defining a method definition explicitly. For example, we migh\t have a )Tj
/T1_1 1 Tf
(draw)Tj
/T1_0 1 Tf
( method for class )Tj
/T1_1 1 Tf
(<point>)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(which simply draws a black pixel on the screen at the point's coordinate\s. \(This might be through a call to an )Tj
0 -1.205 TD
(underlying graphics library provided by the operating system.\) For )Tj
/T1_1 1 Tf
(<colored-point>)Tj
/T1_0 1 Tf
(, we would probably want )Tj
0 -1.205 TD
(to define a new )Tj
/T1_1 1 Tf
(draw)Tj
/T1_0 1 Tf
( method so that the point would be drawn in color. )Tj
0 -2.557 TD
(Sometimes, we don't want to completely redefine an inherited method for \a new class, but we would like to refine )Tj
0 -1.2 TD
(it--we may want to define the new method )Tj
/T1_2 1 Tf
(in terms of)Tj
/T1_0 1 Tf
( the inherited method. )Tj
0 -2.562 TD
(For example, suppose we have a class )Tj
/T1_1 1 Tf
(<queue>)Tj
/T1_0 1 Tf
(, which maintains a queue as we saw earlier, and we woulto refine )Tj
0 -1.2 TD
(it to create a new kind of queue that keeps track of the size of the que\ue--i.e., the number of items in the queue. )Tj
0 -2.562 TD
(We might define )Tj
/T1_1 1 Tf
(<counted-queue>)Tj
/T1_0 1 Tf
( as a subclass of )Tj
/T1_1 1 Tf
(<queue>)Tj
/T1_0 1 Tf
(, but with a size slot, like this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define <counted-queue> \(<queue>\))Tj
0 -1.2 TD
(   \(size initial-value: 0\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Then we can define the )Tj
/T1_1 1 Tf
(get-first)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(put-last)Tj
/T1_0 1 Tf
( methods for )Tj
/T1_1 1 Tf
(counted-queue)Tj
/T1_0 1 Tf
( in terms of the )Tj
0 -1.205 TD
(corresponding methods for )Tj
/T1_1 1 Tf
(<queue>)Tj
/T1_0 1 Tf
(. We do this by using a special pseudo-procedure called )Tj
/T1_1 1 Tf
(next-method)Tj
/T1_0 1 Tf
(. )Tj
T*
(Inside a method definition, the name )Tj
/T1_1 1 Tf
(next-method)Tj
/T1_0 1 Tf
( refers to an inherited procedure by the same name. This )Tj
0 -1.2 TD
(allows us to call the inherited version of a method even though we're ov\erriding that definition. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-method \(get-first! \(self <counted-queue>\)\))Tj
0 -1.2 TD
(   \(count-set! self \(- \(count self\) 1\)\)  ; update count of items, \and)Tj
T*
(   \(next-method self\)\)                       ; call inherited get-fir\st)Tj
0 -2.557 TD
(\(define-method \(put-last! \(self <counted-queue>\) item\))Tj
0 -1.2 TD
(   \(next-method self item\))Tj
ET
EMC 
Q

endstreamendobj5551 0 obj<</Length 3074>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 12.6896 0 0 12.6896 9.064 755.7888 Tm
(   \(count-set! self \(+ \(count self\) 1\)\))Tj
0 -2.557 TD
(next-method)Tj
/T1_1 1 Tf
('s name comes from the fact that it represents the )Tj
/T1_2 1 Tf
(next most specific method)Tj
/T1_1 1 Tf
( for this operation )Tj
0 -1.2 TD
(applied to this class, according to the inheritance graph. The method we\'re defining is the most specific method, )Tj
T*
(because it's defined for this class exactly, and the inherited one is th\e )Tj
/T1_2 1 Tf
(next)Tj
/T1_1 1 Tf
( most specific. \(The inherited one may in )Tj
T*
(turn call a method that was inherited earlier, which will in turn be the\ )Tj
/T1_2 1 Tf
(next)Tj
/T1_1 1 Tf
( most specific method, and so on.\) )Tj
ET
0 0 1 RG
1.23 w 10 M 0 j 0 J []0 d 
9.064 639.588 m
210.023 639.588 l
S
0 0 1 rg
BT
/T1_3 1 Tf
14.6418 0 0 14.6418 9.064 643.2778 Tm
(Late Binding and Inheritance)Tj
ET
9.064 602.983 m
346.734 602.983 l
S
BT
/T1_3 1 Tf
14.6418 0 0 14.6418 9.064 606.6732 Tm
(Implementing an Object System with Inheritance)Tj
ET
9.064 566.379 m
190.52 566.379 l
S
BT
/T1_3 1 Tf
14.6418 0 0 14.6418 9.064 570.0687 Tm
(Interfaces and Inheritance)Tj
ET
1.476 w 
9.064 526.471 m
455.259 526.471 l
S
BT
/T1_3 1 Tf
17.5702 0 0 17.5702 9.064 530.8983 Tm
(A More Advanced Object System and Implementation)Tj
0 0 0 rg
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 495.276 Tm
(The simple object system )Tj
ET
1.23 w 
9.064 457.207 m
143.315 457.207 l
S
0 0 1 rg
BT
/T1_3 1 Tf
14.6418 0 0 14.6418 9.064 460.8965 Tm
(Language Features)Tj
ET
1.066 w 
9.064 422.805 m
45.026 422.805 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 426.0026 Tm
(Purity)Tj
ET
9.064 388.543 m
95.797 388.543 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 391.7407 Tm
(Encapsulation)Tj
ET
9.064 354.281 m
133.155 354.281 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 357.4789 Tm
(Multiple Dispatching)Tj
ET
9.064 320.019 m
128.232 320.019 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 323.217 Tm
(Multiple Inheritance)Tj
ET
9.064 285.757 m
123.993 285.757 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 288.9552 Tm
(Explictit Subtyping)Tj
ET
9.064 251.496 m
163.471 251.496 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 254.6933 Tm
(Control Over Compilation)Tj
ET
9.064 217.234 m
143.028 217.234 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 220.4315 Tm
(A Metaobject Protocol)Tj
ET
1.23 w 
9.064 180.769 m
221.414 180.769 l
S
BT
/T1_3 1 Tf
14.6418 0 0 14.6418 9.064 184.459 Tm
(Implementation Improvements)Tj
ET
1.066 w 
9.064 146.367 m
226.931 146.367 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 149.5651 Tm
(Factoring out Work at Compile Time)Tj
ET
9.064 112.105 m
188.139 112.105 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 115.3032 Tm
(Supporting Runtime Changes)Tj
ET
9.064 77.844 m
179.713 77.844 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 81.0414 Tm
(Faster Dynamic Dispatching)Tj
ET
9.064 43.582 m
286.877 43.582 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 46.7795 Tm
(Compiling Slot Accessors And Methdos Inline)Tj
ET
EMC 
Q

endstreamendobj5552 0 obj<</Length 5603>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 755.8499 Tm
(Go to the )Tj
ET
0 0 1 RG
0.64 w 10 M 0 j 0 J []0 d 
59.467 753.931 m
79.91 753.931 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 59.467 755.8499 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
86.255 753.931 m
129.958 753.931 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 86.2547 755.8499 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
136.302 753.931 m
158.154 753.931 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 136.3023 755.8499 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
164.499 753.931 m
182.124 753.931 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 164.4986 755.8499 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
227.591 753.931 m
311.469 753.931 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 227.5911 755.8499 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
9.064 741.551 m
9.064 743.364 l
602.936 743.364 l
602.03 742.457 l
9.97 742.457 l
9.97 742.457 l
h
f
0.875 0.875 0.875 rg
602.936 743.364 m
602.936 741.551 l
9.064 741.551 l
9.97 742.457 l
602.03 742.457 l
602.03 742.457 l
h
f
1.886 w 
9.064 692.655 m
347.15 692.655 l
S
0 0 1 rg
BT
/T1_1 1 Tf
22.4508 0 0 22.4508 9.064 698.3129 Tm
(Records and Object Orientation)Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 661.1104 Tm
(Most programming languages have a standard facility for defining new typ\es of )Tj
/T1_2 1 Tf
(records)Tj
/T1_0 1 Tf
( or )Tj
/T1_2 1 Tf
(structures)Tj
/T1_0 1 Tf
(. A record is )Tj
0 -1.205 TD
(an object with named fields. For example, we might define a )Tj
/T1_3 1 Tf
(point)Tj
/T1_0 1 Tf
( record type, to represent geometric points in a )Tj
T*
(plane. Each )Tj
/T1_3 1 Tf
(point)Tj
/T1_0 1 Tf
( object might have a )Tj
/T1_3 1 Tf
(x)Tj
/T1_0 1 Tf
( field and a )Tj
/T1_3 1 Tf
(y)Tj
/T1_0 1 Tf
( field, giving the horizontal and vertical coordinates of a )Tj
0 -1.205 TD
(point relative to the origin. Once this )Tj
/T1_3 1 Tf
(point)Tj
/T1_0 1 Tf
( class is defined, we can create )Tj
/T1_2 1 Tf
(instances)Tj
/T1_0 1 Tf
( of it, i.e., actual objects of )Tj
0 -1.2 TD
(type point, to represent particular points in space. )Tj
0 -2.557 TD
(Scheme is an unusual language in that there is not a standard facility f\or defining new types. We can build a type-)Tj
0 -1.2 TD
(definition facility, however, using macros. )Tj
0 -2.557 TD
(In this chapter, I'll show a simple record definition facility written i\n Scheme. Then I'll describe a simple object-)Tj
0 -1.2 TD
(oriented programming system for Scheme, and show how it can be implement\ed in Scheme, too. \(Both of these )Tj
T*
(systems rely on Lisp-style macros, which are not standard Scheme, but ar\e available in almost every Scheme )Tj
T*
(implementation.\) )Tj
ET
1.476 w 
9.064 432.836 m
183.817 432.836 l
S
0 0 1 rg
BT
/T1_1 1 Tf
17.5702 0 0 17.5702 9.064 437.2637 Tm
(Records \(Structures\))Tj
ET
1.23 w 
9.064 396.021 m
432.125 396.021 l
S
BT
/T1_1 1 Tf
14.6418 0 0 14.6418 9.064 399.711 Tm
(Using Procedural Abstraction to Implement Data Abstraction)Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 365.0369 Tm
(Scheme's main abstraction mechanism is procedural abstraction. We can de\fine procedures that represent higher-)Tj
0 -1.2 TD
(level operations, i.e., operations not built into the language, but whic\h are useful for our purposes. We can construct )Tj
/T1_2 1 Tf
T*
(abstract data types)Tj
/T1_0 1 Tf
(, which are data types that represent higher-level concepts \(such as po\ints in a coordinate space\), )Tj
0 -1.2 TD
(and use procedures to implement the operations. )Tj
0 -2.562 TD
(For example, we can fake a )Tj
/T1_3 1 Tf
(point)Tj
/T1_0 1 Tf
( data type by hand, by writing a set of procedures that will construct p\oint )Tj
0 -1.2 TD
(objects and access their fields. We can choose a representation of point\s in terms of preexisting Scheme types, and )Tj
T*
(write our procedures accordingly. )Tj
0 -2.557 TD
(For example, we can use Scheme vectors to represent points, with each po\int represented as a small vector, with a )Tj
0 -1.2 TD
(slot for the x field and a slot for the y field. We can write a handful \of procedures to create and operate on instances )Tj
0 -1.205 TD
(of our )Tj
/T1_3 1 Tf
(point)Tj
/T1_0 1 Tf
( data type, which will really allocate Scheme vectors and operate on the\m in ways that are consistent )Tj
T*
(with our higher-level )Tj
/T1_3 1 Tf
(point)Tj
/T1_0 1 Tf
( abstraction. )Tj
0 -2.562 TD
(We start with a )Tj
/T1_2 1 Tf
(constructor)Tj
/T1_0 1 Tf
( procedure )Tj
/T1_3 1 Tf
(make-point)Tj
/T1_0 1 Tf
(, which will create \("construct"\) a point object and initialize )Tj
0 -1.205 TD
(its )Tj
/T1_3 1 Tf
(x)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(y)Tj
/T1_0 1 Tf
( fields. It really allocates a Scheme vector. The zeroth slot of the vec\tor holds the symbol )Tj
/T1_3 1 Tf
(point)Tj
/T1_0 1 Tf
(, so that )Tj
0 -1.2 TD
(we can tell it represents a point object. )Tj
/T1_3 1 Tf
0 -2.562 TD
(; a point is represented as a three-element vector, with the 0th)Tj
0 -1.2 TD
(; slot holding the symbol point, the 1st slot representing)Tj
T*
(; the x field,, and the 2nd slot representing the y field.)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(1 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5553 0 obj<</Length 3266>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 754.123 Tm
(\(define \(make-point x y\))Tj
0 -1.2 TD
(   \(vector 'point x y\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(We also define a predicate for testing whether an object is a )Tj
/T1_1 1 Tf
(point)Tj
/T1_0 1 Tf
( record. It checks to see if the object is actuall a )Tj
0 -1.205 TD
(Scheme vector and its zeroth slot holds the symbol )Tj
/T1_1 1 Tf
(point)Tj
/T1_0 1 Tf
(. This isn't perfect--we might mistake another vector that )Tj
0 -1.2 TD
(happens to hold that symbol in its zeroth slot for a point, but we'll ig\nore that for now. \(It's easy to fix, and we'll fix )Tj
T*
(it later when we build a more sophisticated object system.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(; check to see if something is a point by checking to see if it's)Tj
0 -1.2 TD
(; a vector whose 0th slot holds the symbol point.)Tj
T*
(\(define \(point? obj\))Tj
T*
(   \(and \(vector? obj\))Tj
T*
(        \(eq? \(vector-ref obj 0\) 'point\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Now we define accessor procedures to get and set the x and y fields of o\ur points--the 1st and 2nd slots of the )Tj
0 -1.2 TD
(vector we use to represent a point. )Tj
/T1_1 1 Tf
0 -2.562 TD
(; accessors to get and set the value of a point's x field.)Tj
0 -1.2 TD
(\(define \(point-x obj\))Tj
T*
(   \(vector-ref obj 1\)\))Tj
T*
(   )Tj
T*
(\(define \(point-x-set! obj value\))Tj
T*
(   \(vector-set obj 1 value\)\))Tj
0 -2.4 TD
(; accessors to get and set the value of a point's y field.)Tj
0 -1.2 TD
(\(define \(point-y obj\))Tj
T*
(   \(vector-ref obj 2\)\))Tj
T*
(   )Tj
0 -1.2 TD
(\(define \(point-y-set! obj\))Tj
T*
(   \(vector-set! obj 2 value\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(This isn't perfect, either--we should probably test to make sure an obje\ct is a )Tj
/T1_1 1 Tf
(point)Tj
/T1_0 1 Tf
( before operating on it as a )Tj
/T1_1 1 Tf
0 -1.205 TD
(point)Tj
/T1_0 1 Tf
(. For example, )Tj
/T1_1 1 Tf
(point-x)Tj
/T1_0 1 Tf
( should be more like this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(point-x obj\))Tj
0 -1.2 TD
(   \(if \(point? obj\))Tj
T*
(       \(vector-ref obj 1\))Tj
T*
(       \(error "attempt to apply point-x to a non-point\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Once we've defined the procedures that represent operations on an abstra\ct data type, we can ignore how it's )Tj
0 -1.205 TD
(implemented--we no longer have to worry about how )Tj
/T1_1 1 Tf
(point)Tj
/T1_0 1 Tf
(s are represented. )Tj
0 -2.557 TD
(We can also change the implementation of an abstract data type by redefi\ning the procedures that create and operate )Tj
0 -1.2 TD
(on instances of that type. )Tj
0 -2.557 TD
(For example, we could decide to represent points as lists, rather than v\ectors, and redefine the constructor, )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(2 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5554 0 obj<</Length 4045>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 755.8499 Tm
(predicate, and accessors to use that representation. )Tj
0 -2.557 TD
(We could also change the representation to polar form, rather than Carte\sian, storing a direction and distance from )Tj
0 -1.2 TD
(the origin rather than x and y distances. With a polar representation, w\e could still support the operations that return )Tj
0 -1.2 TD
(or set x coordinates, using trigonometric functions to compute them from\ the direction and distance. )Tj
ET
0 0 1 RG
1.23 w 10 M 0 j 0 J []0 d 
9.064 654.877 m
463.824 654.877 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14.6418 0 0 14.6418 9.064 658.5663 Tm
(Automating the Construction of Abstract Data Types with Macros)Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 623.8923 Tm
(As I just showed, it's easy to define an abstract data type in Scheme, b\y hand, using procedural abstraction. Doing )Tj
0 -1.2 TD
(this for every abstract data type is very tedious, however, so it would \be good to automate the process and provide a )Tj
T*
(declarative interface to it. )Tj
0 -2.557 TD
(We'd like to be able to write something like this: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define-structure point)Tj
0 -1.2 TD
(   x)Tj
T*
(   y\))Tj
/T1_0 1 Tf
0 -2.552 TD
(and have Scheme automatically construct the constructor, type predicate,\ and accessor procedures for us. In most )Tj
0 -1.205 TD
(languages, this is done by the compiler, but we can tell Scheme how to d\o it by defining )Tj
/T1_2 1 Tf
(define-structure)Tj
/T1_0 1 Tf
( as )Tj
T*
(a macro. Whenever the interpreter or compiler encounters a )Tj
/T1_2 1 Tf
(define-structure)Tj
/T1_0 1 Tf
( form, our macro )Tj
0 -1.2 TD
(transformation procedure will be called and will generate the relevant p\rocedures, which will then be interpreted or )Tj
0 -1.205 TD
(compiled in place of the )Tj
/T1_2 1 Tf
(define-structure)Tj
/T1_0 1 Tf
( form. )Tj
0 -2.562 TD
(We'll use a )Tj
/T1_2 1 Tf
(define-macro)Tj
/T1_0 1 Tf
( \(Lisp-style\) macro for this. this macro will intercept each )Tj
/T1_2 1 Tf
(define-structure)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(form, analyze it, and produce an s-expression that is a sequence of proc\edure definitions to be interpreted or )Tj
0 -1.205 TD
(compiled. Each define-structure form will be translated into a )Tj
/T1_2 1 Tf
(begin)Tj
/T1_0 1 Tf
( form containing a series of procedure )Tj
0 -1.2 TD
(definitions. )Tj
/T1_2 1 Tf
0 -2.562 TD
(; define-struct is a macro that takes a struct name and any number of fi\eld)Tj
0 -1.2 TD
(; names, all of which should be symbols.  Then it generates a begin expr\ession)Tj
T*
(; to be compiled, where the begin expression contains the constructor fo\r this)Tj
T*
(; structure type, a predicate to identify instances of this structure ty\pe,)Tj
T*
(; and all of the accessor definitions for its fields.)Tj
0 -2.4 TD
(\(define-macro \(define-struct struct-name . field-names\))Tj
0 -2.4 TD
(   ; analyze the macro call expression and construct some handy symbols)Tj
0 -1.2 TD
(   ; and an s-expression that will define and record the accessor method\s.)Tj
0 -2.4 TD
(   \(let* \(\(maker-name \(string->symbol)Tj
0 -1.2 TD
(                       \(string-append "make-")Tj
T*
(                                      \(symbol->string struct-name\)\)\)\\))Tj
T*
(          \(pred-name \(string->symbol)Tj
T*
(                      \(string-append \(symbol->string struct-name\) "?"\\)\)\))Tj
T*
(          \(accessor-defns \(generate-accessor-defns struct-name field-n\ames\)\)\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(3 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5555 0 obj<</Length 3627>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 755.7888 Tm
(      ; return an s-expression that's a series of definitions to be)Tj
0 -1.2 TD
(      ; interpreted or compiled.)Tj
T*
(      `\(begin \(define \(,maker-name ,@field-names\))Tj
0 -1.2 TD
(                 \(vector ',struct-name ,@field-names\)\))Tj
0 -1.2 TD
(              \(define \(,pred-name obj\)        )Tj
T*
(                 \(and \(vector? obj\))Tj
T*
(                      \(eq? \(vector-ref obj 0\) ,struct-name\)\)\))Tj
T*
(              ,@accessor-defns\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(To generate all of the accessor definitions, we call a special helper ro\utine, )Tj
/T1_1 1 Tf
(generate-accessor-defns)Tj
/T1_0 1 Tf
(, and )Tj
0 -1.205 TD
(splice the result into the sequence of definitions using )Tj
/T1_1 1 Tf
(unquote-splicing)Tj
/T1_0 1 Tf
( \()Tj
/T1_1 1 Tf
(,@)Tj
/T1_0 1 Tf
(\). )Tj
/T1_1 1 Tf
(generate-accessor-)Tj
T*
(definitions)Tj
/T1_0 1 Tf
( simply iterates over the list of slot names tail-recursively \(using na\med )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(\), consing two )Tj
0 -1.2 TD
(definitions onto the definitions for the rest of the slots: )Tj
/T1_1 1 Tf
0 -2.562 TD
(; generate-accessor-defns generates a list of s-expressions that)Tj
0 -1.2 TD
(; define the accessors \(getters and setters\) for a structure.)Tj
0 -2.4 TD
(\(define \(generate-accessor-defns structname fnames\))Tj
T*
(   \(let \(\(structname-string \(symbol->string structname\)\)\))Tj
T*
(      ; loop over the fieldnames, and for each fieldname, generate two)Tj
0 -1.2 TD
(      ; s-expressions:  one that is a definition of a getter, and one th\at's)Tj
T*
(      ; a definition of a setter.)Tj
T*
(      ; As we loop, increment a counter i so that we can use it as the i\ndex)Tj
T*
(      ; for each slot we're generating accessors for)Tj
0 -2.4 TD
(      \(let loop \(\(fieldnames fnames\))Tj
0 -1.2 TD
(                 \(i 1\)\))Tj
T*
(         \(if \(null? fieldnames\))Tj
T*
(             '\(\))Tj
T*
(             ; take a fieldname symbol, convert to string, append it to \the)Tj
T*
(             ; struct name string with a hyphen in the middle, and conve\rt)Tj
T*
(             ; that to a symbol...)Tj
T*
(             \(let* \(\(fieldname-string \(symbol->string \(car fieldnam\es\)\)\))Tj
T*
(                    \(getter-name \(string->symbol)Tj
T*
(                                  \(string-append structname-string)Tj
T*
(                                                 "-")Tj
T*
(                                                 fieldname-string\)\)\))Tj
T*
(                    \(setter-name \(string->symbol)Tj
T*
(                                  \(string-append structname-string)Tj
T*
(                                                 "-")Tj
T*
(                                                 fieldname-string)Tj
T*
(                                                 "-set!"\)\)\)\))Tj
0 -2.4 TD
(                 ; now construct the define forms and cons them onto the\)Tj
0 -1.2 TD
(                 ; front of the list of the remaining define forms, gene\rated)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(4 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5556 0 obj<</Length 3817>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 755.7888 Tm
(                 ; iteratively \(tail-recursively\))Tj
0 -2.4 TD
(                 \(cons `\(define \(,getter-name obj\))Tj
0 -1.2 TD
(                           \(vector-ref obj ,i\)\))Tj
0 -1.2 TD
(                       \(cons `\(define \(,setter-name obj value\))Tj
T*
(                                 \(vector-set! obj ,i value\)\))Tj
T*
(                             \(loop \(cdr fieldnames\))Tj
T*
(                                   \(+ i 1\)\)\)\)\)\)\)\)\) )Tj
ET
0 0 1 RG
1.476 w 10 M 0 j 0 J []0 d 
9.064 607.884 m
248.3 607.884 l
S
0 0 1 rg
BT
/T1_2 1 Tf
17.5702 0 0 17.5702 9.064 612.3121 Tm
(Simple Uses of OOP Objects)Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 576.6898 Tm
(In this section, I'll discuss a simple object system and how it it used.\ This object system is not part of Standard )Tj
0 -1.2 TD
(Scheme, but can be [almost entirely ?] implemented in portable Scheme, a\nd used in any Scheme system with a )Tj
T*
(reasonably powerful macro system. )Tj
0 -2.557 TD
(The object system is based on )Tj
/T1_3 1 Tf
(classes)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(generic procedures)Tj
/T1_0 1 Tf
(. It is a subset of the RScheme object system, and its )Tj
0 -1.2 TD
(basic functionality is similar to a subset of CLOS object system for Com\mon Lisp, the Dylan object system, )Tj
T*
(Meroon, TinyCLOS, and STkLOS. )Tj
ET
1.23 w 
9.064 445.262 m
97.735 445.262 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14.6418 0 0 14.6418 9.064 448.9513 Tm
(Late Binding)Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 414.2772 Tm
(One of the major features of object-based and object-oriented programmin\g is )Tj
/T1_3 1 Tf
(late binding of methods)Tj
/T1_0 1 Tf
(, which )Tj
0 -1.2 TD
(means that we can write code in terms of abstract operations without kno\wing exactly which concrete operations )Tj
T*
(will be executed at run time. )Tj
0 -2.557 TD
(For example, consider a graphical program that maintains a list of objec\ts whose graphical reprsentations are )Tj
0 -1.2 TD
(visiblle on the user's screen, and periodically redraws those objects. I\t might iterate over this "display list" of )Tj
T*
(objects, applying a drawing routine to each object to display it on the \screen. In most interesting applications, there )Tj
T*
(would be a variety of graphical object types, each of which is drawn in \a different ways. )Tj
0 -2.557 TD
(If our graphical objects are represented as traditional records, such as\ C structs or Pascal records, the drawing )Tj
0 -1.2 TD
(routine must be modified each time a new graphical type is added to the \program. For example, suppose we have a )Tj
0 -1.205 TD
(routine )Tj
/T1_1 1 Tf
(draw)Tj
/T1_0 1 Tf
( which can draw any kind of object on the screen. )Tj
/T1_1 1 Tf
(draw)Tj
/T1_0 1 Tf
( might be written with a case expression, like )Tj
0 -1.2 TD
(this: )Tj
/T1_1 1 Tf
0 -2.562 TD
( \(define \(draw obj\))Tj
0 -1.2 TD
(    \(cond \(\(triangle? obj\))Tj
T*
(           \(draw-triangle obj\)\))Tj
T*
(          \(\(square? obj\))Tj
T*
(           \(draw-square obj\)\))Tj
T*
(          \(\(circle? obj\))Tj
T*
(           \(draw-circle obj\)\))Tj
T*
(          ; more branches...)Tj
T*
(          ;    .)Tj
T*
(          ;    .)Tj
T*
(          ;    .)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(5 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5557 0 obj<</Length 5091>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 755.7888 Tm
(          \(\(regular-pentagon? obj\))Tj
0 -1.2 TD
(           \(draw-regular-pentagon obj\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Each time we define a new kind of record that represents a graphical obj\ect, we must add a branch to this )Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
( to )Tj
0 -1.2 TD
(check for that kind of object, and call the appropriate drawing routine.\ )Tj
0 -2.562 TD
(In large, sophisticated programs that deal with many kinds of objects, t\he code may be littered with )Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
( or )Tj
/T1_1 1 Tf
(case)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(statements like this, which represent )Tj
/T1_2 1 Tf
(abstract operations)Tj
/T1_0 1 Tf
(, and map them onto concrete operations for specific types. )Tj
0 -1.205 TD
(\(This example maps the abstract operation "draw an object" onto concret\e operations like )Tj
/T1_1 1 Tf
(draw-triangle)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
T*
(draw-square)Tj
/T1_0 1 Tf
(, and so on.\) )Tj
0 -2.562 TD
(Such code is very difficult to maintain and extend. Whenever a new type \is added to the system, all of the )Tj
/T1_1 1 Tf
(cond)Tj
/T1_0 1 Tf
( or )Tj
/T1_1 1 Tf
0 -1.205 TD
(case)Tj
/T1_0 1 Tf
( expressions that could be affected must be located and modified. )Tj
0 -2.557 TD
(What we would like is a way of specifying how an abstract operation is i\mplemented for a particular kind of object, )Tj
0 -1.2 TD
(and having the system keep track of the details. For example, we'd like \to say at )Tj
/T1_2 1 Tf
(one)Tj
/T1_0 1 Tf
( point in the program, "here's )Tj
T*
(how you draw a regular pentagon," and then be able to use regular pentag\ons freely. We can then use the abstract )Tj
0 -1.205 TD
(operation )Tj
/T1_1 1 Tf
(draw)Tj
/T1_0 1 Tf
(, and rely on the system to automatically check what kind of object is b\eing drawn, find the )Tj
0 -1.2 TD
(appropriate drawing routine for that type, and call it to draw that part\icular object. )Tj
0 -2.557 TD
(For example, the routine that draws all of the visible objects might jus\t look like this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(map draw display-list\))Tj
/T1_0 1 Tf
( )Tj
T*
(When we later add a new type, such as )Tj
/T1_1 1 Tf
(irregular-hexagon)Tj
/T1_0 1 Tf
(, we can just define a )Tj
/T1_2 1 Tf
(method)Tj
/T1_0 1 Tf
( for drawing irregular )Tj
0 -1.205 TD
(hexagons, and the system will automatically make the )Tj
/T1_1 1 Tf
(draw)Tj
/T1_0 1 Tf
( operation work for irregular hexagons. We don't have )Tj
0 -1.2 TD
(to go find all of the code that might encounter irregular hexagons and m\odify it. )Tj
0 -2.557 TD
(This feature is called )Tj
/T1_2 1 Tf
(late binding of methods)Tj
/T1_0 1 Tf
(. When we write code that uses an abstract operation, we don't have to )Tj
0 -1.2 TD
(specify exactly what concrete operation should be performed. )Tj
0 -2.557 TD
(\(Note: here we're using a fairly general sense of the word "binding," w\hich is more general than the notion of )Tj
0 -1.2 TD
(variable binding. We're making an association between a piece of code an\d the operation it represents, rather than )Tj
T*
(between a name and a piece of storage. In this general sense, "binding" \means to associate something with )Tj
0 -1.205 TD
(something else, and in this example, we associating the abstract operati\on )Tj
/T1_1 1 Tf
(draw)Tj
/T1_0 1 Tf
( with the particular procedure )Tj
0 -1.2 TD
(needed to draw a particular object at run time.\) )Tj
0 -2.562 TD
(As we'll see a little later, we can define a )Tj
/T1_2 1 Tf
(generic procedure)Tj
/T1_0 1 Tf
( that reprsents the abstract )Tj
/T1_1 1 Tf
(draw)Tj
/T1_0 1 Tf
( operation, and rely on )Tj
0 -1.2 TD
(an object system to bind that abstract operation to the appropriate draw\ing procedure for a particular type at run )Tj
T*
(time. When we later define new types and methods for drawing them, the g\eneric procedure will be automatically )Tj
T*
(updated to handle them. This lets us write most of our code at a higher \level of abstraction, in terms of operations )Tj
T*
(that "just work" for all of the relevant types. \(E.g., we might have ab\stract operations that can draw, move, and hide )Tj
T*
(any kind of graphical object, so that we don't need to worry about the d\ifferences between the different kinds of )Tj
T*
(graphical objects if those differences don't matter for what we're tryin\g to do.\) )Tj
ET
0 0 1 RG
1.23 w 10 M 0 j 0 J []0 d 
9.064 42.325 m
293.027 42.325 l
S
0 0 1 rg
BT
/T1_3 1 Tf
14.6418 0 0 14.6418 9.064 46.0146 Tm
(Class Definitions and Slot Specifications)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(6 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5558 0 obj<</Length 5016>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 743.7742 Tm
(A )Tj
/T1_1 1 Tf
(class)Tj
/T1_0 1 Tf
( is an object that describes a particular kind of object. A )Tj
/T1_1 1 Tf
(class definition)Tj
/T1_0 1 Tf
( is an expression like a record or )Tj
0 -1.2 TD
(structure definition, which defines the structure of that kind of object\. Classes can also have associated behavior or )Tj
/T1_1 1 Tf
T*
(methods)Tj
/T1_0 1 Tf
(, which are routines for performing particular operations on instances o\f a class. )Tj
0 -2.557 TD
(For example, suppose we would like to have a class of objects that can b\e used to represent points in two-)Tj
0 -1.205 TD
(dimensional space. Each point object will have an )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
( slot and a )Tj
/T1_2 1 Tf
(y)Tj
/T1_0 1 Tf
( slot, which hold the object's position in the x and y )Tj
0 -1.2 TD
(dimensions. )Tj
0 -2.557 TD
(\(A )Tj
/T1_1 1 Tf
(slot)Tj
/T1_0 1 Tf
( is a field of an object, which in other languages may be known as an )Tj
/T1_1 1 Tf
(instance variable)Tj
/T1_0 1 Tf
(, a )Tj
/T1_1 1 Tf
(data member)Tj
/T1_0 1 Tf
(, an )Tj
/T1_1 1 Tf
0 -1.2 TD
(attribute)Tj
/T1_0 1 Tf
(, or a )Tj
/T1_1 1 Tf
(feature)Tj
/T1_0 1 Tf
(.\) )Tj
0 -2.557 TD
(We can define our point class like this: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define-class <point> \(<object>\))Tj
0 -1.2 TD
(   \(x init-value: 0\))Tj
T*
(   \(y init-value: 0\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Here we have chosen to name the class )Tj
/T1_2 1 Tf
(<point>)Tj
/T1_0 1 Tf
(. By convention, we use angle brackets to begin and end the )Tj
0 -1.2 TD
(names of classes, so that it's clear that they are class names, not name\s of normal objects. )Tj
0 -2.562 TD
(The parenthesized expression after the class name )Tj
/T1_2 1 Tf
(<point>)Tj
/T1_0 1 Tf
( is a sequence of )Tj
/T1_1 1 Tf
(superclass)Tj
/T1_0 1 Tf
( names, which will be )Tj
0 -1.205 TD
(explained later.)Tj
ET
0 0 1 RG
0.64 w 10 M 0 j 0 J []0 d 
87.295 409.869 m
108.436 409.869 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 87.2952 411.7881 Tm
(\(12\))Tj
0 0 0 rg
( \(When in doubt, it is a good idea to use )Tj
/T1_2 1 Tf
(<object>)Tj
/T1_0 1 Tf
( as the sole superclass, so use )Tj
/T1_2 1 Tf
-6.165 -1.348 Td
(\(<object>\))Tj
/T1_0 1 Tf
( after the class name in the class definition.\) )Tj
0 -2.557 TD
(The two remaining fields after the superclasses are the )Tj
/T1_1 1 Tf
(slot specifications)Tj
/T1_0 1 Tf
(, which say what kinds of fields an )Tj
0 -1.205 TD
(instance of )Tj
/T1_2 1 Tf
(<point>)Tj
/T1_0 1 Tf
( will have. A slot specification is written in parentheses, and the firs\t thing is the name of the )Tj
T*
(slot. After that come )Tj
/T1_1 1 Tf
(keyword/value)Tj
/T1_0 1 Tf
( pairs. Here we use the keyword )Tj
/T1_2 1 Tf
(init-value:)Tj
/T1_0 1 Tf
( followed by the value )Tj
/T1_2 1 Tf
(0)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(The specification )Tj
/T1_2 1 Tf
(\(x init-value: 0\))Tj
/T1_0 1 Tf
( says that each instance of <point> will have a slot \(field\) named )Tj
/T1_2 1 Tf
(x)Tj
/T1_0 1 Tf
(, and )Tj
0 -1.205 TD
(that the initial value of the field is )Tj
/T1_2 1 Tf
(0)Tj
/T1_0 1 Tf
(. That is, when we create a )Tj
/T1_2 1 Tf
(<point>)Tj
/T1_0 1 Tf
( instance to represent a 2-d point, the )Tj
T*
(initial x value will be zero. Likewise, the slot specification )Tj
/T1_2 1 Tf
(\(y init-value 0)Tj
/T1_0 1 Tf
( says that each point will also )Tj
T*
(have a )Tj
/T1_2 1 Tf
(y)Tj
/T1_0 1 Tf
( slot whose initial value is )Tj
/T1_2 1 Tf
(0)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(We can create an instance of an object by using the special form )Tj
/T1_2 1 Tf
(make)Tj
/T1_0 1 Tf
(, which is actually implemented as a macro. )Tj
0 -1.205 TD
(The )Tj
/T1_2 1 Tf
(make)Tj
/T1_0 1 Tf
( operation takes a class as its first argument, and returns a new object\ that is an instance of that class. )Tj
0 -2.562 TD
(To make a )Tj
/T1_2 1 Tf
(<point>)Tj
/T1_0 1 Tf
(, we might use the )Tj
/T1_2 1 Tf
(make)Tj
/T1_0 1 Tf
( expression )Tj
/T1_2 1 Tf
T*
(\(make <point>\))Tj
/T1_0 1 Tf
0 -2.552 TD
(This expression returns a new point whose x and y slots are initialized \to zero. )Tj
0 -2.557 TD
(If we want the slots of an object to be initialized to a requested value\ at the time the object is initialized--rather than )Tj
0 -1.2 TD
(always being initialized the to the same value for every object, we can \omit the initial value specification in the )Tj
0 -1.205 TD
(class definition, and provide it to the )Tj
/T1_2 1 Tf
(make)Tj
/T1_0 1 Tf
( call that creates an object. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(7 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5559 0 obj<</Length 4350>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 745.0361 Tm
(\(define-class <point> \(<object>\))Tj
0 -1.2 TD
(   \(x\))Tj
T*
(   \(y\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Given this class definition, we can use )Tj
/T1_1 1 Tf
(make)Tj
/T1_0 1 Tf
( to create a )Tj
/T1_1 1 Tf
(<point>)Tj
/T1_0 1 Tf
( instance with particular x and y values: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define my-point)Tj
0 -1.2 TD
(        \(make <point> x: 10 y: 20\)\) )Tj
/T1_0 1 Tf
0 -2.552 TD
(Here we've created a point object with an x value of 10 and a y value of\ 20. Note that the x value is labeled by a )Tj
0 -1.205 TD
(keyword )Tj
/T1_1 1 Tf
(x:)Tj
/T1_0 1 Tf
(. As in a class definition, a keyword argument to )Tj
/T1_1 1 Tf
(make)Tj
/T1_0 1 Tf
( looks sort of like an argument, but it really isn't: )Tj
0 -1.2 TD
(it's the )Tj
/T1_2 1 Tf
(name)Tj
/T1_0 1 Tf
( of the following argument. )Tj
0 -2.562 TD
(Keyword arguments to )Tj
/T1_1 1 Tf
(define-class)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(make)Tj
/T1_0 1 Tf
( let you write the arguments in any order, by giving the name )Tj
0 -1.205 TD
(before the value. We could have written the above call to )Tj
/T1_1 1 Tf
(make)Tj
/T1_0 1 Tf
( with the values in the opposite order: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define my-point \(make <point> y: 20 x: 10\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(The result of this definition is exactly the same as the earlier one. Th\e )Tj
/T1_1 1 Tf
(make)Tj
/T1_0 1 Tf
( macro will sort out the arguments, )Tj
0 -1.2 TD
(looking at the keyword to figure out what the following arguments are fo\r. )Tj
0 -2.562 TD
(By default, when we define a class with slots )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(y)Tj
/T1_0 1 Tf
(, we implicitly define operations on those fields of those )Tj
0 -1.2 TD
(objects. )Tj
0 -2.557 TD
(For each field, two routines are defined, a )Tj
/T1_2 1 Tf
(getter)Tj
/T1_0 1 Tf
(, which fetches the value of the field, and a )Tj
/T1_2 1 Tf
(setter)Tj
/T1_0 1 Tf
(, which sets the )Tj
0 -1.205 TD
(value of the field. The name of the getter is just the name of the field\. The name of the setter starts with )Tj
/T1_1 1 Tf
(set-)Tj
/T1_0 1 Tf
(, )Tj
0 -1.2 TD
(followed by the name of the field, followed by an exclamation point to i\ndicate that the operation is destructive \(i.)Tj
T*
(e., modifies the state of the object by replacing an old value with a ne\w one.\) )Tj
0 -2.562 TD
(Given the point we created, we can ask the value of its )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( field by evaluating the expression )Tj
/T1_1 1 Tf
(\(x my-point\))Tj
/T1_0 1 Tf
(, )Tj
0 -1.205 TD
(which will return )Tj
/T1_1 1 Tf
(10)Tj
/T1_0 1 Tf
(. We can change teh value to 50 by evaluating the expression )Tj
/T1_1 1 Tf
(\(set-x! my-point 50\))Tj
/T1_0 1 Tf
(. )Tj
0 -1.2 TD
(We can increment it by 1 with the expression )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(set-x! my-point)Tj
0 -1.2 TD
(        \(+ 1 \(x my-point\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Different kinds of objects can have fields with the same name, and the g\etters and setters will operate on the )Tj
0 -1.2 TD
(appropriate field of whatever kind of object they are applied to. \(Acce\ssors are actually generic procedures, which )Tj
T*
(will be explained later.\) )Tj
ET
0 0 1 RG
1.23 w 10 M 0 j 0 J []0 d 
9.064 105.899 m
242.586 105.899 l
S
0 0 1 rg
BT
/T1_3 1 Tf
14.6418 0 0 14.6418 9.064 109.5885 Tm
(Generic Procedures and Methods)Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 74.9144 Tm
(A )Tj
/T1_2 1 Tf
(generic procedure)Tj
/T1_0 1 Tf
( is a procedure that does a certain operation, but may do it in differen\t ways depending on what )Tj
0 -1.2 TD
(kind of argument it is given. A generic procedure can be )Tj
/T1_2 1 Tf
(specialized)Tj
/T1_0 1 Tf
(, telling it how to perform a particular kind of )Tj
T*
(operation for a particular kind of argument. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(8 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5560 0 obj<</Length 4556>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 744.4441 Tm
(A )Tj
/T1_1 1 Tf
(method definition)Tj
/T1_0 1 Tf
( specifies how a generic operation should be done for an object of a par\ticular type. )Tj
0 -1.2 TD
(Conceptually, a generic function keeps track of all of the methods which\ perform a particular operation on different )Tj
T*
(kinds of objects. A generic procedure is called just like any other func\tion, but the first thing it does is to look up )Tj
0 -1.2 TD
(the appropriate method for the kind of object being operated on. Then it\ applies that method. A generic procedure is )Tj
0 -1.2 TD
(therefore a kind of dispatcher, which maps abstract operations onto the \actual procedures for performing them. )Tj
0 -2.557 TD
(For example, suppose we would like to define several classes, @code<stac\k>, @code<queue>, and @code<d-e-)Tj
0 -1.2 TD
(queue>, to represent stacks, queues, and double-ended queues, respective\ly. )Tj
0 -2.557 TD
(We could define stack this way: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define-class <stack> \(<object>\))Tj
0 -1.2 TD
(   \(items init-value: '\(\)\)   ; list of items in the stack)Tj
/T1_0 1 Tf
0 -2.557 TD
(An instance of )Tj
/T1_2 1 Tf
(<stack>)Tj
/T1_0 1 Tf
( has one field, )Tj
/T1_2 1 Tf
(items)Tj
/T1_0 1 Tf
(, which points to a list of items in the stack. We can push items onto )Tj
0 -1.205 TD
(the stack by )Tj
/T1_2 1 Tf
(cons)Tj
/T1_0 1 Tf
(ing them onto the front of its list of items, or pop items off of the st\ack by )Tj
/T1_2 1 Tf
(cdr)Tj
/T1_0 1 Tf
(ing the list. )Tj
0 -2.562 TD
(To define the behavior of )Tj
/T1_2 1 Tf
(<stack>)Tj
/T1_0 1 Tf
(---and things like stacks--we need some generic procedures, )Tj
/T1_2 1 Tf
(insert-)Tj
0 -1.205 TD
(first!)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(remove-first!)Tj
/T1_0 1 Tf
(. These will add an item to the front \(top\) of a stack, or remove and \return the item )Tj
0 -1.2 TD
(from the front \(top\) of a stack, respectively. )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define-generic \(insert-first! obj item\)\))Tj
0 -2.4 TD
(\(define-generic \(remove-first! obj\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(These two generic procedures define "generic operations" which may be su\pported by different classes, but do )Tj
0 -1.2 TD
(semantically "the same thing." That is, the generic procedures don't rep\resent how to do a particular kind of )Tj
T*
(operation on a particular kind of object, but instead represent a genera\l kind of operation that we can define for )Tj
T*
(different kinds of objects. )Tj
0 -2.557 TD
(This pair of generic procedures therefore acts as an )Tj
/T1_1 1 Tf
(abstract data type)Tj
/T1_0 1 Tf
(, which represents object that can behave as )Tj
0 -1.2 TD
(stacks. The don't say how any particular implementation of stacks works.\ )Tj
0 -2.562 TD
(To make the generic operations work for the particular class )Tj
/T1_2 1 Tf
(<stack>)Tj
/T1_0 1 Tf
(, we need to define )Tj
/T1_1 1 Tf
(methods)Tj
/T1_0 1 Tf
( that say )Tj
/T1_1 1 Tf
(how)Tj
/T1_0 1 Tf
( to )Tj
0 -1.205 TD
(perform the )Tj
/T1_2 1 Tf
(insert-first!)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(remove-first!)Tj
/T1_0 1 Tf
( operations on objects that are instances of class )Tj
/T1_2 1 Tf
(<stack>)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(For this, we use the macro )Tj
/T1_2 1 Tf
(define-method)Tj
/T1_0 1 Tf
(. Here's the definition of the )Tj
/T1_2 1 Tf
(insert-first!)Tj
/T1_0 1 Tf
( operation for the )Tj
0 -1.205 TD
(class )Tj
/T1_2 1 Tf
(<stack>)Tj
/T1_0 1 Tf
(: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(define-method \(insert-first! \(self <stack>\) item\))Tj
0 -1.2 TD
(   \(set-items! self)Tj
T*
(               \(cons item \(items self\)\)\)\)    )Tj
/T1_0 1 Tf
0 -2.552 TD
(This )Tj
/T1_1 1 Tf
(method)Tj
/T1_0 1 Tf
( definition is very much like a procedure definition. Here we're definin\g a method that takes two )Tj
0 -1.205 TD
(arguments, named )Tj
/T1_1 1 Tf
(self)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(item)Tj
/T1_0 1 Tf
(. The calling form )Tj
/T1_2 1 Tf
(\(insert-first! \(<stack> self\) item\))Tj
/T1_0 1 Tf
( says that )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(9 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5561 0 obj<</Length 4818>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 755.7888 Tm
(this is the particular procedure to use for the generic procedure )Tj
/T1_1 1 Tf
(insert-first!)Tj
/T1_0 1 Tf
( operation when it's given two )Tj
0 -1.205 TD
(arguments, and the first argument is an instance of class )Tj
/T1_1 1 Tf
(<stack>)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(That is, we're defining a procedure of two arguments, )Tj
/T1_1 1 Tf
(self)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(item)Tj
/T1_0 1 Tf
(, but we're also saying that this procedure is )Tj
0 -1.205 TD
(to be used )Tj
/T1_2 1 Tf
(by)Tj
/T1_0 1 Tf
( the generic procedure )Tj
/T1_1 1 Tf
(insert-first!)Tj
/T1_0 1 Tf
( only when its first argument is a stack. \(The names )Tj
/T1_1 1 Tf
(self)Tj
/T1_0 1 Tf
( )Tj
T*
(and )Tj
/T1_1 1 Tf
(item)Tj
/T1_0 1 Tf
( were chosen for convenience--as with a normal procedure, we can name ar\guments anything we want.\) )Tj
0 -2.562 TD
(Given this definition, when )Tj
/T1_1 1 Tf
(insert-first!)Tj
/T1_0 1 Tf
( is called with two arguments, and the first is a stack, this procedure \)Tj
0 -1.2 TD
(will be executed to perform the operation in the appropriate way for sta\cks. We say that we are )Tj
/T1_2 1 Tf
(specializing)Tj
/T1_0 1 Tf
( the )Tj
0 -1.205 TD
(generic procedure )Tj
/T1_1 1 Tf
(insert-first!)Tj
/T1_0 1 Tf
( for instances of the class )Tj
/T1_1 1 Tf
(<stack>)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(The body of this method definition refers to the stack being operated on\ as )Tj
/T1_1 1 Tf
(self)Tj
/T1_0 1 Tf
(, the name given as the first )Tj
0 -1.205 TD
(argument name; it refers to the second argument, which is being pushed o\n the stack, as )Tj
/T1_1 1 Tf
(item)Tj
/T1_0 1 Tf
(. The body of the )Tj
0 -1.2 TD
(method is )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(set-items! self)Tj
0 -1.2 TD
(            \(cons item \(items self\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(which relies on the getter and setter implicitly defined for the )Tj
/T1_1 1 Tf
(items)Tj
/T1_0 1 Tf
( slot by the class definition. It fetches the )Tj
0 -1.205 TD
(value of the )Tj
/T1_1 1 Tf
(head)Tj
/T1_0 1 Tf
( slot of )Tj
/T1_1 1 Tf
(self)Tj
/T1_0 1 Tf
( using )Tj
/T1_1 1 Tf
(head)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(cons)Tj
/T1_0 1 Tf
(es the argument )Tj
/T1_1 1 Tf
(item)Tj
/T1_0 1 Tf
( onto that list, and assigns the result to the )Tj
T*
(head slot using )Tj
/T1_1 1 Tf
(set-head!)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(The method for the generic procedure )Tj
/T1_1 1 Tf
(remove-first!)Tj
/T1_0 1 Tf
( when applied to stacks could be defined like this: )Tj
/T1_1 1 Tf
T*
(\(define-method \(remove-first! \(self <stack>\)\))Tj
0 -1.2 TD
(   \(let \(\(first-item \(car \(items self\)\)\)\))Tj
0 -1.2 TD
(      \(set-items! \(cdr \(items self\)\)\)\)\) )Tj
/T1_0 1 Tf
0 -2.552 TD
(Now let's implement a queue data type. Like a stack, a queue data type a\llows you to push an item on the front of an )Tj
0 -1.205 TD
(ordered sequence of items--it supports the )Tj
/T1_1 1 Tf
(insert-first!)Tj
/T1_0 1 Tf
( operation. )Tj
0 -2.562 TD
(However, a queue doesn't let you add items to the front--it only lets yo\u add items to the rear. So our )Tj
/T1_1 1 Tf
(<queue>)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(class should support )Tj
/T1_1 1 Tf
(remove-first!)Tj
/T1_0 1 Tf
(, like )Tj
/T1_1 1 Tf
(<stack>)Tj
/T1_0 1 Tf
(, but )Tj
/T1_1 1 Tf
(insert-last!)Tj
/T1_0 1 Tf
( instead of )Tj
/T1_1 1 Tf
(insert-first!)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(This means that we can define a method for )Tj
/T1_1 1 Tf
(<queue>)Tj
/T1_0 1 Tf
( on the )Tj
/T1_1 1 Tf
(remove-first!)Tj
/T1_0 1 Tf
( generic procedures, but we need )Tj
0 -1.205 TD
(a new generic procedure )Tj
/T1_1 1 Tf
(insert-last!)Tj
/T1_0 1 Tf
(, which represents the abstract operation of removing the last item from\ )Tj
0 -1.2 TD
(an ordered sequence. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-generic insert-last!\))Tj
/T1_0 1 Tf
0 -2.557 TD
(The pair of generic operations )Tj
/T1_1 1 Tf
(insert-last!)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(remove-first!)Tj
/T1_0 1 Tf
( represent the abstract datatype of queues )Tj
0 -1.2 TD
(and things that can behave like queues. )Tj
0 -2.557 TD
(To actually implement queues, we need a class definition and some method\ definitions, to say how a queue should )Tj
0 -1.2 TD
(be represented, and how the queue operations should be done on it. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(10 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5562 0 obj<</Length 3679>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 755.8499 Tm
(For a queue, it's good for accesses to be fast at either end, so we'll w\ant a doubly-linked list, rather than a simple list )Tj
0 -1.205 TD
(of pairs. Here's a class definition for )Tj
/T1_1 1 Tf
(<queue>)Tj
/T1_0 1 Tf
(: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-class <queue> \(<object>\))Tj
0 -1.2 TD
(   \(front '\(\)\))Tj
T*
(   \(rear '\(\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Each )Tj
/T1_1 1 Tf
(<queue>)Tj
/T1_0 1 Tf
(s keep a pointer to the beginning of the linked list and a pointer to th\e end of the linked list. The )Tj
0 -1.2 TD
(queue itself is structured as a doubly-linked list of queue nodes, each \of which has a pointer to an )Tj
/T1_2 1 Tf
(item)Tj
/T1_0 1 Tf
( that's )Tj
0 -1.205 TD
(conceptually in the queue, plus a )Tj
/T1_1 1 Tf
(next)Tj
/T1_0 1 Tf
( pointer to the next doubly-linked list node, and a )Tj
/T1_1 1 Tf
(prev)Tj
/T1_0 1 Tf
( pointer to the )Tj
0 -1.2 TD
(previous one. )Tj
0 -2.562 TD
(To implement the doubly-linked list, we'll use a helper class to impleme\nt the list nodes, called )Tj
/T1_1 1 Tf
(<d-l-list-)Tj
0 -1.205 TD
(node>)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-class <d-l-list-node> \(<object>\))Tj
0 -1.2 TD
(   \(item\))Tj
T*
(   \(next\))Tj
T*
(   \(prev\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(This definition will implicitly define setters and getters for the field\s, e.g., )Tj
/T1_1 1 Tf
(set-next!)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(set-next!)Tj
/T1_0 1 Tf
( for the )Tj
/T1_1 1 Tf
0 -1.205 TD
(next)Tj
/T1_0 1 Tf
( field of a )Tj
/T1_1 1 Tf
(<d-l-list-node>)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Now we can define the methods for the )Tj
/T1_1 1 Tf
(remove-first!)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(insert-last!)Tj
/T1_0 1 Tf
( operations on instances of )Tj
/T1_1 1 Tf
0 -1.205 TD
(<queue>)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(insert-last! \(self <queue>\) item\))Tj
0 -1.2 TD
(   \(let \(\(new-node \(make <d-l-list-node> item: item)Tj
T*
(                                         prev: \(rear self\)\))Tj
T*
(                                         next: '\(\)\)\)\))Tj
T*
(      \(cond \(\(null? \(front self\)\)          ; nothing in queue yet?\)Tj
T*
(             \(set-front! self new-node\)              ; this will be fi\rst)Tj
T*
(            \(else                              ; otherwise)Tj
T*
(             \(set-next! \(rear self\) new-node\)\)\) ; append to rear o\f list)Tj
T*
(      \(set-rear! self new-node\)\)\)\)   ; update rear pointer)Tj
0 -2.557 TD
(\(define \(remove-first! \(self <queue>\)\))Tj
0 -1.2 TD
(   \(let \(\(first-node \(front self\)\)\))Tj
T*
(      \(if \(null? first-node\))Tj
T*
(          \(error "attempt to remove-first! from an empty queue:" self\)\)Tj
T*
(          \(let* \(\(first-item \(item first-node\)\))Tj
T*
(                 \(rest \(next first-node\)\)\))Tj
T*
(             \(cond\(\(null? rest\)    ; no nodes left in queue?)Tj
T*
(                   \(set-front! self '\(\)\) )Tj
T*
(                   \(set-rear! self '\(\)\)\))Tj
T*
(                  \(else)Tj
T*
(                   \(set-prev! rest '\(\)\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(11 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5563 0 obj<</Length 4619>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 755.7888 Tm
(                   \(set-front! self rest\)\)\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Note that what stacks and queues both support the abstract operation of \removing the first item, but each does it in a )Tj
0 -1.2 TD
(different way--the same operation \(generic procedure\) is implemented b\y different code \(methods\). )Tj
ET
0 0 1 RG
1.476 w 10 M 0 j 0 J []0 d 
9.064 666.8 m
410.42 666.8 l
S
0 0 1 rg
BT
/T1_2 1 Tf
17.5702 0 0 17.5702 9.064 671.228 Tm
(Generic Procedures and Classes are First-Class)Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 635.6057 Tm
(A generic procedure is a procedure, like any other--it is a first-class \object that happens to be callable as a )Tj
0 -1.2 TD
(procedure. You can therefore use store generic procedures in data struct\ures, pass them as arguments to other )Tj
T*
(procedures, and so on. )Tj
0 -2.562 TD
(For example, in a graphical program, we may have a generic )Tj
/T1_1 1 Tf
(draw)Tj
/T1_0 1 Tf
( procedure to display any kind of graphical )Tj
0 -1.205 TD
(object, and each class of graphical object may have its own )Tj
/T1_1 1 Tf
(draw)Tj
/T1_0 1 Tf
( method. By mapping the generic procedure )Tj
/T1_1 1 Tf
T*
(draw)Tj
/T1_0 1 Tf
( over a list of graphical objects, like this, )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(map draw list-of-objects-to-be-drawn\))Tj
/T1_0 1 Tf
0 -2.552 TD
(we can invoke the appropriate draw method for each kind of object. )Tj
0 -2.562 TD
(In our system, classes are also first class. When we use )Tj
/T1_1 1 Tf
(define-class)Tj
/T1_0 1 Tf
( to define a class named )Tj
/T1_1 1 Tf
(<point>)Tj
/T1_0 1 Tf
(, we )Tj
0 -1.2 TD
(are actually doing two things: we are creating a special kind of object \to represent the class, and we are defining a )Tj
0 -1.205 TD
(variable named )Tj
/T1_1 1 Tf
(<point>)Tj
/T1_0 1 Tf
( initialized with a pointer to the class object. )Tj
ET
9.064 372.766 m
343.969 372.766 l
S
0 0 1 rg
BT
/T1_2 1 Tf
17.5702 0 0 17.5702 9.064 377.1938 Tm
(Implementing the Simple Object System)Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 341.5715 Tm
(In this section, I'll present a simple implementation of the simple obje\ct system described so far. Our object system )Tj
0 -1.2 TD
(is based on )Tj
/T1_3 1 Tf
(metaobjects)Tj
/T1_0 1 Tf
(, i.e., objects which represent or manipulate other objects such as clas\s instances and )Tj
T*
(methods. \(The )Tj
/T1_3 1 Tf
(meta-)Tj
/T1_0 1 Tf
( is Greek for "about," "beyond," or "after". )Tj
0 -2.557 TD
(In programming language terminology, metaobjects are objects that are "a\bout" other objects or procedures. The )Tj
0 -1.2 TD
(two most important kinds of metaobjects are class objects and generic pr\ocedure objects. A )Tj
/T1_3 1 Tf
(class)Tj
/T1_0 1 Tf
( object represents )Tj
T*
(instances of a particular class, and a generic procedure object represen\ts a generic operation. )Tj
0 -2.557 TD
(Metaobjects control how other objects behave. For example, a class objec\t controls how instances of the class are )Tj
0 -1.2 TD
(constructed, and a generic procedure object controls when and how the pa\rticular methods on that generic )Tj
T*
(procedure are invoked to do the right thing for particular kinds of obje\cts. )Tj
0 -2.557 TD
(A big advantage of the metaobject approach is that since metaobjects are\ just objects in the language, we can )Tj
0 -1.2 TD
(implement most or all of the object system in the language--in this sect\ion, we'll show how to implement a simple )Tj
T*
(object system for Scheme, in portable Scheme. \(We will rely on macros, \which some versions of Scheme don't )Tj
T*
(support yet, however.\) An advantage of writing a Scheme object system i\n Scheme is that we can modify and )Tj
T*
(extend the object system without having to change the compiler. )Tj
0 -2.557 TD
(We will use macros to translate class, generic procedure, and method def\initions into standard Scheme data )Tj
0 -1.2 TD
(structures and procedures. A class object in our system is just a data s\tructure, for which we'll use a vector \(one-)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(12 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5564 0 obj<</Length 4386>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 755.8499 Tm
(dimensional array\) as the main representation. A class object will reco\rd all of the information necessary to create )Tj
0 -1.2 TD
(instances of that class. )Tj
0 -2.557 TD
(Instances of a class will also be represented as Scheme vectors. Each sl\ot of an object will be represented as a field )Tj
0 -1.2 TD
(of a vector, and we'll translate slot names into vector indexes. )Tj
0 -2.557 TD
(Generic procedures will be represented as Scheme procedures, constructed\ in a way that lets us define methods--)Tj
0 -1.2 TD
(each generic procedure will maintain a table of methods indexed by which\ classes they work for. When a generic )Tj
T*
(procedure is called in the normal way, it check the class of the object \it's being applied to, and will search its table )Tj
T*
(of methods for the appropriate method, and call that method, passing alo\ng the same arguments. Methods will also )Tj
T*
(be represented as Scheme procedures. )Tj
ET
0 0 1 RG
1.23 w 10 M 0 j 0 J []0 d 
9.064 561.518 m
108.321 561.518 l
S
0.738 w 
108.321 562.993 m
213.742 562.993 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14.6418 0 0 14.6418 9.064 565.2073 Tm
(Implementing )Tj
/T1_2 1 Tf
(define-class)Tj
0 0 0 rg
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 530.289 Tm
(define-class)Tj
/T1_0 1 Tf
( is a macro which accepts the users's description of a class, massages i\t a little, and passes it on to )Tj
0 -1.205 TD
(the procedure )Tj
/T1_3 1 Tf
(create-class)Tj
/T1_0 1 Tf
( to construct a class object. )Tj
0 -2.562 TD
(The reason that )Tj
/T1_3 1 Tf
(define-class)Tj
/T1_0 1 Tf
( is written as a macro and not a procedure is so that the arguments to t\he macro )Tj
0 -1.205 TD
(won't be evaluated immediately. For example, the class name \(e.g., )Tj
/T1_3 1 Tf
(<point>)Tj
/T1_0 1 Tf
( or )Tj
/T1_3 1 Tf
(<queue)Tj
/T1_0 1 Tf
( passed to )Tj
/T1_3 1 Tf
(define-)Tj
T*
(class)Tj
/T1_0 1 Tf
( isn't a variable to be evaluated--it's a symbol to be used as the name \of the class. )Tj
0 -2.562 TD
(When a call to )Tj
/T1_3 1 Tf
(define-macro)Tj
/T1_0 1 Tf
( is compiled \(or interpreted\), the transformation procedure for the ma\cro does two )Tj
0 -1.205 TD
(things. First, it constructs the class object and adds it to a special d\ata structure by calling )Tj
/T1_3 1 Tf
(register-class)Tj
/T1_0 1 Tf
(. )Tj
0 -1.2 TD
(Then it generates code to define a variable whose name is the name of th\e class, and initialize that with a pointer to )Tj
T*
(the class. The generated code \(the variable definition\) is returned by\ the transformer, and that's what's interpreted or )Tj
T*
(compiled at the point where the macro was called. )Tj
0 -2.562 TD
(For example, consider a call to create a )Tj
/T1_3 1 Tf
(<point>)Tj
/T1_0 1 Tf
( class: )Tj
/T1_3 1 Tf
T*
(\(define-class <point> \(<object>\))Tj
0 -1.2 TD
(   \(x\))Tj
T*
(   \(y\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(This should be translated by macro processing into a variable definition\ for )Tj
/T1_3 1 Tf
(<point>)Tj
/T1_0 1 Tf
(, which will hold a pointer to )Tj
0 -1.2 TD
(the class object, like this: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(define <point>)Tj
/T1_0 1 Tf
( )Tj
/T1_4 1 Tf
(complicated_expression)Tj
/T1_3 1 Tf
(\))Tj
/T1_0 1 Tf
( )Tj
0 -2.557 TD
(where )Tj
/T1_4 1 Tf
(complicated_expression)Tj
/T1_0 1 Tf
( has the side-effect of constructing the class object, registering its e\xistence with )Tj
0 -1.205 TD
(related objects \(virtual procedures for the accessors\), and so on. )Tj
/T1_3 1 Tf
(complicated_expression)Tj
/T1_0 1 Tf
( should look )Tj
T*
(something like this, for our )Tj
/T1_3 1 Tf
(<point>)Tj
/T1_0 1 Tf
( definition: )Tj
/T1_3 1 Tf
0 -2.562 TD
(; construct an association list describing the slots of this kind of obj\ect,)Tj
0 -1.2 TD
(; indexed by slot name and holding the routines to get and set the slot)Tj
T*
(; values.)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(13 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5565 0 obj<</Length 5549>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 755.7888 Tm
(\(let \(\(slots-alist \(generate-slots-alist '\(\(x\) \(y\)\)\)\)\))Tj
0 -2.4 TD
(   ; create the class object, implemented as a Scheme vector)Tj
0 -1.2 TD
(   \(let \(\(class-object \(vector <<class>>       ; pointer to class of\ class)Tj
0 -1.2 TD
(                               '<point>        ; name symbol for this cl\ass)Tj
T*
(                               \(list <object>\) ; list of superclass ob\jects)Tj
T*
(                               slots-alist     ; slot names/getters/sett\ers)Tj
T*
(                               '*dummy*\)\)\)     ; placeholder)Tj
0 -1.2 TD
(                               )Tj
T*
(      ; create and install the instance allocation routine, which will c\reate)Tj
T*
(      ; and initialize an instance of this class, implemented as a vecto\r)Tj
T*
(      \(vector-set! class-object 4 \(lambda \(x y\))Tj
T*
(                                     \(vector class-object x y\)\)\))Tj
T*
(                                     )Tj
0 -1.2 TD
(      )Tj
0 -1.2 TD
(      ; register accessor methods with appropriate generic procedures)Tj
T*
(      \(register-accessor-methods class-object slots-alist\))Tj
T*
(      )Tj
T*
(      ; and return the class object we constructed)Tj
T*
(      class-object\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(In more detail, what this generated code does is: )Tj
/T1_2 1 Tf
6.3448 0 0 6.3448 32.3702 401.6295 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
12.6896 0 0 12.6896 45.3199 401.6295 Tm
(builds an association list, indexed by slot name, holding getter and set\ter procedures for each slot of a )Tj
/T1_1 1 Tf
0 -1.205 TD
(<point>)Tj
/T1_0 1 Tf
( object. It creates procedures that will get and set the values of the s\lots )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(y)Tj
/T1_0 1 Tf
(, which have been )Tj
T*
(mapped to indexed fields )Tj
/T1_1 1 Tf
(1)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(2)Tj
/T1_0 1 Tf
( of the vector used to represent an instance. \(These are the methods fo\r the )Tj
0 -1.205 TD
(generic procedures )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(set-x!)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(y)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(set-y!)Tj
/T1_0 1 Tf
(, which will be registered with those generic procedures.\) )Tj
/T1_2 1 Tf
6.3448 0 0 6.3448 32.3702 340.5363 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
12.6896 0 0 12.6896 45.3199 340.5363 Tm
(creates a vector that will be the class object. Its 0th slot is initiali\zed with a pointer to the special object )Tj
/T1_1 1 Tf
0 -1.205 TD
(<class>)Tj
/T1_0 1 Tf
(, which identifies this object as a class object.)Tj
ET
0 0 1 RG
0.64 w 10 M 0 j 0 J []0 d 
329.82 323.329 m
350.961 323.329 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 329.8201 325.2477 Tm
(\(13\))Tj
0 0 0 rg
( The 1st slot holds a pointer to the name symbol )Tj
-22.42 -1.343 Td
(that is this class's class name. \(This is just for documentation purpos\es.\) The 2nd slot holds a list of pointers )Tj
0 -1.2 TD
(to this object's immediate superclasses. \(Note that this is a list of p\ointers to actual class objects, not name )Tj
T*
(symbols.)Tj
ET
90.799 275.834 m
111.94 275.834 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 90.7993 277.7525 Tm
(\(14\))Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
6.3448 0 0 6.3448 32.3702 260.7122 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
12.6896 0 0 12.6896 45.3199 260.7122 Tm
(creates a procedure that will allocate and initialize an instance, given\ the initial values of the slots. A pointer )Tj
0 -1.2 TD
(to this object is stored in the class object. \(This side-effect is need\ed because the class object must be created )Tj
T*
(before this procedure, so that the class pointer is available to it.\) T\his procedure takes the slot values in the )Tj
0 -1.205 TD
(same order the slots are laid out. \(The )Tj
/T1_1 1 Tf
(make)Tj
/T1_0 1 Tf
( macro will ensure that arguments are passed in the right order )Tj
0 -1.205 TD
(from calls to )Tj
/T1_1 1 Tf
(make)Tj
/T1_0 1 Tf
( using keywords.\) )Tj
/T1_2 1 Tf
6.3448 0 0 6.3448 32.3702 184.4526 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
12.6896 0 0 12.6896 45.3199 184.4526 Tm
(registers the accessor methods for the slots with the appropriate generi\c procedures. For now, we'll assume )Tj
0 -1.2 TD
(that the generic procedure objects already exist--they must be defined e\xplicitly, like any other generic )Tj
T*
(procedures. Later we'll show how the necessary generic procedure definit\ions can be automatically )Tj
0 -1.2 TD
(generated as needed. )Tj
/T1_2 1 Tf
6.3448 0 0 6.3448 32.3702 123.5426 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
12.6896 0 0 12.6896 45.3199 123.5426 Tm
(returns the class object. )Tj
-2.857 -2.562 Td
(Since this is all done in the initial value expression of the definition\ of the variable )Tj
/T1_1 1 Tf
(<point>)Tj
/T1_0 1 Tf
(, the returned class )Tj
T*
(object becomes the initial value of that variable binding. )Tj
0 -2.557 TD
(Once all this is done, we could create an instance of class point by ext\racting the allocator procedure from the class )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(14 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5566 0 obj<</Length 3906>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 755.8499 Tm
(object and calling it with the initial values in the proper order. For e\xample, )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(\(vector-ref <point> 4\) 20 30\))Tj
/T1_0 1 Tf
0 -2.557 TD
(would extract the point-allocator procedure from the <point> class objec\t, and call it to create a )Tj
/T1_1 1 Tf
(<point>)Tj
/T1_0 1 Tf
( instance )Tj
0 -1.205 TD
(with an )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( value of 20 and a )Tj
/T1_1 1 Tf
(y)Tj
/T1_0 1 Tf
( value of 30. \(The )Tj
/T1_1 1 Tf
(make)Tj
/T1_0 1 Tf
( macro will provide a friendlier interface.\) )Tj
0 -2.562 TD
(Now we'll show a simplified version of the procedure )Tj
/T1_1 1 Tf
(generate-class-code)Tj
/T1_0 1 Tf
(, which generates the kind of )Tj
0 -1.2 TD
(class-creating s-expression shown above. )Tj
0 -2.557 TD
(Now let's look at the macro to produce code like this from a simple clas\s definition. )Tj
T*
(For now, we'll assume that the body of the class definition consists of \nothing but slot declarations with no keword )Tj
0 -1.2 TD
(options--initial value specifiers or other options--i.e., they're one-el\ement lists holding just a symbol that names a )Tj
T*
(slot. Ignoring inheritance and assuming that a class includes only the s\lots declared in this class definition, we'll )Tj
T*
(simply assign slots index numbers in the order they're declared. )Tj
0 -2.557 TD
(We'll also continue to ignore issues of inheritance and automatic genera\tion of generic procedures for slot accessor )Tj
0 -1.2 TD
(methods. When we implement inheritance, described later, we'll need to d\o something with the list of superclasses.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-macro \(define-class class-name superclass-list . slot-decls\))Tj
0 -1.2 TD
(   `\(define ,class-name)Tj
T*
(            \(let \(\(slots-slist \(generate-slots-alist ',slot-decls 1\)\\)\))Tj
0 -2.4 TD
(               ; create the class object, implemented as a Scheme vector\)Tj
0 -1.2 TD
(               \(let \(\(class-object \(vector <<class>>            ; me\taclass)Tj
0 -1.2 TD
(                                           ',class-name         ; name)Tj
T*
(                                           \(list ,@superclass-list\) ; \supers)Tj
T*
(                                           slots-alist          ; slots)Tj
T*
(                                           '*dummy*\)\)\)          ; cre\ator)Tj
T*
( )Tj
T*
(                   ; install a routine to create )Tj
T*
(instances                             )Tj
T*
(                   \(vector-set! class-object)Tj
T*
(                                4)Tj
T*
(                                ; creation routine takes slot values)Tj
T*
(                                ; as args, creates a vector w/class)Tj
T*
(                                ; pointer for this class followed by)Tj
T*
(                                ; slot values in place.)Tj
T*
(                                \(lambda ,\(map car slot-decls\))Tj
T*
(                                   \(vector class-object)Tj
T*
(                                           ,@\(map car slot-decls\)\)\)\)\)Tj
T*
(                                     )Tj
T*
(      )Tj
T*
(                   ; register accessor methods with appropriate generic \procs )Tj
T*
(                   \(register-accessor-methods class-object slots-alist\)\)Tj
T*
(      )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(15 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5567 0 obj<</Length 3550>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 1 RG
1.066 w 10 M 0 j 0 J []0 d 
9.064 741.754 m
176.871 741.754 l
S
0 0 1 rg
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 744.9513 Tm
(Exploiting Type Information)Tj
ET
9.064 707.492 m
220.599 707.492 l
S
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 710.6895 Tm
(Advanced Compilation Techniques)Tj
ET
1.476 w 
9.064 667.723 m
514.822 667.723 l
S
BT
/T1_1 1 Tf
17.5702 0 0 17.5702 9.064 672.1512 Tm
(Some Shortcomings of Standard Scheme for Object System )Tj
ET
9.064 644.826 m
138.908 644.826 l
S
BT
/T1_1 1 Tf
17.5702 0 0 17.5702 9.064 649.2542 Tm
(Implementation)Tj
ET
1.23 w 
9.064 608.012 m
235.251 608.012 l
S
BT
/T1_1 1 Tf
14.6418 0 0 14.6418 9.064 611.7015 Tm
(Inability to Define Disjoint Types)Tj
ET
9.064 571.407 m
306.059 571.407 l
S
BT
/T1_1 1 Tf
14.6418 0 0 14.6418 9.064 575.0969 Tm
(Lack of Type Objects for Predefined Types)Tj
ET
9.064 534.803 m
369.545 534.803 l
S
BT
/T1_1 1 Tf
14.6418 0 0 14.6418 9.064 538.4924 Tm
(Lack of Weak Tables and Extensible Closure Types.)Tj
ET
9.064 498.198 m
210.038 498.198 l
S
BT
/T1_1 1 Tf
14.6418 0 0 14.6418 9.064 501.8879 Tm
(Standard Macros are Limited)Tj
ET
9.064 461.594 m
278.386 461.594 l
S
BT
/T1_1 1 Tf
14.6418 0 0 14.6418 9.064 465.2833 Tm
(Unspecified Time of Macro Processing)Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 430.5482 Tm
(\(And no )Tj
/T1_2 1 Tf
(bound?)Tj
/T1_0 1 Tf
( either, so it's hard to ensure things like generation of generic proced\ures for accessors exactly )Tj
0 -1.2 TD
(once.\) )Tj
ET
9.064 377.251 m
190.52 377.251 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14.6418 0 0 14.6418 9.064 380.9412 Tm
(Lack of Type Declarations)Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 346.2671 Tm
(\(Check-me-on-this declarations vs. trust-me declarations.\) )Tj
ET
9.064 308.198 m
144.135 308.198 l
S
0.738 w 
144.135 309.674 m
196.845 309.674 l
S
1.23 w 
196.845 308.198 m
272.514 308.198 l
S
0 0 1 rg
BT
/T1_1 1 Tf
14.6418 0 0 14.6418 9.064 311.8876 Tm
(Lack of a Standard )Tj
/T1_3 1 Tf
(bound?)Tj
/T1_1 1 Tf
( procedure)Tj
ET
0.5 0.5 0.5 rg
9.064 279.772 m
9.064 281.584 l
602.936 281.584 l
602.03 280.678 l
9.97 280.678 l
9.97 280.678 l
h
f
0.875 0.875 0.875 rg
602.936 281.584 m
602.936 279.772 l
9.064 279.772 l
9.97 280.678 l
602.03 280.678 l
602.03 280.678 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 262.5279 Tm
(Go to the )Tj
ET
0.64 w 
59.467 260.609 m
79.91 260.609 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 59.467 262.5279 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
86.255 260.609 m
129.958 260.609 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 86.2547 262.5279 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
136.302 260.609 m
158.154 260.609 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 136.3023 262.5279 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
164.499 260.609 m
182.124 260.609 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 164.4986 262.5279 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
227.591 260.609 m
311.469 260.609 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 227.5911 262.5279 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(25 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5568 0 obj<</Length 4444>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 755.7888 Tm
(                   class-object\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Two important helper routines are used by this macro: )Tj
/T1_1 1 Tf
(generate-slots-alist)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(register-accessor-)Tj
0 -1.205 TD
(methods)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(The initial value expression for )Tj
/T1_1 1 Tf
(slots-alist)Tj
/T1_0 1 Tf
( is a call to )Tj
/T1_1 1 Tf
(generate-slots-alist)Tj
/T1_0 1 Tf
(, with an argument that is )Tj
0 -1.2 TD
(a quoted version of the argument declarations passed to the macro. Notic\e that we're using unquote inside a quoted )Tj
T*
(expression, and this works. The value of slot-decls will be substituted \inside the quote expression during macro )Tj
0 -1.2 TD
(processing. )Tj
0 -2.562 TD
(For the )Tj
/T1_1 1 Tf
(<point>)Tj
/T1_0 1 Tf
( definition, the expression )Tj
/T1_1 1 Tf
(\(generate-slots-alist ',slot-decls 1\))Tj
/T1_0 1 Tf
( will translate )Tj
0 -1.205 TD
(to )Tj
/T1_1 1 Tf
(\(generate-slots-alist '\(\(x\) \(y\)\) 1\))Tj
/T1_0 1 Tf
(.)Tj
ET
0 0 1 RG
0.64 w 10 M 0 j 0 J []0 d 
291.762 580.141 m
312.903 580.141 l
S
0 0 1 rg
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 291.7623 582.0598 Tm
(\(15\))Tj
0 0 0 rg
( Several other expressions in the macro work this way, )Tj
-22.278 -1.348 Td
(as well: For the )Tj
/T1_1 1 Tf
(<point>)Tj
/T1_0 1 Tf
( example, )Tj
/T1_1 1 Tf
(',class-name)Tj
/T1_0 1 Tf
( will translate into )Tj
/T1_1 1 Tf
('<point>)Tj
/T1_0 1 Tf
(, a literal referring to the name )Tj
0 -1.2 TD
(symbol for the particular class we're defining. )Tj
0 -2.562 TD
(Likewise, )Tj
/T1_1 1 Tf
(\(list ,@superclass-list\))Tj
/T1_0 1 Tf
(, which uses unquote-splicing, will be translated to )Tj
/T1_1 1 Tf
(\(list )Tj
0 -1.205 TD
(<object>\))Tj
/T1_0 1 Tf
(; when that expression is evaluated, the value of the variable )Tj
/T1_1 1 Tf
(<object>)Tj
/T1_0 1 Tf
( will be fetched and put in a )Tj
T*
(list. \(Notice that this makes a list with the actual class object in it\, not the )Tj
/T1_2 1 Tf
(symbol)Tj
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
(<object>)Tj
/T1_0 1 Tf
(.\) The lambda )Tj
0 -1.2 TD
(expression that generates an instance creating procedure uses both unquo\te and unquote-splicing: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(lambda ,\(map car slot-decls\))Tj
0 -1.2 TD
(   \(vector class-name ,@\(map car slot-decls\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(It will translate to )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(lambda \(x y\))Tj
0 -1.2 TD
(   \(vector class-name x y\)\))Tj
0 -2.557 TD
(generate-slots-alist)Tj
/T1_0 1 Tf
( just traverses the list of slot declarations recursively, inrementing a\n index of which )Tj
0 -1.2 TD
(slot number is next, and constructs list of associations, one per slot. \Each association is a list hose car \(i.e., the key\) )Tj
T*
(is the name of the slot, and its second and third elements are procedure\s to access the slot. The actual accessor )Tj
0 -1.205 TD
(procedures are generated by calls to )Tj
/T1_1 1 Tf
(slot-n-getter)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(slot-n-setter)Tj
/T1_0 1 Tf
(, which return procedures to get or )Tj
0 -1.2 TD
(set the )Tj
/T1_2 1 Tf
(n)Tj
/T1_0 1 Tf
(th slot of a vector. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(generate-slots-alist slot-decls slot-num\))Tj
0 -1.2 TD
(   \(if \(null? slot-decls\))Tj
T*
(       '\(\))Tj
0 -1.2 TD
(       \(cons `\(,\(caar slot-decls\))Tj
T*
(               ,\(slot-n-getter slot-num\))Tj
T*
(               ,\(slot-n-setter slot-num\)\))Tj
T*
(             \(generate-slots-alist \(cdr slot-decls\))Tj
T*
(                                   \(+ 1 slot-num\)\)\)\)\) )Tj
/T1_0 1 Tf
0 -2.552 TD
(\(This procedure is initially called with a slot-num of 1, reserving the\ zeroth slot for the class pointer.\) )Tj
0 -2.562 TD
(Here are simple versions of )Tj
/T1_1 1 Tf
(slot-n-getter)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(slot-n-setter)Tj
/T1_0 1 Tf
(. Each one simply makes a closure of an )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(16 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5569 0 obj<</Length 4470>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 755.8499 Tm
(accessor procedure, capturing the environment where n is bound, to speci\alize the accessor to access a particular )Tj
0 -1.2 TD
(slot. \(If we handle keyword options, we'll have to make the code a litt\le more complicated.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(slot-n-getter offset\))Tj
0 -1.2 TD
(   \(lambda \(obj\)                        ; return a procedure to read)Tj
T*
(      \(vector-ref obj offset\)\)\)         ; slot n of an object)Tj
T*
(\(define \(slot-n-setter offset\))Tj
0 -1.2 TD
(   \(lambda \(obj value\)                  ; return a procedure to updat\e)Tj
T*
(      \(vector-set! obj offset value\)\)\)  ; slot n of an object)Tj
/T1_0 1 Tf
0 -2.552 TD
(We construct a new closure for each slot accessor, but that really isn't\ necessary. We could cache the closures, and )Tj
0 -1.2 TD
(always return the same closure when we need an accessor for a particular\ slot offset. )Tj
ET
0 0 1 RG
1.066 w 10 M 0 j 0 J []0 d 
9.064 548.493 m
44.341 548.493 l
S
0.64 w 
44.341 549.772 m
112.865 549.772 l
S
0 0 1 rg
BT
/T1_2 1 Tf
12.6896 0 0 12.6896 9.064 551.6904 Tm
(class )Tj
/T1_3 1 Tf
(<<class>>)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.695 TD
(Our simple object system implementation assumes that every instance is r\epresented as a Scheme vector whose 0th )Tj
0 -1.2 TD
(slot holds a pointer to a class object, which is also an object in the s\ystem. This implies that a class object must also )Tj
0 -1.2 TD
(have a class pointer in its zeroth slot. A question naturally arises as \to what the class of a class object is, and what )Tj
/T1_4 1 Tf
T*
(its)Tj
/T1_0 1 Tf
( class pointer points to. )Tj
0 -2.557 TD
(This is actually a deep philosophical question, and for advanced and pow\erful object system, it has practical )Tj
0 -1.2 TD
(consequences. For our little object system, we'll settle the question in\ a simple way. All class objects have a class )Tj
0 -1.205 TD
(pointer that points to a special object, the class of all classes. We ca\ll this object )Tj
/T1_1 1 Tf
(<<class>>)Tj
/T1_0 1 Tf
(, where the doubled )Tj
0 -1.2 TD
(angle brackets suggest that it is not only a class, but the class of oth\er class objects. This is known as a )Tj
/T1_1 1 Tf
0 -1.205 TD
(metaclass)Tj
/T1_0 1 Tf
(, because it's a class that's about classes. )Tj
0 -2.557 TD
(It doesn't do very much--it just gives a special object we can use as th\e class value for other class objects, so that we )Tj
0 -1.2 TD
(can tell that they're classes. )Tj
0 -2.562 TD
(In our simple system, the unique object )Tj
/T1_1 1 Tf
(<<class>>)Tj
/T1_0 1 Tf
( has a class pointer that points )Tj
/T1_4 1 Tf
(to itself)Tj
/T1_0 1 Tf
(---that is, it describes )Tj
0 -1.2 TD
(itself in the same sense that it describes other classes. This circulari\ty isn't harmful, and allows us to terminate the )Tj
T*
(possibly infinite regression of classes, metaclasses, meta-metaclasses, \and so on. )Tj
0 -2.557 TD
(We construct this one special object "by hand." Like other class objects\ in our system, it is represented as a Scheme )Tj
0 -1.2 TD
(vector whose first element points to itself, and which has a few other s\tandard fields. Most of the standard fields )Tj
T*
(will be empty, because class <<class>> has no superclasses, no slots, an\d no allocator--because we create the one )Tj
T*
(instance specially. )Tj
0 -2.562 TD
(The following definition suffices to create the class )Tj
/T1_1 1 Tf
(<<class>>)Tj
/T1_0 1 Tf
(: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define <<class>>)Tj
0 -1.2 TD
(        \(let \(\(the-object \(vector '*dummy*   ; placeholder for class\ ptr)Tj
T*
(                                  '<<class>> ; name of this class)Tj
T*
(                                  '\(\)        ; superclasses \(none\))Tj
T*
(                                  '\(\)        ; slots \(none\))Tj
T*
(                                  #f         ; allocator \(none\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(17 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5570 0 obj<</Length 3778>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 755.7888 Tm
(                                  '\(\)\)\)\)     ; prop. list \(initial\ly empty\))Tj
0 -1.2 TD
(           ; set class pointer to refer to itself)Tj
T*
(           \(vector-set! the-object 0 the-object\))Tj
0 -1.2 TD
(           ; and return the class object as initial value for define)Tj
0 -1.2 TD
(           the-object\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Once this is done, we can define a few other routines that will come in \handy in implementing the rest of the object )Tj
0 -1.2 TD
(system: )Tj
/T1_1 1 Tf
0 -2.562 TD
(instance?)Tj
/T1_0 1 Tf
( is a predicate that checks whether an object is an instance of a class \in our class system, as opposed to )Tj
0 -1.2 TD
(a plain old Scheme object like a pair or a number. \(In a better object \system, like RScheme's, all Scheme objects )Tj
T*
(would also be instances of classes, but we'll ignore that for now.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(; An object is an instance of a class if it's represented as a)Tj
0 -1.2 TD
(; Scheme vector whose 0th slot holds a class object.)Tj
T*
(; Note: we assume that we never shove class objects into other)Tj
T*
(;       vectors.  We could relax this assumption, but our code)Tj
T*
(;       would be slower.)Tj
T*
(\(define \(instance? obj\))Tj
T*
(   \(and \(vector? obj\))Tj
T*
(        \(class? \(vector-ref 0 obj\)\)\))Tj
0 -2.557 TD
(; An object is a class \(meta\)object if it's represented as a Scheme)Tj
0 -1.2 TD
(; vector whose 0th slot holds a pointer to the class <<class>>.)Tj
T*
(; Note: we assume that we never shove the <<class>> object into)Tj
T*
(;       other vectors.  We could relax this, at a speed cost.)Tj
T*
(\(define \(class? obj\))Tj
T*
(   \(and \(vector? obj\))Tj
0 -1.2 TD
(        \(eq? \(vector-ref 0 obj\) <<class>>\)\)\))Tj
0 -2.557 TD
(; We can fetch the class of an instance by extracting the value)Tj
0 -1.2 TD
(; in its zeroth slot.  Note that we don't check that the argument)Tj
T*
(; obj *is* an instance, so applying this to a non-instance is an error.)Tj
T*
(\(define \(class-of-instance obj\))Tj
T*
(   \(vector-ref obj 0\)\))Tj
ET
0 0 1 RG
1.23 w 10 M 0 j 0 J []0 d 
9.064 190.015 m
108.321 190.015 l
S
0.738 w 
108.321 191.49 m
231.312 191.49 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14.6418 0 0 14.6418 9.064 193.7043 Tm
(Implementing )Tj
/T1_3 1 Tf
(define-generic)Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 158.847 Tm
(Each generic procedure maintains a table of methods that are defined on \it, indexed by the classes they are )Tj
0 -1.2 TD
(applicable to. In our simple object system implementation, this table wi\ll be implemented as an association list, )Tj
T*
(keyed by class pointer. That is, the association list is a list of lists\, and each of those lists holds a class object and a )Tj
0 -1.2 TD
(procedure. The class object represents the class on which the method is \defined, and the procedure is the method )Tj
0 -1.2 TD
(itself. )Tj
0 -2.557 TD
(When the generic procedure is called on a particular instance, it will e\xtract the class pointer from the zeroth slot of )Tj
0 -1.2 TD
(the instance, and use it as a key to probe its own association list. It \will then extract the procedure that's the second )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(18 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5571 0 obj<</Length 4354>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 755.8499 Tm
(element of the resulting list, and call it. When calling the method, it \will pass along the same arguments it received. )Tj
0 -2.557 TD
(This scheme can be rather slow--a linear search of all methods may be sl\ow if there are many methods defined on a )Tj
0 -1.2 TD
(generic procedure, and especially if the frequently-called ones are not \near the front of the list. We could speed this )Tj
0 -1.2 TD
(up considerably by using caching tricks, e.g., reorganizing the list to \put recently-used elements at the front. A more )Tj
T*
(aggressive system could figure out how to avoid looking up methods at ru\ntime in most cases, but that's )Tj
T*
(considerably more complicated. We won't bother with any of that for now,\ to keep our example system simple. )Tj
0 -2.557 TD
(\(Understanding this simple system will be a good start toward understan\ding more sophisticated systems that )Tj
0 -1.2 TD
(perform much better, and even this simple system is fast enough for many\ real-world uses, such as most scripting )Tj
T*
(and GUI programming, or coarse-grained object-oriented programming where\ most of the real work is done in non-)Tj
T*
(object-oriented code.\) )Tj
0 -2.557 TD
(When we evaluate an expression such as )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-generic \(insert-first! obj item\)\) )Tj
/T1_0 1 Tf
0 -2.552 TD
(we would like the macro to be translated into code that will do several \things: )Tj
/T1_2 1 Tf
6.3448 0 0 6.3448 32.3702 454.5632 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
12.6896 0 0 12.6896 45.3199 454.5632 Tm
(create an association list to store methods later defined on this generi\c procedure )Tj
/T1_2 1 Tf
6.3448 0 0 6.3448 32.3702 439.3357 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
12.6896 0 0 12.6896 45.3199 439.3357 Tm
(create the generic procedure itself )Tj
/T1_2 1 Tf
6.3448 0 0 6.3448 32.3702 424.1082 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
12.6896 0 0 12.6896 45.3199 424.1082 Tm
(provide a means for adding methods to the association list. )Tj
/T1_2 1 Tf
6.3448 0 0 6.3448 32.3702 408.8196 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
12.6896 0 0 12.6896 45.3199 408.8196 Tm
(bind the name \(e.g., )Tj
/T1_1 1 Tf
(insert-first!)Tj
/T1_0 1 Tf
( and initialize the binding with a pointer to the generic procedure. )Tj
-2.857 -2.562 Td
(The first two and the last are easy, and we'll ignore the third for now.\ )Tj
/T1_1 1 Tf
(define-generic)Tj
/T1_0 1 Tf
( can generate code like )Tj
0 -1.2 TD
(this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define insert-first!)Tj
0 -1.2 TD
(        ;  create an environment that only the generic procedure will)Tj
T*
(        ;  be able to see.)Tj
0 -1.2 TD
(        \(let \(\(method-alist '\(\)\)\))Tj
T*
(           ;  create and return the generic procedure that can see that)Tj
T*
(           ;  method a-list.)Tj
T*
(           \(lambda \(obj item\))Tj
T*
(              \(let* \(\(class \(class-of-instance obj\)\))Tj
T*
(                     \(method \(cadr \(assq class method-alist\)\)\)\))Tj
T*
(                 \(if method)Tj
T*
(                     \(method obj item\))Tj
T*
(                     \(error "method not found"\)\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Here we use )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( to create a local variable binding to hold the association list, and ca\pture it by using lambda to )Tj
0 -1.2 TD
(create the generic procedure in its scope. Once the procedure is returne\d from the let, only that procedure will ever )Tj
T*
(be able to operate on that association list. )Tj
0 -2.562 TD
(The procedure returned by )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( will take the two arguments specified by the generic procedure declarat\ion, )Tj
0 -1.2 TD
(extract the class pointer from the first argument object, probe the asso\ciation list to get the appropriate method for )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(19 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5572 0 obj<</Length 3785>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 755.8499 Tm
(that class, and \(tail-\)call that method, passing along the original ar\guments. If it fails to find a method for the class )Tj
0 -1.2 TD
(of the instance it's being applied to, it signals an error. )Tj
0 -2.557 TD
(Keeping in mind that this code doesn't quite work because we can't actua\lly add methods to the method association )Tj
0 -1.205 TD
(list, we could define )Tj
/T1_1 1 Tf
(define-generic)Tj
/T1_0 1 Tf
( as a macro this way: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-macro \(define-generic name . args\))Tj
0 -1.2 TD
(   `\(define ,name)Tj
T*
(            \(let \(\(method-alist '\(\)\)\))Tj
T*
(               \(lambda \(,@args\))Tj
T*
(                 \(let* \(\(class \(class-of-instance ,\(car args\)\)\)\)\)Tj
T*
(                        \(method \(cadr \(assq class method-alist\)\)\)\)\)Tj
T*
(                    \(if method)Tj
T*
(                        \(method obj item\))Tj
0 -1.2 TD
(                        \(error "method not found"\)\)\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(To allow methods to be added to the method-alist, we'll change the macro\ to create another procedure, along with )Tj
0 -1.205 TD
(the generic procedure, in the environment where )Tj
/T1_1 1 Tf
(method-list)Tj
/T1_0 1 Tf
( is visible. This procedure can be used to add a )Tj
0 -1.2 TD
(new method to the method association lists. This table will be an associ\ation list stored in the global variable )Tj
/T1_1 1 Tf
0 -1.205 TD
(*generic-procedures*)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(We'll also maintain a table of generic procedures and the corresponding \procedures that add methods to their )Tj
0 -1.205 TD
(association lists. While we're at it, we'll modify )Tj
/T1_1 1 Tf
(define-generic)Tj
/T1_0 1 Tf
( record the name of a generic procedure when )Tj
0 -1.2 TD
(it's defined, so that it can print out a more helpful error message when\ a lookup fails. The inital value expression )Tj
T*
(will be a letrec which lets us define four variables, two of which are p\rocedure-valued, and then returns one of those )Tj
T*
(procedures, the actual generic procedure )Tj
/T1_1 1 Tf
0 -2.562 TD
(         )Tj
0 -1.2 TD
(\(define *generic-procedures* '\(\)\))Tj
0 -2.4 TD
(\(define-macro \(define-generic name . args\))Tj
0 -1.2 TD
(   `\(define ,name)Tj
T*
(            \(letrec \(\(gp-name ,name\))Tj
T*
(                     \(method-alist '\(\)\))Tj
T*
(                     \(method-adder)Tj
T*
(                      \(lambda \(generic-proc method\))Tj
T*
(                            \(set! method-alist)Tj
T*
(                                  \(cons \(list generic-proc method\))Tj
T*
(                                        method-alist\)\)\)\) )Tj
T*
(                     \(generic-proc)Tj
T*
(                      \(lambda \(,@args\))Tj
T*
(                         \(let* \(\(class \(class-of-instance ,\(car arg\s\)\)\)\))Tj
T*
(                                \(method \(cadr \(assq class)Tj
T*
(                                                    method-alist\)\)\)\)\)Tj
T*
(                            \(if method)Tj
T*
(                                \(method obj item\))Tj
T*
(                                \(error "method not found for ")Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(20 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5573 0 obj<</Length 3877>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 755.7888 Tm
(                                       gp-name\)\)\)\)\)\))Tj
0 -1.2 TD
(                                       )Tj
T*
(               ; add the generic procedure and its method-adding)Tj
0 -1.2 TD
(               ; routine to the association list of generic procedures)Tj
0 -1.2 TD
(                      )Tj
T*
(               \(set! *generic-procedures*)Tj
T*
(                     \(cons \(list generic-proc method-adder\))Tj
T*
(                           *generic-procedures*\)\))Tj
0 -1.2 TD
(                           )Tj
T*
(               generic-procedure\)\)\))Tj
ET
0 0 1 RG
1.23 w 10 M 0 j 0 J []0 d 
9.064 580.733 m
108.321 580.733 l
S
0.738 w 
108.321 582.209 m
222.527 582.209 l
S
0 0 1 rg
BT
/T1_2 1 Tf
14.6418 0 0 14.6418 9.064 584.423 Tm
(Implementing )Tj
/T1_3 1 Tf
(define-method)Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 549.5657 Tm
(Now that each generic procedure is associated with a method-adding proce\dure that can add to its list of methods, )Tj
0 -1.205 TD
(we can define the )Tj
/T1_1 1 Tf
(define-method)Tj
/T1_0 1 Tf
( macro. )Tj
/T1_1 1 Tf
(define-method)Tj
/T1_0 1 Tf
( will create a method using )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
(, and add it to )Tj
0 -1.2 TD
(the generic procedure's method association list, indexed by the class th\at it is to be used for. )Tj
0 -2.557 TD
(In this simple system, where only the first argument is dispatched on \(\used in selecting the appropriate method\), we )Tj
0 -1.2 TD
(only need to treat the first argument declaration specially. )Tj
0 -2.562 TD
(Consider an example the example of defining an )Tj
/T1_1 1 Tf
(insert-first!)Tj
/T1_0 1 Tf
( method for class )Tj
/T1_1 1 Tf
(stack)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-method \(insert-first! \(self <stack>\) item\))Tj
0 -1.2 TD
(   \(set-items! self)Tj
T*
(               \(cons item \(items self\)\)\)\)    )Tj
/T1_0 1 Tf
0 -2.552 TD
(We'd like this to be translated by macro processing into the equivalent \)Tj
/T1_1 1 Tf
0 -2.562 TD
(\(add-method-to-generic-proc insert-first!)Tj
0 -1.2 TD
(                            <stack>)Tj
T*
(                            \(lambda \(self item\))Tj
T*
(                               \(set-items! self)Tj
T*
(                                           \(cons item \(items self\)\)\)\\)\)   )Tj
/T1_0 1 Tf
0 -2.557 TD
(The real work is done by the procedure )Tj
/T1_1 1 Tf
(add-method-to-generic-procedure)Tj
/T1_0 1 Tf
(, which we can write as )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(add-method-to-generic-procedure generic-proc class method\))Tj
0 -1.2 TD
(   \(let \(\(method-adder! \(cadr \(assq *generic-procedures* generic-pr\oc\)\)\)\))Tj
T*
(      \(method-adder! class method\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(This procedure expects three arguments--a generic procedure object, a cl\ass object, and a closure that implments the )Tj
0 -1.205 TD
(corresponding method. It searces the association list The calling patter\n for the )Tj
/T1_1 1 Tf
(define-method)Tj
/T1_0 1 Tf
( macro will )Tj
0 -1.2 TD
(ensure that the actual calling expression is destructured into three par\ts, giving us the first argument's name and the )Tj
T*
(name and its class. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-macro \(define-method \(gp \(arg1 class\) . args\) . body\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(21 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5574 0 obj<</Length 4486>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 755.7888 Tm
(   `\(add-method-to-generic-proc ,gp)Tj
0 -1.2 TD
(                                ,class)Tj
T*
(                                \(lambda \(arg1 ,@args\))Tj
0 -1.2 TD
(                                   ,@body\)\)\))Tj
ET
0 0 1 RG
1.066 w 10 M 0 j 0 J []0 d 
9.064 674.301 m
181.122 674.301 l
S
0 0 1 rg
BT
/T1_2 1 Tf
12.6896 0 0 12.6896 9.064 677.4985 Tm
(Installing Accessor Methods)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(Given the code we've seen so far, we've almost got a working object syst\em, but we left out a detail when we )Tj
0 -1.205 TD
(defined )Tj
/T1_1 1 Tf
(define-class)Tj
/T1_0 1 Tf
(. Recall that the accessor routines for a class's slots are supposed to \be used as methods on )Tj
0 -1.205 TD
(generic procedures such as )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
(define-class)Tj
/T1_0 1 Tf
( generates code that calls )Tj
/T1_1 1 Tf
(register-accessor-methods)Tj
/T1_0 1 Tf
(, to )Tj
0 -1.2 TD
(install the accessor routines for the slots of a class as methods on gen\eric procedures. )Tj
/T1_1 1 Tf
0 -2.562 TD
(register-accessor-methods)Tj
/T1_0 1 Tf
( iterates over the slots association list of the class, looking at each \slot name )Tj
0 -1.2 TD
(and its corresponding accessors, and adding the accessor procedures to t\he appropriate generic procedure. For a )Tj
T*
(given slot name, the appropriate generic procedure name is automatically\ constructed using the accessor naming )Tj
T*
(conventions. )Tj
0 -2.557 TD
([ OOPS--theres a hitch here. We didn't index the generic procedures by n\ame... it's also awkward that Scheme )Tj
0 -1.2 TD
(doesn't provide a standard bound? procedure so that we can tell if the g\eneric procedure already exists. Is it even )Tj
0 -1.2 TD
(possible to automatically define the generic procedures in absolutely po\rtable Scheme, without doing something )Tj
T*
(painful? I suppose that if we can search the list of generic procedures \by name, the macro transformer for define-)Tj
T*
(class can look to see which accessor names don't have corresponding gene\ric functions, BEFORE actually )Tj
T*
(generating the transformed code. It could then add a \(define-generic ..\.\) to its output for each accessor that doesn't )Tj
T*
(already have an existing generic procedure to add it to. Tedious, and an\noying to have to explain. ] )Tj
ET
9.064 359.779 m
112.002 359.779 l
S
0 0 1 rg
BT
/T1_2 1 Tf
12.6896 0 0 12.6896 9.064 362.9764 Tm
(Keyword options)Tj
ET
1.23 w 
9.064 323.314 m
87.178 323.314 l
S
BT
/T1_2 1 Tf
14.6418 0 0 14.6418 9.064 327.0039 Tm
(Inheritance)Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 292.3298 Tm
(So far we've described a simple object-based programming system and show\n how it can be implemented. A fully )Tj
0 -1.2 TD
(object-oriented system requires another feature---)Tj
/T1_3 1 Tf
(inheritance)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Inheritance allows you to define a new class in terms of another class. \For example, we might have a class )Tj
/T1_1 1 Tf
0 -1.205 TD
(<point>)Tj
/T1_0 1 Tf
(, and want to define a similar class, )Tj
/T1_1 1 Tf
(<colored-point>)Tj
/T1_0 1 Tf
(, which records the color to be used to display )Tj
0 -1.2 TD
(a point when it is drawn on the user's screen. )Tj
0 -2.562 TD
(Given our simple object-based system so far, we would have to define )Tj
/T1_1 1 Tf
(colored-point)Tj
/T1_0 1 Tf
( from scratch, defining its )Tj
0 -1.205 TD
(x and y fields as well as its color field. This definition would be most\ly redundant with the definition of )Tj
/T1_1 1 Tf
(<point>)Tj
/T1_0 1 Tf
(, )Tj
0 -1.2 TD
(making the code harder to understand and maintain. )Tj
0 -2.557 TD
(Inheritance lets us define new classes by describing its differences fro\m another class. For example, we could )Tj
0 -1.2 TD
(define colored-point like this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-class <colored-point> \(<point>\))Tj
0 -1.2 TD
(   \(color\)\) )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(22 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5575 0 obj<</Length 5333>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 755.6815 Tm
(This definition says that instances of )Tj
/T1_1 1 Tf
(<colored-point>)Tj
/T1_0 1 Tf
( have all of the slots of )Tj
/T1_1 1 Tf
(<points>)Tj
/T1_0 1 Tf
( \(i.e., )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(y)Tj
/T1_0 1 Tf
(\), as )Tj
0 -1.205 TD
(well as another slot, )Tj
/T1_1 1 Tf
(color)Tj
/T1_0 1 Tf
(. We say that )Tj
/T1_1 1 Tf
(<colored-point>)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(inherits)Tj
/T1_0 1 Tf
( the slotss defined for )Tj
/T1_1 1 Tf
(<point>)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Inheritance applies to methods as well as slots. The definition above te\lls our object system that the methods )Tj
0 -1.205 TD
(defined for the superclass )Tj
/T1_1 1 Tf
(<point>)Tj
/T1_0 1 Tf
( should also be used for )Tj
/T1_1 1 Tf
(<colored-point>s)Tj
/T1_0 1 Tf
(, unless we specifically define )Tj
T*
(new methods just for )Tj
/T1_1 1 Tf
(<colored-point>s)Tj
/T1_0 1 Tf
( on the same generic procedures. )Tj
0 -2.562 TD
(This gives us a concise declarative way of defining classes--we can decl\are that a )Tj
/T1_1 1 Tf
(<colored-point>)Tj
/T1_0 1 Tf
( is like a )Tj
/T1_1 1 Tf
0 -1.205 TD
(<point>)Tj
/T1_0 1 Tf
(, except for the particular differences we specify. The object system th\en infers what slots a )Tj
/T1_1 1 Tf
(<colored-)Tj
T*
(point>)Tj
/T1_0 1 Tf
( must have from this declaration \(and methods we define for this class\)\ )Tj
/T1_2 1 Tf
(plus)Tj
/T1_0 1 Tf
( the declarations for )Tj
/T1_1 1 Tf
(<point>)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(and its methods. )Tj
0 -2.562 TD
(Note that inheritance is transitive. If we define a subclass of )Tj
/T1_2 1 Tf
(<colored-point>)Tj
/T1_0 1 Tf
(, say )Tj
/T1_1 1 Tf
(<flashing-colored-)Tj
0 -1.205 TD
(point>)Tj
/T1_0 1 Tf
(, it will inherit the slots and methods of )Tj
/T1_1 1 Tf
(<colored-point>)Tj
/T1_0 1 Tf
(, and also the slots and methods of )Tj
/T1_1 1 Tf
T*
(<point>)Tj
/T1_0 1 Tf
(. )Tj
ET
0 0 1 RG
1.23 w 10 M 0 j 0 J []0 d 
9.064 497.895 m
306.015 497.895 l
S
0 0 1 rg
BT
/T1_3 1 Tf
14.6418 0 0 14.6418 9.064 501.5851 Tm
(Overriding and Refining Inherited Methods)Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 466.9111 Tm
(By default, a class inherits all of the methods defined for its supercla\sses. We can )Tj
/T1_2 1 Tf
(override)Tj
/T1_0 1 Tf
( an inherited definition, )Tj
0 -1.205 TD
(though, by defining a method definition explicitly. For example, we migh\t have a )Tj
/T1_1 1 Tf
(draw)Tj
/T1_0 1 Tf
( method for class )Tj
/T1_1 1 Tf
(<point>)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(which simply draws a black pixel on the screen at the point's coordinate\s. \(This might be through a call to an )Tj
0 -1.205 TD
(underlying graphics library provided by the operating system.\) For )Tj
/T1_1 1 Tf
(<colored-point>)Tj
/T1_0 1 Tf
(, we would probably want )Tj
0 -1.205 TD
(to define a new )Tj
/T1_1 1 Tf
(draw)Tj
/T1_0 1 Tf
( method so that the point would be drawn in color. )Tj
0 -2.557 TD
(Sometimes, we don't want to completely redefine an inherited method for \a new class, but we would like to refine )Tj
0 -1.2 TD
(it--we may want to define the new method )Tj
/T1_2 1 Tf
(in terms of)Tj
/T1_0 1 Tf
( the inherited method. )Tj
0 -2.562 TD
(For example, suppose we have a class )Tj
/T1_1 1 Tf
(<queue>)Tj
/T1_0 1 Tf
(, which maintains a queue as we saw earlier, and we woulto refine )Tj
0 -1.2 TD
(it to create a new kind of queue that keeps track of the size of the que\ue--i.e., the number of items in the queue. )Tj
0 -2.562 TD
(We might define )Tj
/T1_1 1 Tf
(<counted-queue>)Tj
/T1_0 1 Tf
( as a subclass of )Tj
/T1_1 1 Tf
(<queue>)Tj
/T1_0 1 Tf
(, but with a size slot, like this: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define <counted-queue> \(<queue>\))Tj
0 -1.2 TD
(   \(size initial-value: 0\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Then we can define the )Tj
/T1_1 1 Tf
(get-first)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(put-last)Tj
/T1_0 1 Tf
( methods for )Tj
/T1_1 1 Tf
(counted-queue)Tj
/T1_0 1 Tf
( in terms of the )Tj
0 -1.205 TD
(corresponding methods for )Tj
/T1_1 1 Tf
(<queue>)Tj
/T1_0 1 Tf
(. We do this by using a special pseudo-procedure called )Tj
/T1_1 1 Tf
(next-method)Tj
/T1_0 1 Tf
(. )Tj
T*
(Inside a method definition, the name )Tj
/T1_1 1 Tf
(next-method)Tj
/T1_0 1 Tf
( refers to an inherited procedure by the same name. This )Tj
0 -1.2 TD
(allows us to call the inherited version of a method even though we're ov\erriding that definition. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define-method \(get-first! \(self <counted-queue>\)\))Tj
0 -1.2 TD
(   \(count-set! self \(- \(count self\) 1\)\)  ; update count of items, \and)Tj
T*
(   \(next-method self\)\)                       ; call inherited get-fir\st)Tj
0 -2.557 TD
(\(define-method \(put-last! \(self <counted-queue>\) item\))Tj
0 -1.2 TD
(   \(next-method self item\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(23 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5576 0 obj<</Length 3541>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.8424 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.1576 0 0 8.1576 18 780.8093 Tm
(An Introduction to Scheme and its Implementation - Records and Object Or\ientation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
12.6896 0 0 12.6896 9.064 755.7888 Tm
(   \(count-set! self \(+ \(count self\) 1\)\))Tj
0 -2.557 TD
(next-method)Tj
/T1_0 1 Tf
('s name comes from the fact that it represents the )Tj
/T1_2 1 Tf
(next most specific method)Tj
/T1_0 1 Tf
( for this operation )Tj
0 -1.2 TD
(applied to this class, according to the inheritance graph. The method we\'re defining is the most specific method, )Tj
0 -1.2 TD
(because it's defined for this class exactly, and the inherited one is th\e )Tj
/T1_2 1 Tf
(next)Tj
/T1_0 1 Tf
( most specific. \(The inherited one may in )Tj
T*
(turn call a method that was inherited earlier, which will in turn be the\ )Tj
/T1_2 1 Tf
(next)Tj
/T1_0 1 Tf
( most specific method, and so on.\) )Tj
ET
0 0 1 RG
1.23 w 10 M 0 j 0 J []0 d 
9.064 639.588 m
210.023 639.588 l
S
0 0 1 rg
BT
/T1_3 1 Tf
14.6418 0 0 14.6418 9.064 643.2778 Tm
(Late Binding and Inheritance)Tj
ET
9.064 602.983 m
346.734 602.983 l
S
BT
/T1_3 1 Tf
14.6418 0 0 14.6418 9.064 606.6732 Tm
(Implementing an Object System with Inheritance)Tj
ET
9.064 566.379 m
190.52 566.379 l
S
BT
/T1_3 1 Tf
14.6418 0 0 14.6418 9.064 570.0687 Tm
(Interfaces and Inheritance)Tj
ET
1.476 w 
9.064 526.471 m
455.259 526.471 l
S
BT
/T1_3 1 Tf
17.5702 0 0 17.5702 9.064 530.8983 Tm
(A More Advanced Object System and Implementation)Tj
0 0 0 rg
/T1_0 1 Tf
12.6896 0 0 12.6896 9.064 495.276 Tm
(The simple object system )Tj
ET
1.23 w 
9.064 457.207 m
143.315 457.207 l
S
0 0 1 rg
BT
/T1_3 1 Tf
14.6418 0 0 14.6418 9.064 460.8965 Tm
(Language Features)Tj
ET
1.066 w 
9.064 422.805 m
45.026 422.805 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 426.0026 Tm
(Purity)Tj
ET
9.064 388.543 m
95.797 388.543 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 391.7407 Tm
(Encapsulation)Tj
ET
9.064 354.281 m
133.155 354.281 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 357.4789 Tm
(Multiple Dispatching)Tj
ET
9.064 320.019 m
128.232 320.019 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 323.217 Tm
(Multiple Inheritance)Tj
ET
9.064 285.757 m
123.993 285.757 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 288.9552 Tm
(Explictit Subtyping)Tj
ET
9.064 251.496 m
163.471 251.496 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 254.6933 Tm
(Control Over Compilation)Tj
ET
9.064 217.234 m
143.028 217.234 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 220.4315 Tm
(A Metaobject Protocol)Tj
ET
1.23 w 
9.064 180.769 m
221.414 180.769 l
S
BT
/T1_3 1 Tf
14.6418 0 0 14.6418 9.064 184.459 Tm
(Implementation Improvements)Tj
ET
1.066 w 
9.064 146.367 m
226.931 146.367 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 149.5651 Tm
(Factoring out Work at Compile Time)Tj
ET
9.064 112.105 m
188.139 112.105 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 115.3032 Tm
(Supporting Runtime Changes)Tj
ET
9.064 77.844 m
179.713 77.844 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 81.0414 Tm
(Faster Dynamic Dispatching)Tj
ET
9.064 43.582 m
286.877 43.582 l
S
BT
/T1_3 1 Tf
12.6896 0 0 12.6896 9.064 46.7795 Tm
(Compiling Slot Accessors And Methdos Inline)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.8424 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.1576 0 0 8.1576 18 7.8093 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_133.html \(24 of 25\)\11/3/2006 9:14:02 PM)Tj
ET
EMC 

endstreamendobj5577 0 obj(An Introduction to Scheme and its Implementation - Records and Object Orientation)endobj5578 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_133.html)/S 700 0 R>>endobj5579 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_133.html)endobj5580 0 obj(A=˛`ÓG14ü‹ìùÖ:ù)endobj5581 0 obj<</TS(D:20061104051402)/ID 5580 0 R/CT(text/html)/O[5342 0 R 5358 0 R 5361 0 R 5367 0 R 5369 0 R 5376 0 R 5381 0 R 5387 0 R 5392 0 R 5394 0 R 5396 0 R 5399 0 R 5408 0 R 5414 0 R 5422 0 R 5425 0 R 5431 0 R 5438 0 R 5444 0 R 5447 0 R 5450 0 R 5456 0 R 5467 0 R 5473 0 R 5513 0 R]/S/SPS/T 5577 0 R/TID 5583 0 R/SI 5582 0 R>>endobj5582 0 obj<</TS(D:20061104051402)/AU 5579 0 R>>endobj5583 0 obj(KG\(æ*7XúñS–h¨¨3)endobj5584 0 obj<</Parent 710 0 R/Next 5610 0 R/Dest[5342 0 R/XYZ 0 792 null]/Prev 5339 0 R/SE 5341 0 R/Title(An Introduction to Scheme and its Implementation - Records and Object Orientation)>>endobj5585 0 obj<</TextDecorationType/Underline/O/Layout>>endobj5586 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 5587 0 R>>endobj5587 0 obj<</Annots 5590 0 R/Parent 5614 0 R/ID 5606 0 R/StructParents 348/Contents 5602 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5588 0 obj[5586 0 R]endobj5589 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5590 0 obj[5589 0 R 5591 0 R 5592 0 R 5593 0 R 5594 0 R 5596 0 R 5597 0 R 5598 0 R 5599 0 R 5600 0 R 5601 0 R]endobj5591 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5342 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html)/S/URI>>/Border[0 0 0]>>endobj5592 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5613 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_135.html)/S/URI>>/Border[0 0 0]>>endobj5593 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5594 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5595 0 obj[5587 0 R/XYZ 0 731.2 null]endobj5596 0 obj<</Rect[10.0 683.954 268.764 709.723]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC249)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC249)/S/URI>>/Border[0 0 0]>>endobj5597 0 obj<</Rect[65.608 629.077 88.162 644.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5598 0 obj<</Rect[95.162 629.077 143.378 644.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5342 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_133.html)/S/URI>>/Border[0 0 0]>>endobj5599 0 obj<</Rect[150.378 629.077 174.486 644.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5613 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_135.html)/S/URI>>/Border[0 0 0]>>endobj5600 0 obj<</Rect[181.486 629.077 200.932 644.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5601 0 obj<</Rect[251.094 629.077 343.634 644.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5602 0 obj<</Length 2421>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Other Useful Features\)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
2.081 w 
10 684.255 m
268.764 684.255 l
S
0 0 1 rg
BT
/T1_1 1 Tf
24.7692 0 0 24.7692 10 690.4968 Tm
(Other Useful Features)Tj
ET
0.5 0.5 0.5 rg
10 652.477 m
10 654.477 l
602 654.477 l
601 653.477 l
11 653.477 l
11 653.477 l
h
f
0.875 0.875 0.875 rg
602 654.477 m
602 652.477 l
10 652.477 l
11 653.477 l
601 653.477 l
601 653.477 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 633.4525 Tm
(Go to the )Tj
ET
0.706 w 
65.608 631.336 m
88.162 631.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 633.4525 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 631.336 m
143.378 631.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 633.4525 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 631.336 m
174.486 631.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 633.4525 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 631.336 m
200.932 631.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 633.4525 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 631.336 m
343.634 631.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 633.4525 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_134.html11/3/2006 9:\14:49 PM)Tj
ET
EMC 

endstreamendobj5603 0 obj(An Introduction to Scheme and its Implementation - Other Useful Features)endobj5604 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_134.html)/S 700 0 R>>endobj5605 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_134.html)endobj5606 0 obj(ÏY…ÉuuÜ˘^„Ñ=k)endobj5607 0 obj<</TS(D:20061104051449)/ID 5606 0 R/CT(text/html)/O[5587 0 R]/S/SPS/T 5603 0 R/TID 5609 0 R/SI 5608 0 R>>endobj5608 0 obj<</TS(D:20061104051449)/AU 5605 0 R>>endobj5609 0 obj(É‘n9fÕ¬æ ˆbo\(#%)endobj5610 0 obj<</Parent 710 0 R/Next 5637 0 R/Dest[5587 0 R/XYZ 0 792 null]/Prev 5584 0 R/SE 5586 0 R/Title(An Introduction to Scheme and its Implementation - Other Useful Features)>>endobj5611 0 obj<</TextDecorationType/Underline/O/Layout>>endobj5612 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 5613 0 R>>endobj5613 0 obj<</Annots 5617 0 R/Parent 5748 0 R/ID 5633 0 R/StructParents 349/Contents 5629 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5614 0 obj<</Parent 5641 0 R/Count 5/Type/Pages/Kids[5456 0 R 5467 0 R 5473 0 R 5513 0 R 5587 0 R]>>endobj5615 0 obj[5612 0 R]endobj5616 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5617 0 obj[5616 0 R 5618 0 R 5619 0 R 5620 0 R 5621 0 R 5623 0 R 5624 0 R 5625 0 R 5626 0 R 5627 0 R 5628 0 R]endobj5618 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5587 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_134.html)/S/URI>>/Border[0 0 0]>>endobj5619 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5640 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_136.html)/S/URI>>/Border[0 0 0]>>endobj5620 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5621 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5622 0 obj[5613 0 R/XYZ 0 731.2 null]endobj5623 0 obj<</Rect[10.0 689.877 142.513 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC250)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC250)/S/URI>>/Border[0 0 0]>>endobj5624 0 obj<</Rect[65.608 635.538 88.162 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5625 0 obj<</Rect[95.162 635.538 143.378 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5587 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_134.html)/S/URI>>/Border[0 0 0]>>endobj5626 0 obj<</Rect[150.378 635.538 174.486 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5640 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_136.html)/S/URI>>/Border[0 0 0]>>endobj5627 0 obj<</Rect[181.486 635.538 200.932 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5628 0 obj<</Rect[251.094 635.538 343.634 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5629 0 obj<</Length 2402>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Useful Special Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
142.513 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Special Forms)Tj
ET
0.5 0.5 0.5 rg
10 658.938 m
10 660.938 l
602 660.938 l
601 659.938 l
11 659.938 l
11 659.938 l
h
f
0.875 0.875 0.875 rg
602 660.938 m
602 658.938 l
10 658.938 l
11 659.938 l
601 659.938 l
601 659.938 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 639.914 Tm
(Go to the )Tj
ET
0.706 w 
65.608 637.797 m
88.162 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 639.914 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 637.797 m
143.378 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 639.914 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 637.797 m
174.486 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 639.914 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 637.797 m
200.932 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 639.914 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 637.797 m
343.634 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 639.914 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_135.html11/3/2006 9:\14:57 PM)Tj
ET
EMC 

endstreamendobj5630 0 obj(An Introduction to Scheme and its Implementation - Useful Special Forms)endobj5631 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_135.html)/S 700 0 R>>endobj5632 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_135.html)endobj5633 0 obj(cî˝ ¶#Ú÷\(ïaÙ nS)endobj5634 0 obj<</TS(D:20061104051457)/ID 5633 0 R/CT(text/html)/O[5613 0 R]/S/SPS/T 5630 0 R/TID 5636 0 R/SI 5635 0 R>>endobj5635 0 obj<</TS(D:20061104051457)/AU 5632 0 R>>endobj5636 0 obj(DΩÓ	∂I S~˘4¡¶r)endobj5637 0 obj<</Parent 710 0 R/Next 5664 0 R/Dest[5613 0 R/XYZ 0 792 null]/Prev 5610 0 R/SE 5612 0 R/Title(An Introduction to Scheme and its Implementation - Useful Special Forms)>>endobj5638 0 obj<</TextDecorationType/Underline/O/Layout>>endobj5639 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 5640 0 R>>endobj5640 0 obj<</Annots 5644 0 R/Parent 5748 0 R/ID 5660 0 R/StructParents 350/Contents 5656 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5641 0 obj<</Parent 5944 0 R/Count 25/Type/Pages/Kids[5382 0 R 5400 0 R 5432 0 R 5457 0 R 5614 0 R]>>endobj5642 0 obj[5639 0 R]endobj5643 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5644 0 obj[5643 0 R 5645 0 R 5646 0 R 5647 0 R 5648 0 R 5650 0 R 5651 0 R 5652 0 R 5653 0 R 5654 0 R 5655 0 R]endobj5645 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5613 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_135.html)/S/URI>>/Border[0 0 0]>>endobj5646 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5667 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_137.html)/S/URI>>/Border[0 0 0]>>endobj5647 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5648 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5649 0 obj[5640 0 R/XYZ 0 731.2 null]endobj5650 0 obj<</Rect[10.0 689.877 215.71 710.262]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC251)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC251)/S/URI>>/Border[0 0 0]>>endobj5651 0 obj<</Rect[65.608 635.538 88.162 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5652 0 obj<</Rect[95.162 635.538 143.378 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5613 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_135.html)/S/URI>>/Border[0 0 0]>>endobj5653 0 obj<</Rect[150.378 635.538 174.486 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5667 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_137.html)/S/URI>>/Border[0 0 0]>>endobj5654 0 obj<</Rect[181.486 635.538 200.932 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5655 0 obj<</Rect[251.094 635.538 343.634 650.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5656 0 obj<</Length 2416>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Input-Output Faciliti\es)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.628 w 
10 690.33 m
215.71 690.33 l
S
0 0 1 rg
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 695.2149 Tm
(Input-Output Facilities)Tj
ET
0.5 0.5 0.5 rg
10 658.938 m
10 660.938 l
602 660.938 l
601 659.938 l
11 659.938 l
11 659.938 l
h
f
0.875 0.875 0.875 rg
602 660.938 m
602 658.938 l
10 658.938 l
11 659.938 l
601 659.938 l
601 659.938 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 639.914 Tm
(Go to the )Tj
ET
0.706 w 
65.608 637.797 m
88.162 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 639.914 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 637.797 m
143.378 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 639.914 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 637.797 m
174.486 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 639.914 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 637.797 m
200.932 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 639.914 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 637.797 m
343.634 637.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 639.914 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_136.html11/3/2006 9:\15:06 PM)Tj
ET
EMC 

endstreamendobj5657 0 obj(An Introduction to Scheme and its Implementation - Input-Output Facilities)endobj5658 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_136.html)/S 700 0 R>>endobj5659 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_136.html)endobj5660 0 obj(⁄˛Ù¥JÌr=jÊl$uâ«D)endobj5661 0 obj<</TS(D:20061104051506)/ID 5660 0 R/CT(text/html)/O[5640 0 R]/S/SPS/T 5657 0 R/TID 5663 0 R/SI 5662 0 R>>endobj5662 0 obj<</TS(D:20061104051506)/AU 5659 0 R>>endobj5663 0 obj(µ√,wÅ_ﬂ†˛[‘∑Ç»)endobj5664 0 obj<</Parent 710 0 R/Next 5690 0 R/Dest[5640 0 R/XYZ 0 792 null]/Prev 5637 0 R/SE 5639 0 R/Title(An Introduction to Scheme and its Implementation - Input-Output Facilities)>>endobj5665 0 obj<</TextDecorationType/Underline/O/Layout>>endobj5666 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 5667 0 R>>endobj5667 0 obj<</Annots 5670 0 R/Parent 5748 0 R/ID 5686 0 R/StructParents 351/Contents 5682 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R/T1_2 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5668 0 obj[5666 0 R]endobj5669 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5670 0 obj[5669 0 R 5671 0 R 5672 0 R 5673 0 R 5674 0 R 5676 0 R 5677 0 R 5678 0 R 5679 0 R 5680 0 R 5681 0 R]endobj5671 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5640 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_136.html)/S/URI>>/Border[0 0 0]>>endobj5672 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5693 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_138.html)/S/URI>>/Border[0 0 0]>>endobj5673 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5674 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5675 0 obj[5667 0 R/XYZ 0 731.2 null]endobj5676 0 obj<</Rect[10.0 693.229 134.934 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC252)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC252)/S/URI>>/Border[0 0 0]>>endobj5677 0 obj<</Rect[65.608 639.213 88.162 654.213]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5678 0 obj<</Rect[95.162 639.213 143.378 654.213]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5640 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_136.html)/S/URI>>/Border[0 0 0]>>endobj5679 0 obj<</Rect[150.378 639.213 174.486 654.213]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5693 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_138.html)/S/URI>>/Border[0 0 0]>>endobj5680 0 obj<</Rect[181.486 639.213 200.932 654.213]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5681 0 obj<</Rect[251.094 639.213 343.634 654.213]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5682 0 obj<</Length 2527>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Read and Write)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
0.814 w 
10 695.603 m
48.769 695.603 l
S
1.357 w 
48.769 693.975 m
86.472 693.975 l
S
0.814 w 
86.472 695.603 m
134.934 695.603 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(read)Tj
/T1_2 1 Tf
( and )Tj
/T1_1 1 Tf
(write)Tj
ET
0.5 0.5 0.5 rg
10 662.613 m
10 664.613 l
602 664.613 l
601 663.613 l
11 663.613 l
11 663.613 l
h
f
0.875 0.875 0.875 rg
602 664.613 m
602 662.613 l
10 662.613 l
11 663.613 l
601 663.613 l
601 663.613 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 643.5888 Tm
(Go to the )Tj
ET
0.706 w 
65.608 641.472 m
88.162 641.472 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 643.5888 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 641.472 m
143.378 641.472 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 643.5888 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 641.472 m
174.486 641.472 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 643.5888 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 641.472 m
200.932 641.472 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 643.5888 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 641.472 m
343.634 641.472 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 643.5888 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_137.html11/3/2006 9:\15:14 PM)Tj
ET
EMC 

endstreamendobj5683 0 obj(An Introduction to Scheme and its Implementation - Read and Write)endobj5684 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_137.html)/S 700 0 R>>endobj5685 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_137.html)endobj5686 0 obj(˘ú∫≈á™Öàd	–öá)endobj5687 0 obj<</TS(D:20061104051514)/ID 5686 0 R/CT(text/html)/O[5667 0 R]/S/SPS/T 5683 0 R/TID 5689 0 R/SI 5688 0 R>>endobj5688 0 obj<</TS(D:20061104051514)/AU 5685 0 R>>endobj5689 0 obj(d∏e1«UhpZ`?\\)endobj5690 0 obj<</Parent 710 0 R/Next 5718 0 R/Dest[5667 0 R/XYZ 0 792 null]/Prev 5664 0 R/SE 5666 0 R/Title(An Introduction to Scheme and its Implementation - Read and Write)>>endobj5691 0 obj<</TextDecorationType/Underline/O/Layout>>endobj5692 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 5693 0 R>>endobj5693 0 obj<</Annots 5698 0 R/Parent 5748 0 R/ID 5714 0 R/StructParents 352/Contents 5710 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5694 0 obj[5692 0 R]endobj5695 0 obj<</Limits[288 319]/Nums[288 4976 0 R 289 4989 0 R 290 4992 0 R 291 4998 0 R 292 5004 0 R 293 5007 0 R 294 5011 0 R 295 5014 0 R 296 5065 0 R 297 5091 0 R 298 5103 0 R 299 5106 0 R 300 5112 0 R 301 5134 0 R 302 5146 0 R 303 5148 0 R 304 5151 0 R 305 5153 0 R 306 5155 0 R 307 5157 0 R 308 5159 0 R 309 5167 0 R 310 5169 0 R 311 5175 0 R 312 5186 0 R 313 5191 0 R 314 5195 0 R 315 5201 0 R 316 5207 0 R 317 5213 0 R 318 5225 0 R 319 5232 0 R]>>endobj5696 0 obj<</Limits[320 384]/Nums[]>>endobj5697 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5698 0 obj[5697 0 R 5699 0 R 5700 0 R 5701 0 R 5702 0 R 5704 0 R 5705 0 R 5706 0 R 5707 0 R 5708 0 R 5709 0 R]endobj5699 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5667 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_137.html)/S/URI>>/Border[0 0 0]>>endobj5700 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5721 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_139.html)/S/URI>>/Border[0 0 0]>>endobj5701 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5702 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5703 0 obj[5693 0 R/XYZ 0 731.2 null]endobj5704 0 obj<</Rect[10.0 693.431 77.8462 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC253)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC253)/S/URI>>/Border[0 0 0]>>endobj5705 0 obj<</Rect[65.608 639.415 88.162 654.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5706 0 obj<</Rect[95.162 639.415 143.378 654.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5667 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_137.html)/S/URI>>/Border[0 0 0]>>endobj5707 0 obj<</Rect[150.378 639.415 174.486 654.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5721 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_139.html)/S/URI>>/Border[0 0 0]>>endobj5708 0 obj<</Rect[181.486 639.415 200.932 654.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5709 0 obj<</Rect[251.094 639.415 343.634 654.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5710 0 obj<</Length 2390>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Display)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
0.814 w 
10 695.805 m
77.846 695.805 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.2479 Tm
(display)Tj
ET
0.5 0.5 0.5 rg
10 662.815 m
10 664.815 l
602 664.815 l
601 663.815 l
11 663.815 l
11 663.815 l
h
f
0.875 0.875 0.875 rg
602 664.815 m
602 662.815 l
10 662.815 l
11 663.815 l
601 663.815 l
601 663.815 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 643.7909 Tm
(Go to the )Tj
ET
0.706 w 
65.608 641.674 m
88.162 641.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 643.7909 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 641.674 m
143.378 641.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 643.7909 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 641.674 m
174.486 641.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 643.7909 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 641.674 m
200.932 641.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 643.7909 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 641.674 m
343.634 641.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 643.7909 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_138.html11/3/2006 9:\15:43 PM)Tj
ET
EMC 

endstreamendobj5711 0 obj(An Introduction to Scheme and its Implementation - Display)endobj5712 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_138.html)/S 700 0 R>>endobj5713 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_138.html)endobj5714 0 obj(⁄>Goô{—yüÆ¥l)endobj5715 0 obj<</TS(D:20061104051543)/ID 5714 0 R/CT(text/html)/O[5693 0 R]/S/SPS/T 5711 0 R/TID 5717 0 R/SI 5716 0 R>>endobj5716 0 obj<</TS(D:20061104051543)/AU 5713 0 R>>endobj5717 0 obj(6˛ûÜﬂ°ÀIà2™˝c˘9)endobj5718 0 obj<</Parent 710 0 R/Next 5744 0 R/Dest[5693 0 R/XYZ 0 792 null]/Prev 5690 0 R/SE 5692 0 R/Title(An Introduction to Scheme and its Implementation - Display)>>endobj5719 0 obj<</TextDecorationType/Underline/O/Layout>>endobj5720 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 5721 0 R>>endobj5721 0 obj<</Annots 5724 0 R/Parent 5748 0 R/ID 5740 0 R/StructParents 353/Contents 5736 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5722 0 obj[5720 0 R]endobj5723 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5724 0 obj[5723 0 R 5725 0 R 5726 0 R 5727 0 R 5728 0 R 5730 0 R 5731 0 R 5732 0 R 5733 0 R 5734 0 R 5735 0 R]endobj5725 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5693 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_138.html)/S/URI>>/Border[0 0 0]>>endobj5726 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5747 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html)/S/URI>>/Border[0 0 0]>>endobj5727 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5728 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5729 0 obj[5721 0 R/XYZ 0 731.2 null]endobj5730 0 obj<</Rect[10.0 693.431 51.2892 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC254)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC254)/S/URI>>/Border[0 0 0]>>endobj5731 0 obj<</Rect[65.608 639.415 88.162 654.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5732 0 obj<</Rect[95.162 639.415 143.378 654.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5693 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_138.html)/S/URI>>/Border[0 0 0]>>endobj5733 0 obj<</Rect[150.378 639.415 174.486 654.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5747 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html)/S/URI>>/Border[0 0 0]>>endobj5734 0 obj<</Rect[181.486 639.415 200.932 654.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5735 0 obj<</Rect[251.094 639.415 343.634 654.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5736 0 obj<</Length 2386>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Ports)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.357 w 
10 693.975 m
51.289 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(Ports)Tj
ET
0.5 0.5 0.5 rg
10 662.815 m
10 664.815 l
602 664.815 l
601 663.815 l
11 663.815 l
11 663.815 l
h
f
0.875 0.875 0.875 rg
602 664.815 m
602 662.815 l
10 662.815 l
11 663.815 l
601 663.815 l
601 663.815 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 643.7909 Tm
(Go to the )Tj
ET
0.706 w 
65.608 641.674 m
88.162 641.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 643.7909 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 641.674 m
143.378 641.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 643.7909 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 641.674 m
174.486 641.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 643.7909 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 641.674 m
200.932 641.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 643.7909 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 641.674 m
343.634 641.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 643.7909 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_139.html11/3/2006 9:\15:51 PM)Tj
ET
EMC 

endstreamendobj5737 0 obj(An Introduction to Scheme and its Implementation - Ports)endobj5738 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_139.html)/S 700 0 R>>endobj5739 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_139.html)endobj5740 0 obj(ê“Ìƒ4üÔË–Z5Öû)endobj5741 0 obj<</TS(D:20061104051551)/ID 5740 0 R/CT(text/html)/O[5721 0 R]/S/SPS/T 5737 0 R/TID 5743 0 R/SI 5742 0 R>>endobj5742 0 obj<</TS(D:20061104051551)/AU 5739 0 R>>endobj5743 0 obj(ı∞§ÏR¨œVØÑ`Z4+®)endobj5744 0 obj<</Parent 710 0 R/Next 5787 0 R/Dest[5721 0 R/XYZ 0 792 null]/Prev 5718 0 R/SE 5720 0 R/Title(An Introduction to Scheme and its Implementation - Ports)>>endobj5745 0 obj<</TextDecorationType/Underline/O/Layout>>endobj5746 0 obj<</C/SpdrArt/K 0/P 9 0 R/S/Article/T()/Pg 5747 0 R>>endobj5747 0 obj<</Annots 5751 0 R/Parent 5807 0 R/ID 5783 0 R/StructParents 354/Contents 5779 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R/T1_2 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5748 0 obj<</Parent 5937 0 R/Count 5/Type/Pages/Kids[5613 0 R 5640 0 R 5667 0 R 5693 0 R 5721 0 R]>>endobj5749 0 obj[5746 0 R]endobj5750 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5751 0 obj[5750 0 R 5752 0 R 5753 0 R 5754 0 R 5755 0 R 5757 0 R 5759 0 R 5761 0 R 5763 0 R 5765 0 R 5767 0 R 5769 0 R 5771 0 R 5773 0 R 5774 0 R 5775 0 R 5776 0 R 5777 0 R 5778 0 R]endobj5752 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5721 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_139.html)/S/URI>>/Border[0 0 0]>>endobj5753 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5790 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_141.html)/S/URI>>/Border[0 0 0]>>endobj5754 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5755 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5756 0 obj[5747 0 R/XYZ 0 731.2 null]endobj5757 0 obj<</Rect[10.0 693.229 221.632 710.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC255)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC255)/S/URI>>/Border[0 0 0]>>endobj5758 0 obj[5747 0 R/XYZ 0 671.613 null]endobj5759 0 obj<</Rect[10.0 649.29 391.354 669.675]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC256)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC256)/S/URI>>/Border[0 0 0]>>endobj5760 0 obj[5747 0 R/XYZ 0 627.352 null]endobj5761 0 obj<</Rect[10.0 608.582 125.807 625.736]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC257)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC257)/S/URI>>/Border[0 0 0]>>endobj5762 0 obj[5747 0 R/XYZ 0 586.967 null]endobj5763 0 obj<</Rect[10.0 570.567 168.676 585.567]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC258)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC258)/S/URI>>/Border[0 0 0]>>endobj5764 0 obj[5747 0 R/XYZ 0 549.167 null]endobj5765 0 obj<</Rect[10.0 532.767 195.164 547.767]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC259)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC259)/S/URI>>/Border[0 0 0]>>endobj5766 0 obj[5747 0 R/XYZ 0 511.367 null]endobj5767 0 obj<</Rect[10.0 494.967 52.784 509.967]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC260)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC260)/S/URI>>/Border[0 0 0]>>endobj5768 0 obj[5747 0 R/XYZ 0 473.567 null]endobj5769 0 obj<</Rect[10.0 457.167 180.394 472.167]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC261)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC261)/S/URI>>/Border[0 0 0]>>endobj5770 0 obj[5747 0 R/XYZ 0 435.767 null]endobj5771 0 obj<</Rect[10.0 416.998 69.2523 434.152]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC262)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC262)/S/URI>>/Border[0 0 0]>>endobj5772 0 obj[5747 0 R/XYZ 0 395.382 null]endobj5773 0 obj<</Rect[10.0 376.613 187.741 393.767]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC263)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC263)/S/URI>>/Border[0 0 0]>>endobj5774 0 obj<</Rect[65.608 322.598 88.162 337.598]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5775 0 obj<</Rect[95.162 322.598 143.378 337.598]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5721 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_139.html)/S/URI>>/Border[0 0 0]>>endobj5776 0 obj<</Rect[150.378 322.598 174.486 337.598]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5790 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_141.html)/S/URI>>/Border[0 0 0]>>endobj5777 0 obj<</Rect[181.486 322.598 200.932 337.598]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5778 0 obj<</Rect[251.094 322.598 343.634 337.598]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5779 0 obj<</Length 3358>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - with-input-... Forms)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
0.814 w 
10 695.603 m
116.615 695.603 l
S
1.357 w 
116.615 693.975 m
221.632 693.975 l
S
0 0 1 rg
BT
/T1_1 1 Tf
16.1538 0 0 16.1538 10 698.0457 Tm
(with-input-)Tj
/T1_2 1 Tf
(\\dots{} Forms)Tj
ET
1.628 w 
10 649.743 m
391.354 649.743 l
S
BT
/T1_2 1 Tf
19.3846 0 0 19.3846 10 654.6281 Tm
(Useful Types and Associated Procedures)Tj
ET
1.357 w 
10 609.127 m
125.807 609.127 l
S
BT
/T1_2 1 Tf
16.1538 0 0 16.1538 10 613.1974 Tm
(Numeric Types)Tj
ET
1.176 w 
10 571.172 m
168.676 571.172 l
S
BT
/T1_2 1 Tf
14 0 0 14 10 574.7001 Tm
(Floating-Point Numbers)Tj
ET
10 533.372 m
195.164 533.372 l
S
BT
/T1_2 1 Tf
14 0 0 14 10 536.9001 Tm
(Arbitrary-Precision Integers)Tj
ET
10 495.572 m
52.784 495.572 l
S
BT
/T1_2 1 Tf
14 0 0 14 10 499.1001 Tm
(Ratios)Tj
ET
10 457.772 m
180.394 457.772 l
S
BT
/T1_2 1 Tf
14 0 0 14 10 461.3001 Tm
(Coercions and Exactness)Tj
ET
1.357 w 
10 417.542 m
69.252 417.542 l
S
BT
/T1_2 1 Tf
16.1538 0 0 16.1538 10 421.6128 Tm
(Vectors)Tj
ET
10 377.157 m
187.741 377.157 l
S
BT
/T1_2 1 Tf
16.1538 0 0 16.1538 10 381.2282 Tm
(Strings and Characters)Tj
ET
0.5 0.5 0.5 rg
10 345.998 m
10 347.998 l
602 347.998 l
601 346.998 l
11 346.998 l
11 346.998 l
h
f
0.875 0.875 0.875 rg
602 347.998 m
602 345.998 l
10 345.998 l
11 346.998 l
601 346.998 l
601 346.998 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 326.9734 Tm
(Go to the )Tj
ET
0.706 w 
65.608 324.857 m
88.162 324.857 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 326.9734 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 324.857 m
143.378 324.857 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 326.9734 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 324.857 m
174.486 324.857 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 326.9734 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 324.857 m
200.932 324.857 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 326.9734 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 324.857 m
343.634 324.857 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 326.9734 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_140.html11/3/2006 9:\15:56 PM)Tj
ET
EMC 

endstreamendobj5780 0 obj(An Introduction to Scheme and its Implementation - with-input-... Forms)endobj5781 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_140.html)/S 700 0 R>>endobj5782 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_140.html)endobj5783 0 obj(–4›n˚imÈõLq)endobj5784 0 obj<</TS(D:20061104051556)/ID 5783 0 R/CT(text/html)/O[5747 0 R]/S/SPS/T 5780 0 R/TID 5786 0 R/SI 5785 0 R>>endobj5785 0 obj<</TS(D:20061104051556)/AU 5782 0 R>>endobj5786 0 obj(X®º™”ã•*È2ã≠})endobj5787 0 obj<</Parent 710 0 R/Next 5842 0 R/Dest[5747 0 R/XYZ 0 792 null]/Prev 5744 0 R/SE 5746 0 R/Title(An Introduction to Scheme and its Implementation - with-input-... Forms)>>endobj5788 0 obj<</TextDecorationType/Underline/O/Layout>>endobj5789 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 5800 0 R/Type/MCR>><</MCID 0/Pg 5802 0 R/Type/MCR>><</MCID 0/Pg 5804 0 R/Type/MCR>><</MCID 0/Pg 5806 0 R/Type/MCR>><</MCID 0/Pg 5809 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 5790 0 R>>endobj5790 0 obj<</Annots 5793 0 R/Parent 5807 0 R/ID 5838 0 R/StructParents 355/Contents 5829 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 1287 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5791 0 obj[5789 0 R]endobj5792 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5793 0 obj[5792 0 R 5794 0 R 5795 0 R 5796 0 R 5797 0 R 5799 0 R]endobj5794 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5747 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html)/S/URI>>/Border[0 0 0]>>endobj5795 0 obj<</Rect[150.378 749.6 174.486 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5845 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html)/S/URI>>/Border[0 0 0]>>endobj5796 0 obj<</Rect[181.486 749.6 200.932 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5797 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5798 0 obj[5790 0 R/XYZ 0 731.2 null]endobj5799 0 obj<</Rect[10.0 683.954 455.846 709.723]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC264)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC264)/S/URI>>/Border[0 0 0]>>endobj5800 0 obj<</Parent 5807 0 R/ID 5838 0 R/StructParents 356/Contents 5830 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5801 0 obj[5789 0 R]endobj5802 0 obj<</Parent 5807 0 R/ID 5838 0 R/StructParents 357/Contents 5831 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5803 0 obj[5789 0 R]endobj5804 0 obj<</Parent 5807 0 R/ID 5838 0 R/StructParents 358/Contents 5832 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5805 0 obj[5789 0 R]endobj5806 0 obj<</Parent 5869 0 R/ID 5838 0 R/StructParents 359/Contents 5833 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5807 0 obj<</Parent 5937 0 R/Count 5/Type/Pages/Kids[5747 0 R 5790 0 R 5800 0 R 5802 0 R 5804 0 R]>>endobj5808 0 obj[5789 0 R]endobj5809 0 obj<</Annots 5813 0 R/Parent 5869 0 R/ID 5838 0 R/StructParents 360/Contents 5834 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R/T1_3 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5810 0 obj[5789 0 R]endobj5811 0 obj[5809 0 R/XYZ 0 677.533 null]endobj5812 0 obj<</Rect[10.0 655.21 416.069 675.594]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC265)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC265)/S/URI>>/Border[0 0 0]>>endobj5813 0 obj[5812 0 R 5815 0 R 5817 0 R 5819 0 R 5821 0 R 5823 0 R 5824 0 R 5825 0 R 5826 0 R 5827 0 R 5828 0 R]endobj5814 0 obj[5809 0 R/XYZ 0 633.271 null]endobj5815 0 obj<</Rect[10.0 610.948 298.656 631.333]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC266)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC266)/S/URI>>/Border[0 0 0]>>endobj5816 0 obj[5809 0 R/XYZ 0 589.01 null]endobj5817 0 obj<</Rect[10.0 566.686 263.144 587.071]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC267)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC267)/S/URI>>/Border[0 0 0]>>endobj5818 0 obj[5809 0 R/XYZ 0 544.748 null]endobj5819 0 obj<</Rect[10.0 522.425 243.72 542.81]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC268)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC268)/S/URI>>/Border[0 0 0]>>endobj5820 0 obj[5809 0 R/XYZ 0 500.486 null]endobj5821 0 obj<</Rect[10.0 478.163 371.911 498.548]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC269)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC269)/S/URI>>/Border[0 0 0]>>endobj5822 0 obj[5809 0 R/XYZ 0 456.225 null]endobj5823 0 obj<</Rect[10.0 433.659 496.806 454.286]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC270)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC270)/S/URI>>/Border[0 0 0]>>endobj5824 0 obj<</Rect[65.608 379.321 88.162 394.321]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5825 0 obj<</Rect[95.162 379.321 143.378 394.321]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5747 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_140.html)/S/URI>>/Border[0 0 0]>>endobj5826 0 obj<</Rect[150.378 379.321 174.486 394.321]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5845 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html)/S/URI>>/Border[0 0 0]>>endobj5827 0 obj<</Rect[181.486 379.321 200.932 394.321]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5828 0 obj<</Rect[251.094 379.321 343.634 394.321]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5829 0 obj<</Length 4816>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - call-with-current-con\tinuation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 751.859 m
174.486 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 753.9756 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 751.859 m
200.932 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 753.9756 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
1.248 w 
10 687.062 m
455.846 687.062 l
S
0 0 1 rg
BT
/T1_1 1 Tf
24.7692 0 0 24.7692 10 690.8067 Tm
(call-with-current-continuation)Tj
0 0 0 rg
/T1_2 1 Tf
14 0 0 14 10 649.3851 Tm
(call-with-current-continuation)Tj
/T1_0 1 Tf
( is a very powerful control construct, which can be used to )Tj
0 -1.205 TD
(create more conventional control constructs, like )Tj
/T1_2 1 Tf
(catch)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
(throw)Tj
/T1_0 1 Tf
( in Lisp \(or )Tj
/T1_2 1 Tf
(setjmp)Tj
/T1_0 1 Tf
( and )Tj
/T1_2 1 Tf
0 -1.205 TD
(longjmp)Tj
/T1_0 1 Tf
( in C\), or coroutines, and many more. It is extremely powerful because \it allows a program to )Tj
0 -1.2 TD
(manipulate its own control "stack" so that procedure calls and returns n\eedn't follow the normal depth-)Tj
T*
(first textual call ordering. )Tj
0 -2.557 TD
(Recall that we said [ WHERE? ] that Scheme's equivalent of an activation\ stack is really a chain of )Tj
0 -1.2 TD
(partial continuations \(suspension records\), and this chain is known as\ a full continuation. And since )Tj
T*
(continuations are immutable, they usually form a tree reflecting the cal\l graph \(actually, only the non-tail )Tj
T*
(calls\). Normally, the parts of this tree that are not in the current co\ntinuation chain are garbage, and can )Tj
T*
(be garbage collected. )Tj
0 -2.557 TD
(If you take a pointer to the current continuation, and put it in a live \variable or data structure, however, )Tj
0 -1.2 TD
(then that continuation chain will remain live and not be garbage collect\ed. That is, you can "capture" the )Tj
T*
(current state of the stack. )Tj
0 -2.557 TD
(If you keep a captured state of the stack around, and later install the \pointer to it in the system's )Tj
0 -1.2 TD
(continuation register, then you can return through that continuation cha\in, just as though it were a )Tj
T*
(normal continuation. That is, rather than returning to your caller in th\e normal way, you can take some )Tj
T*
(old saved continuation and return into that instead! )Tj
0 -2.557 TD
(You might wonder why anybody would want to do such a weird thing to thei\r "stack," but there are )Tj
0 -1.2 TD
(some useful applications. One is )Tj
/T1_3 1 Tf
(coroutines)Tj
/T1_0 1 Tf
(. It is often convenient to structure a computation as an )Tj
T*
(alternation between two different processes, perhaps one that produces i\tems and another that consumes )Tj
T*
(them. It may not be convenient to either of those processes into a subro\utine that can be called once to )Tj
T*
(get an item, because each process may have complex state encoded into it\s control structure. )Tj
0 -2.557 TD
(\(You probably wouldn't want to have to structure your program as a bunc\h of incremental operations )Tj
0 -1.2 TD
(that were called by successive calls to a do-next-increment routine. It \may be that the program it gets its )Tj
T*
(data from can't easily be structured that way, either. Each program shou\ld probably be written with its )Tj
T*
(own natural control structure, each suspending its operation when it nee\ds the other to do its thing.\) )Tj
/T1_3 1 Tf
0 -2.557 TD
(Coroutines)Tj
/T1_0 1 Tf
( allow you to structure cooperating subprograms this way, without making\ one subservient to )Tj
0 -1.2 TD
(\(and callable piecemeal from\) another. )Tj
0 -2.557 TD
(Coroutines can be implmemented as operations on continuations. When a co\routine wants to suspend )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_141.html \(1 of 6\)1\1/3/2006 9:16:25 PM)Tj
ET
EMC 

endstreamendobj5830 0 obj<</Length 4500>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - call-with-current-con\tinuation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(itself and activate another \(co-\)routine, it simply pushes a partial c\ontinuation to save its state, then )Tj
0 -1.2 TD
(captures the value of the continuation register in some way, so that it \can be restored later. To resume a )Tj
T*
(suspended routine, the continuation chain is restored and the top partia\l continuation is popped into the )Tj
T*
(system state registers. Alternation between coroutines is thus accomplis\hed by saving and restoring the )Tj
T*
(routines' continuations. )Tj
0 -2.557 TD
(Note that in this case, we can have two \(or more\) trees of continuatio\ns that represent the course of the )Tj
0 -1.2 TD
(computation, and that control flow can alternate back and forth between \trees. Usually, computations are )Tj
T*
(structured so that most of the work is done in the usual depth-first pro\cedure calling and returning, with )Tj
T*
(occasional jumps from one routine's depth-first activity to another's. )Tj
0 -2.562 TD
(Another use of continuations is to implement )Tj
/T1_1 1 Tf
(catch)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(throw)Tj
/T1_0 1 Tf
(, which are roughly like setjmp and )Tj
0 -1.2 TD
(longjmp in C. The idea is that you may want to abort a computation witho\ut going through the normal )Tj
T*
(nested procedure returns. In a normal stack-based lagnuage \(without con\tinuations\), this is usually )Tj
T*
(accomplished by storing a pointer into the stack before starting the abo\rtable computation. If it is )Tj
T*
(necessary to abort the computation, all of the activation records above \the point of call can be ignored, )Tj
T*
(and the stack pointer can be restored to that point, just as though all \of the invocations above it had )Tj
T*
(returned normally. )Tj
0 -2.562 TD
(This can be implemented with )Tj
/T1_1 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
( by saving the continuation )Tj
0 -1.2 TD
(at the point where an abortable computation is begun. Anywhere within th\at computation, that )Tj
T*
(continuation may be restored \(clobbering the "normal" value of the cont\inuation register, etc.\) to resume )Tj
T*
(from that point. )Tj
0 -2.562 TD
(But )Tj
/T1_1 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
( is more powerful than coroutines or catch and throw. )Tj
0 -1.2 TD
(Not only can we escape "downward" from a computation \(by popping multip\le partial continuatons at )Tj
T*
(once without actually returning through them\), we can also escape "upwa\rds" )Tj
/T1_2 1 Tf
(back into)Tj
/T1_0 1 Tf
( a computation )Tj
T*
(that we bailed out of before. This can be useful in implementing )Tj
/T1_2 1 Tf
(exception handling)Tj
/T1_0 1 Tf
(, where we may )Tj
T*
(want to transfer control to a special coroutine that may "fix up" an err\or that was detected, but then )Tj
T*
(resume the procedure that encountered the error, after the problem is fi\xed. )Tj
/T1_1 1 Tf
0 -2.562 TD
(call-with-current-continuation)Tj
/T1_0 1 Tf
( can also be used to implement )Tj
/T1_2 1 Tf
(backtracking)Tj
/T1_0 1 Tf
(, where the )Tj
0 -1.2 TD
(control flow backs up and re-executes from some saved continuation. In t\his case, we may save the )Tj
T*
(continuation for some computation, but go ahead and return through it no\rmally. Later, we may restore )Tj
T*
(the saved continuation and return through it again. )Tj
0 -2.557 TD
(Note that in general, continuations in Scheme can be used )Tj
/T1_2 1 Tf
(multiple)Tj
/T1_0 1 Tf
( times. The essential idea is that rather )Tj
0 -1.2 TD
(than using a stack, which dictates a depth-first call graph, Scheme allo\ws you to view the call graph AS )Tj
T*
(A GRAPH, which may contain cycles, even directed cycles \(which represen\t bactracking\). )Tj
0 -2.562 TD
(The syntax of )Tj
/T1_1 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
( is fairly ugly, but for some good reasons; in )Tj
0 -1.2 TD
(its raw form, it is very powerful, but correspondingly hard to use. Typi\cally, it is encapsulated in macros )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_141.html \(2 of 6\)1\1/3/2006 9:16:25 PM)Tj
ET
EMC 

endstreamendobj5831 0 obj<</Length 4626>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - call-with-current-con\tinuation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(or other procedures to implement other, higher-level control constructs.\ )Tj
/T1_1 1 Tf
0 -2.562 TD
(call-with-current-continuation)Tj
/T1_0 1 Tf
( is itself a normal first-class procedure, which encapsulates )Tj
0 -1.2 TD
(the very low-level continuation munging abilities in something like a ci\vilized package. Since it's a first-)Tj
T*
(class procedure, you can write higher-order procedures that treat it lik\e data, or call it, or both. )Tj
/T1_1 1 Tf
0 -2.562 TD
(call-with-current-continuation)Tj
/T1_0 1 Tf
( is a procedure of exactly one argument, which is another )Tj
0 -1.2 TD
(procedure to execute after the current continuation has been captured. T\he current continuation will be )Tj
T*
(passed to that procedure, which can use it \(or not\) as it pleases. )Tj
0 -2.557 TD
(The captured continuation is itself packaged up as a procedure, also of \one argument. That's so that you )Tj
0 -1.2 TD
(can't muck around with the continuation itself in any data-structure-lik\e way. There are only two things )Tj
T*
(you can do with captured continuations--capture them and resume them. Co\ntinuations are captured by )Tj
0 -1.205 TD
(executing )Tj
/T1_1 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
(, which creates an )Tj
/T1_2 1 Tf
(escape procedure)Tj
/T1_0 1 Tf
(. They are )Tj
0 -1.2 TD
(resumed by calling the escape procedure. When called, the escape procedu\re abandons whatever )Tj
T*
(computation is going on, restores the saved continuation, and resumes ex\ecuting the saved computation )Tj
0 -1.205 TD
(at the point where )Tj
/T1_1 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
( occurred. )Tj
0 -2.562 TD
(Note that )Tj
/T1_1 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
( is a procedure of one argument. We'll call that )Tj
0 -1.2 TD
(procedure the )Tj
/T1_2 1 Tf
(abortable)Tj
/T1_0 1 Tf
( procedure. The abortable procedure must )Tj
/T1_2 1 Tf
(also)Tj
/T1_0 1 Tf
( be a procedure of exactly one )Tj
T*
(argument. \(If you want to call a procedure that takes a bunch of argume\nts, and still make it abortable )Tj
0 -1.205 TD
(using )Tj
/T1_1 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
(, you have to use a trick I'll describe below.\) )Tj
0 -2.557 TD
(The abortable procedure's argument is the escape procedure that encapsul\ates the captured continuation. )Tj
/T1_1 1 Tf
0 -2.562 TD
(call-with-current-continuation)Tj
/T1_0 1 Tf
( does the following: )Tj
/T1_3 1 Tf
7 0 0 7 35.713 284.5038 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 284.5038 Tm
(Creates an escape procedure that captures the current continuation. If c\alled, this procedure will )Tj
0 -1.205 TD
(restore the continuation at the point of call to )Tj
/T1_1 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
(. )Tj
/T1_3 1 Tf
7 0 0 7 35.713 250.8364 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 50 250.8364 Tm
(Calls the procedure passed as its \(call-with-current-continuation's\) a\rgument, handing it the )Tj
0 -1.2 TD
(escape procedure as )Tj
/T1_2 1 Tf
(its)Tj
/T1_0 1 Tf
( argument. )Tj
-2.857 -2.557 Td
(If and when the escape procedure is called, it restores the continuation\ captured at the point of call to )Tj
/T1_1 1 Tf
0 -1.205 TD
(call-with-current-continuation)Tj
/T1_0 1 Tf
(. We refer to this as a )Tj
/T1_2 1 Tf
(nonlocal return)Tj
/T1_0 1 Tf
(---from the point of )Tj
0 -1.205 TD
(view of the caller of )Tj
/T1_1 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
(, it looks as though )Tj
/T1_1 1 Tf
(call-with-)Tj
T*
(current-continuation)Tj
/T1_0 1 Tf
( had returned normally. )Tj
0 -2.557 TD
(The \(abortable\) procedure we want to call must take one argument, whic\h is the escape procedure that )Tj
0 -1.205 TD
(can resume the computation just beyond the call to )Tj
/T1_1 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(As if this weren't cryptic enough, the escape procedure is )Tj
/T1_2 1 Tf
(also)Tj
/T1_0 1 Tf
( a procedure of exactly one argument. )Tj
0 -1.2 TD
(When the escape procedure is used to perform a nonlocal return, it retur\ns a value as the result of the call )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_141.html \(3 of 6\)1\1/3/2006 9:16:25 PM)Tj
ET
EMC 

endstreamendobj5832 0 obj<</Length 3416>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - call-with-current-con\tinuation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9082 Tm
(to )Tj
/T1_1 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(The argument to the escape procedure is the value that will be returned \as the value of the call. Note that )Tj
0 -1.2 TD
(if the escape procedure is )Tj
/T1_2 1 Tf
(not)Tj
/T1_0 1 Tf
( called, and the abortable procedure returns normally, the value it retu\rns is )Tj
0 -1.205 TD
(returned as the value of the call to )Tj
/T1_1 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(A call to )Tj
/T1_1 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
( therefore can return in two ways. Either the )Tj
0 -1.205 TD
(abortable procedure returns normally, and )Tj
/T1_1 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
( simply returns )Tj
0 -1.2 TD
(that value, )Tj
/T1_2 1 Tf
(or)Tj
/T1_0 1 Tf
( the escape procedure can be called, and its argument is returned as the\ value of the call to )Tj
/T1_1 1 Tf
0 -1.205 TD
(call-with-current-continuation)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Consider the following example, where I've given line numbers to refer t\o later: )Tj
/T1_1 1 Tf
0 -2.562 TD
( 0: \(define some-flag #f\))Tj
0 -2.4 TD
( 1: \(define \(my-abortable-proc escape-proc\))Tj
0 -1.2 TD
( 2:   \(display "in my-abortable-proc"\))Tj
T*
( 3:   \(if some-flag)Tj
T*
( 4:       \(escape-proc "ABORTED"\)\))Tj
T*
( 5:   \(display "still in my-abortable-proc"\))Tj
T*
( 6:   "NOT ABORTED"\))Tj
0 -2.4 TD
( 7: \(define \(my-resumable-proc\))Tj
0 -1.2 TD
( 8:   \(do-something\))Tj
T*
( 9:   \(display \(call-with-current-continuation my-abortable-proc\)\))Tj
T*
(10:   \(do-some-more\)\))Tj
0 -2.4 TD
(11: \(my-resumable-procedure\))Tj
/T1_0 1 Tf
0 -2.557 TD
(At line 11, we call )Tj
/T1_1 1 Tf
(my-resumable-procedure)Tj
/T1_0 1 Tf
(. It calls )Tj
/T1_1 1 Tf
(do-something)Tj
/T1_0 1 Tf
(, and then calls display. )Tj
0 -1.205 TD
(But before it calls display it has to evaluate its argument, which is th\e call to )Tj
/T1_1 1 Tf
(call-with-current-)Tj
0 -1.205 TD
(continuation)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(call-with-current-continuation)Tj
/T1_0 1 Tf
( saves the continuation at that point, and packages it up as )Tj
0 -1.2 TD
(an escape procedure. \(Line 9\) The escape procedure, if called, will re\turn its argument as the value of the )Tj
/T1_1 1 Tf
0 -1.205 TD
(call-with-current-continuation)Tj
/T1_0 1 Tf
( form. )Tj
0 -2.557 TD
(That is, if the escape procedure is called, it will resume execution of \the display procedure, which prints )Tj
0 -1.2 TD
(that value, and then execution will continue, calling do-some-more. )Tj
0 -2.562 TD
(Once )Tj
/T1_1 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
( has created the escape procedure, it calls its )Tj
0 -1.205 TD
(argument, )Tj
/T1_1 1 Tf
(my-abortable-proc)Tj
/T1_0 1 Tf
(, with the escape procedure as )Tj
/T1_2 1 Tf
(its)Tj
/T1_0 1 Tf
( argument. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_141.html \(4 of 6\)1\1/3/2006 9:16:25 PM)Tj
ET
EMC 

endstreamendobj5833 0 obj<</Length 3561>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - call-with-current-con\tinuation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 740.8994 Tm
(my-abortable-proc)Tj
/T1_0 1 Tf
( then displays \(prints\) )Tj
/T1_1 1 Tf
("in my-abortable-proc.")Tj
/T1_0 1 Tf
( Then it checks )Tj
/T1_1 1 Tf
(some-)Tj
0 -1.205 TD
(flag)Tj
/T1_0 1 Tf
(, which is false, and does )Tj
/T1_2 1 Tf
(not)Tj
/T1_0 1 Tf
( execute the consequent of the )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(---that is, it doesn't execute the )Tj
0 -1.205 TD
(escape procedure. It continues executing, displaying )Tj
/T1_1 1 Tf
("still inmy-abortable-proc.")Tj
/T1_0 1 Tf
( It then )Tj
0 -1.205 TD
(evaluates its last body form, the string )Tj
/T1_1 1 Tf
("NOT ABORTED")Tj
/T1_0 1 Tf
(, which evaluates to itself, and returns that as )Tj
0 -1.2 TD
(the normal return value of the procedure call. )Tj
0 -2.562 TD
(At this point, the value returned from my-abortable-proc is printed by t\he call to )Tj
/T1_1 1 Tf
(display)Tj
/T1_0 1 Tf
( in line 9. )Tj
T*
(But suppose we set )Tj
/T1_1 1 Tf
(some-flag)Tj
/T1_0 1 Tf
( to )Tj
/T1_1 1 Tf
(#t)Tj
/T1_0 1 Tf
(, instead of )Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Then when control reaches line 3, the )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( )Tj
/T1_2 1 Tf
(does)Tj
/T1_0 1 Tf
( evaluate its consequent. This calls the escape procedure, )Tj
0 -1.205 TD
(handing it the string )Tj
/T1_1 1 Tf
("ABORTED")Tj
/T1_0 1 Tf
( as its argument. The escape procedure resumes the captured )Tj
0 -1.205 TD
(continuation, returning control to the caller of )Tj
/T1_1 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
(, without )Tj
0 -1.2 TD
(executing lines 5 and 6. )Tj
0 -2.562 TD
(The escape procedure returns its argument, the string )Tj
/T1_1 1 Tf
("ABORTED")Tj
/T1_0 1 Tf
( as the value of the )Tj
/T1_1 1 Tf
(call-with-)Tj
0 -1.205 TD
(current-continuation)Tj
/T1_0 1 Tf
( form. It restores the execution of my-resumable-proc at line 9, handing\ )Tj
T*
(display the string )Tj
/T1_1 1 Tf
("ABORTED")Tj
/T1_0 1 Tf
( \(as the value of its argument form\). At this point )Tj
/T1_1 1 Tf
("ABORTED")Tj
/T1_0 1 Tf
( is )Tj
0 -1.2 TD
(displayed, and execution continues at line 10. )Tj
0 -2.557 TD
(Often we want to use call-with-current-continuation to call some procedu\re that takes arguments other )Tj
0 -1.2 TD
(than an escape procedure. For example, we might have a procedure that ta\kes two arguments besides the )Tj
T*
(escape procedure, thus: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(foo x y escape\))Tj
0 -1.2 TD
(   ...)Tj
T*
(   \(if \(= x 0\))Tj
T*
(       \(escape 'ERROR\)\))Tj
T*
(   ...\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(We can fix this by )Tj
/T1_2 1 Tf
(currying)Tj
/T1_0 1 Tf
( the procedure, making it a procedure of one argument. )Tj
0 -2.557 TD
([ An earlier chapter should have a discussion of currying! ] )Tj
0 -2.557 TD
(Suppose we want to pass 0 and 1 as the values of x and y, as well as han\ding foo the escape procedure. )Tj
0 -1.2 TD
(Rather than saying )Tj
/T1_1 1 Tf
0 -2.562 TD
(   \(call-with-current-continuation foo\))Tj
/T1_0 1 Tf
0 -2.552 TD
(which doesn't pass enough arguments to the call to foo, we say )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_141.html \(5 of 6\)1\1/3/2006 9:16:25 PM)Tj
ET
EMC 

endstreamendobj5834 0 obj<</Length 2641>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - call-with-current-con\tinuation)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(   \(call-with-current-continuation \(lambda \(escape\) \(foo 0 1 escape\\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(The lambda expression creates a closure that does exactly what we want. \It will call foo with arguments )Tj
0 -1.205 TD
(0, 1, and the escape procedure created by )Tj
/T1_1 1 Tf
(call-with-current-continuation)Tj
/T1_0 1 Tf
(. )Tj
ET
0 0 1 RG
1.628 w 10 M 0 j 0 J []0 d 
10 655.663 m
416.069 655.663 l
S
0 0 1 rg
BT
/T1_2 1 Tf
19.3846 0 0 19.3846 10 660.5475 Tm
(Implementing a Better Read-Eval-Print Loop)Tj
ET
10 611.401 m
298.656 611.401 l
S
BT
/T1_2 1 Tf
19.3846 0 0 19.3846 10 616.2859 Tm
(Implementing Catch and Throw)Tj
ET
10 567.139 m
263.144 567.139 l
S
BT
/T1_2 1 Tf
19.3846 0 0 19.3846 10 572.0244 Tm
(Implementing Backtracking)Tj
ET
10 522.878 m
243.72 522.878 l
S
BT
/T1_2 1 Tf
19.3846 0 0 19.3846 10 527.7629 Tm
(Implementing Coroutines)Tj
ET
10 478.616 m
371.911 478.616 l
S
BT
/T1_2 1 Tf
19.3846 0 0 19.3846 10 483.5013 Tm
(Implementing Cooperative Multitasking)Tj
ET
10 434.355 m
147.883 434.355 l
S
0.977 w 
147.883 436.309 m
496.806 436.309 l
S
BT
/T1_2 1 Tf
19.3846 0 0 19.3846 10 439.2398 Tm
(Caveats about )Tj
/T1_3 1 Tf
(call-with-current-continuation)Tj
ET
0.5 0.5 0.5 rg
10 402.721 m
10 404.721 l
602 404.721 l
601 403.721 l
11 403.721 l
11 403.721 l
h
f
0.875 0.875 0.875 rg
602 404.721 m
602 402.721 l
10 402.721 l
11 403.721 l
601 403.721 l
601 403.721 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 383.6964 Tm
(Go to the )Tj
ET
0.706 w 
65.608 381.58 m
88.162 381.58 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 383.6964 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 381.58 m
143.378 381.58 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 383.6964 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
150.378 381.58 m
174.486 381.58 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 150.378 383.6964 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
181.486 381.58 m
200.932 381.58 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 181.486 383.6964 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
251.094 381.58 m
343.634 381.58 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 383.6964 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_141.html \(6 of 6\)1\1/3/2006 9:16:25 PM)Tj
ET
EMC 

endstreamendobj5835 0 obj(An Introduction to Scheme and its Implementation - call-with-current-continuation)endobj5836 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_141.html)/S 700 0 R>>endobj5837 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_141.html)endobj5838 0 obj(dx#jÄÃ∏ÓÖ∆ËâΩ∫ )endobj5839 0 obj<</TS(D:20061104051625)/ID 5838 0 R/CT(text/html)/O[5790 0 R 5800 0 R 5802 0 R 5804 0 R 5806 0 R 5809 0 R]/S/SPS/T 5835 0 R/TID 5841 0 R/SI 5840 0 R>>endobj5840 0 obj<</TS(D:20061104051625)/AU 5837 0 R>>endobj5841 0 obj(‘†'H6Øêk¯…ÆEPŸÙ)endobj5842 0 obj<</Parent 710 0 R/Next 6148 0 R/Dest[5790 0 R/XYZ 0 792 null]/Prev 5787 0 R/SE 5789 0 R/Title(An Introduction to Scheme and its Implementation - call-with-current-continuation)>>endobj5843 0 obj<</TextDecorationType/Underline/O/Layout>>endobj5844 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 5861 0 R/Type/MCR>><</MCID 0/Pg 5866 0 R/Type/MCR>><</MCID 0/Pg 5868 0 R/Type/MCR>><</MCID 0/Pg 5876 0 R/Type/MCR>><</MCID 0/Pg 5881 0 R/Type/MCR>><</MCID 0/Pg 5888 0 R/Type/MCR>><</MCID 0/Pg 5895 0 R/Type/MCR>><</MCID 0/Pg 5900 0 R/Type/MCR>><</MCID 0/Pg 5903 0 R/Type/MCR>><</MCID 0/Pg 5912 0 R/Type/MCR>><</MCID 0/Pg 5918 0 R/Type/MCR>><</MCID 0/Pg 5926 0 R/Type/MCR>><</MCID 0/Pg 5929 0 R/Type/MCR>><</MCID 0/Pg 5936 0 R/Type/MCR>><</MCID 0/Pg 5943 0 R/Type/MCR>><</MCID 0/Pg 5950 0 R/Type/MCR>><</MCID 0/Pg 5953 0 R/Type/MCR>><</MCID 0/Pg 5959 0 R/Type/MCR>><</MCID 0/Pg 5963 0 R/Type/MCR>><</MCID 0/Pg 5969 0 R/Type/MCR>><</MCID 0/Pg 5972 0 R/Type/MCR>><</MCID 0/Pg 5975 0 R/Type/MCR>><</MCID 0/Pg 5978 0 R/Type/MCR>><</MCID 0/Pg 5989 0 R/Type/MCR>><</MCID 0/Pg 5992 0 R/Type/MCR>><</MCID 0/Pg 5995 0 R/Type/MCR>><</MCID 0/Pg 6001 0 R/Type/MCR>><</MCID 0/Pg 6007 0 R/Type/MCR>><</MCID 0/Pg 6011 0 R/Type/MCR>><</MCID 0/Pg 6017 0 R/Type/MCR>><</MCID 0/Pg 6023 0 R/Type/MCR>><</MCID 0/Pg 6035 0 R/Type/MCR>><</MCID 0/Pg 6047 0 R/Type/MCR>><</MCID 0/Pg 6056 0 R/Type/MCR>><</MCID 0/Pg 6062 0 R/Type/MCR>><</MCID 0/Pg 6065 0 R/Type/MCR>><</MCID 0/Pg 6068 0 R/Type/MCR>><</MCID 0/Pg 6078 0 R/Type/MCR>><</MCID 0/Pg 6082 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 5845 0 R>>endobj5845 0 obj<</Annots 5848 0 R/Parent 5869 0 R/ID 6144 0 R/StructParents 361/Contents 6101 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5846 0 obj[5844 0 R]endobj5847 0 obj<</Rect[62.5812 750.726 84.0947 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj5848 0 obj[5847 0 R 5849 0 R 5850 0 R 5851 0 R 5852 0 R 5856 0 R 5858 0 R 5860 0 R]endobj5849 0 obj<</Rect[90.7717 750.726 136.763 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5790 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_141.html)/S/URI>>/Border[0 0 0]>>endobj5850 0 obj<</Rect[143.44 750.726 166.436 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5851 0 obj<</Rect[173.113 750.726 191.662 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj5852 0 obj<</Rect[239.51 750.726 327.781 765.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj5853 0 obj[5845 0 R/XYZ 0 733.175 null]endobj5854 0 obj<</Limits[(fo\\\\Öq0v%O›/!Í¿VÀIDX88)(ÖÏÿß\r\\ÛïVc˜íû∑rFOOT6)]/Names[]>>endobj5855 0 obj<</Limits[(ÖÏÿß\r\\ÛïVc˜íû∑rFOOT7)(õªÖ\(ùO¯»'≈´ÍIDX29)]/Names[(ÖÏÿß\r\\ÛïVc˜íû∑rFOOT7)4428 0 R(ÖÏÿß\r\\ÛïVc˜íû∑rFOOT8)4432 0 R(ÖÏÿß\r\\ÛïVc˜íû∑rFOOT9)4434 0 R(ÖÏÿß\r\\ÛïVc˜íû∑rIDX124)4394 0 R(ÖÏÿß\r\\ÛïVc˜íû∑rIDX125)4395 0 R(ÖÏÿß\r\\ÛïVc˜íû∑rIDX126)4398 0 R(ÖÏÿß\r\\ÛïVc˜íû∑rIDX127)4407 0 R(ÖÏÿß\r\\ÛïVc˜íû∑rIDX128)4408 0 R(ÖÏÿß\r\\ÛïVc˜íû∑rIDX129)4412 0 R(ÖÏÿß\r\\ÛïVc˜íû∑rIDX130)4425 0 R(ÖÏÿß\r\\ÛïVc˜íû∑rSEC135)4392 0 R(ÖÏÿß\r\\ÛïVc˜íû∑rSEC136)4396 0 R(ÖÏÿß\r\\ÛïVc˜íû∑rSEC137)4417 0 R(ÖÏÿß\r\\ÛïVc˜íû∑rSEC138)4422 0 R(ÜıLjÕ3‡áwîä≤SEC132)4301 0 R(áï\(0∆ËZ◊˝4¨ÂOf∂SEC149)4624 0 R(çkÓ\\0Sß∏√YÈŸm∫jSEC102)3716 0 R(é+Ï|Ÿ"géü&t<ùæFOOT11)5100 0 R(é+Ï|Ÿ"géü&t<ùæSEC181)5098 0 R(é+Ï|Ÿ"géü&t<ùæSEC182)5107 0 R(ê“Ìƒ4üÔË–Z5ÖûSEC254)5729 0 R(íÅ¥çÕ◊&¥ãÚâLº‰IDX48)2229 0 R(íÅ¥çÕ◊&¥ãÚâLº‰IDX49)2230 0 R(íÅ¥çÕ◊&¥ãÚâLº‰IDX50)2231 0 R(íÅ¥çÕ◊&¥ãÚâLº‰SEC56)2227 0 R(òZè+áI⁄øWº÷i‰osëIDX100)3612 0 R(òZè+áI⁄øWº÷i‰osëIDX99)3607 0 R(òZè+áI⁄øWº÷i‰osëSEC99)3605 0 R(ö°∏Hæ≠¬[ePf…ÏSEC1)723 0 R(õß•ãæ‡rãÙ=¿c¨opBIDX57)2382 0 R(õß•ãæ‡rãÙ=¿c¨opBSEC61)2380 0 R(õªÖ\(ùO¯»'≈´ÍIDX28)1801 0 R(õªÖ\(ùO¯»'≈´ÍIDX29)1802 0 R]>>endobj5856 0 obj<</Rect[9.53865 688.108 316.778 712.688]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC271)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC271)/S/URI>>/Border[0 0 0]>>endobj5857 0 obj[5845 0 R/XYZ 0 483.841 null]endobj5858 0 obj<</Rect[9.53865 462.548 187.286 481.992]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC272)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC272)/S/URI>>/Border[0 0 0]>>endobj5859 0 obj[5845 0 R/XYZ 0 373.325 null]endobj5860 0 obj<</Rect[9.53865 355.422 177.354 371.784]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC273)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC273)/S/URI>>/Border[0 0 0]>>endobj5861 0 obj<</Annots 5865 0 R/Parent 5869 0 R/ID 6144 0 R/StructParents 362/Contents 6102 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5862 0 obj[5844 0 R]endobj5863 0 obj[5861 0 R/XYZ 0 732.221 null]endobj5864 0 obj<</Rect[9.53865 714.317 201.591 730.68]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC274)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC274)/S/URI>>/Border[0 0 0]>>endobj5865 0 obj[5864 0 R]endobj5866 0 obj<</Parent 5869 0 R/ID 6144 0 R/StructParents 363/Contents 6103 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5867 0 obj[5844 0 R]endobj5868 0 obj<</Annots 5873 0 R/Parent 5901 0 R/ID 6144 0 R/StructParents 364/Contents 6104 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5869 0 obj<</Parent 5937 0 R/Count 5/Type/Pages/Kids[5806 0 R 5809 0 R 5845 0 R 5861 0 R 5866 0 R]>>endobj5870 0 obj[5844 0 R]endobj5871 0 obj[5868 0 R/XYZ 0 208.93 null]endobj5872 0 obj<</Rect[9.53865 187.637 302.37 207.081]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC275)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC275)/S/URI>>/Border[0 0 0]>>endobj5873 0 obj[5872 0 R 5875 0 R]endobj5874 0 obj[5868 0 R/XYZ 0 132.562 null]endobj5875 0 obj<</Rect[9.53865 111.269 286.949 130.713]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC276)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC276)/S/URI>>/Border[0 0 0]>>endobj5876 0 obj<</Annots 5880 0 R/Parent 5901 0 R/ID 6144 0 R/StructParents 365/Contents 6105 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5877 0 obj[5844 0 R]endobj5878 0 obj[5876 0 R/XYZ 0 220.437 null]endobj5879 0 obj<</Rect[9.53865 199.143 420.523 218.588]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC277)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC277)/S/URI>>/Border[0 0 0]>>endobj5880 0 obj[5879 0 R]endobj5881 0 obj<</Annots 5885 0 R/Parent 5901 0 R/ID 6144 0 R/StructParents 366/Contents 6106 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5882 0 obj[5844 0 R]endobj5883 0 obj[5881 0 R/XYZ 0 430.004 null]endobj5884 0 obj<</Rect[9.53865 412.101 111.436 428.463]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC278)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC278)/S/URI>>/Border[0 0 0]>>endobj5885 0 obj[5884 0 R 5887 0 R]endobj5886 0 obj[5881 0 R/XYZ 0 162.615 null]endobj5887 0 obj<</Rect[9.53865 144.712 347.773 161.074]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC279)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC279)/S/URI>>/Border[0 0 0]>>endobj5888 0 obj<</Annots 5892 0 R/Parent 5901 0 R/ID 6144 0 R/StructParents 367/Contents 6107 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5889 0 obj[5844 0 R]endobj5890 0 obj[5888 0 R/XYZ 0 483.388 null]endobj5891 0 obj<</Rect[9.53865 465.485 183.317 481.847]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC280)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC280)/S/URI>>/Border[0 0 0]>>endobj5892 0 obj[5891 0 R 5894 0 R]endobj5893 0 obj[5888 0 R/XYZ 0 148.024 null]endobj5894 0 obj<</Rect[9.53865 130.121 112.283 146.483]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC281)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC281)/S/URI>>/Border[0 0 0]>>endobj5895 0 obj<</Annots 5899 0 R/Parent 5901 0 R/ID 6144 0 R/StructParents 368/Contents 6108 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 766 0 R/T1_2 736 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5896 0 obj[5844 0 R]endobj5897 0 obj[5895 0 R/XYZ 0 585.898 null]endobj5898 0 obj<</Rect[9.53865 567.994 270.684 584.357]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC282)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC282)/S/URI>>/Border[0 0 0]>>endobj5899 0 obj[5898 0 R]endobj5900 0 obj<</Parent 5930 0 R/ID 6144 0 R/StructParents 369/Contents 6109 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5901 0 obj<</Parent 5937 0 R/Count 5/Type/Pages/Kids[5868 0 R 5876 0 R 5881 0 R 5888 0 R 5895 0 R]>>endobj5902 0 obj[5844 0 R]endobj5903 0 obj<</Annots 5907 0 R/Parent 5930 0 R/ID 6144 0 R/StructParents 370/Contents 6110 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5904 0 obj[5844 0 R]endobj5905 0 obj[5903 0 R/XYZ 0 617.883 null]endobj5906 0 obj<</Rect[9.53865 596.59 133.831 616.034]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC283)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC283)/S/URI>>/Border[0 0 0]>>endobj5907 0 obj[5906 0 R 5909 0 R 5911 0 R]endobj5908 0 obj[5903 0 R/XYZ 0 575.664 null]endobj5909 0 obj<</Rect[9.53865 557.76 397.928 574.123]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC284)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC284)/S/URI>>/Border[0 0 0]>>endobj5910 0 obj[5903 0 R/XYZ 0 372.503 null]endobj5911 0 obj<</Rect[9.53865 354.6 159.356 370.962]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC285)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC285)/S/URI>>/Border[0 0 0]>>endobj5912 0 obj<</Annots 5917 0 R/Parent 5930 0 R/ID 6144 0 R/StructParents 371/Contents 6111 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5913 0 obj<</Length 4941>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8994 Tm
(Go to the )Tj
ET
0 0 1 RG
0.673 w 10 M 0 j 0 J []0 d 
62.581 752.88 m
84.095 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 62.5812 754.8994 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
90.772 752.88 m
136.763 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 90.7717 754.8994 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
143.44 752.88 m
166.436 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 143.4404 754.8994 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
173.113 752.88 m
191.662 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 173.1132 754.8994 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
239.51 752.88 m
327.781 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 239.5099 754.8994 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
9.539 739.852 m
9.539 741.759 l
602.461 741.759 l
601.507 740.805 l
10.493 740.805 l
10.493 740.805 l
h
f
0.875 0.875 0.875 rg
602.461 741.759 m
602.461 739.852 l
9.539 739.852 l
10.493 740.805 l
601.507 740.805 l
601.507 740.805 l
h
f
1.985 w 
9.539 688.395 m
316.778 688.395 l
S
0 0 1 rg
BT
/T1_1 1 Tf
23.6265 0 0 23.6265 9.5387 694.3492 Tm
(A Simple Scheme Compiler)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 655.1984 Tm
([ The example compiler in compiler.scm is the skeleton of a simple compi\ler for a subset of Scheme, whose )Tj
0 -1.2 TD
(structure corresponds fairly closely to the example interpreter in eval.\scm. ] )Tj
0 -2.557 TD
([ this is out of place, or needs more introductory intro first: ] )Tj
0 -2.562 TD
(Where the interpreter has a basic dispatch routine called )Tj
/T1_2 1 Tf
(eval)Tj
/T1_0 1 Tf
(, which can evaluate any kind of expression, )Tj
0 -1.205 TD
(the compiler has a basic dispatch routine called )Tj
/T1_2 1 Tf
(compile)Tj
/T1_0 1 Tf
(, which can compile any kind of expression. Like )Tj
/T1_2 1 Tf
0 -1.205 TD
(eval)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(compile)Tj
/T1_0 1 Tf
( examines the expression to be compiled, and dispatches to an appropriat\e routine for that )Tj
0 -1.2 TD
(kind of expression. The routine that compiles an expression may recursiv\ely call compile to compile )Tj
0 -1.205 TD
(subexpressions, just as the interpretive evaluator may call )Tj
/T1_2 1 Tf
(eval)Tj
/T1_0 1 Tf
( recursively to evaluate subexpressions. )Tj
ET
1.553 w 
9.539 462.98 m
187.286 462.98 l
S
0 0 1 rg
BT
/T1_1 1 Tf
18.4903 0 0 18.4903 9.5387 467.6397 Tm
(What is a Compiler?)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 430.1519 Tm
([ This is somewhat redundant with earlier stuff, but more concrete. Shou\ld I cut it down?] )Tj
0 -2.557 TD
(Before answering what a compiler is, let's backtrack and talk about inte\rpreters. )Tj
ET
1.294 w 
9.539 355.941 m
177.354 355.941 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 359.8236 Tm
(What is an Interpreter?)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 323.3337 Tm
(An interpreter really does two things: )Tj
1.607 -2.557 Td
(1.  )Tj
(it examines expressions and dispatches to the appropriate code for that \kind of expression )Tj
0 -1.2 TD
(2.  )Tj
(it performs the actual operations specified by the program )Tj
-1.607 -2.557 Td
(Typically, most of the work done by an interpreter is in the first categ\ory--our example interpreter, for )Tj
T*
(example, spends a lot of time examining expressions to see if they're se\lf-evaluating or symbols or lists, and )Tj
T*
(dispatching to the appropriate procedure to evaluate that kind of expres\sion. This dispatching is interleaved )Tj
T*
(with the actual work that evaluates the expressions. )Tj
0 -2.557 TD
(One of the problems with an interpreter is that every time an expression\ is encountered, it is analyzed again. )Tj
0 -1.205 TD
(Consider an expression like )Tj
/T1_2 1 Tf
(\(+ foo bar\))Tj
/T1_0 1 Tf
( embedded in a loop that iterates many times. Our interpreter will )Tj
0 -1.2 TD
(encounter this expression at each iteration of the loop, and at each ite\ration of the loop it will do mostly the )Tj
0 -1.205 TD
(same things: it will examine the expression and find out it's a list, th\en call )Tj
/T1_2 1 Tf
(eval-list)Tj
/T1_0 1 Tf
(, which will further )Tj
0 -1.205 TD
(examine it to find out it's a combination \(not a special form or macro\)\, and call )Tj
/T1_2 1 Tf
(eval-combo)Tj
/T1_0 1 Tf
(. Then )Tj
/T1_2 1 Tf
(eval-)Tj
0 -1.205 TD
(combo)Tj
/T1_0 1 Tf
( will call )Tj
/T1_2 1 Tf
(eval)Tj
/T1_0 1 Tf
( recursively to evaluate the subexpressions, and each call to )Tj
/T1_2 1 Tf
(eval)Tj
/T1_0 1 Tf
( will examine the )Tj
0 -1.2 TD
(subexpressions and dispatch to the appropriate specialized evaluation ro\utine. Only then do we start actually )Tj
0 -1.205 TD
(computing the value of the expression, by computing the values of the su\bexpressions )Tj
/T1_2 1 Tf
(+)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
(, and )Tj
/T1_2 1 Tf
(bar)Tj
/T1_0 1 Tf
(, i.e., )Tj
ET
EMC 
Q

endstreamendobj5914 0 obj[5844 0 R]endobj5915 0 obj[5912 0 R/XYZ 0 599.696 null]endobj5916 0 obj<</Rect[9.53865 581.792 97.7374 598.155]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC286)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC286)/S/URI>>/Border[0 0 0]>>endobj5917 0 obj[5916 0 R]endobj5918 0 obj<</Annots 5923 0 R/Parent 5930 0 R/ID 6144 0 R/StructParents 372/Contents 6112 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5919 0 obj<</Length 3333>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8994 Tm
(looking up the values of those variables. )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 714.836 m
201.591 714.836 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 718.7194 Tm
(OK, so what's a compiler?)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 682.2295 Tm
(We would rather factor out most of this redundant work, and examine the \expression just once to see what to )Tj
0 -1.205 TD
(do. Then each time we "evaluate" the expressions, we can just do those t\hings. For the expression )Tj
/T1_2 1 Tf
(\(+ foo )Tj
0 -1.205 TD
(bar\))Tj
/T1_0 1 Tf
(, the set of actions an interpreter will execute \(leaving out all of th\e analysis and dispatching is\): )Tj
/T1_2 1 Tf
0 -2.562 TD
(     look up variable bar)Tj
0 -1.2 TD
(     look up variable foo)Tj
T*
(     look up variable +)Tj
T*
(     apply)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Here we've assumed that we evaluate subexpressions of a combination fr\om right-to-left, rather than the )Tj
0 -1.2 TD
(more intuitive left-to-right order; that's a legal way to do it in Schem\e an it turns out to be handy in a very )Tj
T*
(simple compiler, as we'll explain in a minute.\) )Tj
0 -2.557 TD
([ maybe I should change this to do args left-to-right, but the operator \last, like RScheme. ] )Tj
T*
(For code like this, which doesn't have any conditionals in it, we can co\nvert an interpreter into a compiler )Tj
0 -1.2 TD
(very easily. We just modify the interpreter so that instead of actually \evaluating the expressions, it just )Tj
T*
(records what operations it )Tj
/T1_3 1 Tf
(would)Tj
/T1_0 1 Tf
( execute if it were interpreting the expression. I'm intentionally being\ vague )Tj
0 -1.205 TD
(as to how exactly these simple operations \(like )Tj
/T1_2 1 Tf
(look-up-variable)Tj
/T1_0 1 Tf
(\) work, but you should be able to see )Tj
0 -1.2 TD
(that each of them should be translatable into a handful of machine instr\uctions. That's how most compilers )Tj
T*
(work: they first translate a program into an )Tj
/T1_3 1 Tf
(intermediate code)Tj
/T1_0 1 Tf
( representation, like our look-up-variable )Tj
T*
(operations, and then translate that representation into machine instruct\ions. \(In between there may be one or )Tj
T*
(more steps that "optimize" the intermediate code, and each step may repr\esent the code in a different way.\) )Tj
0 -2.557 TD
(So this simple compiler just "pretends" to evaluate the expression, but \whenever it gets to an actual action )Tj
0 -1.2 TD
(\(like looking up a variable, or calling a procedure\), it simply record\s what action it would take if it were just )Tj
0 -1.2 TD
(an interpreter. The result is a list of actions which, if taken, will ha\ve the same effect as interpreting the )Tj
0 -1.2 TD
(expression. )Tj
0 -2.557 TD
(Here's another example: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(let \(\(x 22\))Tj
0 -1.2 TD
(      \(y 15\)\))Tj
T*
(   \(+ x \(* x y\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Supposing that our intermediate code representation is a sequence of lis\ts that represent operations and their )Tj
0 -1.2 TD
(operands, the code that our simple compiler will generate is: )Tj
/T1_2 1 Tf
0 -2.562 TD
(  \(fetch-literal 22\))Tj
0 -1.2 TD
(  \(fetch-literal 15\))Tj
ET
EMC 
Q

endstreamendobj5920 0 obj[5844 0 R]endobj5921 0 obj[5918 0 R/XYZ 0 574.492 null]endobj5922 0 obj<</Rect[9.53865 556.589 200.482 572.952]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC287)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC287)/S/URI>>/Border[0 0 0]>>endobj5923 0 obj[5922 0 R 5925 0 R]endobj5924 0 obj[5918 0 R/XYZ 0 238.742 null]endobj5925 0 obj<</Rect[9.53865 217.449 382.488 236.893]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC288)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC288)/S/URI>>/Border[0 0 0]>>endobj5926 0 obj<</Parent 5930 0 R/ID 6144 0 R/StructParents 373/Contents 6113 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5927 0 obj<</Length 3445>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 753.2878 Tm
(  \(bind x y\))Tj
0 -1.2 TD
(  \(look-up-variable y\))Tj
T*
(  \(look-up-variable x\))Tj
T*
(  \(look-up-variable *\))Tj
T*
(  \(call-procedure\))Tj
T*
(  \(look-up-variable x\))Tj
T*
(  \(call-procedure\))Tj
T*
(  \(unbind\))Tj
/T1_1 1 Tf
0 -2.552 TD
(Later on, we'll talk in more concrete detail about where values are temp\orarily stored when they're looked up, )Tj
0 -1.2 TD
(and various tweaks to make it possible to translate intermediate code in\to smaller and faster sequences of )Tj
T*
(machine instructions. For now just notice that we can string together se\quences of these intermediate code )Tj
T*
(operations, and if we just translate each of them into some machine inst\ructions, we can string those )Tj
T*
(sequences of machine instructions together and get a larger sequence tha\t we can execute to evaluate the )Tj
T*
(whole expression. We can execute it as many times as we want, and all of\ the expression analysis and )Tj
T*
(dispatching will already have been done--the only work done each time it\'s executed is the work that actually )Tj
T*
(binds variables, looks up values, calls procedures, and so on. )Tj
0 -2.562 TD
(It's not much harder to compile conditional expressions like )Tj
/T1_0 1 Tf
(if)Tj
/T1_1 1 Tf
(. When we compile an )Tj
/T1_0 1 Tf
(if)Tj
/T1_1 1 Tf
(, we need to )Tj
0 -1.2 TD
(generate code for the condition expression, the consequent expression, a\nd the alternative expression. \(The )Tj
T*
("consequent" is the code executed if the condition is true, and the "alt\ernative" is the code executed if it's )Tj
T*
(false.\) Then we need to string the code for those expressions together \appropriately with some conditional )Tj
T*
(branches: )Tj
/T1_0 1 Tf
0 -2.562 TD
(   <code for condition>)Tj
0 -1.2 TD
(   \(branch-if-false "else-action-label"\))Tj
T*
(   <code for consequent>)Tj
T*
(   \(branch-unconditionally "end-label"\))Tj
T*
("else-action-label")Tj
T*
(   <code for alternative>)Tj
T*
("end-label")Tj
/T1_1 1 Tf
0 -2.552 TD
(The labels here will actually be translated into the addresses of the co\de they label, and the branches will be )Tj
0 -1.205 TD
(filled in with those addresses. \(We have to be careful to use a unique \pair of new labels for each )Tj
/T1_0 1 Tf
(if)Tj
/T1_1 1 Tf
( we )Tj
0 -1.205 TD
(compile, so or some other trick like that, so that we can nest )Tj
/T1_0 1 Tf
(if)Tj
/T1_1 1 Tf
( expressions and keep their labels straight.\) )Tj
0 -2.557 TD
(\(One way of generating machine code from this representation is to tran\slate each of the statements into a )Tj
0 -1.2 TD
(short sequence of assembly instructions and each label into an assembly \label, stringing them together as )Tj
T*
(shown. Then the assembly code can be assembled into machine code.\) )Tj
0 -2.562 TD
(Note that for an )Tj
/T1_0 1 Tf
(if)Tj
/T1_1 1 Tf
(, the control structure of the compiler is actually simpler than the con\trol structure of an )Tj
0 -1.2 TD
(interpreter. The interpreter will evaluate the condition expression, and\ then decide at run time whether to )Tj
T*
(evaluate the consequent \("then"\) expression or the alternative \("else\"\) expression. The compiler will always )Tj
T*
(compile all three subexpressions, and string them together with conditio\nal branches that will do the deciding )Tj
ET
EMC 
Q

endstreamendobj5928 0 obj[5844 0 R]endobj5929 0 obj<</Annots 5935 0 R/Parent 5960 0 R/ID 6144 0 R/StructParents 374/Contents 6114 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 737 0 R/T1_3 736 0 R/T1_4 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5930 0 obj<</Parent 5937 0 R/Count 5/Type/Pages/Kids[5900 0 R 5903 0 R 5912 0 R 5918 0 R 5926 0 R]>>endobj5931 0 obj<</Length 2104>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8994 Tm
(at run time, based on the runtime value computed by the code for the con\dition expression. )Tj
0 -2.557 TD
(Here's a slightly more complicated example: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(x 15\)\))Tj
0 -1.2 TD
(   \(if x)Tj
T*
(       \(let \(\(y \(* 2 x\)\)\))Tj
T*
(          \(+ x y\)\))Tj
T*
(       #t\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(translates to intermediate code roughly like: )Tj
/T1_1 1 Tf
0 -2.562 TD
(   \(fetch-literal 15\))Tj
0 -1.2 TD
(   \(bind x\))Tj
T*
(   \(lookup-variable x\))Tj
T*
(   \(branch-if-false "else22"\))Tj
T*
(   \(lookup-variable x\))Tj
T*
(   \(fetch-literal 2\))Tj
T*
(   \(lookup-variable *\))Tj
T*
(   \(call-procedure\))Tj
T*
(   \(bind y\)               ; create and enter envt that binds y)Tj
T*
(   \(lookup-variable y\))Tj
T*
(   \(lookup-variable x\))Tj
T*
(   \(lookup-variable +\))Tj
T*
(   \(call-procedure\))Tj
T*
(   \(unbind\)               ; exit envt that binds y)Tj
0 -1.2 TD
(   \(branch "end22"\))Tj
0 -1.2 TD
( "else22")Tj
T*
(   \(fetch-literal #t\))Tj
T*
( "end22"          )Tj
/T1_0 1 Tf
0 -2.552 TD
(There are actually a couple of minor things wrong with the code we've ge\nerated, but this is pretty close to a )Tj
0 -1.2 TD
(workable intermediate representation. )Tj
ET
0 0 1 RG
1.553 w 10 M 0 j 0 J []0 d 
9.539 188.069 m
302.37 188.069 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.4903 0 0 18.4903 9.5387 192.7287 Tm
(What Does a Compiler Generate?)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 155.2409 Tm
([ Talk about machine code, interpretive virtual machines, etc. ] )Tj
ET
9.539 111.701 m
286.949 111.701 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.4903 0 0 18.4903 9.5387 116.3607 Tm
(Basic Structure of the Compiler)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 78.8087 Tm
(The main function of the compiler is )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
(, which generates intermediate code for an expression, and )Tj
T*
(which may call itself recursively to generate code for subexpressions. )Tj
ET
EMC 
Q

endstreamendobj5932 0 obj[5844 0 R]endobj5933 0 obj[5929 0 R/XYZ 0 358.842 null]endobj5934 0 obj<</Rect[9.53865 337.549 252.002 356.993]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC289)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC289)/S/URI>>/Border[0 0 0]>>endobj5935 0 obj[5934 0 R]endobj5936 0 obj<</Annots 5942 0 R/Parent 5960 0 R/ID 6144 0 R/StructParents 375/Contents 6115 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5937 0 obj<</Parent 5944 0 R/Count 25/Type/Pages/Kids[5748 0 R 5807 0 R 5869 0 R 5901 0 R 5930 0 R]>>endobj5938 0 obj<</Length 3469>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8351 Tm
(Calls to )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
( hand it an expression and some bookkeeping information we'll discuss la\ter. Compile )Tj
0 -1.2 TD
(returns intermediate code, plus updated versions of some of the bookkeep\ing information. )Tj
0 -2.562 TD
(To start this process off, top-level forms \(like the ones you type into\ the )Tj
/T1_1 1 Tf
(read-compile-run-print)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(loop, or definitions of top-level procedures\) are massaged a little, th\en intermediate code for them is )Tj
T*
(generated. Then the intermediate code is converted into real executable \code and packaged up as a closure )Tj
T*
(that can be called. )Tj
0 -2.557 TD
(We will discuss these issues of massaging top-level forms and generating\ executable closures later; for now, )Tj
0 -1.2 TD
(the main thing to understand is the recursive generation of intermediate\ code for nested expressions. )Tj
0 -2.562 TD
(Here's the main dispatch routine of the compiler, which is analagous to \the interpreter's )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
(: )Tj
/T1_1 1 Tf
T*
(\(define \(compile expr c-t-envt literal-state c-t-cont\))Tj
0 -1.2 TD
(   \(cond \(\(symbol? expr\))Tj
T*
(          \(compile-symbol expr c-t-envt literal-state c-t-cont\)\))Tj
T*
(         \(\(pair? expr\))Tj
T*
(          \(compile-list expr c-t-envt literal-state c-t-cont\)\))Tj
T*
(         \(\(self-evaluating? expr\))Tj
T*
(          \(compile-self-eval expr c-t-envt literal-state c-t-cont\)\))Tj
T*
(         \(#t)Tj
T*
(          \(syntax-error "Illegal expression form" expr\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(For now, ignore most of the arguments to )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
(, we'll explain them later. The main thing to notice is that )Tj
0 -1.205 TD
(it looks a lot like )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
([ blah blah blah...] )Tj
0 -2.557 TD
([ Somewhere, it's important to bring out the difference between the mutu\al recursion of eval and apply in the )Tj
0 -1.2 TD
(interpreter and the way the compiler works. Eval recurs locally, but jus\t generates code for apply... The )Tj
T*
(control structure of the compiler is actually simpler than for the inter\preter, because the hairy stuff just )Tj
T*
(happens at run time... ] )Tj
ET
0 0 1 RG
1.553 w 10 M 0 j 0 J []0 d 
9.539 199.576 m
420.523 199.576 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.4903 0 0 18.4903 9.5387 204.2352 Tm
(Data Representations, Calling Convention, etc.)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 166.7474 Tm
(Before trying to understand the compiler itself in more detail, it is pr\obably best to have a concrete idea of )Tj
T*
(what the representations of data are, how procedure calls work, and how \registers are used. That is, you have )Tj
T*
(to understand the "abstract machine" that the compiler compiles for. )Tj
0 -2.557 TD
(An abstract machine is an abstraction of low-level operations and object\s. The compiler first compiles code )Tj
0 -1.2 TD
(from the source language into this lower-level representation, and then \translates the "abstract machine )Tj
0 -1.2 TD
(language" into actual executable code. \(The executable code may be mach\ine code that runs directly on the )Tj
T*
(hardware, or an interpretive executable code such as bytecodes, which ar\e interpreted by a fast interpreter.\) )Tj
ET
EMC 
Q

endstreamendobj5939 0 obj[5844 0 R]endobj5940 0 obj[5936 0 R/XYZ 0 515.688 null]endobj5941 0 obj<</Rect[9.53865 494.394 455.47 513.838]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC290)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC290)/S/URI>>/Border[0 0 0]>>endobj5942 0 obj[5941 0 R]endobj5943 0 obj<</Annots 5949 0 R/Parent 5960 0 R/ID 6144 0 R/StructParents 376/Contents 6116 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5944 0 obj<</Parent 2 0 R/Count 158/Type/Pages/Kids[4900 0 R 5111 0 R 5362 0 R 5641 0 R 5937 0 R 6083 0 R]>>endobj5945 0 obj<</Length 3938>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 749.5255 Tm
(You can think of an abstract machine as being more like an assembler tha\n an interpreter, but maybe a little )Tj
0 -1.2 TD
(smarter than most assemblers. )Tj
0 -2.557 TD
(I will describe one particular set of features to make things concrete; \this is not quite how RScheme works, or )Tj
0 -1.2 TD
(Scheme-48, or any particular other system that I know of, but there's no\thing unusual about it except maybe )Tj
T*
(its simplicity. )Tj
0 -2.557 TD
(In fleshing out our example compiler, let's suppose our system works thi\s way: )Tj
1.607 -2.557 Td
(1.  )Tj
(We have several important registers used in stereotyped ways, e.g., to h\old a pointer to the current )Tj
1.25 -1.2 Td
(binding environment. )Tj
-1.25 -1.2 Td
(2.  )Tj
(We have an evaluation stack that's used to store intermediate values whi\le evaluating nested )Tj
1.25 -1.2 Td
(expressions. )Tj
-1.25 -1.2 Td
(3.  )Tj
(We use a continuation chain to represent the saved state of callers, the\ir callers, and so on, so that they )Tj
1.25 -1.2 Td
(can be resumed after a procedure returns. )Tj
-2.857 -2.557 Td
(The registers of the abstract machine may represent hardware registers, \or just storage locations that are used )Tj
0 -1.2 TD
(in these stereotyped ways. \(For example, if compiling to C, the registe\rs might be C global variables, and the )Tj
T*
(C compiler might or might not let you specify that the variables should \be put in hardware registers.\) )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 412.62 m
111.436 412.62 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 416.5027 Tm
(The Registers)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 380.0127 Tm
(We'll assume that there are several important registers that can be used\ by the code our compiler generates: )Tj
1.607 -2.562 Td
(1.  )Tj
(The )Tj
/T1_2 1 Tf
(VALUE)Tj
/T1_0 1 Tf
( register, where an expression leaves a value so that it can be used by \an enclosing )Tj
1.25 -1.2 Td
(expression. In The case of a procedure, this is where the value is left \for the caller when the procedure )Tj
T*
(returns. The value register is also used when calling a procedure. )Tj
-1.25 -1.205 Td
(2.  )Tj
(The )Tj
/T1_2 1 Tf
(ENVT)Tj
/T1_0 1 Tf
( register, which holds a pointer to the environment that code is current\ly executing in. )Tj
0 -1.205 TD
(3.  )Tj
(The )Tj
/T1_2 1 Tf
(CONT)Tj
/T1_0 1 Tf
( register, which holds a pointer to the chain of saved continuations of \callers. )Tj
0 -1.205 TD
(4.  )Tj
(The )Tj
/T1_2 1 Tf
(TEMPLATE)Tj
/T1_0 1 Tf
( register, which holds a pointer to a special data structure associated \with the )Tj
1.25 -1.2 Td
(procedure that is currently executing, and )Tj
-1.25 -1.205 Td
(5.  )Tj
(The )Tj
/T1_2 1 Tf
(PC)Tj
/T1_0 1 Tf
( \(program counter\) register, which says which instruction we are curre\ntly executing. \(If we're )Tj
1.25 -1.2 Td
(compiling to normal machine code, this is a special register built into \the CPU for this purpose, and we )Tj
0 -1.2 TD
(use it pretty much like any other code would. If we're compiling to an i\nterpretive executable code, )Tj
T*
(this is probably variable in the interpreter.\) )Tj
ET
9.539 145.231 m
347.773 145.231 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 149.1136 Tm
(The Evaluation Stack \(or Eval Stack, for short\))Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 112.6237 Tm
(The eval stack is used for holding values that have been computed by eva\luating subexpressions, but not yet )Tj
T*
(used or bound. )Tj
0 -2.562 TD
(In evaluating the expression )Tj
/T1_2 1 Tf
(\(+ foo 22\))Tj
/T1_0 1 Tf
(, the three values will be computed. When each value is )Tj
0 -1.205 TD
(computed, it will be left in the )Tj
/T1_2 1 Tf
(VALUE)Tj
/T1_0 1 Tf
( register. We evaluate right to left, and after evaluating each argument\, )Tj
ET
EMC 
Q

endstreamendobj5946 0 obj[5844 0 R]endobj5947 0 obj[5943 0 R/XYZ 0 88.1687 null]endobj5948 0 obj<</Rect[9.53865 66.8755 529.486 86.3197]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC291)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC291)/S/URI>>/Border[0 0 0]>>endobj5949 0 obj[5948 0 R]endobj5950 0 obj<</Parent 5960 0 R/ID 6144 0 R/StructParents 377/Contents 6117 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5951 0 obj<</Length 3939>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8351 Tm
(we perform a )Tj
/T1_1 1 Tf
(PUSH)Tj
/T1_0 1 Tf
( operation on the eval stack, which copies the value in the value regist\er onto the eval )Tj
0 -1.2 TD
(stack. When we get to the first subexpression \(the one that's supposed \to return a function to call\), we leave )Tj
T*
(the value in the value register, because that's where we put the closure\ pointer for a procedure call. )Tj
0 -2.557 TD
(The eval stack is used for two main purposes: )Tj
1.607 -2.557 Td
(1.  )Tj
(storing intermediate values for nested expressions, and )Tj
0 -1.2 TD
(2.  )Tj
(passing arguments to procedures. )Tj
-1.607 -2.557 Td
(The eval stack is )Tj
/T1_2 1 Tf
(not)Tj
/T1_0 1 Tf
( used to hold intermediate values or local variables for suspended proce\dures--it isn't like )Tj
T*
(the activation stack in a conventional implementation of C or Pascal. Th\e values in the eval stack at any given )Tj
T*
(time are only the intermediate values stored for the )Tj
/T1_2 1 Tf
(currently executing)Tj
/T1_0 1 Tf
( procedure. Intermediate values for )Tj
T*
(suspended procedures are saved in the continuation chain as necessary. )Tj
0 -2.557 TD
(When we call a procedure, the only values on the eval stack are the argu\ments to the procedure. Any other )Tj
0 -1.2 TD
(values used by the caller are moved from the eval stack into a continuat\ion before calling. )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 466.004 m
183.317 466.004 l
S
0 0 1 rg
BT
/T1_3 1 Tf
15.4086 0 0 15.4086 9.5387 469.8871 Tm
(The Continuation Chain)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 433.3971 Tm
(The continuation chain is a data structure that fills roughly the role o\f an activation stack in the )Tj
T*
(implementation of a conventional programming language. The continuation \chain is a linked list of )Tj
/T1_2 1 Tf
(partial )Tj
T*
(continuations)Tj
/T1_0 1 Tf
(, each of which is a record that stores the saved state of a procedure. \)Tj
0 -2.557 TD
(When a procedure performs a non-tail procedure call, it packages its imp\ortant state information up into a )Tj
0 -1.2 TD
(partial continuation; this record saves the values of the environment, t\emplate, PC, and continuation registers, )Tj
T*
(and any temporary values on the eval stack. )Tj
0 -2.557 TD
(Once a caller has saved its state in a partial continuation, then the ca\llee can do whatever it wants with the )Tj
0 -1.2 TD
(important registers and the evaluation stack. \(This is called a )Tj
/T1_2 1 Tf
(caller-saves)Tj
/T1_0 1 Tf
( register usage convention, because )Tj
T*
(the caller of a procedure is obliged to save any values that it will nee\d when it resumes.\) )Tj
0 -2.557 TD
(Remember that continuations are allocated on the garbage collected heap \and are immutable--we never )Tj
0 -1.2 TD
(modify a continuation once it's created. When we resume from a saved par\tial continuation, we copy the )Tj
T*
(values from the partail continuation into the registers and eval stack, \but that doesn't modify the partial )Tj
T*
(continuation itself--it's still sitting out there on the heap. This is i\mportant for being able to implement call-)Tj
T*
(with-current-continuation: it's what allows us to resume from the same c\ontinuation any number of times. )Tj
ET
9.539 130.64 m
112.283 130.64 l
S
0 0 1 rg
BT
/T1_3 1 Tf
15.4086 0 0 15.4086 9.5387 134.5227 Tm
(Environments)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 98.0328 Tm
(The compiler assumes that a binding environment is a chain of )Tj
/T1_2 1 Tf
(frames)Tj
/T1_0 1 Tf
(, each of which is a vector of slots )Tj
T*
(which are the variable bindings. Each frame also has a )Tj
/T1_2 1 Tf
(static link)Tj
/T1_0 1 Tf
( or )Tj
/T1_2 1 Tf
(scope link)Tj
/T1_0 1 Tf
( field, which points to the frame )Tj
T*
(representing the next lexically enclosing environment. )Tj
ET
EMC 
Q

endstreamendobj5952 0 obj[5844 0 R]endobj5953 0 obj<</Annots 5958 0 R/Parent 5960 0 R/ID 6144 0 R/StructParents 378/Contents 6118 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5954 0 obj<</Length 3549>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8994 Tm
(Top-level environments are represented specially, as hash tables that ma\p names to bindings. We'll use a hash )Tj
0 -1.2 TD
(table instead of the association lists we used in our simple interpreter\, because they're faster if you have a lot )Tj
T*
(of bindings. A binding object for a top-level environment is pretty much\ the same as in the interpreter: a little )Tj
T*
(vector with two important slots: a slot for its name and another slot th\at is the actual value field. )Tj
0 -2.557 TD
(Local environments are represented very differently from toplevel enviro\nments: each frame is a vector of )Tj
0 -1.2 TD
(slots, and does )Tj
/T1_1 1 Tf
(not)Tj
/T1_0 1 Tf
( store the names of the bindings. It turns out that the names are only n\eeded at compile )Tj
T*
(time, so they don't actually have to be stored in the runtime environmen\t. \(The compiler also turns out to be )Tj
T*
(able to do most of the work for looking up a toplevel variable at compil\e time, so the speed of our hash tables )Tj
T*
(is not going to be critical to our runtime speed.\) )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 568.514 m
270.684 568.514 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.4086 0 0 15.4086 9.5387 572.3965 Tm
(Closure Representation and Calling)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 535.9066 Tm
(Closures in our system are represented as objects with two fields: a poi\nter to the environment captured by )Tj
T*
(the closure, and a pointer to an object called a )Tj
/T1_1 1 Tf
(template)Tj
/T1_0 1 Tf
(, which in turn contains a pointer to the code for the )Tj
T*
(procedure. )Tj
0 -2.557 TD
(When we evaluate the following expression )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(let \(\(foo 22\))Tj
0 -1.2 TD
(      \(bar 15\)\))Tj
T*
(   \(lambda \(...\))Tj
T*
(       ...\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(we'll create an environment frame to hold the bindings of foo and bar, a\nd initialize them to )Tj
/T1_3 1 Tf
(22)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(15)Tj
/T1_0 1 Tf
(, )Tj
0 -1.2 TD
(respectively. This environment frame will have a scope link pointing to \the environment we were executing in )Tj
0 -1.205 TD
(when we entered the )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
(. Inside this environment, we'll create a closure. The closure will hold\ a pointer to )Tj
0 -1.2 TD
(the new environment, and a pointer to a template object representing the\ anonymous procedure being closed. )Tj
T*
(The template will have a pointer to the actual executable code. All of t\hese things will be heap-allocated )Tj
T*
(objects, and in our implementation we'll give each one header field show\ing what kind of object it is: )Tj
/T1_3 1 Tf
0 -2.562 TD
(                                          <to envt. frame)Tj
0 -1.2 TD
(                                           for enclosing)Tj
T*
(                                              scope>)Tj
T*
(                                               )Tj
T*
(                                                ^)Tj
T*
(                                                |)Tj
T*
(                                +----------+    |)Tj
T*
(                                | envt. fr.|    |)Tj
T*
(                        ,------>+==========+    |)Tj
T*
(                       /  scope |     +----+----+       )Tj
T*
(     +----------+     /         +----------+)Tj
T*
(     | closure  |    /      foo |       22 |)Tj
T*
(     +==========+   /           +----------+)Tj
ET
EMC 
Q

endstreamendobj5955 0 obj[5844 0 R]endobj5956 0 obj[5953 0 R/XYZ 0 401.165 null]endobj5957 0 obj<</Rect[9.53865 383.262 395.709 399.624]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC292)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC292)/S/URI>>/Border[0 0 0]>>endobj5958 0 obj[5957 0 R]endobj5959 0 obj<</Parent 5979 0 R/ID 6144 0 R/StructParents 379/Contents 6119 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5960 0 obj<</Parent 6083 0 R/Count 5/Type/Pages/Kids[5929 0 R 5936 0 R 5943 0 R 5950 0 R 5953 0 R]>>endobj5961 0 obj<</Length 3525>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8351 Tm
(envt |     +----+--'        bar |       15 |)Tj
0 -1.2 TD
(     +----------+               +----------+     )Tj
T*
(proc |     +----+--.    )Tj
T*
(     +----------+   \\      +----------+   )Tj
T*
(                     \\     | template |       +----------+)Tj
T*
(                      `--->+==========+       |   code   |)Tj
T*
(                      code |     +----+-----> +==========+)Tj
T*
(                           +----------+       |executable|)Tj
T*
(                           |          |       + code for +)Tj
T*
(                           +----------+       |procedure |)Tj
T*
(                           |          |       +          +)Tj
T*
(                           +----------+       |   ...    |)Tj
T*
(                           |   ...    |       +----------+)Tj
0 -1.2 TD
(                           +----------+)Tj
/T1_1 1 Tf
0 -2.552 TD
(The template object holds not only the pointer to the actual code, but a\ny other handy values that the compiler )Tj
0 -1.2 TD
(can compute or look up at compile time, and which should be available to\ the procedure at run time. We'll )Tj
T*
(discuss that more later. )Tj
0 -2.557 TD
(When we want to apply a procedure to some argument values, we put the ar\gument values on the eval stack, )Tj
0 -1.205 TD
(and a pointer to the closure we want to call in the )Tj
/T1_0 1 Tf
(VALUE)Tj
/T1_1 1 Tf
( register. Then we execute a short sequence of )Tj
0 -1.2 TD
(instructions that does the call: )Tj
/T1_2 1 Tf
6.6771 0 0 6.6771 34.0654 379.966 Tm
(l)Tj
/T1_1 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 379.966 Tm
(Extract the environment pointer from the closure and put it in the envir\onment register. \(This is )Tj
T*
(basically just an indexed load using the value register as a base.\) )Tj
/T1_2 1 Tf
6.6771 0 0 6.6771 34.0654 347.9161 Tm
(l)Tj
/T1_1 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 347.9161 Tm
(Extract the template pointer from the closure and put it in the template\ register. \(This is basically just )Tj
T*
(another indexed load using the value register as a base.\) )Tj
/T1_2 1 Tf
6.6771 0 0 6.6771 34.0654 315.8663 Tm
(l)Tj
/T1_1 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 315.8663 Tm
(Extract the code pointer from the template and put it in the program cou\nter register, i.e., jump to that )Tj
T*
(code. \(This is basically just another indexed load using the template r\egister as a base, and a jump to )Tj
T*
(that address.\) )Tj
-2.857 -2.557 Td
(Thus actual machine code for our "apply" operation in our intermediate r\epresentation is just a handful of )Tj
T*
(instructions that do this stuff--a stereotyped little instruction sequen\ce that destructures a closure and puts the )Tj
T*
(appropriate values in registers before beginning execution of the proced\ure. )Tj
0 -2.557 TD
(Because this is the way the procedure calling convention works, we know \that when we begin executing the )Tj
0 -1.2 TD
(code for a procedure, the environment register will point to the right e\nvironment \(where the procedure was )Tj
T*
(defined\) and the template register will point to the template for that \procedure. Any values stored in the )Tj
T*
(template by the compiler can be fetched at compile time by doing an inde\xed load with the template register )Tj
T*
(as a base. )Tj
0 -2.557 TD
(Consider this procedure: )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(define \(foo x y\))Tj
ET
EMC 
Q

endstreamendobj5962 0 obj[5844 0 R]endobj5963 0 obj<</Annots 5968 0 R/Parent 5979 0 R/ID 6144 0 R/StructParents 380/Contents 6120 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5964 0 obj<</Length 3644>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8351 Tm
(   \(list 'bar x y\)\))Tj
/T1_1 1 Tf
0 -2.552 TD
(Here, the literal bar is needed by the procedure--there must be some cod\e in foo that will somehow fetch a )Tj
0 -1.2 TD
(pointer to the symbol bar. That's what the template object is for. When \this procedure is compiled, the )Tj
T*
(compiler accumulates a list of such literals, and when the template obje\ct for the procedure is created, all of )Tj
0 -1.205 TD
(those values will be stored into it. When the compiler generates code to\ fetch the symbol )Tj
/T1_0 1 Tf
(bar)Tj
/T1_1 1 Tf
(, it just looks at )Tj
0 -1.2 TD
(the symbol's position in the literal list \(and thus its offset in the t\emplate object\), and generates code to do an )Tj
T*
(indexed load to fetch that value from the template at run time. )Tj
ET
0 0 1 RG
1.553 w 10 M 0 j 0 J []0 d 
9.539 597.022 m
133.831 597.022 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.4903 0 0 18.4903 9.5387 601.6818 Tm
(Continuations)Tj
ET
1.294 w 
9.539 558.28 m
397.928 558.28 l
S
BT
/T1_2 1 Tf
15.4086 0 0 15.4086 9.5387 562.1625 Tm
(Applying a Procedure Doesn't Save the Caller's State)Tj
0 0 0 rg
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 525.6726 Tm
(Remember that when we do a procedure call, we do )Tj
/T1_3 1 Tf
(not)Tj
/T1_1 1 Tf
( necessarily save the state of the caller. For a non-tail )Tj
T*
(call, the compiler must generate code to save the caller's state plus co\de for the actual call. For a tail call, )Tj
T*
(there is no need to save the state. Because of this, there isn't really \a single "procedure call" operation that )Tj
0 -1.205 TD
(saves the caller's state and invokes the callee. There are two separate \operations, )Tj
/T1_0 1 Tf
(save-continuation)Tj
/T1_1 1 Tf
( )Tj
0 -1.205 TD
(and )Tj
/T1_0 1 Tf
(apply)Tj
/T1_1 1 Tf
(. )Tj
0 -2.557 TD
(As mentioned above, the code sequence that performs a procedure applicat\in assumes that the pointer to the )Tj
0 -1.205 TD
(closure to be called is in the )Tj
/T1_0 1 Tf
(VALUE)Tj
/T1_1 1 Tf
( register. The procedure will leave its value in that register when it )Tj
0 -1.2 TD
(returns. )Tj
ET
9.539 355.119 m
159.356 355.119 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.4086 0 0 15.4086 9.5387 359.0018 Tm
(Continuation Saving)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 322.4476 Tm
(save-continuation)Tj
/T1_1 1 Tf
( is the operation that saves the state of the currently executing proced\ure in a partial )Tj
T*
(continuation, and pushes it onto the continuation chain. )Tj
0 -2.557 TD
(When pushing a continuations, it is important to save all of the values \on the eval stack, )Tj
/T1_3 1 Tf
(except)Tj
/T1_1 1 Tf
( for the )Tj
0 -1.2 TD
(arguments to the procedure being called. Therefore, when generating code\ for a combination \(procedure call\) )Tj
T*
(expression, the code to save the caller's state does )Tj
/T1_3 1 Tf
(not)Tj
/T1_1 1 Tf
( come just before the actual code to call the procedure. )Tj
T*
(This would remove the arguments to the procedure from the eval stack. In\stead, the continuation save comes )Tj
0 -1.2 TD
(just before the code that generates the argument values that will be pas\sed to the procedure: )Tj
/T1_0 1 Tf
0 -2.562 TD
(  \(save-continuation <label>\) ; save everything else before computing \args)Tj
0 -1.2 TD
(  <compute argn>)Tj
T*
(    ...)Tj
T*
(  <compute arg1>)Tj
T*
(  <compute callee>)Tj
T*
(  \(apply\))Tj
0 -1.2 TD
(<label>)Tj
/T1_1 1 Tf
0 -2.552 TD
(that way, the arguments to the call \(and nothing else\) will be on the \eval stack when the procedure is called, )Tj
ET
EMC 
Q

endstreamendobj5965 0 obj[5844 0 R]endobj5966 0 obj[5963 0 R/XYZ 0 441.609 null]endobj5967 0 obj<</Rect[9.53865 423.706 152.546 440.068]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC293)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC293)/S/URI>>/Border[0 0 0]>>endobj5968 0 obj[5967 0 R]endobj5969 0 obj<</Parent 5979 0 R/ID 6144 0 R/StructParents 381/Contents 6121 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5970 0 obj<</Length 2499>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8994 Tm
(and when the procedure returns, it will restore the other values from th\e partial continuation onto the eval )Tj
0 -1.2 TD
(stack. )Tj
0 -2.557 TD
(This separation of the saving and calling code looks especially funny fo\r nested expressions that call )Tj
0 -1.2 TD
(procedures, but it makes perfect sense. )Tj
/T1_1 1 Tf
0 -2.562 TD
(save-continuation)Tj
/T1_0 1 Tf
( takes an argument which is the address of the code to execute when the \)Tj
0 -1.2 TD
(continuation is resumed. This address is saved in the partial continuati\on, and when the continuation is )Tj
0 -1.205 TD
(resumed, it will be branched to \(put in the )Tj
/T1_1 1 Tf
(PC)Tj
/T1_0 1 Tf
( register\). )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 582.311 m
97.737 582.311 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.4086 0 0 15.4086 9.5387 586.1944 Tm
(An Example)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 549.7044 Tm
(Now that we have a more detailed idea how the registers, eval stack, and\ continuations work, here's an )Tj
0 -1.2 TD
(example: )Tj
/T1_1 1 Tf
0 -2.562 TD
(   \(+ \(- a b\) \(/ c d\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(compiles to intermediate code something like: )Tj
/T1_1 1 Tf
0 -2.562 TD
(  \(push-continuation "resume23"\) ; save cont for call to +)Tj
0 -1.2 TD
(  \(push-continuation "resume24"\) ; save cont for call to -)Tj
T*
(  \(lookup-variable d\)   ; get value of d into value reg)Tj
T*
(  \(push\)                ; push value of d on eval stack)Tj
T*
(  \(lookup-variable c\)   ; get value of c into value reg)Tj
T*
(  \(push\)                ; push value of c on eval stack)Tj
T*
(  \(lookup-variable /\)   ; look up /)Tj
T*
(  \(apply\)               ; call /, which is in value reg after lookup)Tj
T*
(  \(push\)                 )Tj
T*
("resume24" )Tj
T*
(  \(push-continuation "resume25"\) ;save cont for -, incl. value of \(/ \c d\))Tj
T*
(  \(lookup-variable b\)   ; get value of b)Tj
T*
(  \(push\) )Tj
T*
(  \(lookup-variable a\)   ; get value of a)Tj
T*
(  \(push\))Tj
T*
(  \(lookup-variable -\)   ; get value of -)Tj
T*
(  \(apply\)               ; call -)Tj
T*
(  \(push\)                ; push returned value on top of restored e )Tj
T*
(stack     )Tj
T*
("resume25")Tj
T*
(  \(lookup-variable +\)   ; look up + )Tj
T*
(  \(apply\)               ; tail call +)Tj
T*
("resume23"  )Tj
/T1_0 1 Tf
0 -2.552 TD
(Things to notice: )Tj
ET
EMC 
Q

endstreamendobj5971 0 obj[5844 0 R]endobj5972 0 obj<</Parent 5979 0 R/ID 6144 0 R/StructParents 382/Contents 6122 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5973 0 obj<</Length 4442>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 31.0006 741.5242 Tm
(1.  )Tj
(after the first )Tj
/T1_1 1 Tf
(apply)Tj
/T1_0 1 Tf
(, the called routine \(or something it directly or indirectly tail calls\\) will eventually )Tj
1.25 -1.2 Td
(do a procedure return, and pop the latest continuation we pushed, restor\ing anything that was on the )Tj
0 -1.2 TD
(eval stack at that point, and resuming execution at label1. [ OOPS... fi\x this ] )Tj
-1.25 -1.2 Td
(2.  )Tj
(after the second apply, the called routine will eventually \(directly or\ indirectly\) do a procedure return, )Tj
1.25 -1.2 Td
(which will pop the second continuation we pushed, restoring the already-\computed value of the )Tj
0 -1.205 TD
(subexpression )Tj
/T1_1 1 Tf
(\(/ c d\))Tj
/T1_0 1 Tf
( to the eval stack. )Tj
-1.25 -1.205 Td
(3.  )Tj
(we generated code for the expression )Tj
/T1_1 1 Tf
(\(+ \(- a b\))Tj
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
(\(/ c d\)\))Tj
/T1_0 1 Tf
( to be used in tail position. This code )Tj
1.25 -1.2 Td
(doesn't save a continuation before the final call to +. If the expressio\n is to be used in non-tail position, )Tj
0 -1.2 TD
(we must generate slightly different code, which will save a continuation\ that will resume after this )Tj
T*
(expression. )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 557.108 m
200.482 557.108 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.4086 0 0 15.4086 9.5387 560.9912 Tm
(Generating Unique Labels)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 524.5013 Tm
([ where does this go? ] )Tj
0 -2.562 TD
(Like )Tj
/T1_1 1 Tf
(compile-if)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(compile-combo)Tj
/T1_0 1 Tf
( generates labels as necessary to be able to name the code where )Tj
0 -1.2 TD
(execution should be resumed after a call--in the code it generates, it p\uts the label just before the intermediate )Tj
0 -1.205 TD
(code instruction to resume, and the same label in the call to )Tj
/T1_1 1 Tf
(save-continuation)Tj
/T1_0 1 Tf
( that should resume )Tj
0 -1.2 TD
(there. )Tj
0 -2.557 TD
(It is easy to generate unique labels for every resumable point in a prog\ram. We just keep a counter of labels )Tj
0 -1.2 TD
(we've used so far, and to create a new one we append the digits represen\ting this number to the string )Tj
/T1_1 1 Tf
0 -1.205 TD
("resume")Tj
/T1_0 1 Tf
(, so that we get )Tj
/T1_1 1 Tf
("resume1")Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
("resume2")Tj
/T1_0 1 Tf
(, and so on. )Tj
0 -2.562 TD
(We can write a Scheme procedure, )Tj
/T1_1 1 Tf
(generate-label)Tj
/T1_0 1 Tf
(, which keeps a counter, and when given a string as )Tj
0 -1.2 TD
(an argument, returns the a new string with the same characters plus the \digits representing the number in the )Tj
0 -1.205 TD
(counter. That way, we can use labels that start with )Tj
/T1_1 1 Tf
("else")Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
("end")Tj
/T1_0 1 Tf
( to label the branch targets of an )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(expression, and labels that start with )Tj
/T1_1 1 Tf
("resume")Tj
/T1_0 1 Tf
( to represent the resumption points for continuation saving. )Tj
0 -1.2 TD
(This makes the intermediate code we generate fairly understandable, whil\e ensuring that labels are still )Tj
T*
(unique, and easy to use as assembler labels when translating intermediat\e code to machine language. )Tj
ET
1.553 w 
9.539 217.881 m
382.488 217.881 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.4903 0 0 18.4903 9.5387 222.5409 Tm
(More on Representations of Environments)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 185.0532 Tm
(To get reasonable performance for our system, we'll want to treat the to\p-level environment differently from )Tj
T*
(local variable binding environments. We'll use a trick involving lexical\ scope to precompute most of the work )Tj
T*
(done in looking up a local variable binding, and a different trick to ma\ke it fast to look up top-level variables. )Tj
0 -2.562 TD
(As we said before, each local variable binding contour \(e.g., the bindi\ngs introduced by a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, or by binding )Tj
0 -1.2 TD
(the args to a procedure\) is represented at run time as a frame with slo\ts for each variable, plus a scope link )Tj
T*
(that points to the frame representing the enclosing contour. )Tj
0 -2.557 TD
(A top-level environment is likely to be large, and we will want to be ab\le to access it in special ways. We will )Tj
ET
EMC 
Q

endstreamendobj5974 0 obj[5844 0 R]endobj5975 0 obj<</Parent 5979 0 R/ID 6144 0 R/StructParents 383/Contents 6123 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5976 0 obj<</Length 3715>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8994 Tm
(represent it as a hash table that maps symbols \(variable names\) to the\ir toplevel bindings. The bindings )Tj
0 -1.2 TD
(themselves will be represented as objects, whose main function is to hav\e one field that holds the current )Tj
T*
(value of the variable. For simplicity, we'll make them self-identifying \as well: not only will the names be used )Tj
T*
(as keys in the hash table, but the binding objects will hold pointers to\ their names as well as values. )Tj
0 -2.557 TD
(Keep in mind that this representation is just one that's convenient. A t\oplevel environment could be )Tj
0 -1.2 TD
(represented as any kind of table \(e.g., an association list\), but we w\ant it to be reasonably fast to access even )Tj
T*
(if there are thousands of top-level variables. \(We'll use a special tri\ck to make normal accesses to top-level )Tj
T*
(variable bindings very fast at run time, but we want to make them reason\ably fast at compile time as well, and )Tj
T*
(hash tables are good for that.\) )Tj
0 -2.557 TD
(Suppose we evaluate the following expressions at the top level, to defin\e and initialize a couple of variables: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define quux "fubar"\))Tj
0 -2.4 TD
(\(define \(double x\) \(+ x x\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(This will modify the toplevel environment by adding bindings for )Tj
/T1_1 1 Tf
(quux)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(double)Tj
/T1_0 1 Tf
(, in addition to what's )Tj
0 -1.2 TD
(already there: )Tj
/T1_1 1 Tf
0 -2.562 TD
(   +-------------------------------------------------------------------+\)Tj
0 -1.2 TD
(   |                                                                   |\)Tj
T*
(   |                                                                   |\)Tj
T*
(  \\|/                                                                  \|)Tj
T*
(   +------------------+                                                |\)Tj
T*
(   |   toplevel env.  |                                                |\)Tj
T*
(   +==================+         +----------+                           |\)Tj
T*
(   |   cons |    *----+-------->| binding  |                           |\)Tj
T*
(   +--------+---------+         +==========+                           |\)Tj
T*
(   |        |         |   value |     *----+------><closure for cons>  |\)Tj
T*
(        .        .              +----------+                           |\)Tj
T*
(        .        .         name |     cons |                           |\)Tj
T*
(        .        .              +----------+                           |\)Tj
0 -1.2 TD
(                                                                       |\)Tj
0 -1.2 TD
(   |        |         |         +----------+                           |\)Tj
T*
(   +--------+---------+         | binding  |                           |\)Tj
T*
(   |   quux |    *----+-------->+==========+                           |\)Tj
T*
(   +--------+---------+   value |     *----+------>"fubar"             |\)Tj
T*
(   |        |         |         +----------+                           |\)Tj
T*
(        .        .         name |     quux |                           |\)Tj
T*
(        .        .              +----------+                           |\)Tj
T*
(        .        .                                                     |\)Tj
T*
(                                                                       |\)Tj
T*
(   |        |         |         +----------+                           |\)Tj
T*
(   +--------+---------+         | binding  |          +----------+     |\)Tj
ET
EMC 
Q

endstreamendobj5977 0 obj[5844 0 R]endobj5978 0 obj<</Annots 5986 0 R/Parent 6008 0 R/ID 6144 0 R/StructParents 384/Contents 6124 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5979 0 obj<</Parent 6083 0 R/Count 5/Type/Pages/Kids[5959 0 R 5963 0 R 5969 0 R 5972 0 R 5975 0 R]>>endobj5980 0 obj<</Length 4620>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.3556 Tm
(   | double |    *----+-------->+==========+          | closure  |     |\)Tj
0 -1.2 TD
(   +--------+---------+   value |     *----+--------->+==========+     )Tj
T*
(|   )Tj
T*
(   |        |         |         +----------+     envt |     *----+-----+\)Tj
T*
(        .        .         name |  double  |          +----------+)Tj
T*
(        .        .              +----------+     proc |     *----+---> .\..)Tj
T*
(        .        .                                    +----------+)Tj
/T1_1 1 Tf
0 -2.552 TD
(Several things to note: )Tj
/T1_2 1 Tf
6.6771 0 0 6.6771 34.0654 589.9735 Tm
(l)Tj
/T1_1 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 589.9735 Tm
(The representation of the hash table itself may not really be a simple a\rray of name-value pairs, but I )Tj
0 -1.2 TD
(didn't want to clutter up the picture with overflow buckets and whatnot.\ )Tj
/T1_2 1 Tf
6.6771 0 0 6.6771 34.0654 557.9236 Tm
(l)Tj
/T1_1 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 557.9236 Tm
(In principle, we don't need to have pointers to separate binding objects\. We could just store the values )Tj
T*
(of bindings right in the table, using the value fields of the name-value\ pair to hold the actual variable )Tj
T*
(values. \(After all, a binding is really just a location with a name, us\ed to hold a value.\) It will turn out )Tj
T*
(to be convenient for our implementation to have separate objects that ho\ld the values. )Tj
/T1_2 1 Tf
6.6771 0 0 6.6771 34.0654 493.8239 Tm
(l)Tj
/T1_1 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 493.8239 Tm
(The occurrences of symbol names in the picture would really be pointers \to symbol objects, and the )Tj
0 -1.205 TD
(string )Tj
/T1_0 1 Tf
("fubar")Tj
/T1_1 1 Tf
( would really be an object itself as well. As usual, we selectively abbr\eviate our )Tj
0 -1.2 TD
(pictorial representation to avoid cluttering things up. )Tj
/T1_2 1 Tf
6.6771 0 0 6.6771 34.0654 445.6848 Tm
(l)Tj
/T1_1 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 445.6848 Tm
(We refer to the toplevel binding objects as objects, but they're not Sch\eme objects--standard Scheme )Tj
0 -1.2 TD
(doesn't give you any way to get a pointer to one of these and play with \it from inside the language. )Tj
T*
(These "objects" are objects in the sense that they're allocated on the h\eap and referred to via pointers )Tj
T*
(by the compiler and by compiled code, but they're not "first class." \(A\n extended version of the )Tj
0 -1.205 TD
(Scheme language may )Tj
/T1_0 1 Tf
(let)Tj
/T1_1 1 Tf
( you get at them from inside the language, but that's not standard.\) )Tj
ET
0 0 1 RG
1.553 w 10 M 0 j 0 J []0 d 
9.539 337.981 m
252.002 337.981 l
S
0 0 1 rg
BT
/T1_3 1 Tf
18.4903 0 0 18.4903 9.5387 342.6405 Tm
(Compiling Code for Literals)Tj
0 0 0 rg
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 305.0885 Tm
(When the compiler compiles code for a literal, like )Tj
/T1_0 1 Tf
('foo)Tj
/T1_1 1 Tf
( or )Tj
/T1_0 1 Tf
("foo")Tj
/T1_1 1 Tf
( or )Tj
/T1_0 1 Tf
(22)Tj
/T1_1 1 Tf
( in the following expression, )Tj
/T1_0 1 Tf
0 -2.562 TD
(\(list 'foo "foo" 22\))Tj
/T1_1 1 Tf
0 -2.552 TD
(it notices which literals the expression will need at run time, and ensu\res that those literals will appear in the )Tj
0 -1.2 TD
(template of the procedure. It keeps a list of literals needed by the pro\cedure it's compiling, and after )Tj
T*
(compiling the code for the procedure, it uses that list to construct the\ template that goes with the code. )Tj
0 -2.562 TD
(If )Tj
/T1_0 1 Tf
(foo)Tj
/T1_1 1 Tf
( is the first literal encountered, it might be put into the list first, \and assigned the first free slot in the )Tj
0 -1.205 TD
(template \(after the code pointer\). )Tj
/T1_0 1 Tf
("foo")Tj
/T1_1 1 Tf
( might be assigned the second slot, and so on. In the terminology of )Tj
0 -1.2 TD
(language implementation, the template acts as a )Tj
/T1_4 1 Tf
(literal frame)Tj
/T1_1 1 Tf
(, as well as holding the pointer to the procedure's )Tj
T*
(code. )Tj
0 -2.557 TD
(After assigning a literal a position in the template, the compiler can g\enerate one or two instructions that can )Tj
0 -1.2 TD
(fetch the value out of the template, by using the address of the templat\e, adding the offset of that slot, and )Tj
0 -1.205 TD
(loading from the resulting address. Since the template address is guaran\teed to be in the )Tj
/T1_0 1 Tf
(TEMPLATE)Tj
/T1_1 1 Tf
( register, )Tj
0 -1.2 TD
(this is probably just a single indexed load instruction. In pseudo-C, it\ might look like: )Tj
ET
EMC 
Q

endstreamendobj5981 0 obj[5844 0 R]endobj5982 0 obj<</Limits[320 351]/Nums[320 5238 0 R 321 5289 0 R 322 5315 0 R 323 5343 0 R 324 5360 0 R 325 5363 0 R 326 5368 0 R 327 5370 0 R 328 5377 0 R 329 5383 0 R 330 5388 0 R 331 5393 0 R 332 5395 0 R 333 5398 0 R 334 5402 0 R 335 5410 0 R 336 5416 0 R 337 5424 0 R 338 5427 0 R 339 5434 0 R 340 5440 0 R 341 5446 0 R 342 5449 0 R 343 5452 0 R 344 5459 0 R 345 5469 0 R 346 5475 0 R 347 5516 0 R 348 5588 0 R 349 5615 0 R 350 5642 0 R 351 5668 0 R]>>endobj5983 0 obj<</Limits[352 406]/Nums[352 5694 0 R 353 5722 0 R 354 5749 0 R 355 5791 0 R 356 5801 0 R 357 5803 0 R 358 5805 0 R 359 5808 0 R 360 5810 0 R 361 5846 0 R 362 5862 0 R 363 5867 0 R 364 5870 0 R 365 5877 0 R 366 5882 0 R 367 5889 0 R 368 5896 0 R 369 5902 0 R 370 5904 0 R 371 5914 0 R 372 5920 0 R 373 5928 0 R 374 5932 0 R 375 5939 0 R 376 5946 0 R 377 5952 0 R 378 5955 0 R 379 5962 0 R 380 5965 0 R 381 5971 0 R 382 5974 0 R 383 5977 0 R 384 5981 0 R 385 5991 0 R 386 5994 0 R 387 5997 0 R 388 6003 0 R 389 6010 0 R 390 6013 0 R 391 6019 0 R 392 6026 0 R 393 6037 0 R 394 6050 0 R 395 6058 0 R 396 6064 0 R 397 6067 0 R 398 6070 0 R 399 6081 0 R 400 6085 0 R 401 6152 0 R 402 6180 0 R 403 6208 0 R 404 6238 0 R 405 6266 0 R 406 6298 0 R]>>endobj5984 0 obj[5978 0 R/XYZ 0 299.547 null]endobj5985 0 obj<</Rect[9.53865 278.254 590.079 297.698]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC294)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC294)/S/URI>>/Border[0 0 0]>>endobj5986 0 obj[5985 0 R 5988 0 R]endobj5987 0 obj[5978 0 R/XYZ 0 76.7922 null]endobj5988 0 obj<</Rect[9.53865 58.8889 292.918 75.2514]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC295)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC295)/S/URI>>/Border[0 0 0]>>endobj5989 0 obj<</Parent 6008 0 R/ID 6144 0 R/StructParents 385/Contents 6125 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5990 0 obj<</Length 3915>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 737.0895 Tm
(  value_register = *\(template_register + offset\))Tj
/T1_1 1 Tf
0 -2.552 TD
(where offset is computed by the compiler and therefore is probably an im\mediate operand to the load )Tj
0 -1.2 TD
(instruction that loads the value into the value register. )Tj
0 -2.557 TD
(Notice that here we're taking advantage of the fact that the compiler ru\ns in our system, and generates code )Tj
0 -1.2 TD
(that's just data in our system. The code will run in the same heap, and \the compiler can therefore just compute )Tj
T*
(values and put them in the template, and they'll stay around until that \code is executed. \(Life gets a little more )Tj
T*
(complicated if you want to generate code that will be loaded into a diff\erent system and executed there.\) )Tj
0 -2.562 TD
([ Now we should explain that the )Tj
/T1_0 1 Tf
(literal-state)Tj
/T1_1 1 Tf
( argument to )Tj
/T1_0 1 Tf
(compile)Tj
/T1_1 1 Tf
( is the list of literals seen so far )Tj
0 -1.205 TD
(in compiling a procedure. The return value of )Tj
/T1_0 1 Tf
(compile)Tj
/T1_1 1 Tf
( is intermediate code that includes an updated )Tj
/T1_0 1 Tf
0 -1.205 TD
(literal-state)Tj
/T1_1 1 Tf
(. ] )Tj
ET
0 0 1 RG
1.553 w 10 M 0 j 0 J []0 d 
9.539 494.826 m
455.47 494.826 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.4903 0 0 18.4903 9.5387 499.486 Tm
(Compiling Code for Top-Level Variable References)Tj
0 0 0 rg
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 461.9982 Tm
(Because of lexical scoping, it is easy for the compiler to tell the diff\erence between a reference to a top-level )Tj
0 -1.2 TD
(variable binding and a reference to a local variable. We'll talk about t\hat in detail later, but for now just )Tj
T*
(assume that the compiler knows the difference at the point where it gene\rates code for a variable reference. )Tj
0 -2.557 TD
(When the compiler generates code for a top-level variable, it can usuall\y look up the binding of that variable )Tj
0 -1.2 TD
(in the environment that the code is being generated for--the expression \that defines the variable has already )Tj
0 -1.2 TD
(been executed, so the binding already exists. )Tj
0 -2.557 TD
(The compiler can therefore do the actual lookup at compile time, e.g., h\ashing into the hash-table that )Tj
0 -1.2 TD
(implements a toplevel environment and getting a pointer to the actual bi\nding object that will be referenced at )Tj
T*
(run time. )Tj
0 -2.557 TD
(To make references to this object fast, the compiler can simply put this\ pointer in the template for the )Tj
0 -1.2 TD
(procedure being compiled, as though it were a literal value. )Tj
0 -2.557 TD
(Be clear on what's going on here: the compiler can't look up the )Tj
/T1_3 1 Tf
(value)Tj
/T1_1 1 Tf
( of the variable, because that's not )Tj
0 -1.2 TD
(known until the moment the variable is referenced at run time. \(Before \the code is executed, some other piece )Tj
T*
(of code might run and change the value stored in the binding.\) But the \identity of the binding itself is known, )Tj
T*
(and can be stashed in the literal frame. )Tj
0 -2.557 TD
(Actually, it's just slightly more complicated than this. A variable can \be used in a procedure definition before )Tj
0 -1.2 TD
(the variable itself is defined. \(This is called a "forward reference."\)\ To get around this, the compiler "cheats," )Tj
T*
(and goes ahead and creates the binding object and its entry in the tople\vel environment before the definition )Tj
T*
(of the variable is actually encountered. At the language level, the vari\able hasn't been bound or given a value, )Tj
T*
(but we go ahead and create the unique binding object and use it in compi\ling other expressions. For error )Tj
T*
(checking, we put a special value in the binding to indicate that the bin\ding isn't "real" yet--we put a reference )Tj
ET
EMC 
Q

endstreamendobj5991 0 obj[5844 0 R]endobj5992 0 obj<</Parent 6008 0 R/ID 6144 0 R/StructParents 386/Contents 6126 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R/T1_3 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5993 0 obj<</Length 3388>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8994 Tm
(to some object we consider "not a real value," so that we can detect use\s of a variable that isn't really bound. )Tj
0 -2.557 TD
(\(In a system designed for maximum safety and early error checking, we c\ould ensure that each reference to a )Tj
0 -1.2 TD
(toplevel variable would check for this value, and signal an error if it'\s found. If we're not quite so concerned )Tj
T*
(with early error checking, we can wait until somebody attempts to use su\ch a value, e.g., by adding it to )Tj
0 -1.205 TD
(something, or taking the )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( of it, and we rely on the normal type checking of the language to tell \us )Tj
0 -1.2 TD
(something's wrong at the point that operation occurs.\) )Tj
0 -2.557 TD
(Now consider compiling a procedure like )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(make-foo-list\))Tj
0 -1.2 TD
(   \(list 'foo "foo"\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(The compiler will accumulate a list of toplevel bindings and literals ne\eded for the procedure, namely a string )Tj
/T1_1 1 Tf
0 -1.205 TD
("foo")Tj
/T1_0 1 Tf
(, the symbol )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(, and toplevel binding of the symbol )Tj
/T1_1 1 Tf
(list)Tj
/T1_0 1 Tf
(. These will be put in the template for the )Tj
0 -1.2 TD
(procedure, in the first, second, and third slots after the code pointer.\ The code generated for this procedure )Tj
0 -1.2 TD
(\(assuming right-to-left evaluation\) will be something like: )Tj
/T1_1 1 Tf
0 -2.562 TD
(  \(fetch-literal 1\) ; get string "foo" from template slot 1)Tj
0 -1.2 TD
(  \(push\)            ; push it on eval stack)Tj
T*
(  \(fetch-literal 2\) ; get symbol foo from template slot 2)Tj
T*
(  \(push\)            ; push it on eval stack)Tj
T*
(  \(fetch-literal 3\) ; get toplevel binding of list from template slot \3)Tj
T*
(  \(t-l-bdg-get\)     ; extract value from binding)Tj
0 -1.2 TD
(  \(apply\)           ; \(tail-\)call list)Tj
/T1_0 1 Tf
0 -2.552 TD
(Notice, of course, that we've made our intermediate code representation \more concrete now--we use slot )Tj
0 -1.2 TD
(numbers as the arguments to fetch-literal, and we explicitly get the val\ue of the toplevel variable from the )Tj
T*
(toplevel binding object in the value register. For setting the value in \a binding, we'll use a different )Tj
0 -1.205 TD
(intermediate code instruction, )Tj
/T1_1 1 Tf
(t-l-bdg-set!)Tj
/T1_0 1 Tf
( \()Tj
/T1_1 1 Tf
(t-l-binding-set!)Tj
/T1_0 1 Tf
( expects the value register to hold a )Tj
0 -1.2 TD
(pointer to a toplevel binding object; it extracts the value of the bindi\ng, and leaves that value in the value )Tj
T*
(register.\) )Tj
0 -2.557 TD
([ Now we can explain more about literal states--we accumulate a list of \literal values and top-level variable )Tj
0 -1.2 TD
(bindings that must be accessible when the procedure runs. ] )Tj
0 -2.557 TD
(By now it should be very clear how you would translate each of these lit\tle operations in our intermediate )Tj
0 -1.2 TD
(representation into a few assembly-language instructions. )Tj
0 -2.557 TD
([ need picture? ] )Tj
ET
0 0 1 RG
1.553 w 10 M 0 j 0 J []0 d 
9.539 67.308 m
529.486 67.308 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.4903 0 0 18.4903 9.5387 71.9672 Tm
(Precomputing Local Variable Lookups using Lexical Scope)Tj
ET
EMC 
Q

endstreamendobj5994 0 obj[5844 0 R]endobj5995 0 obj<</Annots 6000 0 R/Parent 6008 0 R/ID 6144 0 R/StructParents 387/Contents 6127 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 766 0 R/T1_3 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj5996 0 obj<</Length 3461>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8994 Tm
(We can't really look up local variable bindings at compile time the way \we can toplevel bindings--local )Tj
0 -1.2 TD
(variable bindings don't exist yet when we're compiling the expressions t\hat create and use them. \(Consider the )Tj
0 -1.205 TD
(fact that every time you enter a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, or call a procedure that binds arguments, a new binding environment )Tj
0 -1.2 TD
(frame is created. Code that executes in such environments will see a dif\ferent binding environment frame in )Tj
T*
(the environment register each time it runs.\) )Tj
0 -2.557 TD
(What we )Tj
/T1_2 1 Tf
(can)Tj
/T1_0 1 Tf
( do is take advantage of lexical scope to precompute most of the )Tj
/T1_2 1 Tf
(search)Tj
/T1_0 1 Tf
( for a variable in an )Tj
0 -1.2 TD
(environment. )Tj
0 -2.557 TD
(Consider the execution of this procedure: )Tj
/T1_1 1 Tf
0 -2.562 TD
(  \(lambda \(x y\))Tj
0 -1.2 TD
(     \(let \(\(a <some-expression>)Tj
T*
(           \(b <some-expression>\)\))Tj
T*
(        \(list a b x y\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(When we compute the arguments to the call to )Tj
/T1_1 1 Tf
(list)Tj
/T1_0 1 Tf
(, it's obvious that the first and second variables \()Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
(\) )Tj
0 -1.205 TD
(will be in the first and second slots of the first binding environment f\rame, pointed directly to by the )Tj
/T1_1 1 Tf
(ENVT)Tj
/T1_0 1 Tf
( )Tj
T*
(register. This is the environment created by the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(. The third and fourth variables \()Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(y)Tj
/T1_0 1 Tf
(\) will be in the )Tj
0 -1.2 TD
(next environment frame, pointed to by the scope link of the first. )Tj
0 -2.557 TD
(The compiler can compute the )Tj
/T1_2 1 Tf
(lexical address)Tj
/T1_0 1 Tf
( of each variable binding at the point where a reference to it is's )Tj
0 -1.2 TD
(compiled--that's the )Tj
/T1_2 1 Tf
(relative location)Tj
/T1_0 1 Tf
( of the variable starting from the environment register. A lexical addre\ss )Tj
T*
(has two parts: the number of environment frames to skip to find the righ\t frame, and the offset of the binding )Tj
T*
(in that frame. In the above example, the lexical addresses are: )Tj
/T1_1 1 Tf
0 -2.562 TD
(   a:  0,1)Tj
0 -1.2 TD
(   b:  0,2)Tj
T*
(   x:  1,1)Tj
T*
(   y:  1,2)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(We use the convention that frame numbers start at zero, but slot numbe\rs appear to start at 1 because the )Tj
0 -1.2 TD
(scope link is in slot 0.\) )Tj
0 -2.557 TD
(The code generated for the reference to a can simply be an indexed load \instruction, using the environment )Tj
0 -1.2 TD
(register plus an offset to grab the value in the first variable binding \slot. In pseudo-C, that's something like )Tj
/T1_1 1 Tf
0 -2.562 TD
(  value_register = *\(envt_register + offset\))Tj
/T1_0 1 Tf
0 -2.552 TD
(where offset is probably 4 \(bytes\) to index past the scope link slot. \Slightly more abstractly, its lexical address )Tj
0 -1.2 TD
(is [ WHAT? ] )Tj
0 -2.562 TD
(The code for the reference to the variable )Tj
/T1_1 1 Tf
(y)Tj
/T1_0 1 Tf
( would involve one level of indirection--first the scope link pointer )Tj
0 -1.2 TD
(must be extracted from the first environment frame, and then that can be\ used for an indexed load to get the )Tj
ET
EMC 
Q

endstreamendobj5997 0 obj[5844 0 R]endobj5998 0 obj[5995 0 R/XYZ 0 732.221 null]endobj5999 0 obj<</Rect[9.53865 716.577 128.991 730.885]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC296)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC296)/S/URI>>/Border[0 0 0]>>endobj6000 0 obj[5999 0 R]endobj6001 0 obj<</Annots 6006 0 R/Parent 6008 0 R/ID 6144 0 R/StructParents 388/Contents 6128 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj6002 0 obj<</Length 4032>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8994 Tm
(value of the second slot of the second frame: )Tj
/T1_1 1 Tf
0 -2.562 TD
(  value_register = *\(envt_register\)  ; get ptr to 2nd envt frame)Tj
0 -1.2 TD
(  value_register = *\(envt_register + offset\))Tj
/T1_0 1 Tf
0 -2.557 TD
(where offset is probably 8 \(bytes\) to index past the scope link and th\e binding of )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Given this scheme, accessing a local variable takes time proportional to\ the number of environment frames )Tj
0 -1.2 TD
(intervening between between the expression being compiled and the enviro\nment where the referenced )Tj
T*
(variable is defined. That's usually fairly fast, for two reasons: )Tj
1.607 -2.557 Td
(1.  )Tj
(The depth of lexical nesting is usually small--it corresponds to the nes\ting of binding expressions in )Tj
1.25 -1.2 Td
(the program, and is usually between one and three, an only rarely greate\r than five or so. )Tj
-1.25 -1.2 Td
(2.  )Tj
(Most references that are executed at run time are to variables in the cu\rrent scope, or maybe a level or )Tj
1.25 -1.2 Td
(two back from that. \(Consider references to variables in inner loops, w\hich constitute the most )Tj
T*
(frequently-executed code in most programs.\) )Tj
-2.857 -2.557 Td
(For these reasons, most references to local variables will take between \one and five instructions. To a first )Tj
T*
(approximation, the time to reference local variables can be regarded as \a small constant. \(A slightly snazzier )Tj
T*
(compiler can reduce this by using more registers, and leaving many value\s in registers instead of pushing and )Tj
T*
(popping them from the eval stack, but that's a more advanced technique t\han we want to address here.\) )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 383.781 m
395.709 383.781 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.4086 0 0 15.4086 9.5387 387.6639 Tm
(Lexical Addressing and Compile-Time Environments)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 351.174 Tm
(Computing lexical addresses is very easy for the compiler. All it needs \to do is maintain a data structure )Tj
T*
(called a )Tj
/T1_3 1 Tf
(compile-time environment)Tj
/T1_0 1 Tf
(, which records the )Tj
/T1_3 1 Tf
(structure)Tj
/T1_0 1 Tf
( of the runtime environment. )Tj
0 -2.557 TD
(Each time the compiler compiles an expression that creates new bindings,\ it extends the compile-time )Tj
0 -1.2 TD
(environment to reflect the change to the environment structure, and when\ compiling expressions that will )Tj
0 -1.205 TD
(execute in that environment, it hands the new compile-time environment t\o the recursive call to )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(which will compile that expression. )Tj
0 -2.562 TD
(For example, when compiling a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, the compiler dispatches to )Tj
/T1_1 1 Tf
(compile-let)Tj
/T1_0 1 Tf
(, the analogue of )Tj
/T1_1 1 Tf
(eval-)Tj
0 -1.205 TD
(let)Tj
/T1_0 1 Tf
(, which does four things: )Tj
1.607 -2.557 Td
(1.  )Tj
(Compiles code for the initial value expressions. This code executes in t\he environment outside the )Tj
/T1_1 1 Tf
1.25 -1.205 Td
(let)Tj
/T1_0 1 Tf
(, so the )Tj
/T1_1 1 Tf
(compile-let)Tj
/T1_0 1 Tf
( uses the environment is was given when making recursive calls to )Tj
/T1_1 1 Tf
T*
(compile)Tj
/T1_0 1 Tf
( to generate the initial value code. )Tj
-1.25 -1.2 Td
(2.  )Tj
(Generates code to create a binding environment and intialize it with tho\se values. )Tj
0 -1.205 TD
(3.  )Tj
(Extends the compile-time environment with a new frame, reflecting the fa\ct that the body of the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( )Tj
1.25 -1.2 Td
(will execute in a new scope including the new bindings. )Tj
-1.25 -1.205 Td
(4.  )Tj
(Calls )Tj
/T1_1 1 Tf
(compile-sequence)Tj
/T1_0 1 Tf
( to compile the body of the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, passing it the new compile-time )Tj
1.25 -1.2 Td
(environment. )Tj
ET
EMC 
Q

endstreamendobj6003 0 obj[5844 0 R]endobj6004 0 obj[6001 0 R/XYZ 0 196.909 null]endobj6005 0 obj<</Rect[9.53865 175.616 307.51 195.06]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC297)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC297)/S/URI>>/Border[0 0 0]>>endobj6006 0 obj[6005 0 R]endobj6007 0 obj<</Parent 6048 0 R/ID 6144 0 R/StructParents 389/Contents 6129 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj6008 0 obj<</Parent 6083 0 R/Count 5/Type/Pages/Kids[5978 0 R 5989 0 R 5992 0 R 5995 0 R 6001 0 R]>>endobj6009 0 obj<</Length 3166>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 753.0307 Tm
(Just as the overall recursive structure of the compiler closely resemble\s the recursive structure of the )Tj
0 -1.2 TD
(interpreter, the role of the compile-time environment is very much like \the role of the environment in the )Tj
T*
(interpreter. )Tj
0 -2.557 TD
(When the interpreter \(compiler\) evaluates \(compiles\) subexpressions \that execute in the same environment as )Tj
0 -1.2 TD
(their parent expressions, it hands the recursive invocation the same env\ironment it was given. When the )Tj
T*
(interpreter \(compiler\) evaluates \(compiles\) an expression in a new e\nvironment, it hands the recursive call the )Tj
T*
(new \(compile-time\) environment. )Tj
0 -2.557 TD
(The structure of the compile time environment at any point in the compil\ation process mirrors the structure of )Tj
0 -1.2 TD
(the runtime environment where the code will execute. Unlike the interpre\ter's representation of the )Tj
T*
(environment, however, the compile-time environment doesn't contain actua\l bindings--it can't, and it doesn't )Tj
T*
(need to. )Tj
0 -2.557 TD
(In effect, we split the interpreter's environment into two parts with pa\rallel structure. Where the interpreter's )Tj
0 -1.2 TD
(environements are chains of frames holding name-binding pairs, the compi\ler splits those into two chains of )Tj
T*
(frames: the runtime environment, whose frames hold the actual bindings, \and the compile-time environment, )Tj
T*
(whose frames hold the corresponding names. )Tj
0 -2.557 TD
(Consider the expression )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(x 1\))Tj
0 -1.2 TD
(      \(y 2\)\))Tj
T*
(   \(let \(\(foo 3\))Tj
T*
(         \(bar 4\)\))Tj
T*
(      \(list foo bar x y\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(At the point where )Tj
/T1_1 1 Tf
(\(list a b x y\))Tj
/T1_0 1 Tf
( is compiled or executed, the environment for an interpreted system )Tj
0 -1.2 TD
(appears as shown on the left, below, while the environments for a compil\ed system appear as shown on the )Tj
T*
(right: )Tj
/T1_1 1 Tf
0 -2.562 TD
(     INTERPRETED                   COMPILED              COMPILED)Tj
0 -1.2 TD
(                                \(compile time\)          \(run time\))Tj
T*
(                    /\\                         /\\                   /\\\)Tj
T*
(                     |                          |                    |)Tj
T*
( +---------------+   |           +----------+   |     +----------+   |)Tj
T*
( |   envt. frame |   |           | c.t.e.fr.|   |     | envt. fr.|   |)Tj
T*
( +===============+  /            +==========+  /      +==========+  /)Tj
T*
( |          +----+-'             |     +----+-'       |     +----+-')Tj
T*
( +-------+-------+               +----------+         +----------+)Tj
T*
( |     x |     1 |               |        x |         |        1 |)Tj
T*
( +-------+-------+               +----------+         +----------+)Tj
T*
( |     y |     2 |               |        y |         |        2 |)Tj
T*
( +-------+-------+               +----------+         +----------+)Tj
ET
EMC 
Q

endstreamendobj6010 0 obj[5844 0 R]endobj6011 0 obj<</Annots 6016 0 R/Parent 6048 0 R/ID 6144 0 R/StructParents 390/Contents 6130 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R/T1_3 1287 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj6012 0 obj<</Length 3635>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8351 Tm
(                  _                         _                    _)Tj
0 -1.2 TD
(                 |\\                        |\\                   |\\)Tj
T*
(                   \\                         \\                    \\)Tj
T*
(                    \\                         \\                    \\)Tj
T*
( +---------------+   |           +----------+  |      +----------+  | )Tj
T*
( |   envt. frame |   |           | c.t.e.fr.|  |      | envt. fr.|  |)Tj
T*
( +===============+  /            +==========+  /      +==========+  /)Tj
T*
( |          +----+-'             |     +----+-'       |     +----+-')Tj
T*
( +-------+-------+               +----------+         +----------+)Tj
T*
( |   foo |     3 |               |      foo |         |        3 |)Tj
T*
( +---------------+               +----------+         +----------+)Tj
T*
( |   bar |     4 |               |      bar |         |        4 |)Tj
T*
( +-------+-------+               +----------+         +----------+)Tj
/T1_1 1 Tf
0 -2.552 TD
(Note that there is a many-to-one relationship between the compile-time e\nvironments and the run-time )Tj
0 -1.205 TD
(environments: a )Tj
/T1_0 1 Tf
(let)Tj
/T1_1 1 Tf
( or )Tj
/T1_0 1 Tf
(lambda)Tj
/T1_1 1 Tf
( expression is compiled once, and the corresponding environment frame is\ )Tj
0 -1.2 TD
(created and passed to the recursive calls that compile subexpressions. T\he code may be executed many times, )Tj
T*
(however, and each time a run-time environment frame will be created so t\hat the code for subexpressions can )Tj
T*
(be executed in that environment. )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 424.225 m
152.546 424.225 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.4086 0 0 15.4086 9.5387 428.1078 Tm
(A Detailed Example)Tj
0 0 0 rg
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 391.6178 Tm
(Taking it step by step, let's look at the compilation of the expression \)Tj
/T1_0 1 Tf
0 -2.562 TD
(\(let \(\(x 1234\))Tj
0 -1.2 TD
(      \(y 3456\)\))Tj
T*
(   \(let \(\(foo z\)\))Tj
T*
(      \(+ \(- foo x\))Tj
T*
(         \(+ bar y\)\)\)\))Tj
/T1_1 1 Tf
0 -2.552 TD
(goes as follows. \(We'll assume that this expression occurs at the top l\evel.\) )Tj
0 -2.557 TD
(Since we're compiling a top-level expression, we compile it in a compile\-time environment that corresponds )Tj
0 -1.2 TD
(to the top-level environment. Toplevel environments are treated speciall\y, because they're not created )Tj
T*
(dynamically the way local binding environments. There's a one-to-one rel\ationship bewteen top-level compile-)Tj
T*
(time environments and the corresponding run-time environments. We'll rep\resent the top-level compile-time )Tj
T*
(environment as a special kind of environment frame, which really just ho\lds a pointer to the top-level runtime )Tj
T*
(environment so that top-level variables can be looked up. )Tj
0 -2.562 TD
(So we start in a top-level environment, which we'll depict as )Tj
/T1_0 1 Tf
([top-level])Tj
/T1_1 1 Tf
(; we hand this to )Tj
/T1_0 1 Tf
(compile)Tj
/T1_1 1 Tf
( )Tj
0 -1.205 TD
(along with the expression to compile. )Tj
/T1_0 1 Tf
(compile)Tj
/T1_1 1 Tf
( is the main dispatch that analyzes the expression; in this )Tj
0 -1.205 TD
(case, it analyzes it and dispatches \(via )Tj
/T1_0 1 Tf
(compile-list)Tj
/T1_1 1 Tf
( and )Tj
/T1_0 1 Tf
(compile-special-form)Tj
/T1_1 1 Tf
(\) to )Tj
/T1_0 1 Tf
(compile-)Tj
T*
(let)Tj
/T1_1 1 Tf
(, the specialized procedure for compiling )Tj
/T1_0 1 Tf
(let)Tj
/T1_1 1 Tf
( expressions. )Tj
ET
EMC 
Q

endstreamendobj6013 0 obj[5844 0 R]endobj6014 0 obj[6011 0 R/XYZ 0 559.979 null]endobj6015 0 obj<</Rect[9.53865 538.454 452.197 558.13]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC298)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC298)/S/URI>>/Border[0 0 0]>>endobj6016 0 obj[6015 0 R]endobj6017 0 obj<</Annots 6022 0 R/Parent 6048 0 R/ID 6144 0 R/StructParents 391/Contents 6132 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj6018 0 obj<</Length 4230>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8351 Tm
(compile-let)Tj
/T1_1 1 Tf
( compiles the initial value expressions for )Tj
/T1_0 1 Tf
(x)Tj
/T1_1 1 Tf
( and )Tj
/T1_0 1 Tf
(y)Tj
/T1_1 1 Tf
( using )Tj
/T1_0 1 Tf
(compile-multi)Tj
/T1_1 1 Tf
(, which in turn )Tj
0 -1.205 TD
(calls )Tj
/T1_0 1 Tf
(compile)Tj
/T1_1 1 Tf
( recursively; they are compiled in the \(top-level\) environment, which \is just passed along )Tj
0 -1.2 TD
(because no new environments have been created yet. In this case it doesn\'t matter, though, because they're just )Tj
0 -1.205 TD
(literals. \(The values )Tj
/T1_0 1 Tf
(1234)Tj
/T1_1 1 Tf
( and )Tj
/T1_0 1 Tf
(3456)Tj
/T1_1 1 Tf
( get added to the literal list at this point.\) Then )Tj
/T1_0 1 Tf
(compile-let)Tj
/T1_1 1 Tf
( )Tj
T*
(generates the code to bind )Tj
/T1_0 1 Tf
(x)Tj
/T1_1 1 Tf
( and )Tj
/T1_0 1 Tf
(y)Tj
/T1_1 1 Tf
(. )Tj
0 -2.557 TD
(So far, the code generated looks like: )Tj
/T1_0 1 Tf
0 -2.562 TD
(  \(fetch-literal #1\)    ; fetch 1234)Tj
0 -1.2 TD
(  \(push\)                ; push it on eval stack)Tj
0 -1.2 TD
(  \(fetch-literal #2\)    ; fetch 3456)Tj
0 -1.2 TD
(  \(push\)                ; push it on eval stack)Tj
T*
(  \(bind 2\)              ; bind 2 vars \(x and y\), w/values form eval \stack)Tj
/T1_1 1 Tf
0 -2.557 TD
(and the literals list holds )Tj
/T1_0 1 Tf
(1234)Tj
/T1_1 1 Tf
( and )Tj
/T1_0 1 Tf
(3456)Tj
/T1_1 1 Tf
(. )Tj
/T1_0 1 Tf
0 -2.562 TD
(compile-let)Tj
/T1_1 1 Tf
( then calls )Tj
/T1_0 1 Tf
(compile-sequence)Tj
/T1_1 1 Tf
( to compile the body of the )Tj
/T1_0 1 Tf
(let)Tj
/T1_1 1 Tf
(, but first it creates a new )Tj
0 -1.2 TD
(compile-time environment, to represent the fact that the body sequence w\ill execute in the new runtime )Tj
0 -1.205 TD
(environment after )Tj
/T1_0 1 Tf
(x)Tj
/T1_1 1 Tf
( and )Tj
/T1_0 1 Tf
(y)Tj
/T1_1 1 Tf
( have been bound. The structure of this environment is )Tj
/T1_0 1 Tf
0 -2.562 TD
(   [ x y ] -> [toplevel])Tj
/T1_1 1 Tf
0 -2.552 TD
(\(This is our new, terse way of drawing the box-and-arrow data structure\ for compile time environments. I got )Tj
0 -1.2 TD
(tired of drawing ascii art.\) )Tj
/T1_0 1 Tf
0 -2.562 TD
(compile-sequence)Tj
/T1_1 1 Tf
( calls )Tj
/T1_0 1 Tf
(compile)Tj
/T1_1 1 Tf
( recursively to evaluate a sequence of expressions; in this case, there'\s )Tj
0 -1.2 TD
(only one expression in the body. )Tj
0 -2.562 TD
(The recursive call to )Tj
/T1_0 1 Tf
(compile)Tj
/T1_1 1 Tf
( dispatches \(again via )Tj
/T1_0 1 Tf
(compile-list)Tj
/T1_1 1 Tf
( and )Tj
/T1_0 1 Tf
(compile-special-form)Tj
/T1_1 1 Tf
( to )Tj
/T1_0 1 Tf
0 -1.205 TD
(compile-let)Tj
/T1_1 1 Tf
(, to compile the inner )Tj
/T1_0 1 Tf
(let)Tj
/T1_1 1 Tf
(. )Tj
/T1_0 1 Tf
0 -2.562 TD
(compile-let)Tj
/T1_1 1 Tf
( compiles the initial value expressions using )Tj
/T1_0 1 Tf
(compile-multi)Tj
/T1_1 1 Tf
(. )Tj
/T1_0 1 Tf
(compile-multi)Tj
/T1_1 1 Tf
( calls )Tj
/T1_0 1 Tf
0 -1.205 TD
(compile)Tj
/T1_1 1 Tf
( recursively to compile the one expression in the list, the symbol )Tj
/T1_0 1 Tf
(z)Tj
/T1_1 1 Tf
(. \(Again, the same environment )Tj
0 -1.2 TD
(is just passed along, because we haven't created a new environment.\) )Tj
0 -2.562 TD
(The recursive call to compile now dispatches to )Tj
/T1_0 1 Tf
(compile-symbol)Tj
/T1_1 1 Tf
(, which looks up the binding information )Tj
0 -1.205 TD
(for the symbol )Tj
/T1_0 1 Tf
(z)Tj
/T1_1 1 Tf
( in the compile-time environment. There's no binding in the first frame \\(containing )Tj
/T1_0 1 Tf
(x)Tj
/T1_1 1 Tf
( and )Tj
/T1_0 1 Tf
(y)Tj
/T1_1 1 Tf
(\), )Tj
0 -1.2 TD
(so the search goes to the second frame, which is the top-level environme\nt, and the top-level binding is )Tj
0 -1.205 TD
(returned. This causes a dispatch to )Tj
/T1_0 1 Tf
(compile-toplevel-var-ref)Tj
/T1_1 1 Tf
(, which adds the toplevel binding of )Tj
/T1_0 1 Tf
(z)Tj
/T1_1 1 Tf
( )Tj
0 -1.2 TD
(to the literals list and generates code to get it from the template and \extract its value at run time. )Tj
0 -2.562 TD
(Then )Tj
/T1_0 1 Tf
(compile-let)Tj
/T1_1 1 Tf
( generates code to bind the fetched value as the local variable foo. )Tj
0 -2.557 TD
(The code generated so far is: )Tj
ET
EMC 
Q

endstreamendobj6019 0 obj[5844 0 R]endobj6020 0 obj[6017 0 R/XYZ 0 507.948 null]endobj6021 0 obj<</Rect[9.53865 486.654 286.93 506.098]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC299)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC299)/S/URI>>/Border[0 0 0]>>endobj6022 0 obj[6021 0 R]endobj6023 0 obj<</Annots 6028 0 R/Parent 6048 0 R/ID 6144 0 R/StructParents 392/Contents 6133 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj6024 0 obj<</Length 3450>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 736.6033 Tm
(  \(fetch-literal 1\)    ; fetch 1234)Tj
0 -1.2 TD
(  \(push\))Tj
T*
(  \(fetch-literal 2\)    ; fetch 3456)Tj
T*
(  \(push\))Tj
T*
(  \(bind 2\)             ; bind 2 values \(x and y\))Tj
T*
(  \(fetch-literal 3\)       ; get toplevel binding \(of z\))Tj
T*
(  \(t-l-bdg-get\)           ; get value from \(z's\) binding)Tj
T*
(  \(push\))Tj
T*
(  \(bind 1\)                ; bind one variable \(foo\))Tj
/T1_1 1 Tf
0 -2.557 TD
(and the literals list contains )Tj
/T1_0 1 Tf
(1234)Tj
/T1_1 1 Tf
(, )Tj
/T1_0 1 Tf
(3456)Tj
/T1_1 1 Tf
(, and the binding of )Tj
/T1_0 1 Tf
(z)Tj
/T1_1 1 Tf
(. Now )Tj
/T1_0 1 Tf
(compile-let)Tj
/T1_1 1 Tf
( creates a new compile-)Tj
0 -1.205 TD
(time environment to represent the environment created by the inner )Tj
/T1_0 1 Tf
(let)Tj
/T1_1 1 Tf
(; its structure is )Tj
/T1_0 1 Tf
0 -2.562 TD
( [ foo ] -> [ x y ] -> [toplevel])Tj
/T1_1 1 Tf
0 -2.557 TD
(and it passes this to )Tj
/T1_0 1 Tf
(compile-sequence)Tj
/T1_1 1 Tf
( to compile the body of the let. )Tj
/T1_0 1 Tf
(compile-sequence)Tj
/T1_1 1 Tf
( calls )Tj
/T1_0 1 Tf
0 -1.205 TD
(compile)Tj
/T1_1 1 Tf
( recursively once, handing it the new environment, to compile the one bo\dy expression, )Tj
/T1_0 1 Tf
(\(+ \(- )Tj
0 -1.205 TD
(foo x\) \(+ bar y\)\))Tj
/T1_1 1 Tf
(. )Tj
0 -2.562 TD
(The recursive call to )Tj
/T1_0 1 Tf
(compile)Tj
/T1_1 1 Tf
( dispatches \(through )Tj
/T1_0 1 Tf
(compile-list)Tj
/T1_1 1 Tf
(\) to )Tj
/T1_0 1 Tf
(compile-combo)Tj
/T1_1 1 Tf
(, which )Tj
0 -1.205 TD
(recursively calls )Tj
/T1_0 1 Tf
(compile)Tj
/T1_1 1 Tf
( three times, to generate code for the subexpressions )Tj
/T1_0 1 Tf
(\(+ bar y\))Tj
/T1_1 1 Tf
(, )Tj
/T1_0 1 Tf
(\(- foo x\))Tj
/T1_1 1 Tf
(, )Tj
0 -1.205 TD
(and )Tj
/T1_0 1 Tf
(+)Tj
/T1_1 1 Tf
(. Since no new bindings are being created, the recursive calls are given\ the same environment. )Tj
0 -2.562 TD
(The recursive call to call )Tj
/T1_0 1 Tf
(\(+ bar y\))Tj
/T1_1 1 Tf
( similarly dispatches to )Tj
/T1_0 1 Tf
(compile-combo)Tj
/T1_1 1 Tf
( and compiles )Tj
/T1_0 1 Tf
(y)Tj
/T1_1 1 Tf
(, )Tj
/T1_0 1 Tf
(bar)Tj
/T1_1 1 Tf
(, and )Tj
/T1_0 1 Tf
0 -1.205 TD
(+)Tj
/T1_1 1 Tf
(. Each of these calls dispatches to )Tj
/T1_0 1 Tf
(compile-symbol)Tj
/T1_1 1 Tf
( and the variables are looked up in the compile-time )Tj
0 -1.205 TD
(environment. The lookup for )Tj
/T1_0 1 Tf
(y)Tj
/T1_1 1 Tf
( returns a lexical address of 1,2, so the intermediate code generated is\ )Tj
/T1_0 1 Tf
0 -2.562 TD
(  \(local-var-ref 1 2\))Tj
/T1_1 1 Tf
0 -2.552 TD
(The lookup for bar doesn't find any local bindings and returns the tople\vel binding so the binding is added to )Tj
0 -1.2 TD
(the literal list and the intermediate code is )Tj
/T1_0 1 Tf
0 -2.562 TD
(  \(literal-lookup 4\))Tj
0 -1.2 TD
(  \(t-l-bdg-get\))Tj
/T1_1 1 Tf
0 -2.557 TD
(Similarly, the lookup for )Tj
/T1_0 1 Tf
(+)Tj
/T1_1 1 Tf
( doesn't find any local bindings and returns the toplevel binding, so th\e binding is )Tj
0 -1.2 TD
(added to the literal list and the intermediate code is )Tj
/T1_0 1 Tf
0 -2.562 TD
(  \(literal-lookup 4\))Tj
0 -1.2 TD
(  \(t-l-bdg-get\))Tj
/T1_1 1 Tf
0 -2.557 TD
(now the call to )Tj
/T1_0 1 Tf
(compile-combo)Tj
/T1_1 1 Tf
( that compiles )Tj
/T1_0 1 Tf
(\(+ bar y\))Tj
/T1_1 1 Tf
( can string these three fragments together to )Tj
0 -1.2 TD
(get )Tj
ET
EMC 
Q

endstreamendobj6025 0 obj[6023 0 R/XYZ 0 749.115 null]endobj6026 0 obj[5844 0 R]endobj6027 0 obj<</Rect[9.53865 727.821 309.544 747.266]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC300)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC300)/S/URI>>/Border[0 0 0]>>endobj6028 0 obj[6027 0 R 6030 0 R 6032 0 R 6034 0 R]endobj6029 0 obj[6023 0 R/XYZ 0 425.949 null]endobj6030 0 obj<</Rect[9.53865 408.045 150.82 424.408]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC301)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC301)/S/URI>>/Border[0 0 0]>>endobj6031 0 obj[6023 0 R/XYZ 0 387.427 null]endobj6032 0 obj<</Rect[9.53865 371.784 82.2652 386.092]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC302)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC302)/S/URI>>/Border[0 0 0]>>endobj6033 0 obj[6023 0 R/XYZ 0 86.5779 null]endobj6034 0 obj<</Rect[9.53865 70.9345 108.973 85.2425]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC303)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC303)/S/URI>>/Border[0 0 0]>>endobj6035 0 obj<</Annots 6042 0 R/Parent 6048 0 R/ID 6144 0 R/StructParents 393/Contents 6134 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj6036 0 obj<</Length 3363>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 736.6878 Tm
(  \(save-continuation "resume26"\) ; save state for call to +)Tj
0 -1.2 TD
(  \(local-var-ref 1 2\)            ; look up y)Tj
T*
(  \(push\))Tj
T*
(  \(literal-lookup 4\)             ; get toplevel binding \(of bar\))Tj
T*
(  \(t-l-bdg-get\)                  ; get value from bdg \(of bar\))Tj
T*
(  \(push\))Tj
T*
(  \(literal-lookup 5\)             ; get toplevel binding \(of +\))Tj
T*
(  \(t-l-bdg-get\)                  ; get value from binding \(of +\))Tj
T*
(  \(apply\)                        ; call +)Tj
T*
("resume26"                    )Tj
/T1_1 1 Tf
0 -2.557 TD
(and return that. Notice that for the argument subexpressions, )Tj
/T1_0 1 Tf
(compile-combo)Tj
/T1_1 1 Tf
( inserts )Tj
/T1_0 1 Tf
(\(push\))Tj
/T1_1 1 Tf
(es to save )Tj
0 -1.2 TD
(the values on the eval stack. For the first \(function position\) subexp\ression, it leaves the value in the value )Tj
0 -1.205 TD
(register, which is where it's expected \(by )Tj
/T1_0 1 Tf
(apply)Tj
/T1_1 1 Tf
(\). )Tj
0 -2.562 TD
(The recursive call to )Tj
/T1_0 1 Tf
(compile-combo)Tj
/T1_1 1 Tf
( to compile )Tj
/T1_0 1 Tf
(\(- foo x\))Tj
/T1_1 1 Tf
( goes pretty similarly to the one for )Tj
/T1_0 1 Tf
(\(+ )Tj
0 -1.205 TD
(bar y\))Tj
/T1_1 1 Tf
(, the main difference being that both )Tj
/T1_0 1 Tf
(foo)Tj
/T1_1 1 Tf
( and )Tj
/T1_0 1 Tf
(x)Tj
/T1_1 1 Tf
( are found to be local variables and compiled )Tj
0 -1.2 TD
(appropriately, with the result being the sequence )Tj
/T1_0 1 Tf
0 -2.562 TD
(  \(save-continuation "resume27"\) ; save state for call to -)Tj
0 -1.2 TD
(  \(local-var-ref 1 2\)            ; look up x)Tj
T*
(  \(push\))Tj
T*
(  \(local-var-ref 0 1\)            ; look up foo)Tj
T*
(  \(push\))Tj
T*
(  \(literal-lookup 4\)             ; get toplevel binding \(of -\))Tj
T*
(  \(t-l-bdg-get\)                  ; get value from binding \(of -\))Tj
T*
(  \(apply\)                     ; call -)Tj
0 -1.2 TD
("resume27")Tj
/T1_1 1 Tf
0 -2.557 TD
(The recursive call to compile the symbol )Tj
/T1_0 1 Tf
(+)Tj
/T1_1 1 Tf
( goes striaghtforwardly to )Tj
/T1_0 1 Tf
(compile-symbol)Tj
/T1_1 1 Tf
(, which looks up )Tj
/T1_0 1 Tf
(+)Tj
/T1_1 1 Tf
( )Tj
0 -1.2 TD
(and finds that it's a toplevel variable; the binding is already on the l\iterals list, so the code generated is: )Tj
/T1_0 1 Tf
0 -2.562 TD
(  \(literal-lookup 5\)   ; get toplevel binding \(of +\))Tj
0 -1.2 TD
(  \(t-l-bdg-get\)        ; get value from binding \(of +\))Tj
/T1_1 1 Tf
0 -2.557 TD
(and this is returned to the outer invocation of )Tj
/T1_0 1 Tf
(compile combo)Tj
/T1_1 1 Tf
(. It can then string together the code for the )Tj
0 -1.205 TD
(outer )Tj
/T1_0 1 Tf
(+)Tj
/T1_1 1 Tf
( expression, putting a )Tj
/T1_0 1 Tf
(save-continuation)Tj
/T1_1 1 Tf
( at the front and adding an )Tj
/T1_0 1 Tf
(apply)Tj
/T1_1 1 Tf
( at the end. This )Tj
0 -1.205 TD
(code is returned to the inner invocation of )Tj
/T1_0 1 Tf
(compile-let)Tj
/T1_1 1 Tf
(, which appends it to its code and returns it to the )Tj
0 -1.205 TD
(outer invocation of )Tj
/T1_0 1 Tf
(compile-let)Tj
/T1_1 1 Tf
(, which returns the entire code sequence )Tj
/T1_0 1 Tf
0 -2.562 TD
(  \(fetch-literal 1\)    ; fetch 1234)Tj
0 -1.2 TD
(  \(push\))Tj
T*
(  \(fetch-literal 2\)    ; fetch 3456)Tj
ET
EMC 
Q

endstreamendobj6037 0 obj[5844 0 R]endobj6038 0 obj[6035 0 R/XYZ 0 567.102 null]endobj6039 0 obj<</Limits[(fo\\\\Öq0v%O›/!Í¿VÀIDX88)(lç≤°◊0*ÆVÅåN∏wŒSEC291)]/Names[(fo\\\\Öq0v%O›/!Í¿VÀIDX88)3235 0 R(fo\\\\Öq0v%O›/!Í¿VÀSEC87)3233 0 R(inƒ#;4”Z¡–ySeèSEC26)1471 0 R(iÏ›»Ü˙:∞—∞ˆT{T{˛SEC161)4880 0 R(iÏ›»Ü˙:∞—∞ˆT{T{˛SEC162)4882 0 R(iÏ›»Ü˙:∞—∞ˆT{T{˛SEC163)4889 0 R(iÏ›»Ü˙:∞—∞ˆT{T{˛SEC164)4896 0 R(iÏ›»Ü˙:∞—∞ˆT{T{˛SEC165)4902 0 R(iÏ›»Ü˙:∞—∞ˆT{T{˛SEC166)4905 0 R(iÏ›»Ü˙:∞—∞ˆT{T{˛SEC167)4911 0 R(iÏ›»Ü˙:∞—∞ˆT{T{˛SEC168)4914 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC271)5853 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC272)5857 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC273)5859 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC274)5863 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC275)5871 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC276)5874 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC277)5878 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC278)5883 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC279)5886 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC280)5890 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC281)5893 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC282)5897 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC283)5905 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC284)5908 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC285)5910 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC286)5915 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC287)5921 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC288)5924 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC289)5933 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC290)5940 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC291)5947 0 R]>>endobj6040 0 obj<</Limits[(lç≤°◊0*ÆVÅåN∏wŒSEC292)(ÖÏÿß\r\\ÛïVc˜íû∑rFOOT6)]/Names[(lç≤°◊0*ÆVÅåN∏wŒSEC292)5956 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC293)5966 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC294)5984 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC295)5987 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC296)5998 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC297)6004 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC298)6014 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC299)6020 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC300)6025 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC301)6029 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC302)6031 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC303)6033 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC304)6038 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC305)6043 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC306)6045 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC307)6051 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC308)6054 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC309)6059 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC310)6071 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC311)6074 0 R(lç≤°◊0*ÆVÅåN∏wŒSEC312)6076 0 R(l˜?Òz„ås_Y“|Pc_ÊSEC150)4650 0 R(m%!='N÷¸Xüy∏®h¯SEC12)1055 0 R(o{ïbWc'7¥¥YÉ/SEC97)3528 0 R(p±“äE∆0·Ìü≈ôV”SEC9)961 0 R(~'ı?5\r’{ﬂƒ≠\\=ò˜2SEC93)3415 0 R(ÅˆÜ'`{FAÜÕ©$DóIDX86)3050 0 R(ÅˆÜ'`{FAÜÕ©$DóSEC81)3048 0 R(ÅÔrÂH˚íÓR‡ÚõI∞…SEC133)4332 0 R(Åıí«’ç*LvY€ ∆7øIDX13)1344 0 R(Åıí«’ç*LvY€ ∆7øSEC21)1335 0 R(É2≤À∫m¶	◊v|˘çIDX87)3193 0 R(É2≤À∫m¶	◊v|˘çSEC86)3191 0 R(ÉπDÒLM˙%H’^!’SEC3)786 0 R(ÑÅ'kFﬁx\\¯RáÚéwySEC89)3296 0 R(ÖøÔWØ”3ä∆é4/{ˆ6FOOT4)2852 0 R(ÖøÔWØ”3ä∆é4/{ˆ6IDX77)2849 0 R(ÖøÔWØ”3ä∆é4/{ˆ6IDX78)2850 0 R(ÖøÔWØ”3ä∆é4/{ˆ6IDX79)2851 0 R(ÖøÔWØ”3ä∆é4/{ˆ6SEC75)2847 0 R(ÖÏÿß\r\\ÛïVc˜íû∑rFOOT6)4404 0 R]>>endobj6041 0 obj<</Rect[9.53865 549.198 81.4506 565.561]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC304)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC304)/S/URI>>/Border[0 0 0]>>endobj6042 0 obj[6041 0 R 6044 0 R 6046 0 R]endobj6043 0 obj[6035 0 R/XYZ 0 528.58 null]endobj6044 0 obj<</Rect[9.53865 507.287 479.1 526.731]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC305)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC305)/S/URI>>/Border[0 0 0]>>endobj6045 0 obj[6035 0 R/XYZ 0 486.361 null]endobj6046 0 obj<</Rect[9.53865 468.457 198.787 484.82]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC306)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC306)/S/URI>>/Border[0 0 0]>>endobj6047 0 obj<</Annots 6053 0 R/Parent 6079 0 R/ID 6144 0 R/StructParents 394/Contents 6135 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R/T1_3 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj6048 0 obj<</Parent 6083 0 R/Count 5/Type/Pages/Kids[6007 0 R 6011 0 R 6017 0 R 6023 0 R 6035 0 R]>>endobj6049 0 obj<</Length 3158>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8351 Tm
(  \(push\))Tj
0 -1.2 TD
(  \(bind 2\)             ; bind 2 values \(x and y\))Tj
T*
(  \(fetch-literal 3\)       ; get toplevel binding \(of z\))Tj
T*
(  \(t-l-bdg-get\)           ; get value from \(z's\) binding)Tj
T*
(  \(push\))Tj
T*
(  \(bind 1\)                ; bind one variable \(foo\))Tj
T*
(  \(save-continuation "resume26"\) ; save state for call to +)Tj
T*
(  \(local-var-ref 1 2\)            ; look up y)Tj
T*
(  \(push\))Tj
T*
(  \(literal-lookup 4\)             ; get toplevel binding \(of bar\))Tj
T*
(  \(t-l-bdg-get\)                  ; get value from bdg \(of bar\))Tj
T*
(  \(push\))Tj
T*
(  \(literal-lookup 5\)             ; get toplevel binding \(of +\))Tj
0 -1.2 TD
(  \(t-l-bdg-get\)                  ; get value from binding \(of +\))Tj
0 -1.2 TD
(  \(apply\)                     ; call +)Tj
T*
("resume26")Tj
T*
(  \(save-continuation "resume27"\) ; save state for call to -)Tj
T*
(  \(local-var-ref 1 2\)            ; look up x)Tj
T*
(  \(push\))Tj
T*
(  \(local-var-ref 0 1\)            ; look up foo)Tj
T*
(  \(push\))Tj
T*
(  \(literal-lookup 4\)             ; get toplevel binding \(of -\))Tj
T*
(  \(t-l-bdg-get\)                  ; get value from binding \(of -\))Tj
T*
(  \(apply\)                     ; call -)Tj
T*
("resume27")Tj
T*
(  \(literal-lookup 5\)          ; get toplevel binding \(of +\))Tj
T*
(  \(t-l-bdg-get\)               ; get value from binding \(of +\))Tj
T*
(  \(apply\)                  ; \(tail-\)call + )Tj
ET
0 0 1 RG
1.553 w 10 M 0 j 0 J []0 d 
9.539 278.686 m
590.079 278.686 l
S
0 0 1 rg
BT
/T1_1 1 Tf
18.4903 0 0 18.4903 9.5387 283.3459 Tm
(Preserving Tail-Recursiveness using Compile-Time Continuations)Tj
0 0 0 rg
/T1_2 1 Tf
13.3541 0 0 13.3541 9.5387 245.8581 Tm
(One very important thing we glossed over just now when describing the wo\rkings of the compiler was when )Tj
T*
(exactly to save continuations, and when not to. It is important to save \continuations before calling procedures, )Tj
T*
(if the callee must return and resume the execution of the caller. This i\s not necessary for tail calls, and in fact )Tj
0 -1.205 TD
(Scheme requires that continuations )Tj
/T1_0 1 Tf
(not)Tj
/T1_2 1 Tf
( be saved for tail calls--if we save continuations before tail-calls tha\t )Tj
0 -1.2 TD
(happen to implement loops, we may end up with an unbounded accumulation \of unnecessary continuations. )Tj
0 -2.557 TD
(Another important question is when returns should be executed. If a proc\edure ends in a tail-call, it is )Tj
0 -1.2 TD
(assumed that the callee will do a return. But eventually something actua\lly has to do a return, and pass control )Tj
T*
(back to its caller \(or the caller of its caller... whatever\). This sit\uation occurs when the tail expression of a )Tj
T*
(procedure is not another procedure call, e.g., returning the value of a \variable or a literal. )Tj
ET
1.294 w 
9.539 59.408 m
292.918 59.408 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 63.291 Tm
(When Should We Save Continuations?)Tj
ET
EMC 
Q

endstreamendobj6050 0 obj[5844 0 R]endobj6051 0 obj[6047 0 R/XYZ 0 585.898 null]endobj6052 0 obj<</Rect[9.53865 567.994 281.855 584.357]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC307)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC307)/S/URI>>/Border[0 0 0]>>endobj6053 0 obj[6052 0 R 6055 0 R]endobj6054 0 obj[6047 0 R/XYZ 0 152.092 null]endobj6055 0 obj<</Rect[9.53865 134.189 242.44 150.552]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC308)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC308)/S/URI>>/Border[0 0 0]>>endobj6056 0 obj<</Annots 6061 0 R/Parent 6079 0 R/ID 6144 0 R/StructParents 395/Contents 6136 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj6057 0 obj<</Length 3523>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8994 Tm
(The general rule is that if a procedure call is the last thing a procedu\re does, no continuation should be saved--)Tj
0 -1.2 TD
(we can just jump into the callee, and since our state was not saved, the\ callee's return will resume our caller. )Tj
T*
(To get this right, we just have to keep track of which expressions are b\eing compiled in "tail position." )Tj
0 -2.557 TD
(In the procedure )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(lambda \(x\))Tj
0 -1.2 TD
(   \(if \(foo x\))Tj
T*
(       \(bar \(quux x\)\))Tj
T*
(       \(baz\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(the )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( expression is in tail position, because the value of the if will be ret\urned as the value of the procedure. )Tj
0 -1.205 TD
(The condition expression )Tj
/T1_1 1 Tf
(\(foo x\))Tj
/T1_0 1 Tf
( is not in tail position, because after it is executed, control must ret\urn to )Tj
0 -1.205 TD
(this procedure so that either the consequent expression )Tj
/T1_1 1 Tf
(\(bar \(quux x\)\))Tj
/T1_0 1 Tf
( or the alternative expression )Tj
/T1_1 1 Tf
0 -1.205 TD
(\(baz\))Tj
/T1_0 1 Tf
( can be executed. )Tj
0 -2.557 TD
(Note that both the consequent and the alternative expressions are in tai\l-position; whichever is executed, that )Tj
0 -1.2 TD
(will be the last thing this procedure does, and the value computed will \be the result of this procedure. )Tj
0 -2.562 TD
(On the other hand, if we modify the procedure to always return )Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
(, none of these expressions is in tail )Tj
0 -1.2 TD
(position. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(lambda \(x\))Tj
0 -1.2 TD
(   \(if \(foo x\))Tj
T*
(       \(bar \(quux x\)\))Tj
T*
(       \(baz\)\))Tj
T*
(   #f\)                                                  )Tj
/T1_0 1 Tf
0 -2.557 TD
(That's because now the expression )Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
( is in tail position, not the )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( expression; whatever the if does, control )Tj
0 -1.205 TD
(must come back to this procedure so that the value )Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
( can be returned. )Tj
0 -2.557 TD
(Notice that the values to compute the arguments of a combination \(proce\dure call\) are never in tail position--)Tj
0 -1.2 TD
(after computing them, control must always come back so that the procedur\e can be applied. The combination )Tj
T*
(itself may be a tail call, of course, in which case once the arguments a\re computed, the apply may happen and )Tj
T*
(control may never return. )Tj
0 -2.557 TD
(To get this kind of right, all that is necessary is that each recursive \call to compile should know whether the )Tj
0 -1.2 TD
(code being compiled is going to be used in tail position or not; for thi\s we use a )Tj
/T1_2 1 Tf
(compile-time continuation)Tj
/T1_0 1 Tf
(. )Tj
T*
(\(Fear not--it's simpler than compile time environments. It's really jus\t a flag that gets passed along to )Tj
0 -1.205 TD
(recursive calls to )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
(, sometimes getting turned off along the way.\) Keep in mind that tails \of tails are )Tj
0 -1.205 TD
(in tail positions, but non-tail subexpressions are not. So in the case o\f nested )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
('s where the outer )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( is in tail )Tj
0 -1.2 TD
(position, only the consequent and the alternative of the consequent and \the alternative are in tail position, e.g., )Tj
T*
(in )Tj
ET
EMC 
Q

endstreamendobj6058 0 obj[5844 0 R]endobj6059 0 obj[6056 0 R/XYZ 0 323.203 null]endobj6060 0 obj<</Rect[9.53865 305.3 134.564 321.662]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC309)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC309)/S/URI>>/Border[0 0 0]>>endobj6061 0 obj[6060 0 R]endobj6062 0 obj<</Parent 6079 0 R/ID 6144 0 R/StructParents 396/Contents 6137 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj6063 0 obj<</Length 4092>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8351 Tm
(\(lambda \(\))Tj
0 -1.2 TD
(   \(if \(if \(a\))Tj
T*
(           \(b\))Tj
T*
(           \(c\)\))Tj
T*
(       \(if \(d\))Tj
T*
(           \(e\))Tj
T*
(           \(f\)\))Tj
T*
(       \(if \(g\))Tj
T*
(           \(h\))Tj
T*
(           \(i\)\)\))Tj
/T1_1 1 Tf
0 -2.557 TD
(the tail calls are )Tj
/T1_0 1 Tf
(\(e\))Tj
/T1_1 1 Tf
(, )Tj
/T1_0 1 Tf
(\(f\))Tj
/T1_1 1 Tf
(, )Tj
/T1_0 1 Tf
(\(h\))Tj
/T1_1 1 Tf
(, and )Tj
/T1_0 1 Tf
(\(i\))Tj
/T1_1 1 Tf
(. All of the calls in the first inner )Tj
/T1_0 1 Tf
(if)Tj
/T1_1 1 Tf
( must return, because the value )Tj
0 -1.205 TD
(returned must be used by the outer )Tj
/T1_0 1 Tf
(if)Tj
/T1_1 1 Tf
(. The calls to the condition expressions in the other two inner ifs must\ )Tj
0 -1.2 TD
(also return, because the values must be used to tell which of )Tj
/T1_2 1 Tf
(their)Tj
/T1_1 1 Tf
( alternative and consequent to use. )Tj
0 -2.557 TD
(For each basic kind of expression, we can tell which subexpressions shou\ld be considered tails if the overall )Tj
0 -1.2 TD
(expression is: )Tj
/T1_3 1 Tf
6.6771 0 0 6.6771 34.0654 460.0264 Tm
(l)Tj
/T1_1 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 460.0264 Tm
(For a sequence, only the last subexpression can be a tail--the rest are \non-tails. )Tj
/T1_3 1 Tf
6.6771 0 0 6.6771 34.0654 443.9372 Tm
(l)Tj
/T1_1 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 443.9372 Tm
(For )Tj
/T1_0 1 Tf
(let)Tj
/T1_1 1 Tf
(, the initial value expressions for bindings are never tails, and the bo\dy is just a sequence, )Tj
T*
(whose last subexpression can be a tail. )Tj
/T1_3 1 Tf
6.6771 0 0 6.6771 34.0654 411.8873 Tm
(l)Tj
/T1_1 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 411.8873 Tm
(For an if, the consequent and alternative can be tails, but the conditio\n never can. )Tj
/T1_3 1 Tf
6.6771 0 0 6.6771 34.0654 395.8624 Tm
(l)Tj
/T1_1 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 395.8624 Tm
(For a procedure, the body is a sequence that's always in tail position. \)Tj
-2.857 -2.562 Td
(When we compile something in tail position, we pass )Tj
/T1_0 1 Tf
(compile)Tj
/T1_1 1 Tf
( a flag saying so. The flag will be examined, )Tj
T*
(and passed along to subexpressions if appropriate for compiling the kind\ of subexpression in question. )Tj
0 -2.562 TD
(For example, if )Tj
/T1_0 1 Tf
(compile-sequence)Tj
/T1_1 1 Tf
( is handed a flag saying it should compile for tail position, it will pa\ss )Tj
0 -1.205 TD
(the tail flag along when calling )Tj
/T1_0 1 Tf
(compile)Tj
/T1_1 1 Tf
( recursively on its last subexpression. For its other subexpressions, )Tj
0 -1.2 TD
(however, it will always pass the non-tail flag, because they must always\ return to execute the next expression )Tj
T*
(in the sequence. )Tj
0 -2.562 TD
(Similarly, )Tj
/T1_0 1 Tf
(compile-if)Tj
/T1_1 1 Tf
( will pass whatever flag it is given along to when calling )Tj
/T1_0 1 Tf
(compile)Tj
/T1_1 1 Tf
( for its )Tj
0 -1.2 TD
(consequent and alternative subexpressions, but never when compiling its \condition expression. )Tj
/T1_0 1 Tf
0 -2.562 TD
(compile-combo)Tj
/T1_1 1 Tf
( will always pass along a non-tail flag when calling compile on its sube\xpressions, but will )Tj
0 -1.2 TD
(examine the flag it's given to tell whether it should save a continuatio\n before evaluating all of them. )Tj
/T1_0 1 Tf
0 -2.562 TD
(compile-lambda)Tj
/T1_1 1 Tf
( will always compile body expressions in non-tail position, except for t\he last one, which )Tj
0 -1.205 TD
(is always compiled in tail position. \(For simplicitly, )Tj
/T1_0 1 Tf
(compile-lambda)Tj
/T1_1 1 Tf
( just hands the whole body to )Tj
/T1_0 1 Tf
0 -1.205 TD
(compile-sequence)Tj
/T1_1 1 Tf
(, with a tail flag.\) )Tj
/T1_0 1 Tf
0 -2.562 TD
(compile-let)Tj
/T1_1 1 Tf
(, always compiles its initial value expressions in non-tail position, an\d its body expressions )Tj
0 -1.205 TD
(like a sequence. \(For simplicity, it just hands the whole body to )Tj
/T1_0 1 Tf
(compile-sequence)Tj
/T1_1 1 Tf
(, with whatever flag )Tj
ET
EMC 
Q

endstreamendobj6064 0 obj[5844 0 R]endobj6065 0 obj<</Parent 6079 0 R/ID 6144 0 R/StructParents 397/Contents 6138 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj6066 0 obj<</Length 4166>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8994 Tm
(it's given.\) )Tj
ET
0 0 1 RG
1.122 w 10 M 0 j 0 J []0 d 
9.539 717.154 m
128.991 717.154 l
S
0 0 1 rg
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 720.5196 Tm
(Compiling Returns)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(As mentioned above, when an expression other than a procedure call is a \tail of a procedure, it must be )Tj
0 -1.205 TD
(accompanied by a return. That is, )Tj
/T1_2 1 Tf
(every)Tj
/T1_0 1 Tf
( tail of a procedure must be either an )Tj
/T1_3 1 Tf
(apply)Tj
/T1_0 1 Tf
( \(which will call )Tj
0 -1.205 TD
(something which will return, perhaps indirectly because of tail calling\)\ or a )Tj
/T1_3 1 Tf
(return)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(The compiler can handle this by putting ensuring that wherever we genera\te intermediate code that is a leaf of )Tj
0 -1.205 TD
(the expression graph \(e.g., in )Tj
/T1_3 1 Tf
(compile-variable-ref)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(compile-literal)Tj
/T1_0 1 Tf
(\), we check the )Tj
0 -1.2 TD
(compile-time continuation flag to see if the expression occurs in tail p\osition. If so, rather than simply leaving )Tj
0 -1.205 TD
(the value in the value register, we also execute a )Tj
/T1_3 1 Tf
(return)Tj
/T1_0 1 Tf
( sequence--a series of instructions that will grab the )Tj
0 -1.2 TD
(values out of the first partial continuation on the chain, and restore t\hem into the registers and evaluation )Tj
T*
(stack to resume the suspended procedure. We have a special intermediate \code instruction that stands for this )Tj
T*
(sequence, called return. )Tj
0 -2.557 TD
(Consider the following procedure: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(lambda \(a b c\))Tj
0 -1.2 TD
(   \(if \(if a)Tj
T*
(           \(b\))Tj
T*
(           c\))Tj
T*
(       d)Tj
T*
(       \(e\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(When compiling its body, we dispatch through )Tj
/T1_3 1 Tf
(compile-sequence)Tj
/T1_0 1 Tf
( and recursively call )Tj
/T1_3 1 Tf
(compile)Tj
/T1_0 1 Tf
( to )Tj
0 -1.205 TD
(compile the )Tj
/T1_3 1 Tf
(if)Tj
/T1_0 1 Tf
( in tail position. It recursively calls )Tj
/T1_3 1 Tf
(compile)Tj
/T1_0 1 Tf
( to compile the nested if in non-tail position, )Tj
0 -1.205 TD
(which in turn recursively calls )Tj
/T1_3 1 Tf
(compile)Tj
/T1_0 1 Tf
( to compile )Tj
/T1_3 1 Tf
(a)Tj
/T1_0 1 Tf
(, )Tj
/T1_3 1 Tf
(\(b\))Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(c)Tj
/T1_0 1 Tf
( in non-tail position. )Tj
0 -2.562 TD
(Note that )Tj
/T1_3 1 Tf
(a)Tj
/T1_0 1 Tf
( is a leaf expression, and since it's in non-tail position, it can just \leave its value in the value )Tj
0 -1.205 TD
(register. The subsequent code \(the test for false and conditional branc\h that's part of the code for the inner )Tj
/T1_3 1 Tf
(if)Tj
/T1_0 1 Tf
(\) )Tj
0 -1.2 TD
(will expect that value there, so that's fine. )Tj
0 -2.562 TD
(The expression )Tj
/T1_3 1 Tf
(\(b\))Tj
/T1_0 1 Tf
( is not in tail position, because it inherits non-tail position from the\ inner )Tj
/T1_3 1 Tf
(if)Tj
/T1_0 1 Tf
(, so a )Tj
0 -1.205 TD
(continuation must be saved before the call to )Tj
/T1_3 1 Tf
(b)Tj
/T1_0 1 Tf
(. When )Tj
/T1_3 1 Tf
(b)Tj
/T1_0 1 Tf
( returns, its value will be in the value register and )Tj
0 -1.205 TD
(execution will resume at the branch that is part of the )Tj
/T1_3 1 Tf
(if)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Similarly, the expression )Tj
/T1_3 1 Tf
(c)Tj
/T1_0 1 Tf
( is in non-tail position \(which it also inherited from the inner if\); \it can just leave )Tj
0 -1.2 TD
(its value in the value register where subsequent code can find it. \(In \this case, it's the value returned by the )Tj
0 -1.205 TD
(inner )Tj
/T1_3 1 Tf
(if)Tj
/T1_0 1 Tf
(, and tested by the outer )Tj
/T1_3 1 Tf
(if)Tj
/T1_0 1 Tf
('s test for false and conditional branch.\) )Tj
0 -2.562 TD
(The expression )Tj
/T1_3 1 Tf
(d)Tj
/T1_0 1 Tf
( is different. It's in tail position, and it's a leaf \(not a call\). It\ can't just leave it's value in the )Tj
0 -1.205 TD
(register, because it's the end of the procedure; it must therefore have \a )Tj
/T1_3 1 Tf
(return)Tj
/T1_0 1 Tf
( sequence tagged onto it. )Tj
ET
EMC 
Q

endstreamendobj6067 0 obj[5844 0 R]endobj6068 0 obj<</Annots 6073 0 R/Parent 6079 0 R/ID 6144 0 R/StructParents 398/Contents 6139 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj6069 0 obj<</Length 3044>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8351 Tm
(The expression )Tj
/T1_1 1 Tf
(\(e\))Tj
/T1_0 1 Tf
( is just a tail call, which can just call )Tj
/T1_1 1 Tf
(e)Tj
/T1_0 1 Tf
( without saving a continuation. Whatever e calls )Tj
0 -1.2 TD
(can do whatever it wants, and probably something will eventually leave s\omething in the value register and )Tj
T*
(pop the caller's continuation. )Tj
0 -2.557 TD
(The code generated for the above procedure is: )Tj
/T1_1 1 Tf
0 -2.562 TD
(  \(bind 3\)                     ; bind args \(a, b, and c\))Tj
0 -1.2 TD
(  \(local-var-ref 0 1\)             ; get value of a)Tj
T*
(  \(push\))Tj
T*
(  \(branch-on-false "else32"\)      ; compare and maybe br to inner else\)Tj
T*
(  \(save-continuation "resume33"\))Tj
T*
(  \(local-var-ref 0 2\)             ; get value of b)Tj
T*
(  \(apply\)                         ; call b)Tj
0 -1.2 TD
("resume33")Tj
0 -1.2 TD
(  \(branch end\))Tj
T*
("else32")Tj
T*
(  \(local-var-ref 0 3\)                ; get value of c)Tj
T*
("end32")Tj
T*
(  \(branch-on-false else1\)      ; compare and may br to outer else)Tj
T*
(  \(fetch-literal 1\)               ; get toplevel binding of d)Tj
T*
(  \(t-l-var-get\)                   ; get value of d from binding)Tj
T*
(  \(return\)                        ; and return it)Tj
T*
(  \(branch end1\))Tj
T*
("else31")Tj
T*
(  \(fetch-literal 2\)               ; get toplevel binding of e)Tj
T*
(  \(t-l-var-get\)                   ; get value of e from binding)Tj
T*
(  \(apply\)                         ; and tail-call it)Tj
T*
("end31")Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Notice that when we generated the code for the outer else, we generate\d a branch that can never be taken. )Tj
/T1_1 1 Tf
0 -1.205 TD
(compile-if)Tj
/T1_0 1 Tf
( generates a label for the end of the code, so that after executing the \consequent, control will )Tj
0 -1.205 TD
(resume at whatever code follows the )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(. In the case of this )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(, the consequent will always execute a return )Tj
0 -1.2 TD
(before encountering the branch. A slightly smarter compiler would probab\ly recognize this situation, and )Tj
T*
(eliminate the branch.\) )Tj
ET
0 0 1 RG
1.553 w 10 M 0 j 0 J []0 d 
9.539 176.048 m
307.51 176.048 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.4903 0 0 18.4903 9.5387 180.7079 Tm
(Compiling Top-Level Expressions)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 143.2201 Tm
(We said earlier that the compiler mainly uses recursion to generate inte\rmediate code for nested expressions. )Tj
T*
(To make this useful, though, at some point the intermediate code for a t\op-level expression must be converted )Tj
T*
(into actual executable code and packaged up so that it can be called. )Tj
0 -2.557 TD
(Suppose we interact with our system via a read-eval-print loop where eva\l is really implemented by )Tj
0 -1.2 TD
(compiling the expression and executing the resulting compiled code. )Tj
ET
EMC 
Q

endstreamendobj6070 0 obj[5844 0 R]endobj6071 0 obj[6068 0 R/XYZ 0 401.037 null]endobj6072 0 obj<</Rect[9.53865 383.133 340.038 399.496]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC310)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC310)/S/URI>>/Border[0 0 0]>>endobj6073 0 obj[6072 0 R 6075 0 R 6077 0 R]endobj6074 0 obj[6068 0 R/XYZ 0 198.004 null]endobj6075 0 obj<</Rect[9.53865 180.101 213.302 196.464]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC311)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC311)/S/URI>>/Border[0 0 0]>>endobj6076 0 obj[6068 0 R/XYZ 0 59.1363 null]endobj6077 0 obj<</Rect[9.53865 41.233 109.741 57.5954]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC312)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC312)/S/URI>>/Border[0 0 0]>>endobj6078 0 obj<</Parent 6237 0 R/ID 6144 0 R/StructParents 399/Contents 6140 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 828 0 R/T1_2 766 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj6079 0 obj<</Parent 6083 0 R/Count 5/Type/Pages/Kids[6047 0 R 6056 0 R 6062 0 R 6065 0 R 6068 0 R]>>endobj6080 0 obj<</Length 2243>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8994 Tm
(To make it easy to implement this, it's nice if there aren't very many k\inds of top-level expressions that the )Tj
0 -1.2 TD
(compiler has to generate code for and be able to actually call. In parti\cular, it's convenient if different kinds of )Tj
T*
(expression can be transformed into the same kind of expression. The easy\ way to do this is to make all )Tj
T*
(different kinds of executable expressions into expressions that generate\ procedures, and then call those )Tj
T*
(procedures. )Tj
0 -2.557 TD
(If we type )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(x 2\)\))Tj
0 -1.2 TD
(  \(+ x x\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(to the r.e.p. loop, the r.e.p. loop can simply wrap this up in a procedu\re expression compile that and package it )Tj
0 -1.2 TD
(up as something executable, and call it. In effect the read-eval-print l\oop will convert it to )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(lambda \(\))Tj
0 -1.2 TD
(   \(let \(\(x 2\)\))Tj
T*
(      \(+ x x\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(before compiling it, and call the resulting closure to execute it. )Tj
0 -2.557 TD
(Likewise, expressions like )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(set! foo quux\))Tj
/T1_0 1 Tf
0 -2.552 TD
(and )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(if bar baz\))Tj
/T1_0 1 Tf
0 -2.552 TD
(can be wrapped up as )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(lambda \(\) \(set! foo quux\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(and )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(lambda \(\) \(if bar baz\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Now when we start compiling, we only have to deal with one kind of thing\--a whole procedure, and when we )Tj
0 -1.2 TD
(get the resulting code back and package it up to run it, we'll always be\ dealing with the code for a whole )Tj
T*
(procedure. That makes it easy to create an actual closure to call. )Tj
0 -2.562 TD
(The main routine we use to start off compilation is )Tj
/T1_1 1 Tf
(compile-procedure)Tj
/T1_0 1 Tf
(, which takes an expression, a )Tj
0 -1.2 TD
(compile-time environment, a compile-time continuation, and a literal lis\t as arguments. It returns intermediate )Tj
T*
(code and an updated literal list for the procedure. )Tj
ET
EMC 
Q

endstreamendobj6081 0 obj[5844 0 R]endobj6082 0 obj<</Annots 6087 0 R/Parent 6237 0 R/ID 6144 0 R/StructParents 400/Contents 6131 0 R/PZ 1.04837/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj6083 0 obj<</Parent 5944 0 R/Count 33/Type/Pages/Kids[5960 0 R 5979 0 R 6008 0 R 6048 0 R 6079 0 R 6237 0 R]>>endobj6084 0 obj<</Length 4084>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 747.297 Tm
(We take the intermediate code and hand it to the procedure )Tj
/T1_1 1 Tf
(intermediate-code->executable-)Tj
0 -1.205 TD
(code)Tj
/T1_0 1 Tf
( which generates the executable code object. \(This may be by translatin\g the sequence of intermediate )Tj
0 -1.2 TD
(code instructions into the equivalent sequences of assembly language ins\tructions, and running that through )Tj
T*
(an assembler. Before doing the assembly, it may run the intermediate cod\e through one or more optimization )Tj
T*
(phases. )Tj
0 -2.562 TD
(We take the resulting executable code and the literals list, and hand th\em to )Tj
/T1_1 1 Tf
(make-template)Tj
/T1_0 1 Tf
( to create the )Tj
0 -1.2 TD
(template object. )Tj
0 -2.562 TD
(Now we can hand the appropriate runtime environment and the template to \)Tj
/T1_1 1 Tf
(make-closure)Tj
/T1_0 1 Tf
( and get back a )Tj
0 -1.2 TD
(callable closure for the procedure. )Tj
ET
0 0 1 RG
1.553 w 10 M 0 j 0 J []0 d 
9.539 539.118 m
105.078 539.118 l
S
0.932 w 
105.078 540.982 m
171.643 540.982 l
S
1.553 w 
171.643 539.118 m
452.197 539.118 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.4903 0 0 18.4903 9.5387 543.7776 Tm
(Compiling )Tj
/T1_3 1 Tf
(lambda)Tj
/T1_2 1 Tf
( Expressions Inside Procedures)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 505.9942 Tm
(When we compile a )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression, we must generate code that will create a closure at run tim\e. A very )Tj
T*
(naive way to do this would be to generate code that would call the compi\ler at runtime to compile the )Tj
/T1_1 1 Tf
0 -1.205 TD
(lambda)Tj
/T1_0 1 Tf
( expression into a procedure, plus a little code to create a closure of \that object in the runtime )Tj
0 -1.2 TD
(environment. )Tj
0 -2.557 TD
(Luckily, this is not necessary, and the compiler can do all of the real \compilation at compile time--since the )Tj
0 -1.205 TD
(code for the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression will be the same every time it's executed, and since lexical\ scope guarantees )Tj
0 -1.2 TD
(that it will always execute in an environment with the same structure, o\nly one version of the code is needed, )Tj
T*
(and it can be shared among all closures of that procedure. The template \can be shared as well. )Tj
0 -2.562 TD
(The compiler therefore generates code and a template for the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( procedure; at run time, the actual code )Tj
0 -1.205 TD
(for the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression just makes a closure on the heap and initializes its environ\ment pointer and )Tj
0 -1.2 TD
(template pointer. This code will get the environment pointer from the en\vironment register \(and put it in the )Tj
0 -1.205 TD
(environment field of the new closure\); the template pointer will be the\ ponter to the template for the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(procedure. )Tj
0 -2.557 TD
(To allow this little code sequence to quickly grab the template for the \procedure being closed, the compiler )Tj
0 -1.205 TD
(stores a pointer to that template in the template of the procedure which\ executes the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression. For )Tj
0 -1.205 TD
(example, if a )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression is encountered while compiling procedure )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(, the compiler will compile )Tj
0 -1.205 TD
(the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( procedure and store its template in the template of )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(. \(While compiling )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(, it simply )Tj
0 -1.205 TD
(records the pointer to the new )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( procedure's template as another literal. Then it will end up in )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
('s )Tj
0 -1.2 TD
(template like other literals.\) )Tj
0 -2.557 TD
(So the code generated for )Tj
/T1_1 1 Tf
0 -2.562 TD
(   ...)Tj
0 -1.2 TD
(   \(lambda \(x\))Tj
T*
(      \(...\)\))Tj
T*
(   ...)Tj
ET
EMC 
Q

endstreamendobj6085 0 obj[5844 0 R]endobj6086 0 obj<</Rect[62.5812 472.769 84.0947 487.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj6087 0 obj[6086 0 R 6088 0 R 6089 0 R 6090 0 R 6091 0 R]endobj6088 0 obj<</Rect[90.7717 472.769 136.763 487.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5790 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_141.html)/S/URI>>/Border[0 0 0]>>endobj6089 0 obj<</Rect[143.44 472.769 166.436 487.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj6090 0 obj<</Rect[173.113 472.769 191.662 487.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[6151 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S/URI>>/Border[0 0 0]>>endobj6091 0 obj<</Rect[239.51 472.769 327.781 487.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj6092 0 obj<</Length 3554>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 743.2759 Tm
(looks like )Tj
/T1_1 1 Tf
0 -2.562 TD
(   ...)Tj
0 -1.2 TD
(   \(envt-reg-get\)     ; primitive to copy envt. reg. onto eval stack)Tj
T*
(   \(push\))Tj
T*
(   \(fetch-literal 15\) ; grab template pointer for lambda proc)Tj
T*
(   \(push\))Tj
T*
(   \(make-closure\)     ; code that will create closure w/those values)Tj
T*
(   ...)Tj
/T1_0 1 Tf
0 -2.557 TD
(The real trick is in compiling the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( procedure and stuffing its template into the template of the )Tj
0 -1.205 TD
(procedure that contains the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression. The compiler just calls itself to generate the code and )Tj
0 -1.2 TD
(template then saves the template in the literal list and generates code \like the above to reference the right )Tj
T*
(literal. )Tj
ET
0 0 1 RG
1.553 w 10 M 0 j 0 J []0 d 
9.539 487.086 m
286.93 487.086 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.4903 0 0 18.4903 9.5387 491.746 Tm
(Compiling Top-level Definitions)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 454.194 Tm
(We said above that we can deal with top-level expressions by turning the\m all into )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expressions, )Tj
T*
(which will have the effect of evaluating those expressions when called. \)Tj
0 -2.557 TD
(This is a little bit tricky when dealing with top-level definitions, bec\ause top-level definitions can't be nested )Tj
0 -1.2 TD
(inside lambda expressions in the obvious way--they'd just become local d\efinitions. )Tj
0 -2.562 TD
(We therefore have to treat them specially. We use a special procedure, )Tj
/T1_1 1 Tf
(environment-define!)Tj
/T1_0 1 Tf
(, which )Tj
0 -1.2 TD
(operates on top-level environments and allows us to create top-level bin\dings. This is not a standard Scheme )Tj
T*
(procedure--it's a special procedure that the compiler can generate calls\ to, but normal portable Scheme code )Tj
T*
(cannot use directly. )Tj
0 -2.557 TD
(The read-eval-print-loop will therefore recognize top-level definitions \and treat them specially. When it )Tj
0 -1.205 TD
(encounters one, the initial-value expression will be wrapped up as a )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( and compiled, and the results )Tj
0 -1.2 TD
(turned into code, a template, and a closure. \(The closure is given the \runtime toplevel environment pointer.\) )Tj
0 -2.562 TD
(The closure will be called to get a result for the initial value express\ion, and )Tj
/T1_1 1 Tf
(environment-define!)Tj
/T1_0 1 Tf
( will )Tj
0 -1.2 TD
(be used to create and initialize the toplevel variable. )Tj
0 -2.557 TD
(\(This might appear at first to cause a scoping problem: if the binding \isn't created until after the initial value )Tj
0 -1.2 TD
(expression is compiled, the compiler won't see the binding. But recall t\hat if we compile an expression that )Tj
T*
(uses an undefined variable, we assume it's a toplevel variable and creat\e a binding object for it, and mark that )Tj
0 -1.205 TD
(object invalid. If the binding has already been created by a forward ref\erence in this way, )Tj
/T1_1 1 Tf
(environment-)Tj
0 -1.205 TD
(define!)Tj
/T1_0 1 Tf
( will just overwrite the marker with a real value.\) )Tj
0 -2.557 TD
(Of course, if the top-level definition uses procedure definition syntax,\ it is necessary to massage that into a )Tj
/T1_1 1 Tf
0 -1.205 TD
(lambda)Tj
/T1_0 1 Tf
( expression before doing the above massaging and compiling. )Tj
ET
EMC 
Q

endstreamendobj6093 0 obj<</Length 3628>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 1 RG
0 i 1.553 w 10 M 0 j 0 J []0 d 
9.539 728.254 m
309.544 728.254 l
S
0 0 1 rg
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 18.4903 0 0 18.4903 9.5387 732.9131 Tm
(Interfacing to the Runtime System)Tj
0 0 0 rg
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 695.4254 Tm
(In order to support garbage collection \(as is required for Scheme\), th\ere must be some agreement between the )Tj
0 -1.2 TD
(compiler and the garbage collector, so that the collector can find the p\ointers that the running program might )Tj
T*
(find, and ensure that all objects the program could reach from them are \preserved. )Tj
0 -2.557 TD
(A common way of doing this \(used in RScheme and Scheme-48\) is to have \a fixed set of registers \(plus )Tj
0 -1.2 TD
(maybe an eval stack\) that hold all of the root values that the collecto\r needs to know about, and guarantee that )Tj
T*
(whenever garbage collection occurs, all pointers will be identifiable as\ such. Any given register must be )Tj
0 -1.2 TD
(known to never contain pointers, to always contain a pointer, or to cont\ain self-identifying \(tagged\) values )Tj
0 -1.2 TD
(that are decodable to see if they're pointers. )Tj
0 -2.562 TD
(For example, in the straightforward compiled system we've described in d\etail, the )Tj
/T1_2 1 Tf
(VALUE)Tj
/T1_1 1 Tf
( register and the )Tj
/T1_2 1 Tf
0 -1.205 TD
(EVAL)Tj
/T1_1 1 Tf
( stack only contain normal Scheme values: tagged values that can be chec\ked to see if they're pointers. )Tj
0 -1.2 TD
(On the other hand, the template and procedure, pointers would probably a\lways contain raw pointers, since )Tj
T*
(they can only point at one kind of thing, and the tags would slow some t\hings down. )Tj
0 -2.557 TD
(There might also be some other registers, which always contain nonpointe\rs. )Tj
ET
1.294 w 
9.539 408.564 m
150.82 408.564 l
S
0 0 1 rg
BT
/T1_0 1 Tf
15.4086 0 0 15.4086 9.5387 412.4473 Tm
(Garbage Collection)Tj
ET
1.122 w 
9.539 372.361 m
82.265 372.361 l
S
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 375.726 Tm
(Safe Points)Tj
0 0 0 rg
/T1_1 1 Tf
0 -2.683 TD
(Many systems \(like RScheme and Scheme-48\) ensure that garbage collecti\on can only happen when a )Tj
0 -1.2 TD
(program is at a well-defined "safe point", not at an arbitrary point in \the code. At a safe point, all pointer )Tj
T*
(values are known to be recognizable. In between safe points, it's okay f\or the code to use values that aren't )Tj
T*
(properly decipherable by the GC. \(For example, a register that normally\ contains only tagged values might )Tj
T*
(briefly hold a raw pointer.\) )Tj
0 -2.557 TD
(This is easy in a single-threaded system; the GC just keeps some space i\n reserve, so that it never runs out of )Tj
0 -1.2 TD
(memory between safe points. If an allocation requires dipping into this \reserve, a flag is set so that a GC will )Tj
T*
(occur at the next safe point. )Tj
0 -2.557 TD
(The usual trick is to ensure that each procedure call and backward branc\h is a safe point. This ensures that the )Tj
0 -1.2 TD
(a program \(or thread\) reaches safe points periodically, )Tj
0 -2.557 TD
(It's a little bit trickier in a multithreaded system--you have to make s\ure that you suspend threads at safe )Tj
0 -1.2 TD
(points, so that if another thread forces a GC while another thread is su\spended. )Tj
ET
9.539 71.512 m
108.973 71.512 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 74.8768 Tm
(GC at Any Time)Tj
0 0 0 rg
/T1_1 1 Tf
0 -2.683 TD
(Some systems do not use safe points, and in effect make every point in t\he code a safe point for collection. )Tj
ET
EMC 
Q

endstreamendobj6094 0 obj<</Length 4068>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.2267 Tm
(They ensure that no matter where a GC occurs \(or where a thread was sus\pended before the GC occurred\), )Tj
0 -1.2 TD
(there will be enough information lying around so that the collector can \find all of the pointers it needs to find. )Tj
0 -2.557 TD
(Some compilers do this by restricting the way registers are used and cod\e is generated. \(For example, the )Tj
0 -1.2 TD
(Orbit compiler only uses certain registers to hold pointers, and only us\es certain others to hold nonpointers. In )Tj
T*
(addition, all pointers in registers must point directly to the beginning\ of an object; array indexing cannot be )Tj
T*
(converted into arbitrary ponter arithmetic by the optimizing compiler.\)\ )Tj
0 -2.557 TD
(Other compilers allow more use of odd representations and more flexible \use of registers, so that values can )Tj
0 -1.2 TD
(be figured out at run time. For example, a register might be assumed to \hold nonpointers, except at points in )Tj
T*
(the code flagged by the compiler, based on its having register allocated\ a variable there. )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 549.717 m
81.451 549.717 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 553.6004 Tm
(Interrupts)Tj
ET
1.553 w 
9.539 507.719 m
479.1 507.719 l
S
BT
/T1_1 1 Tf
18.4903 0 0 18.4903 9.5387 512.3786 Tm
(Advanced Compiler and Runtime System Techniques)Tj
ET
1.294 w 
9.539 468.976 m
198.787 468.976 l
S
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 472.8593 Tm
(Inlining Small Procedures)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 436.3694 Tm
(The system we've described so far generates fairly slow code, and a majo\r culprit is the frequency of )Tj
T*
(continuation saving and procedure calls. Even very small, frequently-exe\cuted procedures like eq?, car, cdr, )Tj
T*
(and + require a handful if instructions to call and another handful to r\eturn, plus another handful to save a )Tj
T*
(continuation if it's a non-tail call. This is much slower that the cost \of similar operations in conventional )Tj
T*
(languages like C or Pascal; in those languages, these simple little "ope\rations" don't have the semantics of )Tj
T*
(calls to first-class procedures. )Tj
0 -2.557 TD
(Sometimes it is desirable to trade away some of the purity and elegance \of a language like Scheme, and trade )Tj
0 -1.2 TD
(reduced flexibility for better performance. One way of doing this is by \declaring frequently-used small )Tj
0 -1.205 TD
(procedures )Tj
/T1_2 1 Tf
(not)Tj
/T1_0 1 Tf
( to be redefinable, and allowing the compiler to compile those operation\s inline rather than as )Tj
0 -1.2 TD
(procedure calls. In some systems this only works for built-in procedures\ that the compiler understands, but in )Tj
T*
(others the compiler is smart enough to inline user-defined procedures if\ so directed. )Tj
0 -2.557 TD
(In some Scheme systems, you can declare procedures to be inlinable, or u\se a compiler flag that says you )Tj
0 -1.2 TD
(promise not to redefine the common little procedures that are most valua\ble to inline. This means that you )Tj
T*
(can't change the definition of something like + on the fly, but you seld\om want to. A common tradeoff is to )Tj
T*
(avoid inlining any but the most frequently-called procedures during prog\ram development, and once the )Tj
T*
(program is finished, recompile with lots of inlining. This gives you the\ flexibility to modify procedure )Tj
T*
(definitions on the fly during debugging, while getting maximum speed onc\e it's clear which procedures won't )Tj
T*
(ever be redefined in normal operation. )Tj
0 -2.557 TD
(Some high-tech compilers use advanced techniques to do lots of inlining \when it's safe, without reducing )Tj
0 -1.2 TD
(flexibility much or requiring the user to supply a lot of declarations. \)Tj
0 -2.557 TD
(The Self compiler aggressively inlines code, and automatically recompile\s the code that is invalidated by )Tj
ET
EMC 
Q

endstreamendobj6095 0 obj<</Length 4153>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8994 Tm
(changes to procedure definitions. \(This compiler is for the language Se\lf, not Scheme, but similar techniques )Tj
0 -1.2 TD
(could be applied to Scheme.\) )Tj
0 -2.557 TD
(Some compilers currently in development have a special mode for compilin\g finished programs which will )Tj
0 -1.2 TD
(not be used with a read-eval-print loop. Such a compiler takes advantage\ of the fact that if it can look at the )Tj
0 -1.2 TD
(whole program \(rather than having parts typed in by the user interactiv\ely\), it can tell which variables could )Tj
0 -1.2 TD
(ever be modified at run time. \(As long as there are no calls to eval at\ run time, the compiler can tell that all of )Tj
T*
(the code for the program exists at compile-time; new closures may be cre\ated at run time, but not totally new )Tj
T*
(procedures.\) After globally determining that there is no code in the pr\ogram that could change the definition )Tj
T*
(of a procedure, it is free to inline the code for that procedure into it\s callers. )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 568.514 m
281.855 568.514 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 572.3965 Tm
(Type Declarations and Type Analysis)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 535.9066 Tm
(Another key performance problem with naive implementations of Scheme \(o\r other dynamically typed )Tj
T*
(languages\) is that basic operations are generally slow relative to thei\r execution in conventional statically-)Tj
T*
(typed languages. For example, the Scheme procedure + must check the type\s of its arguments and \(depending )Tj
T*
(on those types\) execute any of several possible code sequences to add t\wo numbers. Usually, the checking )Tj
T*
(overhead alone is several times greater than the cost of the actual addi\tion. )Tj
0 -2.557 TD
(One way of reducing this cost is by extending Scheme to allow the user t\o declare the types of some )Tj
0 -1.2 TD
(variables. The compiler may be able to use this information to compile f\ast versions of operations for values )Tj
0 -1.2 TD
(of known types. \(This is especially true if common operations are inlin\ed--the compiler can choose to inline )Tj
T*
(the appropriate version rather than the more general code.\) )Tj
0 -2.557 TD
(Another way of reducing type checking cost is for the system to automati\cally infer the types of some )Tj
0 -1.205 TD
(expressions. For example, consider the expression )Tj
/T1_2 1 Tf
(\(+ a 22\))Tj
/T1_0 1 Tf
(. Since )Tj
/T1_2 1 Tf
(22)Tj
/T1_0 1 Tf
( is a literal, its type is known at )Tj
0 -1.205 TD
(compile time. If the compiler can inline the )Tj
/T1_2 1 Tf
(+)Tj
/T1_0 1 Tf
( procedure, it may at least omit the type check of that argument. )Tj
0 -2.557 TD
(A combination of declarations and inferencing can work well. For example\, if the user has declared variable a )Tj
0 -1.205 TD
(to be of type )Tj
/T1_2 1 Tf
(<integer>)Tj
/T1_0 1 Tf
(, then the compiler can tell that )Tj
/T1_2 1 Tf
(\(+ a 22\))Tj
/T1_0 1 Tf
( is an expression whose arguments are )Tj
0 -1.2 TD
(integers \(so no run time type test are necessary there\) )Tj
/T1_3 1 Tf
(and)Tj
/T1_0 1 Tf
( whose result is an integer, which may eliminate the )Tj
T*
(need for type checks by the expression that uses the value. )Tj
0 -2.557 TD
(More aggressive schemes are possible for reducing the frequency of dynam\ic type checks. For example, the )Tj
0 -1.2 TD
(Self compiler aggressively inlines and transforms code so that multiple \dynamic type checks can be collapsed )Tj
T*
(into a single one. )Tj
ET
9.539 134.708 m
242.44 134.708 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 138.5911 Tm
(Using More Hardware Registers)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 102.1012 Tm
([ blah blah ] )Tj
0 -2.557 TD
(For example, it's very likely a good idea to use more registers, and eit\her not have an eval stack or not use it )Tj
0 -1.2 TD
(as often. Our simple abstract machine requires arguments to be passed on\ the eval stack, which means storing )Tj
ET
EMC 
Q

endstreamendobj6096 0 obj<</Length 4329>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8994 Tm
(into memory at least once for each argument, and loading back from memor\y when arguments are used. Most )Tj
0 -1.2 TD
(modern machines have several hardware registers available for argument p\assing, and more for holding )Tj
T*
(intermediate values of computations. )Tj
0 -2.557 TD
(If we have a few more registers that can be used for argument passing, w\e could just leave the argument )Tj
0 -1.2 TD
(values in those known registers, and procedures could expect them there.\ In many cases, argument values )Tj
0 -1.2 TD
(could be computed in a way that the result is left in the appropriate ar\gument-passing register, without having )Tj
T*
(to copy it there from somwhere else. Similarly, in many cases, procedure\s could leave their arguments in the )Tj
T*
(argument passing registers and use them there, without actually copying \them into a binding environment on )Tj
T*
(the heap. \(Even if only a few registers can be devoted to this, it will\ account for the large majority of )Tj
T*
(arguments passed, since most procedure calls are to procedures that take\ between one and three arguments.\) )Tj
0 -2.557 TD
(Similarly, in many cases a temporary value generated by evaluating a sub\expression could be left in a )Tj
0 -1.2 TD
(register, and then used by another expression, without pushing and poppi\ng the eval stack. )Tj
0 -2.557 TD
(This can be a big performance win--it is much faster to operate on argum\ents and temporary values that are )Tj
0 -1.2 TD
(already in registers, rather than copying them to and from memory all of\ the time. )Tj
0 -2.557 TD
(Using more registers can make the compiler and runtime system more compl\icated. If variables are in )Tj
0 -1.2 TD
(registers when continuations are saved, their values must be saved in th\e continuations and restored at )Tj
T*
(procedure returns. This requires the compiler to keep track of which reg\isters are in use at which points, and )Tj
T*
(generate appropriate code. It also complicates the interface between the\ compiled code and the garbage )Tj
T*
(collector; the garbage collector must be able to find all of the pointer\ values that are stored in registers, so that )Tj
T*
(it can find all of the reachable objects. The compiler must therefore re\cord sufficient information that all )Tj
T*
(pointer values can be found at garbage collection time. \(Alternatively,\ the compiler may record a safe )Tj
T*
(approximation of the information, and require the collector to make cons\ervative guesses about what's what.\) )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 305.819 m
134.564 305.819 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 309.702 Tm
(Closure Analysis)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 273.2121 Tm
(One of the performance problems with a naive implementation of Scheme is\ that in the general case, variable )Tj
T*
(bindings must be allocated on the garbage-collected heap, and procedure \calls must be via pointers to )Tj
T*
(closures. This is often much slower than the usual implementation of con\ventional programming languages, )Tj
0 -1.205 TD
(which don't have to support )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
(. Allocating closures and environments on the heap is mainly slow )Tj
0 -1.2 TD
(because creating and accessing variable bindings is slower than if the v\ariables were allocated on a stack or in )Tj
T*
(registers. )Tj
0 -2.557 TD
(A smart Scheme compiler can get rid of most of this overhead by analyzin\g programs and noticing that many )Tj
0 -1.2 TD
(closures are used in stereotyped ways, and calls to them can be implemen\ted more cheaply than the naive )Tj
T*
(implementation. Similarly, analysis of expressions may reveal that most \binding environments can't possibly )Tj
T*
(be captured by closures, and therefore don't need to be allocated on the\ garbage-collected heap. The bindings )Tj
T*
(can be saved in continuations along with temporary values, or a more con\ventional stack may be used, or )Tj
T*
(\(best of all\), the bindings can be register-allocated. )Tj
0 -2.557 TD
(A simple example of a language-level closure that doesn't need the fully\ general naive implementation is a )Tj
ET
EMC 
Q

endstreamendobj6097 0 obj<</Length 3531>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8351 Tm
(closure created by a )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression that appears in the function position of a combination: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(\(lambda \(x\))Tj
0 -1.2 TD
(    \(+ x x\)\)  )Tj
T*
( 2\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(\(Recall that constructs like this are often generated by macros that im\plement binding constructs like )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(---)Tj
0 -1.2 TD
(this one is equivalent to )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(x 2\))Tj
0 -1.2 TD
(   \(+ x x\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(In this case, we can tell from the fact that the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression appears in the function position that the )Tj
0 -1.2 TD
(closure can't "escape" and have anything weird done with it. That is, no\ pointer to the closure is assigned into )Tj
T*
(a variable binding, or passed to a procedure call, or inserted into a da\ta structure. It's clear that the only thing )Tj
T*
(that can happen to this closure is that it will be called, and then the \pointer to it will be "dropped," i.e., not )Tj
0 -1.2 TD
(passed anywhere else. The closure will therefore become garbage immediat\ely after it's executed. )Tj
0 -2.557 TD
(A smart compiler will therefore recognize that all the closure really do\es is bind its variable and execute it's )Tj
0 -1.2 TD
(body; it will leave out the code to create the closure and just compile \in the equivalent code--in this case, it )Tj
0 -1.205 TD
(will generate the obvious code for a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( expression. )Tj
0 -2.562 TD
(\(Some compilers always transform )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
('s and )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
('s into )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( combinations, and rely on their )Tj
0 -1.205 TD
(optimizers to recognize the unnecessary )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
('s and remove them. This may seem backwards, but it's nice )Tj
0 -1.2 TD
(because the same optimizations work whether the lambda combinations were\ the result of transforming a )Tj
/T1_1 1 Tf
0 -1.205 TD
(let)Tj
/T1_0 1 Tf
(, or macroexpanding a user-defined macro, or written directly by the use\r, or whatever. The more )Tj
0 -1.2 TD
(sophisticated the optimizer, the more simply the user can write macros a\nd procedures, and expect the )Tj
T*
(compiler to sort it all out and generate efficient code.\) )Tj
0 -2.557 TD
(Another simple case for closure and environment analyis is binding envir\onments that don't have any closures )Tj
0 -1.205 TD
(created in their scopes. Suppose that our compiler inlines calls to )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(eq?)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
(, and consider the )Tj
0 -1.2 TD
(expression )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(x \(car a\)\))Tj
0 -1.2 TD
(   \(if \(eq? \(car x\) target\))Tj
T*
(       \(car \(cdr x\)\))Tj
T*
(       #f\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(in this case, the body of the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( can be compiled into entirely inline code, and it is clear that there i\s no )Tj
0 -1.205 TD
(possible path of execution that can create a closure that captures )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( can therefore be allocated in a register )Tj
0 -1.2 TD
(for its whole lifetime, making this code much faster. )Tj
0 -2.557 TD
([ separate section? Figure out structure here... ] )Tj
ET
EMC 
Q

endstreamendobj6098 0 obj<</Length 3995>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8351 Tm
(Actually, some of these analyses are trickier than they appear, due to t\he presence of side effects and )Tj
/T1_1 1 Tf
(call/)Tj
0 -1.205 TD
(cc)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
([ Haven't talked about )Tj
/T1_1 1 Tf
(call/cc)Tj
/T1_0 1 Tf
( yet! ] )Tj
0 -2.557 TD
(Consider the expression, where we don't assume any inlining )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(x \(car a\)\)\))Tj
0 -1.2 TD
(   \(if \(eq? \(car x\) target\))Tj
T*
(       \(car \(cdr x\)\))Tj
T*
(       \(set! x \(foo\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(At first it appears that since there are no )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
('s in the expression, )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( can be allocated in a register, and )Tj
0 -1.205 TD
(saved in continuations across calls. \(E.g., when calling )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
(, we could just save the value of )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( in the )Tj
0 -1.205 TD
(continuation and have it restored when )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( returns, right?\) Unfortunately, if we don't have any guarantees )Tj
0 -1.205 TD
(that )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( won't be redefined in weird ways, then it's possible that the call will\ be to procedure that will )Tj
0 -1.205 TD
(\(directly or indirectly\) call )Tj
/T1_1 1 Tf
(call/cc)Tj
/T1_0 1 Tf
(, and capture a continuation that could be used to return into this )Tj
0 -1.2 TD
(procedure any number of times. In that case, we can't be sure that we wo\n't return into this code and modify )Tj
/T1_1 1 Tf
0 -1.205 TD
(x)Tj
/T1_0 1 Tf
(. If we did, then each time we returned into this environment, we should\ see the latest value of )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
(. This will )Tj
T*
(happen if the value of )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( is in a normal binding environment on the heap, but not if it's in a re\gister that gets )Tj
0 -1.2 TD
(saved in a continuation. Recall that when we restore a continuation, we \just copy the values out into the )Tj
0 -1.205 TD
(registers. If we restore the same continuation multiple times, we'll jus\t keep copying the same value of )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( back )Tj
0 -1.2 TD
(out. )Tj
0 -2.562 TD
(To get this right, we have to ensure that if there are any assignments t\o )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
(, then all references to )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( go through )Tj
0 -1.2 TD
(a pointer to a heap-allocated binding. Then when we save a continuation,\ we save this pointer to the binding )Tj
0 -1.205 TD
(of )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
(, not the )Tj
/T1_2 1 Tf
(state)Tj
/T1_0 1 Tf
( \(value\) of the binding of )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
(. Every time set or read the value of )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
(, we go through this )Tj
0 -1.2 TD
(indirection to the same binding, and see the latest value. )Tj
0 -2.562 TD
(Because of this, high-tech scheme compilers keep track of which variable\s are ever )Tj
/T1_1 1 Tf
(set!)Tj
/T1_0 1 Tf
( anywhere in their )Tj
0 -1.2 TD
(scopes, and make sure to allocate those variables' bindings on the heap.\ )Tj
0 -2.557 TD
(In Scheme, it is a common idiom to code iteration as recursion; macros f\or different looping constructs often )Tj
0 -1.205 TD
(compile into )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
('s with tail-calling )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expressions. )Tj
0 -2.557 TD
(While this is a very powerful framework for expression various patterns \of iteration, a naive implementation )Tj
0 -1.2 TD
(is slow. In most cases, loops created in this way are actually just used\ as loops, and it is desirable to compile )Tj
0 -1.205 TD
(away the overhead of closure creation and calling. For example, consider\ a named )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( like )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let loop \(\(x 0\)\))Tj
0 -1.2 TD
(   <body>)Tj
T*
(   \(if \(< x 10\))Tj
T*
(       \(loop \(+ x 1\)\)\)\))Tj
ET
EMC 
Q

endstreamendobj6099 0 obj<</Length 3489>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 754.8994 Tm
(that has been transformed to )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(loop \(lambda x\))Tj
0 -1.2 TD
(               <body>)Tj
T*
(               \(if \(< x 10\))Tj
T*
(                   \(loop \(+ x 1\)\)\)\)\)\))Tj
T*
(   \(loop 0\))Tj
/T1_0 1 Tf
0 -2.557 TD
(We can look at this expression, and if no reference to the variable )Tj
/T1_1 1 Tf
(loop)Tj
/T1_0 1 Tf
( occurs in the <body> expression, we )Tj
0 -1.2 TD
(can tell that we can compile it as a loop. )Tj
0 -2.557 TD
(The analysis here is just slightly more complicated than the one that al\lows us to optimize closures that are )Tj
0 -1.205 TD
(produced by )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expressions in function position of a combination. )Tj
0 -2.562 TD
(When compiling the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, we can keep track of each )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( variable and see whether it is ever used for as )Tj
0 -1.2 TD
(anything but the name of a procedure to tail-call--if the value of loop \is never assigned, and never read except )Tj
T*
(to call it, then we know that the "calls" to loop don't really need to b\e full-blown closure calls at all. We can )Tj
T*
(inline the code for the body of the loop and compile these calls as jump\s directly to that code. )Tj
0 -2.557 TD
(FOOD FOR THOUGHT--does it matter whether the calls are tail-calls or not\, if we just treat them as )Tj
0 -1.2 TD
(procedure calls to a known address, and go ahead and save a continuation\ with the right label? )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 383.652 m
340.038 383.652 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.4086 0 0 15.4086 9.5387 387.5353 Tm
(Register Allocating Loop Variables for Loops)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 351.0454 Tm
(Notice that register closure analysis is particularly important for loop\ control variables and variables for little )Tj
/T1_1 1 Tf
0 -1.205 TD
(let)Tj
/T1_0 1 Tf
('s inside loops. Because Scheme requires that a loop variable be bound a\gain \(to fresh memory\) at each )Tj
0 -1.2 TD
(iteration of a loop, actually allocating them on the heap is expensive. \If it can be determined that the variable )Tj
0 -1.2 TD
(is dead at the end of the loop, however, then the variable can be re-bou\nd at each iteration by simply re-using )Tj
0 -1.2 TD
(the same register. \(We're binding the name to a particular piece of mem\ory--the register--over and over again, )Tj
T*
(and it just happens that these conceptual rebindings incur no runtime co\st.\) )Tj
0 -2.557 TD
(With good closure analysis, loop conversion, and register allocation, a \Scheme compiler can compile )Tj
0 -1.2 TD
("normal" loops into code that's just as efficient as any compiler's. )Tj
ET
9.539 180.62 m
213.302 180.62 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.4086 0 0 15.4086 9.5387 184.5032 Tm
(Conventional Optimizations)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 148.0132 Tm
(Besides the optimizations described above, conventional compiler optimiz\ations are applicable to optimizing )Tj
T*
(languages like Scheme. )Tj
0 -2.557 TD
(Just as in a FORTRAN or C compiler, data flow analysis and control flow \analysis can let the compiler )Tj
0 -1.2 TD
(simplify intermediate code and produce better machine code. )Tj
ET
9.539 41.752 m
109.741 41.752 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.4086 0 0 15.4086 9.5387 45.635 Tm
(Stack Caches)Tj
ET
EMC 
Q

endstreamendobj6100 0 obj<</Length 4135>>stream
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 13.3541 0 0 13.3541 9.5387 740.3446 Tm
(Inlining and closure analyisis can greatly reduce the amount of heap all\ocation in a Scheme implementation. )Tj
0 -1.2 TD
(Allocating all binding environments and continuations on the heap may in\flate allocation rates by an order of )Tj
T*
(magnitude over the rate of allocation of normal data structures like pai\rs and vectors. With a simple compiler )Tj
T*
(and garbage collector, this can greatly inflate garbage collection costs\. Despite the high rate at which )Tj
T*
(continuations and environments are allocated, there are typically relati\vely few of them live at any given )Tj
T*
(time--the vast majority of them are used very, very briefly and then bec\ome garbage. )Tj
0 -2.557 TD
(Inlining procedure calls may greatly reduce the allocation of continuati\ons, and closure analysis may allow )Tj
0 -1.2 TD
(most bindings to be allocated in registers instead of on the heap. )Tj
0 -2.557 TD
(Still, it may be desirable to keep most of the continuations and environ\ments from making it to the normal )Tj
0 -1.2 TD
(garbage-collected heap. )Tj
0 -2.562 TD
(A )Tj
/T1_1 1 Tf
(stack cache)Tj
/T1_0 1 Tf
( is an area of memory \(or pool of discontiguous chunks of memory\) that\'s used to for initial )Tj
0 -1.2 TD
(allocation of continuations and/or binding environments, in the expectat\ion that most of them will die quickly. )Tj
T*
(A stack cache caches part of the continuation chain; it's called a stack\ cache because it behaves mostly like a )Tj
T*
(stack. Stack caches may be used for continuatons, with environments stil\l being allocated on the heap, or a )Tj
T*
(more complex design may be used to keep most environments from making it\ to the heap as well. )Tj
0 -2.557 TD
(For the most part, a stack cache is treated like a stack, in that contin\uations are pushed and popped as though )Tj
0 -1.205 TD
(it were a stack. When a continuation is captured by )Tj
/T1_1 1 Tf
(call/cc)Tj
/T1_0 1 Tf
(, however, the continuation chain is first moved )Tj
0 -1.205 TD
(to the heap so that it can be preserved in the usual way. This is genera\lly a good tradeoff, because )Tj
/T1_1 1 Tf
(call/cc)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(is not typically executed very often, and the stack cache can behave lik\e a stack most of the time. The large )Tj
T*
(majority of continuations will be reclaimed very quickly, by popping the\ stack cache, while a small minority )Tj
T*
(will be moved out to the normal heap. )Tj
0 -2.557 TD
(Caching binding environments is a little trickier, but the basic princip\le is the same; most environments are )Tj
0 -1.2 TD
(created in the stack cache, and only moved to the garbage-collected heap\ when necessary, i.e., when a closure )Tj
T*
(is created on the heap. At that moment, the environment is moved to the \heap, one frame at a time, until a )Tj
T*
(frame is reached that is already on the heap. \(The code that does this \must ensure that an environment is never )Tj
T*
(copied to the heap twice, destroying the sharing of outer environements \by inner environments created in their )Tj
T*
(scope.\) )Tj
0 -2.557 TD
(It is not clear how desirable a stack cache for environments is, given a\ compiler that does a reasonably good )Tj
0 -1.2 TD
(job of closure analysis. Using a stack cache for environments makes clos\ure creation slower, and if most of )Tj
T*
(the short-lived environments have been eliminated by closure analysis an\d register allocation, it may not be )Tj
T*
(worth it. )Tj
0 -2.557 TD
(There is also some controversy about whether stack caches are worthwhile\ in general, or whether a )Tj
0 -1.2 TD
(generational garbage collector will take care of the large volume of sho\rt-lived data efficiently. )Tj
0 -2.557 TD
(One interesting point is that a stack cache really )Tj
/T1_2 1 Tf
(is)Tj
/T1_0 1 Tf
( a kind of generational garbage collection scheme, which )Tj
0 -1.2 TD
(exploits the typically short lifetimes of particular kinds of data. \(Wh\en environments and continuations are )Tj
ET
EMC 
Q

endstreamendobj6101 0 obj<</Length 5370>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(Go to the )Tj
ET
0 0 1 RG
0.673 w 10 M 0 j 0 J []0 d 
62.581 752.88 m
84.095 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 62.5812 754.8994 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
90.772 752.88 m
136.763 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 90.7717 754.8994 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
143.44 752.88 m
166.436 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 143.4404 754.8994 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
173.113 752.88 m
191.662 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 173.1132 754.8994 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
239.51 752.88 m
327.781 752.88 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 239.5099 754.8994 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
9.539 739.852 m
9.539 741.759 l
602.461 741.759 l
601.507 740.805 l
10.493 740.805 l
10.493 740.805 l
h
f
0.875 0.875 0.875 rg
602.461 741.759 m
602.461 739.852 l
9.539 739.852 l
10.493 740.805 l
601.507 740.805 l
601.507 740.805 l
h
f
1.985 w 
9.539 688.395 m
316.778 688.395 l
S
0 0 1 rg
BT
/T1_1 1 Tf
23.6265 0 0 23.6265 9.5387 694.3492 Tm
(A Simple Scheme Compiler)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 655.1984 Tm
([ The example compiler in compiler.scm is the skeleton of a simple compi\ler for a subset of Scheme, whose )Tj
0 -1.2 TD
(structure corresponds fairly closely to the example interpreter in eval.\scm. ] )Tj
0 -2.557 TD
([ this is out of place, or needs more introductory intro first: ] )Tj
0 -2.562 TD
(Where the interpreter has a basic dispatch routine called )Tj
/T1_2 1 Tf
(eval)Tj
/T1_0 1 Tf
(, which can evaluate any kind of expression, )Tj
0 -1.205 TD
(the compiler has a basic dispatch routine called )Tj
/T1_2 1 Tf
(compile)Tj
/T1_0 1 Tf
(, which can compile any kind of expression. Like )Tj
/T1_2 1 Tf
T*
(eval)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(compile)Tj
/T1_0 1 Tf
( examines the expression to be compiled, and dispatches to an appropriat\e routine for that )Tj
0 -1.2 TD
(kind of expression. The routine that compiles an expression may recursiv\ely call compile to compile )Tj
0 -1.205 TD
(subexpressions, just as the interpretive evaluator may call )Tj
/T1_2 1 Tf
(eval)Tj
/T1_0 1 Tf
( recursively to evaluate subexpressions. )Tj
ET
1.553 w 
9.539 462.98 m
187.286 462.98 l
S
0 0 1 rg
BT
/T1_1 1 Tf
18.4903 0 0 18.4903 9.5387 467.6397 Tm
(What is a Compiler?)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 430.1519 Tm
([ This is somewhat redundant with earlier stuff, but more concrete. Shou\ld I cut it down?] )Tj
0 -2.557 TD
(Before answering what a compiler is, let's backtrack and talk about inte\rpreters. )Tj
ET
1.294 w 
9.539 355.941 m
177.354 355.941 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 359.8236 Tm
(What is an Interpreter?)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 323.3337 Tm
(An interpreter really does two things: )Tj
1.607 -2.557 Td
(1.  it examines expressions and dispatches to the appropriate code for t\hat kind of expression )Tj
0 -1.2 TD
(2.  it performs the actual operations specified by the program )Tj
-1.607 -2.557 Td
(Typically, most of the work done by an interpreter is in the first categ\ory--our example interpreter, for )Tj
0 -1.2 TD
(example, spends a lot of time examining expressions to see if they're se\lf-evaluating or symbols or lists, and )Tj
T*
(dispatching to the appropriate procedure to evaluate that kind of expres\sion. This dispatching is interleaved )Tj
0 -1.2 TD
(with the actual work that evaluates the expressions. )Tj
0 -2.557 TD
(One of the problems with an interpreter is that every time an expression\ is encountered, it is analyzed again. )Tj
0 -1.205 TD
(Consider an expression like )Tj
/T1_2 1 Tf
(\(+ foo bar\))Tj
/T1_0 1 Tf
( embedded in a loop that iterates many times. Our interpreter will )Tj
0 -1.2 TD
(encounter this expression at each iteration of the loop, and at each ite\ration of the loop it will do mostly the )Tj
0 -1.205 TD
(same things: it will examine the expression and find out it's a list, th\en call )Tj
/T1_2 1 Tf
(eval-list)Tj
/T1_0 1 Tf
(, which will further )Tj
0 -1.205 TD
(examine it to find out it's a combination \(not a special form or macro\)\, and call )Tj
/T1_2 1 Tf
(eval-combo)Tj
/T1_0 1 Tf
(. Then )Tj
/T1_2 1 Tf
(eval-)Tj
T*
(combo)Tj
/T1_0 1 Tf
( will call )Tj
/T1_2 1 Tf
(eval)Tj
/T1_0 1 Tf
( recursively to evaluate the subexpressions, and each call to )Tj
/T1_2 1 Tf
(eval)Tj
/T1_0 1 Tf
( will examine the )Tj
0 -1.2 TD
(subexpressions and dispatch to the appropriate specialized evaluation ro\utine. Only then do we start actually )Tj
0 -1.205 TD
(computing the value of the expression, by computing the values of the su\bexpressions )Tj
/T1_2 1 Tf
(+)Tj
/T1_0 1 Tf
(, )Tj
/T1_2 1 Tf
(foo)Tj
/T1_0 1 Tf
(, and )Tj
/T1_2 1 Tf
(bar)Tj
/T1_0 1 Tf
(, i.e., )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(1 of 40\)\11/3/2006 9:17:06 PM)Tj
ET
EMC 

endstreamendobj6102 0 obj<</Length 3767>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(looking up the values of those variables. )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 714.836 m
201.591 714.836 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 718.7194 Tm
(OK, so what's a compiler?)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 682.2295 Tm
(We would rather factor out most of this redundant work, and examine the \expression just once to see what to )Tj
0 -1.205 TD
(do. Then each time we "evaluate" the expressions, we can just do those t\hings. For the expression )Tj
/T1_2 1 Tf
(\(+ foo )Tj
T*
(bar\))Tj
/T1_0 1 Tf
(, the set of actions an interpreter will execute \(leaving out all of th\e analysis and dispatching is\): )Tj
/T1_2 1 Tf
0 -2.562 TD
(     look up variable bar)Tj
0 -1.2 TD
(     look up variable foo)Tj
T*
(     look up variable +)Tj
0 -1.2 TD
(     apply)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Here we've assumed that we evaluate subexpressions of a combination fr\om right-to-left, rather than the )Tj
0 -1.2 TD
(more intuitive left-to-right order; that's a legal way to do it in Schem\e an it turns out to be handy in a very )Tj
T*
(simple compiler, as we'll explain in a minute.\) )Tj
0 -2.557 TD
([ maybe I should change this to do args left-to-right, but the operator \last, like RScheme. ] )Tj
T*
(For code like this, which doesn't have any conditionals in it, we can co\nvert an interpreter into a compiler )Tj
0 -1.2 TD
(very easily. We just modify the interpreter so that instead of actually \evaluating the expressions, it just )Tj
T*
(records what operations it )Tj
/T1_3 1 Tf
(would)Tj
/T1_0 1 Tf
( execute if it were interpreting the expression. I'm intentionally being\ vague )Tj
0 -1.205 TD
(as to how exactly these simple operations \(like )Tj
/T1_2 1 Tf
(look-up-variable)Tj
/T1_0 1 Tf
(\) work, but you should be able to see )Tj
0 -1.2 TD
(that each of them should be translatable into a handful of machine instr\uctions. That's how most compilers )Tj
T*
(work: they first translate a program into an )Tj
/T1_3 1 Tf
(intermediate code)Tj
/T1_0 1 Tf
( representation, like our look-up-variable )Tj
T*
(operations, and then translate that representation into machine instruct\ions. \(In between there may be one or )Tj
T*
(more steps that "optimize" the intermediate code, and each step may repr\esent the code in a different way.\) )Tj
0 -2.557 TD
(So this simple compiler just "pretends" to evaluate the expression, but \whenever it gets to an actual action )Tj
0 -1.2 TD
(\(like looking up a variable, or calling a procedure\), it simply record\s what action it would take if it were just )Tj
T*
(an interpreter. The result is a list of actions which, if taken, will ha\ve the same effect as interpreting the )Tj
0 -1.2 TD
(expression. )Tj
0 -2.557 TD
(Here's another example: )Tj
/T1_2 1 Tf
0 -2.562 TD
(\(let \(\(x 22\))Tj
0 -1.2 TD
(      \(y 15\)\))Tj
T*
(   \(+ x \(* x y\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Supposing that our intermediate code representation is a sequence of lis\ts that represent operations and their )Tj
0 -1.2 TD
(operands, the code that our simple compiler will generate is: )Tj
/T1_2 1 Tf
0 -2.562 TD
(  \(fetch-literal 22\))Tj
0 -1.2 TD
(  \(fetch-literal 15\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(2 of 40\)\11/3/2006 9:17:06 PM)Tj
ET
EMC 

endstreamendobj6103 0 obj<</Length 3914>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 753.2878 Tm
(  \(bind x y\))Tj
0 -1.2 TD
(  \(look-up-variable y\))Tj
T*
(  \(look-up-variable x\))Tj
0 -1.2 TD
(  \(look-up-variable *\))Tj
0 -1.2 TD
(  \(call-procedure\))Tj
T*
(  \(look-up-variable x\))Tj
T*
(  \(call-procedure\))Tj
T*
(  \(unbind\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Later on, we'll talk in more concrete detail about where values are temp\orarily stored when they're looked up, )Tj
0 -1.2 TD
(and various tweaks to make it possible to translate intermediate code in\to smaller and faster sequences of )Tj
T*
(machine instructions. For now just notice that we can string together se\quences of these intermediate code )Tj
T*
(operations, and if we just translate each of them into some machine inst\ructions, we can string those )Tj
T*
(sequences of machine instructions together and get a larger sequence tha\t we can execute to evaluate the )Tj
0 -1.2 TD
(whole expression. We can execute it as many times as we want, and all of\ the expression analysis and )Tj
0 -1.2 TD
(dispatching will already have been done--the only work done each time it\'s executed is the work that actually )Tj
T*
(binds variables, looks up values, calls procedures, and so on. )Tj
0 -2.562 TD
(It's not much harder to compile conditional expressions like )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(. When we compile an )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(, we need to )Tj
0 -1.2 TD
(generate code for the condition expression, the consequent expression, a\nd the alternative expression. \(The )Tj
T*
("consequent" is the code executed if the condition is true, and the "alt\ernative" is the code executed if it's )Tj
T*
(false.\) Then we need to string the code for those expressions together \appropriately with some conditional )Tj
T*
(branches: )Tj
/T1_1 1 Tf
0 -2.562 TD
(   <code for condition>)Tj
0 -1.2 TD
(   \(branch-if-false "else-action-label"\))Tj
T*
(   <code for consequent>)Tj
0 -1.2 TD
(   \(branch-unconditionally "end-label"\))Tj
T*
("else-action-label")Tj
T*
(   <code for alternative>)Tj
T*
("end-label")Tj
/T1_0 1 Tf
0 -2.552 TD
(The labels here will actually be translated into the addresses of the co\de they label, and the branches will be )Tj
0 -1.205 TD
(filled in with those addresses. \(We have to be careful to use a unique \pair of new labels for each )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( we )Tj
T*
(compile, so or some other trick like that, so that we can nest )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( expressions and keep their labels straight.\) )Tj
0 -2.557 TD
(\(One way of generating machine code from this representation is to tran\slate each of the statements into a )Tj
0 -1.2 TD
(short sequence of assembly instructions and each label into an assembly \label, stringing them together as )Tj
T*
(shown. Then the assembly code can be assembled into machine code.\) )Tj
0 -2.562 TD
(Note that for an )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(, the control structure of the compiler is actually simpler than the con\trol structure of an )Tj
0 -1.2 TD
(interpreter. The interpreter will evaluate the condition expression, and\ then decide at run time whether to )Tj
T*
(evaluate the consequent \("then"\) expression or the alternative \("else\"\) expression. The compiler will always )Tj
T*
(compile all three subexpressions, and string them together with conditio\nal branches that will do the deciding )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(3 of 40\)\11/3/2006 9:17:06 PM)Tj
ET
EMC 

endstreamendobj6104 0 obj<</Length 2554>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(at run time, based on the runtime value computed by the code for the con\dition expression. )Tj
0 -2.557 TD
(Here's a slightly more complicated example: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(x 15\)\))Tj
0 -1.2 TD
(   \(if x)Tj
T*
(       \(let \(\(y \(* 2 x\)\)\))Tj
0 -1.2 TD
(          \(+ x y\)\))Tj
T*
(       #t\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(translates to intermediate code roughly like: )Tj
/T1_1 1 Tf
0 -2.562 TD
(   \(fetch-literal 15\))Tj
0 -1.2 TD
(   \(bind x\))Tj
T*
(   \(lookup-variable x\))Tj
T*
(   \(branch-if-false "else22"\))Tj
T*
(   \(lookup-variable x\))Tj
T*
(   \(fetch-literal 2\))Tj
T*
(   \(lookup-variable *\))Tj
T*
(   \(call-procedure\))Tj
T*
(   \(bind y\)               ; create and enter envt that binds y)Tj
T*
(   \(lookup-variable y\))Tj
T*
(   \(lookup-variable x\))Tj
T*
(   \(lookup-variable +\))Tj
T*
(   \(call-procedure\))Tj
T*
(   \(unbind\)               ; exit envt that binds y)Tj
T*
(   \(branch "end22"\))Tj
T*
( "else22")Tj
0 -1.2 TD
(   \(fetch-literal #t\))Tj
T*
( "end22"          )Tj
/T1_0 1 Tf
0 -2.552 TD
(There are actually a couple of minor things wrong with the code we've ge\nerated, but this is pretty close to a )Tj
0 -1.2 TD
(workable intermediate representation. )Tj
ET
0 0 1 RG
1.553 w 10 M 0 j 0 J []0 d 
9.539 188.069 m
302.37 188.069 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.4903 0 0 18.4903 9.5387 192.7287 Tm
(What Does a Compiler Generate?)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 155.2409 Tm
([ Talk about machine code, interpretive virtual machines, etc. ] )Tj
ET
9.539 111.701 m
286.949 111.701 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.4903 0 0 18.4903 9.5387 116.3607 Tm
(Basic Structure of the Compiler)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 78.8087 Tm
(The main function of the compiler is )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
(, which generates intermediate code for an expression, and )Tj
0 -1.2 TD
(which may call itself recursively to generate code for subexpressions. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(4 of 40\)\11/3/2006 9:17:06 PM)Tj
ET
EMC 

endstreamendobj6105 0 obj<</Length 3903>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8351 Tm
(Calls to )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
( hand it an expression and some bookkeeping information we'll discuss la\ter. Compile )Tj
0 -1.2 TD
(returns intermediate code, plus updated versions of some of the bookkeep\ing information. )Tj
0 -2.562 TD
(To start this process off, top-level forms \(like the ones you type into\ the )Tj
/T1_1 1 Tf
(read-compile-run-print)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(loop, or definitions of top-level procedures\) are massaged a little, th\en intermediate code for them is )Tj
T*
(generated. Then the intermediate code is converted into real executable \code and packaged up as a closure )Tj
T*
(that can be called. )Tj
0 -2.557 TD
(We will discuss these issues of massaging top-level forms and generating\ executable closures later; for now, )Tj
0 -1.2 TD
(the main thing to understand is the recursive generation of intermediate\ code for nested expressions. )Tj
0 -2.562 TD
(Here's the main dispatch routine of the compiler, which is analagous to \the interpreter's )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
(: )Tj
/T1_1 1 Tf
T*
(\(define \(compile expr c-t-envt literal-state c-t-cont\))Tj
0 -1.2 TD
(   \(cond \(\(symbol? expr\))Tj
T*
(          \(compile-symbol expr c-t-envt literal-state c-t-cont\)\))Tj
T*
(         \(\(pair? expr\))Tj
T*
(          \(compile-list expr c-t-envt literal-state c-t-cont\)\))Tj
T*
(         \(\(self-evaluating? expr\))Tj
T*
(          \(compile-self-eval expr c-t-envt literal-state c-t-cont\)\))Tj
T*
(         \(#t)Tj
T*
(          \(syntax-error "Illegal expression form" expr\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(For now, ignore most of the arguments to )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
(, we'll explain them later. The main thing to notice is that )Tj
0 -1.205 TD
(it looks a lot like )Tj
/T1_1 1 Tf
(eval)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
([ blah blah blah...] )Tj
T*
([ Somewhere, it's important to bring out the difference between the mutu\al recursion of eval and apply in the )Tj
0 -1.2 TD
(interpreter and the way the compiler works. Eval recurs locally, but jus\t generates code for apply... The )Tj
T*
(control structure of the compiler is actually simpler than for the inter\preter, because the hairy stuff just )Tj
T*
(happens at run time... ] )Tj
ET
0 0 1 RG
1.553 w 10 M 0 j 0 J []0 d 
9.539 199.576 m
420.523 199.576 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.4903 0 0 18.4903 9.5387 204.2352 Tm
(Data Representations, Calling Convention, etc.)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 166.7474 Tm
(Before trying to understand the compiler itself in more detail, it is pr\obably best to have a concrete idea of )Tj
0 -1.2 TD
(what the representations of data are, how procedure calls work, and how \registers are used. That is, you have )Tj
T*
(to understand the "abstract machine" that the compiler compiles for. )Tj
0 -2.557 TD
(An abstract machine is an abstraction of low-level operations and object\s. The compiler first compiles code )Tj
0 -1.2 TD
(from the source language into this lower-level representation, and then \translates the "abstract machine )Tj
T*
(language" into actual executable code. \(The executable code may be mach\ine code that runs directly on the )Tj
T*
(hardware, or an interpretive executable code such as bytecodes, which ar\e interpreted by a fast interpreter.\) )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(5 of 40\)\11/3/2006 9:17:06 PM)Tj
ET
EMC 

endstreamendobj6106 0 obj<</Length 4346>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 749.5255 Tm
(You can think of an abstract machine as being more like an assembler tha\n an interpreter, but maybe a little )Tj
0 -1.2 TD
(smarter than most assemblers. )Tj
0 -2.557 TD
(I will describe one particular set of features to make things concrete; \this is not quite how RScheme works, or )Tj
0 -1.2 TD
(Scheme-48, or any particular other system that I know of, but there's no\thing unusual about it except maybe )Tj
T*
(its simplicity. )Tj
0 -2.557 TD
(In fleshing out our example compiler, let's suppose our system works thi\s way: )Tj
1.607 -2.557 Td
(1.  We have several important registers used in stereotyped ways, e.g., \to hold a pointer to the current )Tj
1.25 -1.2 Td
(binding environment. )Tj
-1.25 -1.2 Td
(2.  We have an evaluation stack that's used to store intermediate values\ while evaluating nested )Tj
1.25 -1.2 Td
(expressions. )Tj
-1.25 -1.2 Td
(3.  We use a continuation chain to represent the saved state of callers,\ their callers, and so on, so that they )Tj
1.25 -1.2 Td
(can be resumed after a procedure returns. )Tj
-2.857 -2.557 Td
(The registers of the abstract machine may represent hardware registers, \or just storage locations that are used )Tj
0 -1.2 TD
(in these stereotyped ways. \(For example, if compiling to C, the registe\rs might be C global variables, and the )Tj
T*
(C compiler might or might not let you specify that the variables should \be put in hardware registers.\) )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 412.62 m
111.436 412.62 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 416.5027 Tm
(The Registers)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 380.0127 Tm
(We'll assume that there are several important registers that can be used\ by the code our compiler generates: )Tj
1.607 -2.562 Td
(1.  The )Tj
/T1_2 1 Tf
(VALUE)Tj
/T1_0 1 Tf
( register, where an expression leaves a value so that it can be used by \an enclosing )Tj
1.25 -1.2 Td
(expression. In The case of a procedure, this is where the value is left \for the caller when the procedure )Tj
0 -1.2 TD
(returns. The value register is also used when calling a procedure. )Tj
-1.25 -1.205 Td
(2.  The )Tj
/T1_2 1 Tf
(ENVT)Tj
/T1_0 1 Tf
( register, which holds a pointer to the environment that code is current\ly executing in. )Tj
0 -1.205 TD
(3.  The )Tj
/T1_2 1 Tf
(CONT)Tj
/T1_0 1 Tf
( register, which holds a pointer to the chain of saved continuations of \callers. )Tj
T*
(4.  The )Tj
/T1_2 1 Tf
(TEMPLATE)Tj
/T1_0 1 Tf
( register, which holds a pointer to a special data structure associated \with the )Tj
1.25 -1.2 Td
(procedure that is currently executing, and )Tj
-1.25 -1.205 Td
(5.  The )Tj
/T1_2 1 Tf
(PC)Tj
/T1_0 1 Tf
( \(program counter\) register, which says which instruction we are curre\ntly executing. \(If we're )Tj
1.25 -1.2 Td
(compiling to normal machine code, this is a special register built into \the CPU for this purpose, and we )Tj
0 -1.2 TD
(use it pretty much like any other code would. If we're compiling to an i\nterpretive executable code, )Tj
T*
(this is probably variable in the interpreter.\) )Tj
ET
9.539 145.231 m
347.773 145.231 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 149.1136 Tm
(The Evaluation Stack \(or Eval Stack, for short\))Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 112.6237 Tm
(The eval stack is used for holding values that have been computed by eva\luating subexpressions, but not yet )Tj
0 -1.2 TD
(used or bound. )Tj
0 -2.562 TD
(In evaluating the expression )Tj
/T1_2 1 Tf
(\(+ foo 22\))Tj
/T1_0 1 Tf
(, the three values will be computed. When each value is )Tj
0 -1.205 TD
(computed, it will be left in the )Tj
/T1_2 1 Tf
(VALUE)Tj
/T1_0 1 Tf
( register. We evaluate right to left, and after evaluating each argument\, )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(6 of 40\)\11/3/2006 9:17:06 PM)Tj
ET
EMC 

endstreamendobj6107 0 obj<</Length 4386>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8351 Tm
(we perform a )Tj
/T1_1 1 Tf
(PUSH)Tj
/T1_0 1 Tf
( operation on the eval stack, which copies the value in the value regist\er onto the eval )Tj
0 -1.2 TD
(stack. When we get to the first subexpression \(the one that's supposed \to return a function to call\), we leave )Tj
T*
(the value in the value register, because that's where we put the closure\ pointer for a procedure call. )Tj
0 -2.557 TD
(The eval stack is used for two main purposes: )Tj
1.607 -2.557 Td
(1.  storing intermediate values for nested expressions, and )Tj
0 -1.2 TD
(2.  passing arguments to procedures. )Tj
-1.607 -2.557 Td
(The eval stack is )Tj
/T1_2 1 Tf
(not)Tj
/T1_0 1 Tf
( used to hold intermediate values or local variables for suspended proce\dures--it isn't like )Tj
T*
(the activation stack in a conventional implementation of C or Pascal. Th\e values in the eval stack at any given )Tj
T*
(time are only the intermediate values stored for the )Tj
/T1_2 1 Tf
(currently executing)Tj
/T1_0 1 Tf
( procedure. Intermediate values for )Tj
T*
(suspended procedures are saved in the continuation chain as necessary. )Tj
0 -2.557 TD
(When we call a procedure, the only values on the eval stack are the argu\ments to the procedure. Any other )Tj
0 -1.2 TD
(values used by the caller are moved from the eval stack into a continuat\ion before calling. )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 466.004 m
183.317 466.004 l
S
0 0 1 rg
BT
/T1_3 1 Tf
15.4086 0 0 15.4086 9.5387 469.8871 Tm
(The Continuation Chain)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 433.3971 Tm
(The continuation chain is a data structure that fills roughly the role o\f an activation stack in the )Tj
0 -1.2 TD
(implementation of a conventional programming language. The continuation \chain is a linked list of )Tj
/T1_2 1 Tf
(partial )Tj
T*
(continuations)Tj
/T1_0 1 Tf
(, each of which is a record that stores the saved state of a procedure. \)Tj
0 -2.557 TD
(When a procedure performs a non-tail procedure call, it packages its imp\ortant state information up into a )Tj
0 -1.2 TD
(partial continuation; this record saves the values of the environment, t\emplate, PC, and continuation registers, )Tj
T*
(and any temporary values on the eval stack. )Tj
0 -2.557 TD
(Once a caller has saved its state in a partial continuation, then the ca\llee can do whatever it wants with the )Tj
0 -1.2 TD
(important registers and the evaluation stack. \(This is called a )Tj
/T1_2 1 Tf
(caller-saves)Tj
/T1_0 1 Tf
( register usage convention, because )Tj
T*
(the caller of a procedure is obliged to save any values that it will nee\d when it resumes.\) )Tj
0 -2.557 TD
(Remember that continuations are allocated on the garbage collected heap \and are immutable--we never )Tj
0 -1.2 TD
(modify a continuation once it's created. When we resume from a saved par\tial continuation, we copy the )Tj
T*
(values from the partail continuation into the registers and eval stack, \but that doesn't modify the partial )Tj
T*
(continuation itself--it's still sitting out there on the heap. This is i\mportant for being able to implement call-)Tj
T*
(with-current-continuation: it's what allows us to resume from the same c\ontinuation any number of times. )Tj
ET
9.539 130.64 m
112.283 130.64 l
S
0 0 1 rg
BT
/T1_3 1 Tf
15.4086 0 0 15.4086 9.5387 134.5227 Tm
(Environments)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 98.0328 Tm
(The compiler assumes that a binding environment is a chain of )Tj
/T1_2 1 Tf
(frames)Tj
/T1_0 1 Tf
(, each of which is a vector of slots )Tj
0 -1.2 TD
(which are the variable bindings. Each frame also has a )Tj
/T1_2 1 Tf
(static link)Tj
/T1_0 1 Tf
( or )Tj
/T1_2 1 Tf
(scope link)Tj
/T1_0 1 Tf
( field, which points to the frame )Tj
T*
(representing the next lexically enclosing environment. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(7 of 40\)\11/3/2006 9:17:06 PM)Tj
ET
EMC 

endstreamendobj6108 0 obj<</Length 4020>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(Top-level environments are represented specially, as hash tables that ma\p names to bindings. We'll use a hash )Tj
0 -1.2 TD
(table instead of the association lists we used in our simple interpreter\, because they're faster if you have a lot )Tj
T*
(of bindings. A binding object for a top-level environment is pretty much\ the same as in the interpreter: a little )Tj
0 -1.2 TD
(vector with two important slots: a slot for its name and another slot th\at is the actual value field. )Tj
0 -2.557 TD
(Local environments are represented very differently from toplevel enviro\nments: each frame is a vector of )Tj
0 -1.2 TD
(slots, and does )Tj
/T1_1 1 Tf
(not)Tj
/T1_0 1 Tf
( store the names of the bindings. It turns out that the names are only n\eeded at compile )Tj
T*
(time, so they don't actually have to be stored in the runtime environmen\t. \(The compiler also turns out to be )Tj
0 -1.2 TD
(able to do most of the work for looking up a toplevel variable at compil\e time, so the speed of our hash tables )Tj
T*
(is not going to be critical to our runtime speed.\) )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 568.514 m
270.684 568.514 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.4086 0 0 15.4086 9.5387 572.3965 Tm
(Closure Representation and Calling)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 535.9066 Tm
(Closures in our system are represented as objects with two fields: a poi\nter to the environment captured by )Tj
0 -1.2 TD
(the closure, and a pointer to an object called a )Tj
/T1_1 1 Tf
(template)Tj
/T1_0 1 Tf
(, which in turn contains a pointer to the code for the )Tj
T*
(procedure. )Tj
0 -2.557 TD
(When we evaluate the following expression )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(let \(\(foo 22\))Tj
0 -1.2 TD
(      \(bar 15\)\))Tj
T*
(   \(lambda \(...\))Tj
T*
(       ...\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(we'll create an environment frame to hold the bindings of foo and bar, a\nd initialize them to )Tj
/T1_3 1 Tf
(22)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(15)Tj
/T1_0 1 Tf
(, )Tj
0 -1.2 TD
(respectively. This environment frame will have a scope link pointing to \the environment we were executing in )Tj
0 -1.205 TD
(when we entered the )Tj
/T1_3 1 Tf
(let)Tj
/T1_0 1 Tf
(. Inside this environment, we'll create a closure. The closure will hold\ a pointer to )Tj
0 -1.2 TD
(the new environment, and a pointer to a template object representing the\ anonymous procedure being closed. )Tj
T*
(The template will have a pointer to the actual executable code. All of t\hese things will be heap-allocated )Tj
T*
(objects, and in our implementation we'll give each one header field show\ing what kind of object it is: )Tj
/T1_3 1 Tf
0 -2.562 TD
(                                          <to envt. frame)Tj
0 -1.2 TD
(                                           for enclosing)Tj
T*
(                                              scope>)Tj
T*
(                                               )Tj
T*
(                                                ^)Tj
T*
(                                                |)Tj
T*
(                                +----------+    |)Tj
T*
(                                | envt. fr.|    |)Tj
T*
(                        ,------>+==========+    |)Tj
0 -1.2 TD
(                       /  scope |     +----+----+       )Tj
T*
(     +----------+     /         +----------+)Tj
T*
(     | closure  |    /      foo |       22 |)Tj
T*
(     +==========+   /           +----------+)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(8 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6109 0 obj<</Length 3996>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 754.8351 Tm
(envt |     +----+--'        bar |       15 |)Tj
0 -1.2 TD
(     +----------+               +----------+     )Tj
T*
(proc |     +----+--.    )Tj
0 -1.2 TD
(     +----------+   \\      +----------+   )Tj
0 -1.2 TD
(                     \\     | template |       +----------+)Tj
T*
(                      `--->+==========+       |   code   |)Tj
T*
(                      code |     +----+-----> +==========+)Tj
T*
(                           +----------+       |executable|)Tj
0 -1.2 TD
(                           |          |       + code for +)Tj
T*
(                           +----------+       |procedure |)Tj
T*
(                           |          |       +          +)Tj
T*
(                           +----------+       |   ...    |)Tj
T*
(                           |   ...    |       +----------+)Tj
T*
(                           +----------+)Tj
/T1_0 1 Tf
0 -2.552 TD
(The template object holds not only the pointer to the actual code, but a\ny other handy values that the compiler )Tj
0 -1.2 TD
(can compute or look up at compile time, and which should be available to\ the procedure at run time. We'll )Tj
T*
(discuss that more later. )Tj
0 -2.557 TD
(When we want to apply a procedure to some argument values, we put the ar\gument values on the eval stack, )Tj
0 -1.205 TD
(and a pointer to the closure we want to call in the )Tj
/T1_1 1 Tf
(VALUE)Tj
/T1_0 1 Tf
( register. Then we execute a short sequence of )Tj
0 -1.2 TD
(instructions that does the call: )Tj
/T1_2 1 Tf
6.6771 0 0 6.6771 34.0654 379.966 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 379.966 Tm
(Extract the environment pointer from the closure and put it in the envir\onment register. \(This is )Tj
0 -1.2 TD
(basically just an indexed load using the value register as a base.\) )Tj
/T1_2 1 Tf
6.6771 0 0 6.6771 34.0654 347.9161 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 347.9161 Tm
(Extract the template pointer from the closure and put it in the template\ register. \(This is basically just )Tj
T*
(another indexed load using the value register as a base.\) )Tj
/T1_2 1 Tf
6.6771 0 0 6.6771 34.0654 315.8663 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 315.8663 Tm
(Extract the code pointer from the template and put it in the program cou\nter register, i.e., jump to that )Tj
T*
(code. \(This is basically just another indexed load using the template r\egister as a base, and a jump to )Tj
T*
(that address.\) )Tj
-2.857 -2.557 Td
(Thus actual machine code for our "apply" operation in our intermediate r\epresentation is just a handful of )Tj
0 -1.2 TD
(instructions that do this stuff--a stereotyped little instruction sequen\ce that destructures a closure and puts the )Tj
T*
(appropriate values in registers before beginning execution of the proced\ure. )Tj
0 -2.557 TD
(Because this is the way the procedure calling convention works, we know \that when we begin executing the )Tj
0 -1.2 TD
(code for a procedure, the environment register will point to the right e\nvironment \(where the procedure was )Tj
T*
(defined\) and the template register will point to the template for that \procedure. Any values stored in the )Tj
T*
(template by the compiler can be fetched at compile time by doing an inde\xed load with the template register )Tj
T*
(as a base. )Tj
0 -2.557 TD
(Consider this procedure: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(foo x y\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(9 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6110 0 obj<</Length 4088>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 754.8351 Tm
(   \(list 'bar x y\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Here, the literal bar is needed by the procedure--there must be some cod\e in foo that will somehow fetch a )Tj
0 -1.2 TD
(pointer to the symbol bar. That's what the template object is for. When \this procedure is compiled, the )Tj
T*
(compiler accumulates a list of such literals, and when the template obje\ct for the procedure is created, all of )Tj
0 -1.205 TD
(those values will be stored into it. When the compiler generates code to\ fetch the symbol )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
(, it just looks at )Tj
0 -1.2 TD
(the symbol's position in the literal list \(and thus its offset in the t\emplate object\), and generates code to do an )Tj
T*
(indexed load to fetch that value from the template at run time. )Tj
ET
0 0 1 RG
1.553 w 10 M 0 j 0 J []0 d 
9.539 597.022 m
133.831 597.022 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.4903 0 0 18.4903 9.5387 601.6818 Tm
(Continuations)Tj
ET
1.294 w 
9.539 558.28 m
397.928 558.28 l
S
BT
/T1_2 1 Tf
15.4086 0 0 15.4086 9.5387 562.1625 Tm
(Applying a Procedure Doesn't Save the Caller's State)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 525.6726 Tm
(Remember that when we do a procedure call, we do )Tj
/T1_3 1 Tf
(not)Tj
/T1_0 1 Tf
( necessarily save the state of the caller. For a non-tail )Tj
0 -1.2 TD
(call, the compiler must generate code to save the caller's state plus co\de for the actual call. For a tail call, )Tj
T*
(there is no need to save the state. Because of this, there isn't really \a single "procedure call" operation that )Tj
0 -1.205 TD
(saves the caller's state and invokes the callee. There are two separate \operations, )Tj
/T1_1 1 Tf
(save-continuation)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(and )Tj
/T1_1 1 Tf
(apply)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(As mentioned above, the code sequence that performs a procedure applicat\in assumes that the pointer to the )Tj
0 -1.205 TD
(closure to be called is in the )Tj
/T1_1 1 Tf
(VALUE)Tj
/T1_0 1 Tf
( register. The procedure will leave its value in that register when it )Tj
0 -1.2 TD
(returns. )Tj
ET
9.539 355.119 m
159.356 355.119 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.4086 0 0 15.4086 9.5387 359.0018 Tm
(Continuation Saving)Tj
0 0 0 rg
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 322.4476 Tm
(save-continuation)Tj
/T1_0 1 Tf
( is the operation that saves the state of the currently executing proced\ure in a partial )Tj
0 -1.2 TD
(continuation, and pushes it onto the continuation chain. )Tj
0 -2.557 TD
(When pushing a continuations, it is important to save all of the values \on the eval stack, )Tj
/T1_3 1 Tf
(except)Tj
/T1_0 1 Tf
( for the )Tj
0 -1.2 TD
(arguments to the procedure being called. Therefore, when generating code\ for a combination \(procedure call\) )Tj
T*
(expression, the code to save the caller's state does )Tj
/T1_3 1 Tf
(not)Tj
/T1_0 1 Tf
( come just before the actual code to call the procedure. )Tj
T*
(This would remove the arguments to the procedure from the eval stack. In\stead, the continuation save comes )Tj
T*
(just before the code that generates the argument values that will be pas\sed to the procedure: )Tj
/T1_1 1 Tf
0 -2.562 TD
(  \(save-continuation <label>\) ; save everything else before computing \args)Tj
0 -1.2 TD
(  <compute argn>)Tj
T*
(    ...)Tj
T*
(  <compute arg1>)Tj
T*
(  <compute callee>)Tj
T*
(  \(apply\))Tj
T*
(<label>)Tj
/T1_0 1 Tf
0 -2.552 TD
(that way, the arguments to the call \(and nothing else\) will be on the \eval stack when the procedure is called, )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(10 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6111 0 obj<</Length 2964>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(and when the procedure returns, it will restore the other values from th\e partial continuation onto the eval )Tj
0 -1.2 TD
(stack. )Tj
0 -2.557 TD
(This separation of the saving and calling code looks especially funny fo\r nested expressions that call )Tj
0 -1.2 TD
(procedures, but it makes perfect sense. )Tj
/T1_1 1 Tf
0 -2.562 TD
(save-continuation)Tj
/T1_0 1 Tf
( takes an argument which is the address of the code to execute when the \)Tj
0 -1.2 TD
(continuation is resumed. This address is saved in the partial continuati\on, and when the continuation is )Tj
0 -1.205 TD
(resumed, it will be branched to \(put in the )Tj
/T1_1 1 Tf
(PC)Tj
/T1_0 1 Tf
( register\). )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 582.311 m
97.737 582.311 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.4086 0 0 15.4086 9.5387 586.1944 Tm
(An Example)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 549.7044 Tm
(Now that we have a more detailed idea how the registers, eval stack, and\ continuations work, here's an )Tj
0 -1.2 TD
(example: )Tj
/T1_1 1 Tf
0 -2.562 TD
(   \(+ \(- a b\) \(/ c d\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(compiles to intermediate code something like: )Tj
/T1_1 1 Tf
0 -2.562 TD
(  \(push-continuation "resume23"\) ; save cont for call to +)Tj
0 -1.2 TD
(  \(push-continuation "resume24"\) ; save cont for call to -)Tj
T*
(  \(lookup-variable d\)   ; get value of d into value reg)Tj
T*
(  \(push\)                ; push value of d on eval stack)Tj
T*
(  \(lookup-variable c\)   ; get value of c into value reg)Tj
T*
(  \(push\)                ; push value of c on eval stack)Tj
0 -1.2 TD
(  \(lookup-variable /\)   ; look up /)Tj
0 -1.2 TD
(  \(apply\)               ; call /, which is in value reg after lookup)Tj
T*
(  \(push\)                 )Tj
T*
("resume24" )Tj
T*
(  \(push-continuation "resume25"\) ;save cont for -, incl. value of \(/ \c d\))Tj
T*
(  \(lookup-variable b\)   ; get value of b)Tj
T*
(  \(push\) )Tj
T*
(  \(lookup-variable a\)   ; get value of a)Tj
T*
(  \(push\))Tj
T*
(  \(lookup-variable -\)   ; get value of -)Tj
T*
(  \(apply\)               ; call -)Tj
T*
(  \(push\)                ; push returned value on top of restored e )Tj
T*
(stack     )Tj
T*
("resume25")Tj
0 -1.2 TD
(  \(lookup-variable +\)   ; look up + )Tj
T*
(  \(apply\)               ; tail call +)Tj
T*
("resume23"  )Tj
/T1_0 1 Tf
0 -2.552 TD
(Things to notice: )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(11 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6112 0 obj<</Length 4869>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 31.0006 741.5242 Tm
(1.  after the first )Tj
/T1_1 1 Tf
(apply)Tj
/T1_0 1 Tf
(, the called routine \(or something it directly or indirectly tail calls\\) will eventually )Tj
1.25 -1.2 Td
(do a procedure return, and pop the latest continuation we pushed, restor\ing anything that was on the )Tj
0 -1.2 TD
(eval stack at that point, and resuming execution at label1. [ OOPS... fi\x this ] )Tj
-1.25 -1.2 Td
(2.  after the second apply, the called routine will eventually \(directl\y or indirectly\) do a procedure return, )Tj
1.25 -1.2 Td
(which will pop the second continuation we pushed, restoring the already-\computed value of the )Tj
0 -1.205 TD
(subexpression )Tj
/T1_1 1 Tf
(\(/ c d\))Tj
/T1_0 1 Tf
( to the eval stack. )Tj
-1.25 -1.205 Td
(3.  we generated code for the expression )Tj
/T1_1 1 Tf
(\(+ \(- a b\))Tj
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
(\(/ c d\)\))Tj
/T1_0 1 Tf
( to be used in tail position. This code )Tj
1.25 -1.2 Td
(doesn't save a continuation before the final call to +. If the expressio\n is to be used in non-tail position, )Tj
0 -1.2 TD
(we must generate slightly different code, which will save a continuation\ that will resume after this )Tj
T*
(expression. )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 557.108 m
200.482 557.108 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.4086 0 0 15.4086 9.5387 560.9912 Tm
(Generating Unique Labels)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 524.5013 Tm
([ where does this go? ] )Tj
0 -2.562 TD
(Like )Tj
/T1_1 1 Tf
(compile-if)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(compile-combo)Tj
/T1_0 1 Tf
( generates labels as necessary to be able to name the code where )Tj
0 -1.2 TD
(execution should be resumed after a call--in the code it generates, it p\uts the label just before the intermediate )Tj
0 -1.205 TD
(code instruction to resume, and the same label in the call to )Tj
/T1_1 1 Tf
(save-continuation)Tj
/T1_0 1 Tf
( that should resume )Tj
0 -1.2 TD
(there. )Tj
0 -2.557 TD
(It is easy to generate unique labels for every resumable point in a prog\ram. We just keep a counter of labels )Tj
0 -1.2 TD
(we've used so far, and to create a new one we append the digits represen\ting this number to the string )Tj
/T1_1 1 Tf
0 -1.205 TD
("resume")Tj
/T1_0 1 Tf
(, so that we get )Tj
/T1_1 1 Tf
("resume1")Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
("resume2")Tj
/T1_0 1 Tf
(, and so on. )Tj
0 -2.562 TD
(We can write a Scheme procedure, )Tj
/T1_1 1 Tf
(generate-label)Tj
/T1_0 1 Tf
(, which keeps a counter, and when given a string as )Tj
0 -1.2 TD
(an argument, returns the a new string with the same characters plus the \digits representing the number in the )Tj
0 -1.205 TD
(counter. That way, we can use labels that start with )Tj
/T1_1 1 Tf
("else")Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
("end")Tj
/T1_0 1 Tf
( to label the branch targets of an )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( )Tj
T*
(expression, and labels that start with )Tj
/T1_1 1 Tf
("resume")Tj
/T1_0 1 Tf
( to represent the resumption points for continuation saving. )Tj
0 -1.2 TD
(This makes the intermediate code we generate fairly understandable, whil\e ensuring that labels are still )Tj
T*
(unique, and easy to use as assembler labels when translating intermediat\e code to machine language. )Tj
ET
1.553 w 
9.539 217.881 m
382.488 217.881 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.4903 0 0 18.4903 9.5387 222.5409 Tm
(More on Representations of Environments)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 185.0532 Tm
(To get reasonable performance for our system, we'll want to treat the to\p-level environment differently from )Tj
0 -1.2 TD
(local variable binding environments. We'll use a trick involving lexical\ scope to precompute most of the work )Tj
T*
(done in looking up a local variable binding, and a different trick to ma\ke it fast to look up top-level variables. )Tj
0 -2.562 TD
(As we said before, each local variable binding contour \(e.g., the bindi\ngs introduced by a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, or by binding )Tj
0 -1.2 TD
(the args to a procedure\) is represented at run time as a frame with slo\ts for each variable, plus a scope link )Tj
T*
(that points to the frame representing the enclosing contour. )Tj
0 -2.557 TD
(A top-level environment is likely to be large, and we will want to be ab\le to access it in special ways. We will )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(12 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6113 0 obj<</Length 4166>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(represent it as a hash table that maps symbols \(variable names\) to the\ir toplevel bindings. The bindings )Tj
0 -1.2 TD
(themselves will be represented as objects, whose main function is to hav\e one field that holds the current )Tj
T*
(value of the variable. For simplicity, we'll make them self-identifying \as well: not only will the names be used )Tj
0 -1.2 TD
(as keys in the hash table, but the binding objects will hold pointers to\ their names as well as values. )Tj
0 -2.557 TD
(Keep in mind that this representation is just one that's convenient. A t\oplevel environment could be )Tj
0 -1.2 TD
(represented as any kind of table \(e.g., an association list\), but we w\ant it to be reasonably fast to access even )Tj
T*
(if there are thousands of top-level variables. \(We'll use a special tri\ck to make normal accesses to top-level )Tj
0 -1.2 TD
(variable bindings very fast at run time, but we want to make them reason\ably fast at compile time as well, and )Tj
T*
(hash tables are good for that.\) )Tj
0 -2.557 TD
(Suppose we evaluate the following expressions at the top level, to defin\e and initialize a couple of variables: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define quux "fubar"\))Tj
0 -2.4 TD
(\(define \(double x\) \(+ x x\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(This will modify the toplevel environment by adding bindings for )Tj
/T1_1 1 Tf
(quux)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(double)Tj
/T1_0 1 Tf
(, in addition to what's )Tj
0 -1.2 TD
(already there: )Tj
/T1_1 1 Tf
0 -2.562 TD
(   +-------------------------------------------------------------------+\)Tj
0 -1.2 TD
(   |                                                                   |\)Tj
T*
(   |                                                                   |\)Tj
T*
(  \\|/                                                                  \|)Tj
T*
(   +------------------+                                                |\)Tj
T*
(   |   toplevel env.  |                                                |\)Tj
T*
(   +==================+         +----------+                           |\)Tj
T*
(   |   cons |    *----+-------->| binding  |                           |\)Tj
0 -1.2 TD
(   +--------+---------+         +==========+                           |\)Tj
T*
(   |        |         |   value |     *----+------><closure for cons>  |\)Tj
T*
(        .        .              +----------+                           |\)Tj
T*
(        .        .         name |     cons |                           |\)Tj
T*
(        .        .              +----------+                           |\)Tj
T*
(                                                                       |\)Tj
T*
(   |        |         |         +----------+                           |\)Tj
T*
(   +--------+---------+         | binding  |                           |\)Tj
T*
(   |   quux |    *----+-------->+==========+                           |\)Tj
T*
(   +--------+---------+   value |     *----+------>"fubar"             |\)Tj
T*
(   |        |         |         +----------+                           |\)Tj
T*
(        .        .         name |     quux |                           |\)Tj
T*
(        .        .              +----------+                           |\)Tj
T*
(        .        .                                                     |\)Tj
T*
(                                                                       |\)Tj
T*
(   |        |         |         +----------+                           |\)Tj
T*
(   +--------+---------+         | binding  |          +----------+     |\)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(13 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6114 0 obj<</Length 5085>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 754.3556 Tm
(   | double |    *----+-------->+==========+          | closure  |     |\)Tj
0 -1.2 TD
(   +--------+---------+   value |     *----+--------->+==========+     )Tj
T*
(|   )Tj
0 -1.2 TD
(   |        |         |         +----------+     envt |     *----+-----+\)Tj
0 -1.2 TD
(        .        .         name |  double  |          +----------+)Tj
T*
(        .        .              +----------+     proc |     *----+---> .\..)Tj
T*
(        .        .                                    +----------+)Tj
/T1_0 1 Tf
0 -2.552 TD
(Several things to note: )Tj
/T1_2 1 Tf
6.6771 0 0 6.6771 34.0654 589.9735 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 589.9735 Tm
(The representation of the hash table itself may not really be a simple a\rray of name-value pairs, but I )Tj
0 -1.2 TD
(didn't want to clutter up the picture with overflow buckets and whatnot.\ )Tj
/T1_2 1 Tf
6.6771 0 0 6.6771 34.0654 557.9236 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 557.9236 Tm
(In principle, we don't need to have pointers to separate binding objects\. We could just store the values )Tj
T*
(of bindings right in the table, using the value fields of the name-value\ pair to hold the actual variable )Tj
T*
(values. \(After all, a binding is really just a location with a name, us\ed to hold a value.\) It will turn out )Tj
0 -1.2 TD
(to be convenient for our implementation to have separate objects that ho\ld the values. )Tj
/T1_2 1 Tf
6.6771 0 0 6.6771 34.0654 493.8239 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 493.8239 Tm
(The occurrences of symbol names in the picture would really be pointers \to symbol objects, and the )Tj
0 -1.205 TD
(string )Tj
/T1_1 1 Tf
("fubar")Tj
/T1_0 1 Tf
( would really be an object itself as well. As usual, we selectively abbr\eviate our )Tj
0 -1.2 TD
(pictorial representation to avoid cluttering things up. )Tj
/T1_2 1 Tf
6.6771 0 0 6.6771 34.0654 445.6848 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 445.6848 Tm
(We refer to the toplevel binding objects as objects, but they're not Sch\eme objects--standard Scheme )Tj
T*
(doesn't give you any way to get a pointer to one of these and play with \it from inside the language. )Tj
T*
(These "objects" are objects in the sense that they're allocated on the h\eap and referred to via pointers )Tj
0 -1.2 TD
(by the compiler and by compiled code, but they're not "first class." \(A\n extended version of the )Tj
0 -1.205 TD
(Scheme language may )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( you get at them from inside the language, but that's not standard.\) )Tj
ET
0 0 1 RG
1.553 w 10 M 0 j 0 J []0 d 
9.539 337.981 m
252.002 337.981 l
S
0 0 1 rg
BT
/T1_3 1 Tf
18.4903 0 0 18.4903 9.5387 342.6405 Tm
(Compiling Code for Literals)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 305.0885 Tm
(When the compiler compiles code for a literal, like )Tj
/T1_1 1 Tf
('foo)Tj
/T1_0 1 Tf
( or )Tj
/T1_1 1 Tf
("foo")Tj
/T1_0 1 Tf
( or )Tj
/T1_1 1 Tf
(22)Tj
/T1_0 1 Tf
( in the following expression, )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(list 'foo "foo" 22\))Tj
/T1_0 1 Tf
0 -2.552 TD
(it notices which literals the expression will need at run time, and ensu\res that those literals will appear in the )Tj
0 -1.2 TD
(template of the procedure. It keeps a list of literals needed by the pro\cedure it's compiling, and after )Tj
T*
(compiling the code for the procedure, it uses that list to construct the\ template that goes with the code. )Tj
0 -2.562 TD
(If )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( is the first literal encountered, it might be put into the list first, \and assigned the first free slot in the )Tj
0 -1.205 TD
(template \(after the code pointer\). )Tj
/T1_1 1 Tf
("foo")Tj
/T1_0 1 Tf
( might be assigned the second slot, and so on. In the terminology of )Tj
0 -1.2 TD
(language implementation, the template acts as a )Tj
/T1_4 1 Tf
(literal frame)Tj
/T1_0 1 Tf
(, as well as holding the pointer to the procedure's )Tj
T*
(code. )Tj
0 -2.557 TD
(After assigning a literal a position in the template, the compiler can g\enerate one or two instructions that can )Tj
0 -1.2 TD
(fetch the value out of the template, by using the address of the templat\e, adding the offset of that slot, and )Tj
0 -1.205 TD
(loading from the resulting address. Since the template address is guaran\teed to be in the )Tj
/T1_1 1 Tf
(TEMPLATE)Tj
/T1_0 1 Tf
( register, )Tj
0 -1.2 TD
(this is probably just a single indexed load instruction. In pseudo-C, it\ might look like: )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(14 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6115 0 obj<</Length 4350>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 737.0895 Tm
(  value_register = *\(template_register + offset\))Tj
/T1_0 1 Tf
0 -2.552 TD
(where offset is computed by the compiler and therefore is probably an im\mediate operand to the load )Tj
0 -1.2 TD
(instruction that loads the value into the value register. )Tj
0 -2.557 TD
(Notice that here we're taking advantage of the fact that the compiler ru\ns in our system, and generates code )Tj
0 -1.2 TD
(that's just data in our system. The code will run in the same heap, and \the compiler can therefore just compute )Tj
T*
(values and put them in the template, and they'll stay around until that \code is executed. \(Life gets a little more )Tj
0 -1.2 TD
(complicated if you want to generate code that will be loaded into a diff\erent system and executed there.\) )Tj
0 -2.562 TD
([ Now we should explain that the )Tj
/T1_1 1 Tf
(literal-state)Tj
/T1_0 1 Tf
( argument to )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
( is the list of literals seen so far )Tj
0 -1.205 TD
(in compiling a procedure. The return value of )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
( is intermediate code that includes an updated )Tj
/T1_1 1 Tf
T*
(literal-state)Tj
/T1_0 1 Tf
(. ] )Tj
ET
0 0 1 RG
1.553 w 10 M 0 j 0 J []0 d 
9.539 494.826 m
455.47 494.826 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.4903 0 0 18.4903 9.5387 499.486 Tm
(Compiling Code for Top-Level Variable References)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 461.9982 Tm
(Because of lexical scoping, it is easy for the compiler to tell the diff\erence between a reference to a top-level )Tj
0 -1.2 TD
(variable binding and a reference to a local variable. We'll talk about t\hat in detail later, but for now just )Tj
T*
(assume that the compiler knows the difference at the point where it gene\rates code for a variable reference. )Tj
0 -2.557 TD
(When the compiler generates code for a top-level variable, it can usuall\y look up the binding of that variable )Tj
0 -1.2 TD
(in the environment that the code is being generated for--the expression \that defines the variable has already )Tj
T*
(been executed, so the binding already exists. )Tj
0 -2.557 TD
(The compiler can therefore do the actual lookup at compile time, e.g., h\ashing into the hash-table that )Tj
0 -1.2 TD
(implements a toplevel environment and getting a pointer to the actual bi\nding object that will be referenced at )Tj
T*
(run time. )Tj
0 -2.557 TD
(To make references to this object fast, the compiler can simply put this\ pointer in the template for the )Tj
0 -1.2 TD
(procedure being compiled, as though it were a literal value. )Tj
0 -2.557 TD
(Be clear on what's going on here: the compiler can't look up the )Tj
/T1_3 1 Tf
(value)Tj
/T1_0 1 Tf
( of the variable, because that's not )Tj
0 -1.2 TD
(known until the moment the variable is referenced at run time. \(Before \the code is executed, some other piece )Tj
T*
(of code might run and change the value stored in the binding.\) But the \identity of the binding itself is known, )Tj
T*
(and can be stashed in the literal frame. )Tj
0 -2.557 TD
(Actually, it's just slightly more complicated than this. A variable can \be used in a procedure definition before )Tj
0 -1.2 TD
(the variable itself is defined. \(This is called a "forward reference."\)\ To get around this, the compiler "cheats," )Tj
T*
(and goes ahead and creates the binding object and its entry in the tople\vel environment before the definition )Tj
T*
(of the variable is actually encountered. At the language level, the vari\able hasn't been bound or given a value, )Tj
T*
(but we go ahead and create the unique binding object and use it in compi\ling other expressions. For error )Tj
T*
(checking, we put a special value in the binding to indicate that the bin\ding isn't "real" yet--we put a reference )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(15 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6116 0 obj<</Length 3825>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(to some object we consider "not a real value," so that we can detect use\s of a variable that isn't really bound. )Tj
0 -2.557 TD
(\(In a system designed for maximum safety and early error checking, we c\ould ensure that each reference to a )Tj
0 -1.2 TD
(toplevel variable would check for this value, and signal an error if it'\s found. If we're not quite so concerned )Tj
0 -1.2 TD
(with early error checking, we can wait until somebody attempts to use su\ch a value, e.g., by adding it to )Tj
0 -1.205 TD
(something, or taking the )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( of it, and we rely on the normal type checking of the language to tell \us )Tj
0 -1.2 TD
(something's wrong at the point that operation occurs.\) )Tj
0 -2.557 TD
(Now consider compiling a procedure like )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(define \(make-foo-list\))Tj
0 -1.2 TD
(   \(list 'foo "foo"\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(The compiler will accumulate a list of toplevel bindings and literals ne\eded for the procedure, namely a string )Tj
/T1_1 1 Tf
0 -1.205 TD
("foo")Tj
/T1_0 1 Tf
(, the symbol )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(, and toplevel binding of the symbol )Tj
/T1_1 1 Tf
(list)Tj
/T1_0 1 Tf
(. These will be put in the template for the )Tj
0 -1.2 TD
(procedure, in the first, second, and third slots after the code pointer.\ The code generated for this procedure )Tj
T*
(\(assuming right-to-left evaluation\) will be something like: )Tj
/T1_1 1 Tf
0 -2.562 TD
(  \(fetch-literal 1\) ; get string "foo" from template slot 1)Tj
0 -1.2 TD
(  \(push\)            ; push it on eval stack)Tj
T*
(  \(fetch-literal 2\) ; get symbol foo from template slot 2)Tj
T*
(  \(push\)            ; push it on eval stack)Tj
T*
(  \(fetch-literal 3\) ; get toplevel binding of list from template slot \3)Tj
T*
(  \(t-l-bdg-get\)     ; extract value from binding)Tj
T*
(  \(apply\)           ; \(tail-\)call list)Tj
/T1_0 1 Tf
0 -2.552 TD
(Notice, of course, that we've made our intermediate code representation \more concrete now--we use slot )Tj
0 -1.2 TD
(numbers as the arguments to fetch-literal, and we explicitly get the val\ue of the toplevel variable from the )Tj
T*
(toplevel binding object in the value register. For setting the value in \a binding, we'll use a different )Tj
0 -1.205 TD
(intermediate code instruction, )Tj
/T1_1 1 Tf
(t-l-bdg-set!)Tj
/T1_0 1 Tf
( \()Tj
/T1_1 1 Tf
(t-l-binding-set!)Tj
/T1_0 1 Tf
( expects the value register to hold a )Tj
0 -1.2 TD
(pointer to a toplevel binding object; it extracts the value of the bindi\ng, and leaves that value in the value )Tj
T*
(register.\) )Tj
0 -2.557 TD
([ Now we can explain more about literal states--we accumulate a list of \literal values and top-level variable )Tj
0 -1.2 TD
(bindings that must be accessible when the procedure runs. ] )Tj
0 -2.557 TD
(By now it should be very clear how you would translate each of these lit\tle operations in our intermediate )Tj
0 -1.2 TD
(representation into a few assembly-language instructions. )Tj
0 -2.557 TD
([ need picture? ] )Tj
ET
0 0 1 RG
1.553 w 10 M 0 j 0 J []0 d 
9.539 67.308 m
529.486 67.308 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.4903 0 0 18.4903 9.5387 71.9672 Tm
(Precomputing Local Variable Lookups using Lexical Scope)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(16 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6117 0 obj<</Length 3926>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(We can't really look up local variable bindings at compile time the way \we can toplevel bindings--local )Tj
0 -1.2 TD
(variable bindings don't exist yet when we're compiling the expressions t\hat create and use them. \(Consider the )Tj
0 -1.205 TD
(fact that every time you enter a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, or call a procedure that binds arguments, a new binding environment )Tj
0 -1.2 TD
(frame is created. Code that executes in such environments will see a dif\ferent binding environment frame in )Tj
0 -1.2 TD
(the environment register each time it runs.\) )Tj
0 -2.557 TD
(What we )Tj
/T1_2 1 Tf
(can)Tj
/T1_0 1 Tf
( do is take advantage of lexical scope to precompute most of the )Tj
/T1_2 1 Tf
(search)Tj
/T1_0 1 Tf
( for a variable in an )Tj
0 -1.2 TD
(environment. )Tj
0 -2.557 TD
(Consider the execution of this procedure: )Tj
/T1_1 1 Tf
0 -2.562 TD
(  \(lambda \(x y\))Tj
0 -1.2 TD
(     \(let \(\(a <some-expression>)Tj
0 -1.2 TD
(           \(b <some-expression>\)\))Tj
0 -1.2 TD
(        \(list a b x y\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(When we compute the arguments to the call to )Tj
/T1_1 1 Tf
(list)Tj
/T1_0 1 Tf
(, it's obvious that the first and second variables \()Tj
/T1_1 1 Tf
(a)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(b)Tj
/T1_0 1 Tf
(\) )Tj
0 -1.205 TD
(will be in the first and second slots of the first binding environment f\rame, pointed directly to by the )Tj
/T1_1 1 Tf
(ENVT)Tj
/T1_0 1 Tf
( )Tj
T*
(register. This is the environment created by the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(. The third and fourth variables \()Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(y)Tj
/T1_0 1 Tf
(\) will be in the )Tj
0 -1.2 TD
(next environment frame, pointed to by the scope link of the first. )Tj
0 -2.557 TD
(The compiler can compute the )Tj
/T1_2 1 Tf
(lexical address)Tj
/T1_0 1 Tf
( of each variable binding at the point where a reference to it is's )Tj
0 -1.2 TD
(compiled--that's the )Tj
/T1_2 1 Tf
(relative location)Tj
/T1_0 1 Tf
( of the variable starting from the environment register. A lexical addre\ss )Tj
T*
(has two parts: the number of environment frames to skip to find the righ\t frame, and the offset of the binding )Tj
T*
(in that frame. In the above example, the lexical addresses are: )Tj
/T1_1 1 Tf
0 -2.562 TD
(   a:  0,1)Tj
0 -1.2 TD
(   b:  0,2)Tj
T*
(   x:  1,1)Tj
T*
(   y:  1,2)Tj
/T1_0 1 Tf
0 -2.552 TD
(\(We use the convention that frame numbers start at zero, but slot numbe\rs appear to start at 1 because the )Tj
0 -1.2 TD
(scope link is in slot 0.\) )Tj
0 -2.557 TD
(The code generated for the reference to a can simply be an indexed load \instruction, using the environment )Tj
0 -1.2 TD
(register plus an offset to grab the value in the first variable binding \slot. In pseudo-C, that's something like )Tj
/T1_1 1 Tf
0 -2.562 TD
(  value_register = *\(envt_register + offset\))Tj
/T1_0 1 Tf
0 -2.552 TD
(where offset is probably 4 \(bytes\) to index past the scope link slot. \Slightly more abstractly, its lexical address )Tj
0 -1.2 TD
(is [ WHAT? ] )Tj
0 -2.562 TD
(The code for the reference to the variable )Tj
/T1_1 1 Tf
(y)Tj
/T1_0 1 Tf
( would involve one level of indirection--first the scope link pointer )Tj
0 -1.2 TD
(must be extracted from the first environment frame, and then that can be\ used for an indexed load to get the )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(17 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6118 0 obj<</Length 4453>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(value of the second slot of the second frame: )Tj
/T1_1 1 Tf
0 -2.562 TD
(  value_register = *\(envt_register\)  ; get ptr to 2nd envt frame)Tj
0 -1.2 TD
(  value_register = *\(envt_register + offset\))Tj
/T1_0 1 Tf
0 -2.557 TD
(where offset is probably 8 \(bytes\) to index past the scope link and th\e binding of )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(Given this scheme, accessing a local variable takes time proportional to\ the number of environment frames )Tj
0 -1.2 TD
(intervening between between the expression being compiled and the enviro\nment where the referenced )Tj
T*
(variable is defined. That's usually fairly fast, for two reasons: )Tj
1.607 -2.557 Td
(1.  The depth of lexical nesting is usually small--it corresponds to the\ nesting of binding expressions in )Tj
1.25 -1.2 Td
(the program, and is usually between one and three, an only rarely greate\r than five or so. )Tj
-1.25 -1.2 Td
(2.  Most references that are executed at run time are to variables in th\e current scope, or maybe a level or )Tj
1.25 -1.2 Td
(two back from that. \(Consider references to variables in inner loops, w\hich constitute the most )Tj
T*
(frequently-executed code in most programs.\) )Tj
-2.857 -2.557 Td
(For these reasons, most references to local variables will take between \one and five instructions. To a first )Tj
T*
(approximation, the time to reference local variables can be regarded as \a small constant. \(A slightly snazzier )Tj
T*
(compiler can reduce this by using more registers, and leaving many value\s in registers instead of pushing and )Tj
T*
(popping them from the eval stack, but that's a more advanced technique t\han we want to address here.\) )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 383.781 m
395.709 383.781 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.4086 0 0 15.4086 9.5387 387.6639 Tm
(Lexical Addressing and Compile-Time Environments)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 351.174 Tm
(Computing lexical addresses is very easy for the compiler. All it needs \to do is maintain a data structure )Tj
0 -1.2 TD
(called a )Tj
/T1_3 1 Tf
(compile-time environment)Tj
/T1_0 1 Tf
(, which records the )Tj
/T1_3 1 Tf
(structure)Tj
/T1_0 1 Tf
( of the runtime environment. )Tj
0 -2.557 TD
(Each time the compiler compiles an expression that creates new bindings,\ it extends the compile-time )Tj
0 -1.2 TD
(environment to reflect the change to the environment structure, and when\ compiling expressions that will )Tj
0 -1.205 TD
(execute in that environment, it hands the new compile-time environment t\o the recursive call to )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(which will compile that expression. )Tj
0 -2.562 TD
(For example, when compiling a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, the compiler dispatches to )Tj
/T1_1 1 Tf
(compile-let)Tj
/T1_0 1 Tf
(, the analogue of )Tj
/T1_1 1 Tf
(eval-)Tj
0 -1.205 TD
(let)Tj
/T1_0 1 Tf
(, which does four things: )Tj
1.607 -2.557 Td
(1.  Compiles code for the initial value expressions. This code executes \in the environment outside the )Tj
/T1_1 1 Tf
1.25 -1.205 Td
(let)Tj
/T1_0 1 Tf
(, so the )Tj
/T1_1 1 Tf
(compile-let)Tj
/T1_0 1 Tf
( uses the environment is was given when making recursive calls to )Tj
/T1_1 1 Tf
T*
(compile)Tj
/T1_0 1 Tf
( to generate the initial value code. )Tj
-1.25 -1.2 Td
(2.  Generates code to create a binding environment and intialize it with\ those values. )Tj
0 -1.205 TD
(3.  Extends the compile-time environment with a new frame, reflecting th\e fact that the body of the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( )Tj
1.25 -1.2 Td
(will execute in a new scope including the new bindings. )Tj
-1.25 -1.205 Td
(4.  Calls )Tj
/T1_1 1 Tf
(compile-sequence)Tj
/T1_0 1 Tf
( to compile the body of the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, passing it the new compile-time )Tj
1.25 -1.2 Td
(environment. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(18 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6119 0 obj<</Length 3610>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 753.0307 Tm
(Just as the overall recursive structure of the compiler closely resemble\s the recursive structure of the )Tj
0 -1.2 TD
(interpreter, the role of the compile-time environment is very much like \the role of the environment in the )Tj
T*
(interpreter. )Tj
0 -2.557 TD
(When the interpreter \(compiler\) evaluates \(compiles\) subexpressions \that execute in the same environment as )Tj
0 -1.2 TD
(their parent expressions, it hands the recursive invocation the same env\ironment it was given. When the )Tj
T*
(interpreter \(compiler\) evaluates \(compiles\) an expression in a new e\nvironment, it hands the recursive call the )Tj
T*
(new \(compile-time\) environment. )Tj
0 -2.557 TD
(The structure of the compile time environment at any point in the compil\ation process mirrors the structure of )Tj
0 -1.2 TD
(the runtime environment where the code will execute. Unlike the interpre\ter's representation of the )Tj
T*
(environment, however, the compile-time environment doesn't contain actua\l bindings--it can't, and it doesn't )Tj
T*
(need to. )Tj
0 -2.557 TD
(In effect, we split the interpreter's environment into two parts with pa\rallel structure. Where the interpreter's )Tj
0 -1.2 TD
(environements are chains of frames holding name-binding pairs, the compi\ler splits those into two chains of )Tj
T*
(frames: the runtime environment, whose frames hold the actual bindings, \and the compile-time environment, )Tj
T*
(whose frames hold the corresponding names. )Tj
0 -2.557 TD
(Consider the expression )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(x 1\))Tj
0 -1.2 TD
(      \(y 2\)\))Tj
T*
(   \(let \(\(foo 3\))Tj
T*
(         \(bar 4\)\))Tj
T*
(      \(list foo bar x y\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(At the point where )Tj
/T1_1 1 Tf
(\(list a b x y\))Tj
/T1_0 1 Tf
( is compiled or executed, the environment for an interpreted system )Tj
0 -1.2 TD
(appears as shown on the left, below, while the environments for a compil\ed system appear as shown on the )Tj
T*
(right: )Tj
/T1_1 1 Tf
0 -2.562 TD
(     INTERPRETED                   COMPILED              COMPILED)Tj
0 -1.2 TD
(                                \(compile time\)          \(run time\))Tj
T*
(                    /\\                         /\\                   /\\\)Tj
T*
(                     |                          |                    |)Tj
T*
( +---------------+   |           +----------+   |     +----------+   |)Tj
T*
( |   envt. frame |   |           | c.t.e.fr.|   |     | envt. fr.|   |)Tj
T*
( +===============+  /            +==========+  /      +==========+  /)Tj
T*
( |          +----+-'             |     +----+-'       |     +----+-')Tj
T*
( +-------+-------+               +----------+         +----------+)Tj
T*
( |     x |     1 |               |        x |         |        1 |)Tj
T*
( +-------+-------+               +----------+         +----------+)Tj
T*
( |     y |     2 |               |        y |         |        2 |)Tj
T*
( +-------+-------+               +----------+         +----------+)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(19 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6120 0 obj<</Length 4098>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 754.8351 Tm
(                  _                         _                    _)Tj
0 -1.2 TD
(                 |\\                        |\\                   |\\)Tj
T*
(                   \\                         \\                    \\)Tj
0 -1.2 TD
(                    \\                         \\                    \\)Tj
0 -1.2 TD
( +---------------+   |           +----------+  |      +----------+  | )Tj
T*
( |   envt. frame |   |           | c.t.e.fr.|  |      | envt. fr.|  |)Tj
T*
( +===============+  /            +==========+  /      +==========+  /)Tj
T*
( |          +----+-'             |     +----+-'       |     +----+-')Tj
0 -1.2 TD
( +-------+-------+               +----------+         +----------+)Tj
T*
( |   foo |     3 |               |      foo |         |        3 |)Tj
T*
( +---------------+               +----------+         +----------+)Tj
T*
( |   bar |     4 |               |      bar |         |        4 |)Tj
T*
( +-------+-------+               +----------+         +----------+)Tj
/T1_0 1 Tf
0 -2.552 TD
(Note that there is a many-to-one relationship between the compile-time e\nvironments and the run-time )Tj
0 -1.205 TD
(environments: a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( or )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression is compiled once, and the corresponding environment frame is\ )Tj
0 -1.2 TD
(created and passed to the recursive calls that compile subexpressions. T\he code may be executed many times, )Tj
T*
(however, and each time a run-time environment frame will be created so t\hat the code for subexpressions can )Tj
T*
(be executed in that environment. )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 424.225 m
152.546 424.225 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.4086 0 0 15.4086 9.5387 428.1078 Tm
(A Detailed Example)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 391.6178 Tm
(Taking it step by step, let's look at the compilation of the expression \)Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(x 1234\))Tj
0 -1.2 TD
(      \(y 3456\)\))Tj
0 -1.2 TD
(   \(let \(\(foo z\)\))Tj
T*
(      \(+ \(- foo x\))Tj
T*
(         \(+ bar y\)\)\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(goes as follows. \(We'll assume that this expression occurs at the top l\evel.\) )Tj
0 -2.557 TD
(Since we're compiling a top-level expression, we compile it in a compile\-time environment that corresponds )Tj
0 -1.2 TD
(to the top-level environment. Toplevel environments are treated speciall\y, because they're not created )Tj
T*
(dynamically the way local binding environments. There's a one-to-one rel\ationship bewteen top-level compile-)Tj
T*
(time environments and the corresponding run-time environments. We'll rep\resent the top-level compile-time )Tj
T*
(environment as a special kind of environment frame, which really just ho\lds a pointer to the top-level runtime )Tj
T*
(environment so that top-level variables can be looked up. )Tj
0 -2.562 TD
(So we start in a top-level environment, which we'll depict as )Tj
/T1_1 1 Tf
([top-level])Tj
/T1_0 1 Tf
(; we hand this to )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(along with the expression to compile. )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
( is the main dispatch that analyzes the expression; in this )Tj
T*
(case, it analyzes it and dispatches \(via )Tj
/T1_1 1 Tf
(compile-list)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(compile-special-form)Tj
/T1_0 1 Tf
(\) to )Tj
/T1_1 1 Tf
(compile-)Tj
T*
(let)Tj
/T1_0 1 Tf
(, the specialized procedure for compiling )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( expressions. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(20 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6121 0 obj<</Length 4669>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 754.8351 Tm
(compile-let)Tj
/T1_0 1 Tf
( compiles the initial value expressions for )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(y)Tj
/T1_0 1 Tf
( using )Tj
/T1_1 1 Tf
(compile-multi)Tj
/T1_0 1 Tf
(, which in turn )Tj
0 -1.205 TD
(calls )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
( recursively; they are compiled in the \(top-level\) environment, which \is just passed along )Tj
0 -1.2 TD
(because no new environments have been created yet. In this case it doesn\'t matter, though, because they're just )Tj
0 -1.205 TD
(literals. \(The values )Tj
/T1_1 1 Tf
(1234)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(3456)Tj
/T1_0 1 Tf
( get added to the literal list at this point.\) Then )Tj
/T1_1 1 Tf
(compile-let)Tj
/T1_0 1 Tf
( )Tj
0 -1.205 TD
(generates the code to bind )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(y)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(So far, the code generated looks like: )Tj
/T1_1 1 Tf
0 -2.562 TD
(  \(fetch-literal #1\)    ; fetch 1234)Tj
0 -1.2 TD
(  \(push\)                ; push it on eval stack)Tj
T*
(  \(fetch-literal #2\)    ; fetch 3456)Tj
T*
(  \(push\)                ; push it on eval stack)Tj
T*
(  \(bind 2\)              ; bind 2 vars \(x and y\), w/values form eval \stack)Tj
/T1_0 1 Tf
0 -2.557 TD
(and the literals list holds )Tj
/T1_1 1 Tf
(1234)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(3456)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(compile-let)Tj
/T1_0 1 Tf
( then calls )Tj
/T1_1 1 Tf
(compile-sequence)Tj
/T1_0 1 Tf
( to compile the body of the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, but first it creates a new )Tj
0 -1.2 TD
(compile-time environment, to represent the fact that the body sequence w\ill execute in the new runtime )Tj
0 -1.205 TD
(environment after )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(y)Tj
/T1_0 1 Tf
( have been bound. The structure of this environment is )Tj
/T1_1 1 Tf
0 -2.562 TD
(   [ x y ] -> [toplevel])Tj
/T1_0 1 Tf
0 -2.552 TD
(\(This is our new, terse way of drawing the box-and-arrow data structure\ for compile time environments. I got )Tj
0 -1.2 TD
(tired of drawing ascii art.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(compile-sequence)Tj
/T1_0 1 Tf
( calls )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
( recursively to evaluate a sequence of expressions; in this case, there'\s )Tj
0 -1.2 TD
(only one expression in the body. )Tj
0 -2.562 TD
(The recursive call to )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
( dispatches \(again via )Tj
/T1_1 1 Tf
(compile-list)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(compile-special-form)Tj
/T1_0 1 Tf
( to )Tj
/T1_1 1 Tf
0 -1.205 TD
(compile-let)Tj
/T1_0 1 Tf
(, to compile the inner )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
0 -2.562 TD
(compile-let)Tj
/T1_0 1 Tf
( compiles the initial value expressions using )Tj
/T1_1 1 Tf
(compile-multi)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
(compile-multi)Tj
/T1_0 1 Tf
( calls )Tj
/T1_1 1 Tf
0 -1.205 TD
(compile)Tj
/T1_0 1 Tf
( recursively to compile the one expression in the list, the symbol )Tj
/T1_1 1 Tf
(z)Tj
/T1_0 1 Tf
(. \(Again, the same environment )Tj
0 -1.2 TD
(is just passed along, because we haven't created a new environment.\) )Tj
0 -2.562 TD
(The recursive call to compile now dispatches to )Tj
/T1_1 1 Tf
(compile-symbol)Tj
/T1_0 1 Tf
(, which looks up the binding information )Tj
0 -1.205 TD
(for the symbol )Tj
/T1_1 1 Tf
(z)Tj
/T1_0 1 Tf
( in the compile-time environment. There's no binding in the first frame \\(containing )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(y)Tj
/T1_0 1 Tf
(\), )Tj
0 -1.2 TD
(so the search goes to the second frame, which is the top-level environme\nt, and the top-level binding is )Tj
0 -1.205 TD
(returned. This causes a dispatch to )Tj
/T1_1 1 Tf
(compile-toplevel-var-ref)Tj
/T1_0 1 Tf
(, which adds the toplevel binding of )Tj
/T1_1 1 Tf
(z)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(to the literals list and generates code to get it from the template and \extract its value at run time. )Tj
0 -2.562 TD
(Then )Tj
/T1_1 1 Tf
(compile-let)Tj
/T1_0 1 Tf
( generates code to bind the fetched value as the local variable foo. )Tj
0 -2.557 TD
(The code generated so far is: )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(21 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6122 0 obj<</Length 3888>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 736.6033 Tm
(  \(fetch-literal 1\)    ; fetch 1234)Tj
0 -1.2 TD
(  \(push\))Tj
T*
(  \(fetch-literal 2\)    ; fetch 3456)Tj
0 -1.2 TD
(  \(push\))Tj
0 -1.2 TD
(  \(bind 2\)             ; bind 2 values \(x and y\))Tj
T*
(  \(fetch-literal 3\)       ; get toplevel binding \(of z\))Tj
T*
(  \(t-l-bdg-get\)           ; get value from \(z's\) binding)Tj
T*
(  \(push\))Tj
0 -1.2 TD
(  \(bind 1\)                ; bind one variable \(foo\))Tj
/T1_0 1 Tf
0 -2.557 TD
(and the literals list contains )Tj
/T1_1 1 Tf
(1234)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(3456)Tj
/T1_0 1 Tf
(, and the binding of )Tj
/T1_1 1 Tf
(z)Tj
/T1_0 1 Tf
(. Now )Tj
/T1_1 1 Tf
(compile-let)Tj
/T1_0 1 Tf
( creates a new compile-)Tj
0 -1.205 TD
(time environment to represent the environment created by the inner )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(; its structure is )Tj
/T1_1 1 Tf
0 -2.562 TD
( [ foo ] -> [ x y ] -> [toplevel])Tj
/T1_0 1 Tf
0 -2.557 TD
(and it passes this to )Tj
/T1_1 1 Tf
(compile-sequence)Tj
/T1_0 1 Tf
( to compile the body of the let. )Tj
/T1_1 1 Tf
(compile-sequence)Tj
/T1_0 1 Tf
( calls )Tj
/T1_1 1 Tf
0 -1.205 TD
(compile)Tj
/T1_0 1 Tf
( recursively once, handing it the new environment, to compile the one bo\dy expression, )Tj
/T1_1 1 Tf
(\(+ \(- )Tj
T*
(foo x\) \(+ bar y\)\))Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(The recursive call to )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
( dispatches \(through )Tj
/T1_1 1 Tf
(compile-list)Tj
/T1_0 1 Tf
(\) to )Tj
/T1_1 1 Tf
(compile-combo)Tj
/T1_0 1 Tf
(, which )Tj
0 -1.205 TD
(recursively calls )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
( three times, to generate code for the subexpressions )Tj
/T1_1 1 Tf
(\(+ bar y\))Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(\(- foo x\))Tj
/T1_0 1 Tf
(, )Tj
T*
(and )Tj
/T1_1 1 Tf
(+)Tj
/T1_0 1 Tf
(. Since no new bindings are being created, the recursive calls are given\ the same environment. )Tj
0 -2.562 TD
(The recursive call to call )Tj
/T1_1 1 Tf
(\(+ bar y\))Tj
/T1_0 1 Tf
( similarly dispatches to )Tj
/T1_1 1 Tf
(compile-combo)Tj
/T1_0 1 Tf
( and compiles )Tj
/T1_1 1 Tf
(y)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(bar)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
0 -1.205 TD
(+)Tj
/T1_0 1 Tf
(. Each of these calls dispatches to )Tj
/T1_1 1 Tf
(compile-symbol)Tj
/T1_0 1 Tf
( and the variables are looked up in the compile-time )Tj
T*
(environment. The lookup for )Tj
/T1_1 1 Tf
(y)Tj
/T1_0 1 Tf
( returns a lexical address of 1,2, so the intermediate code generated is\ )Tj
/T1_1 1 Tf
0 -2.562 TD
(  \(local-var-ref 1 2\))Tj
/T1_0 1 Tf
0 -2.552 TD
(The lookup for bar doesn't find any local bindings and returns the tople\vel binding so the binding is added to )Tj
0 -1.2 TD
(the literal list and the intermediate code is )Tj
/T1_1 1 Tf
0 -2.562 TD
(  \(literal-lookup 4\))Tj
0 -1.2 TD
(  \(t-l-bdg-get\))Tj
/T1_0 1 Tf
0 -2.557 TD
(Similarly, the lookup for )Tj
/T1_1 1 Tf
(+)Tj
/T1_0 1 Tf
( doesn't find any local bindings and returns the toplevel binding, so th\e binding is )Tj
0 -1.2 TD
(added to the literal list and the intermediate code is )Tj
/T1_1 1 Tf
0 -2.562 TD
(  \(literal-lookup 4\))Tj
0 -1.2 TD
(  \(t-l-bdg-get\))Tj
/T1_0 1 Tf
0 -2.557 TD
(now the call to )Tj
/T1_1 1 Tf
(compile-combo)Tj
/T1_0 1 Tf
( that compiles )Tj
/T1_1 1 Tf
(\(+ bar y\))Tj
/T1_0 1 Tf
( can string these three fragments together to )Tj
0 -1.2 TD
(get )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(22 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6123 0 obj<</Length 3803>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 736.6878 Tm
(  \(save-continuation "resume26"\) ; save state for call to +)Tj
0 -1.2 TD
(  \(local-var-ref 1 2\)            ; look up y)Tj
T*
(  \(push\))Tj
0 -1.2 TD
(  \(literal-lookup 4\)             ; get toplevel binding \(of bar\))Tj
0 -1.2 TD
(  \(t-l-bdg-get\)                  ; get value from bdg \(of bar\))Tj
T*
(  \(push\))Tj
T*
(  \(literal-lookup 5\)             ; get toplevel binding \(of +\))Tj
T*
(  \(t-l-bdg-get\)                  ; get value from binding \(of +\))Tj
0 -1.2 TD
(  \(apply\)                        ; call +)Tj
T*
("resume26"                    )Tj
/T1_0 1 Tf
0 -2.557 TD
(and return that. Notice that for the argument subexpressions, )Tj
/T1_1 1 Tf
(compile-combo)Tj
/T1_0 1 Tf
( inserts )Tj
/T1_1 1 Tf
(\(push\))Tj
/T1_0 1 Tf
(es to save )Tj
0 -1.2 TD
(the values on the eval stack. For the first \(function position\) subexp\ression, it leaves the value in the value )Tj
0 -1.205 TD
(register, which is where it's expected \(by )Tj
/T1_1 1 Tf
(apply)Tj
/T1_0 1 Tf
(\). )Tj
0 -2.562 TD
(The recursive call to )Tj
/T1_1 1 Tf
(compile-combo)Tj
/T1_0 1 Tf
( to compile )Tj
/T1_1 1 Tf
(\(- foo x\))Tj
/T1_0 1 Tf
( goes pretty similarly to the one for )Tj
/T1_1 1 Tf
(\(+ )Tj
0 -1.205 TD
(bar y\))Tj
/T1_0 1 Tf
(, the main difference being that both )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
( and )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( are found to be local variables and compiled )Tj
0 -1.2 TD
(appropriately, with the result being the sequence )Tj
/T1_1 1 Tf
0 -2.562 TD
(  \(save-continuation "resume27"\) ; save state for call to -)Tj
0 -1.2 TD
(  \(local-var-ref 1 2\)            ; look up x)Tj
T*
(  \(push\))Tj
T*
(  \(local-var-ref 0 1\)            ; look up foo)Tj
T*
(  \(push\))Tj
T*
(  \(literal-lookup 4\)             ; get toplevel binding \(of -\))Tj
T*
(  \(t-l-bdg-get\)                  ; get value from binding \(of -\))Tj
T*
(  \(apply\)                     ; call -)Tj
T*
("resume27")Tj
/T1_0 1 Tf
0 -2.557 TD
(The recursive call to compile the symbol )Tj
/T1_1 1 Tf
(+)Tj
/T1_0 1 Tf
( goes striaghtforwardly to )Tj
/T1_1 1 Tf
(compile-symbol)Tj
/T1_0 1 Tf
(, which looks up )Tj
/T1_1 1 Tf
(+)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(and finds that it's a toplevel variable; the binding is already on the l\iterals list, so the code generated is: )Tj
/T1_1 1 Tf
0 -2.562 TD
(  \(literal-lookup 5\)   ; get toplevel binding \(of +\))Tj
0 -1.2 TD
(  \(t-l-bdg-get\)        ; get value from binding \(of +\))Tj
/T1_0 1 Tf
0 -2.557 TD
(and this is returned to the outer invocation of )Tj
/T1_1 1 Tf
(compile combo)Tj
/T1_0 1 Tf
(. It can then string together the code for the )Tj
0 -1.205 TD
(outer )Tj
/T1_1 1 Tf
(+)Tj
/T1_0 1 Tf
( expression, putting a )Tj
/T1_1 1 Tf
(save-continuation)Tj
/T1_0 1 Tf
( at the front and adding an )Tj
/T1_1 1 Tf
(apply)Tj
/T1_0 1 Tf
( at the end. This )Tj
T*
(code is returned to the inner invocation of )Tj
/T1_1 1 Tf
(compile-let)Tj
/T1_0 1 Tf
(, which appends it to its code and returns it to the )Tj
T*
(outer invocation of )Tj
/T1_1 1 Tf
(compile-let)Tj
/T1_0 1 Tf
(, which returns the entire code sequence )Tj
/T1_1 1 Tf
0 -2.562 TD
(  \(fetch-literal 1\)    ; fetch 1234)Tj
0 -1.2 TD
(  \(push\))Tj
T*
(  \(fetch-literal 2\)    ; fetch 3456)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(23 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6124 0 obj<</Length 3637>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 754.8351 Tm
(  \(push\))Tj
0 -1.2 TD
(  \(bind 2\)             ; bind 2 values \(x and y\))Tj
T*
(  \(fetch-literal 3\)       ; get toplevel binding \(of z\))Tj
0 -1.2 TD
(  \(t-l-bdg-get\)           ; get value from \(z's\) binding)Tj
0 -1.2 TD
(  \(push\))Tj
T*
(  \(bind 1\)                ; bind one variable \(foo\))Tj
T*
(  \(save-continuation "resume26"\) ; save state for call to +)Tj
T*
(  \(local-var-ref 1 2\)            ; look up y)Tj
0 -1.2 TD
(  \(push\))Tj
T*
(  \(literal-lookup 4\)             ; get toplevel binding \(of bar\))Tj
T*
(  \(t-l-bdg-get\)                  ; get value from bdg \(of bar\))Tj
T*
(  \(push\))Tj
T*
(  \(literal-lookup 5\)             ; get toplevel binding \(of +\))Tj
T*
(  \(t-l-bdg-get\)                  ; get value from binding \(of +\))Tj
0 -1.2 TD
(  \(apply\)                     ; call +)Tj
0 -1.2 TD
("resume26")Tj
T*
(  \(save-continuation "resume27"\) ; save state for call to -)Tj
T*
(  \(local-var-ref 1 2\)            ; look up x)Tj
T*
(  \(push\))Tj
T*
(  \(local-var-ref 0 1\)            ; look up foo)Tj
T*
(  \(push\))Tj
T*
(  \(literal-lookup 4\)             ; get toplevel binding \(of -\))Tj
T*
(  \(t-l-bdg-get\)                  ; get value from binding \(of -\))Tj
T*
(  \(apply\)                     ; call -)Tj
T*
("resume27")Tj
T*
(  \(literal-lookup 5\)          ; get toplevel binding \(of +\))Tj
T*
(  \(t-l-bdg-get\)               ; get value from binding \(of +\))Tj
0 -1.2 TD
(  \(apply\)                  ; \(tail-\)call + )Tj
ET
0 0 1 RG
1.553 w 10 M 0 j 0 J []0 d 
9.539 278.686 m
590.079 278.686 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.4903 0 0 18.4903 9.5387 283.3459 Tm
(Preserving Tail-Recursiveness using Compile-Time Continuations)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 245.8581 Tm
(One very important thing we glossed over just now when describing the wo\rkings of the compiler was when )Tj
0 -1.2 TD
(exactly to save continuations, and when not to. It is important to save \continuations before calling procedures, )Tj
T*
(if the callee must return and resume the execution of the caller. This i\s not necessary for tail calls, and in fact )Tj
0 -1.205 TD
(Scheme requires that continuations )Tj
/T1_1 1 Tf
(not)Tj
/T1_0 1 Tf
( be saved for tail calls--if we save continuations before tail-calls tha\t )Tj
0 -1.2 TD
(happen to implement loops, we may end up with an unbounded accumulation \of unnecessary continuations. )Tj
0 -2.557 TD
(Another important question is when returns should be executed. If a proc\edure ends in a tail-call, it is )Tj
0 -1.2 TD
(assumed that the callee will do a return. But eventually something actua\lly has to do a return, and pass control )Tj
T*
(back to its caller \(or the caller of its caller... whatever\). This sit\uation occurs when the tail expression of a )Tj
T*
(procedure is not another procedure call, e.g., returning the value of a \variable or a literal. )Tj
ET
1.294 w 
9.539 59.408 m
292.918 59.408 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.4086 0 0 15.4086 9.5387 63.291 Tm
(When Should We Save Continuations?)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(24 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6125 0 obj<</Length 3956>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(The general rule is that if a procedure call is the last thing a procedu\re does, no continuation should be saved--)Tj
0 -1.2 TD
(we can just jump into the callee, and since our state was not saved, the\ callee's return will resume our caller. )Tj
T*
(To get this right, we just have to keep track of which expressions are b\eing compiled in "tail position." )Tj
0 -2.557 TD
(In the procedure )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(lambda \(x\))Tj
0 -1.2 TD
(   \(if \(foo x\))Tj
T*
(       \(bar \(quux x\)\))Tj
T*
(       \(baz\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(the )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( expression is in tail position, because the value of the if will be ret\urned as the value of the procedure. )Tj
0 -1.205 TD
(The condition expression )Tj
/T1_1 1 Tf
(\(foo x\))Tj
/T1_0 1 Tf
( is not in tail position, because after it is executed, control must ret\urn to )Tj
T*
(this procedure so that either the consequent expression )Tj
/T1_1 1 Tf
(\(bar \(quux x\)\))Tj
/T1_0 1 Tf
( or the alternative expression )Tj
/T1_1 1 Tf
0 -1.205 TD
(\(baz\))Tj
/T1_0 1 Tf
( can be executed. )Tj
0 -2.557 TD
(Note that both the consequent and the alternative expressions are in tai\l-position; whichever is executed, that )Tj
0 -1.2 TD
(will be the last thing this procedure does, and the value computed will \be the result of this procedure. )Tj
0 -2.562 TD
(On the other hand, if we modify the procedure to always return )Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
(, none of these expressions is in tail )Tj
0 -1.2 TD
(position. )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(lambda \(x\))Tj
0 -1.2 TD
(   \(if \(foo x\))Tj
T*
(       \(bar \(quux x\)\))Tj
T*
(       \(baz\)\))Tj
0 -1.2 TD
(   #f\)                                                  )Tj
/T1_0 1 Tf
0 -2.557 TD
(That's because now the expression )Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
( is in tail position, not the )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( expression; whatever the if does, control )Tj
0 -1.205 TD
(must come back to this procedure so that the value )Tj
/T1_1 1 Tf
(#f)Tj
/T1_0 1 Tf
( can be returned. )Tj
0 -2.557 TD
(Notice that the values to compute the arguments of a combination \(proce\dure call\) are never in tail position--)Tj
0 -1.2 TD
(after computing them, control must always come back so that the procedur\e can be applied. The combination )Tj
T*
(itself may be a tail call, of course, in which case once the arguments a\re computed, the apply may happen and )Tj
T*
(control may never return. )Tj
0 -2.557 TD
(To get this kind of right, all that is necessary is that each recursive \call to compile should know whether the )Tj
0 -1.2 TD
(code being compiled is going to be used in tail position or not; for thi\s we use a )Tj
/T1_2 1 Tf
(compile-time continuation)Tj
/T1_0 1 Tf
(. )Tj
T*
(\(Fear not--it's simpler than compile time environments. It's really jus\t a flag that gets passed along to )Tj
0 -1.205 TD
(recursive calls to )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
(, sometimes getting turned off along the way.\) Keep in mind that tails \of tails are )Tj
T*
(in tail positions, but non-tail subexpressions are not. So in the case o\f nested )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
('s where the outer )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( is in tail )Tj
0 -1.2 TD
(position, only the consequent and the alternative of the consequent and \the alternative are in tail position, e.g., )Tj
T*
(in )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(25 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6126 0 obj<</Length 4562>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 754.8351 Tm
(\(lambda \(\))Tj
0 -1.2 TD
(   \(if \(if \(a\))Tj
T*
(           \(b\))Tj
0 -1.2 TD
(           \(c\)\))Tj
0 -1.2 TD
(       \(if \(d\))Tj
T*
(           \(e\))Tj
T*
(           \(f\)\))Tj
T*
(       \(if \(g\))Tj
0 -1.2 TD
(           \(h\))Tj
T*
(           \(i\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(the tail calls are )Tj
/T1_1 1 Tf
(\(e\))Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(\(f\))Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(\(h\))Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(\(i\))Tj
/T1_0 1 Tf
(. All of the calls in the first inner )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
( must return, because the value )Tj
0 -1.205 TD
(returned must be used by the outer )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(. The calls to the condition expressions in the other two inner ifs must\ )Tj
0 -1.2 TD
(also return, because the values must be used to tell which of )Tj
/T1_2 1 Tf
(their)Tj
/T1_0 1 Tf
( alternative and consequent to use. )Tj
0 -2.557 TD
(For each basic kind of expression, we can tell which subexpressions shou\ld be considered tails if the overall )Tj
0 -1.2 TD
(expression is: )Tj
/T1_3 1 Tf
6.6771 0 0 6.6771 34.0654 460.0264 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 460.0264 Tm
(For a sequence, only the last subexpression can be a tail--the rest are \non-tails. )Tj
/T1_3 1 Tf
6.6771 0 0 6.6771 34.0654 443.9372 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 443.9372 Tm
(For )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, the initial value expressions for bindings are never tails, and the bo\dy is just a sequence, )Tj
0 -1.2 TD
(whose last subexpression can be a tail. )Tj
/T1_3 1 Tf
6.6771 0 0 6.6771 34.0654 411.8873 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 411.8873 Tm
(For an if, the consequent and alternative can be tails, but the conditio\n never can. )Tj
/T1_3 1 Tf
6.6771 0 0 6.6771 34.0654 395.8624 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
13.3541 0 0 13.3541 47.6933 395.8624 Tm
(For a procedure, the body is a sequence that's always in tail position. \)Tj
-2.857 -2.562 Td
(When we compile something in tail position, we pass )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
( a flag saying so. The flag will be examined, )Tj
0 -1.2 TD
(and passed along to subexpressions if appropriate for compiling the kind\ of subexpression in question. )Tj
0 -2.562 TD
(For example, if )Tj
/T1_1 1 Tf
(compile-sequence)Tj
/T1_0 1 Tf
( is handed a flag saying it should compile for tail position, it will pa\ss )Tj
0 -1.205 TD
(the tail flag along when calling )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
( recursively on its last subexpression. For its other subexpressions, )Tj
0 -1.2 TD
(however, it will always pass the non-tail flag, because they must always\ return to execute the next expression )Tj
T*
(in the sequence. )Tj
0 -2.562 TD
(Similarly, )Tj
/T1_1 1 Tf
(compile-if)Tj
/T1_0 1 Tf
( will pass whatever flag it is given along to when calling )Tj
/T1_1 1 Tf
(compile)Tj
/T1_0 1 Tf
( for its )Tj
0 -1.2 TD
(consequent and alternative subexpressions, but never when compiling its \condition expression. )Tj
/T1_1 1 Tf
0 -2.562 TD
(compile-combo)Tj
/T1_0 1 Tf
( will always pass along a non-tail flag when calling compile on its sube\xpressions, but will )Tj
0 -1.2 TD
(examine the flag it's given to tell whether it should save a continuatio\n before evaluating all of them. )Tj
/T1_1 1 Tf
0 -2.562 TD
(compile-lambda)Tj
/T1_0 1 Tf
( will always compile body expressions in non-tail position, except for t\he last one, which )Tj
0 -1.205 TD
(is always compiled in tail position. \(For simplicitly, )Tj
/T1_1 1 Tf
(compile-lambda)Tj
/T1_0 1 Tf
( just hands the whole body to )Tj
/T1_1 1 Tf
T*
(compile-sequence)Tj
/T1_0 1 Tf
(, with a tail flag.\) )Tj
/T1_1 1 Tf
0 -2.562 TD
(compile-let)Tj
/T1_0 1 Tf
(, always compiles its initial value expressions in non-tail position, an\d its body expressions )Tj
0 -1.205 TD
(like a sequence. \(For simplicity, it just hands the whole body to )Tj
/T1_1 1 Tf
(compile-sequence)Tj
/T1_0 1 Tf
(, with whatever flag )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(26 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6127 0 obj<</Length 4592>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(it's given.\) )Tj
ET
0 0 1 RG
1.122 w 10 M 0 j 0 J []0 d 
9.539 717.154 m
128.991 717.154 l
S
0 0 1 rg
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 720.5196 Tm
(Compiling Returns)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(As mentioned above, when an expression other than a procedure call is a \tail of a procedure, it must be )Tj
0 -1.205 TD
(accompanied by a return. That is, )Tj
/T1_2 1 Tf
(every)Tj
/T1_0 1 Tf
( tail of a procedure must be either an )Tj
/T1_3 1 Tf
(apply)Tj
/T1_0 1 Tf
( \(which will call )Tj
0 -1.205 TD
(something which will return, perhaps indirectly because of tail calling\)\ or a )Tj
/T1_3 1 Tf
(return)Tj
/T1_0 1 Tf
(. )Tj
0 -2.557 TD
(The compiler can handle this by putting ensuring that wherever we genera\te intermediate code that is a leaf of )Tj
0 -1.205 TD
(the expression graph \(e.g., in )Tj
/T1_3 1 Tf
(compile-variable-ref)Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(compile-literal)Tj
/T1_0 1 Tf
(\), we check the )Tj
0 -1.2 TD
(compile-time continuation flag to see if the expression occurs in tail p\osition. If so, rather than simply leaving )Tj
0 -1.205 TD
(the value in the value register, we also execute a )Tj
/T1_3 1 Tf
(return)Tj
/T1_0 1 Tf
( sequence--a series of instructions that will grab the )Tj
0 -1.2 TD
(values out of the first partial continuation on the chain, and restore t\hem into the registers and evaluation )Tj
T*
(stack to resume the suspended procedure. We have a special intermediate \code instruction that stands for this )Tj
T*
(sequence, called return. )Tj
0 -2.557 TD
(Consider the following procedure: )Tj
/T1_3 1 Tf
0 -2.562 TD
(\(lambda \(a b c\))Tj
0 -1.2 TD
(   \(if \(if a)Tj
T*
(           \(b\))Tj
T*
(           c\))Tj
T*
(       d)Tj
T*
(       \(e\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(When compiling its body, we dispatch through )Tj
/T1_3 1 Tf
(compile-sequence)Tj
/T1_0 1 Tf
( and recursively call )Tj
/T1_3 1 Tf
(compile)Tj
/T1_0 1 Tf
( to )Tj
0 -1.205 TD
(compile the )Tj
/T1_3 1 Tf
(if)Tj
/T1_0 1 Tf
( in tail position. It recursively calls )Tj
/T1_3 1 Tf
(compile)Tj
/T1_0 1 Tf
( to compile the nested if in non-tail position, )Tj
T*
(which in turn recursively calls )Tj
/T1_3 1 Tf
(compile)Tj
/T1_0 1 Tf
( to compile )Tj
/T1_3 1 Tf
(a)Tj
/T1_0 1 Tf
(, )Tj
/T1_3 1 Tf
(\(b\))Tj
/T1_0 1 Tf
( and )Tj
/T1_3 1 Tf
(c)Tj
/T1_0 1 Tf
( in non-tail position. )Tj
0 -2.562 TD
(Note that )Tj
/T1_3 1 Tf
(a)Tj
/T1_0 1 Tf
( is a leaf expression, and since it's in non-tail position, it can just \leave its value in the value )Tj
0 -1.205 TD
(register. The subsequent code \(the test for false and conditional branc\h that's part of the code for the inner )Tj
/T1_3 1 Tf
(if)Tj
/T1_0 1 Tf
(\) )Tj
0 -1.2 TD
(will expect that value there, so that's fine. )Tj
0 -2.562 TD
(The expression )Tj
/T1_3 1 Tf
(\(b\))Tj
/T1_0 1 Tf
( is not in tail position, because it inherits non-tail position from the\ inner )Tj
/T1_3 1 Tf
(if)Tj
/T1_0 1 Tf
(, so a )Tj
0 -1.205 TD
(continuation must be saved before the call to )Tj
/T1_3 1 Tf
(b)Tj
/T1_0 1 Tf
(. When )Tj
/T1_3 1 Tf
(b)Tj
/T1_0 1 Tf
( returns, its value will be in the value register and )Tj
T*
(execution will resume at the branch that is part of the )Tj
/T1_3 1 Tf
(if)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
(Similarly, the expression )Tj
/T1_3 1 Tf
(c)Tj
/T1_0 1 Tf
( is in non-tail position \(which it also inherited from the inner if\); \it can just leave )Tj
0 -1.2 TD
(its value in the value register where subsequent code can find it. \(In \this case, it's the value returned by the )Tj
0 -1.205 TD
(inner )Tj
/T1_3 1 Tf
(if)Tj
/T1_0 1 Tf
(, and tested by the outer )Tj
/T1_3 1 Tf
(if)Tj
/T1_0 1 Tf
('s test for false and conditional branch.\) )Tj
0 -2.562 TD
(The expression )Tj
/T1_3 1 Tf
(d)Tj
/T1_0 1 Tf
( is different. It's in tail position, and it's a leaf \(not a call\). It\ can't just leave it's value in the )Tj
0 -1.205 TD
(register, because it's the end of the procedure; it must therefore have \a )Tj
/T1_3 1 Tf
(return)Tj
/T1_0 1 Tf
( sequence tagged onto it. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(27 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6128 0 obj<</Length 3486>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8351 Tm
(The expression )Tj
/T1_1 1 Tf
(\(e\))Tj
/T1_0 1 Tf
( is just a tail call, which can just call )Tj
/T1_1 1 Tf
(e)Tj
/T1_0 1 Tf
( without saving a continuation. Whatever e calls )Tj
0 -1.2 TD
(can do whatever it wants, and probably something will eventually leave s\omething in the value register and )Tj
T*
(pop the caller's continuation. )Tj
0 -2.557 TD
(The code generated for the above procedure is: )Tj
/T1_1 1 Tf
0 -2.562 TD
(  \(bind 3\)                     ; bind args \(a, b, and c\))Tj
0 -1.2 TD
(  \(local-var-ref 0 1\)             ; get value of a)Tj
T*
(  \(push\))Tj
T*
(  \(branch-on-false "else32"\)      ; compare and maybe br to inner else\)Tj
T*
(  \(save-continuation "resume33"\))Tj
T*
(  \(local-var-ref 0 2\)             ; get value of b)Tj
T*
(  \(apply\)                         ; call b)Tj
T*
("resume33")Tj
0 -1.2 TD
(  \(branch end\))Tj
0 -1.2 TD
("else32")Tj
T*
(  \(local-var-ref 0 3\)                ; get value of c)Tj
T*
("end32")Tj
T*
(  \(branch-on-false else1\)      ; compare and may br to outer else)Tj
T*
(  \(fetch-literal 1\)               ; get toplevel binding of d)Tj
T*
(  \(t-l-var-get\)                   ; get value of d from binding)Tj
T*
(  \(return\)                        ; and return it)Tj
T*
(  \(branch end1\))Tj
T*
("else31")Tj
T*
(  \(fetch-literal 2\)               ; get toplevel binding of e)Tj
T*
(  \(t-l-var-get\)                   ; get value of e from binding)Tj
T*
(  \(apply\)                         ; and tail-call it)Tj
T*
("end31")Tj
/T1_0 1 Tf
0 -2.552 TD
(\(Notice that when we generated the code for the outer else, we generate\d a branch that can never be taken. )Tj
/T1_1 1 Tf
0 -1.205 TD
(compile-if)Tj
/T1_0 1 Tf
( generates a label for the end of the code, so that after executing the \consequent, control will )Tj
T*
(resume at whatever code follows the )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(. In the case of this )Tj
/T1_1 1 Tf
(if)Tj
/T1_0 1 Tf
(, the consequent will always execute a return )Tj
0 -1.2 TD
(before encountering the branch. A slightly smarter compiler would probab\ly recognize this situation, and )Tj
T*
(eliminate the branch.\) )Tj
ET
0 0 1 RG
1.553 w 10 M 0 j 0 J []0 d 
9.539 176.048 m
307.51 176.048 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.4903 0 0 18.4903 9.5387 180.7079 Tm
(Compiling Top-Level Expressions)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 143.2201 Tm
(We said earlier that the compiler mainly uses recursion to generate inte\rmediate code for nested expressions. )Tj
0 -1.2 TD
(To make this useful, though, at some point the intermediate code for a t\op-level expression must be converted )Tj
T*
(into actual executable code and packaged up so that it can be called. )Tj
0 -2.557 TD
(Suppose we interact with our system via a read-eval-print loop where eva\l is really implemented by )Tj
0 -1.2 TD
(compiling the expression and executing the resulting compiled code. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(28 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6129 0 obj<</Length 2701>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(To make it easy to implement this, it's nice if there aren't very many k\inds of top-level expressions that the )Tj
0 -1.2 TD
(compiler has to generate code for and be able to actually call. In parti\cular, it's convenient if different kinds of )Tj
T*
(expression can be transformed into the same kind of expression. The easy\ way to do this is to make all )Tj
0 -1.2 TD
(different kinds of executable expressions into expressions that generate\ procedures, and then call those )Tj
0 -1.2 TD
(procedures. )Tj
0 -2.557 TD
(If we type )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(x 2\)\))Tj
0 -1.2 TD
(  \(+ x x\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(to the r.e.p. loop, the r.e.p. loop can simply wrap this up in a procedu\re expression compile that and package it )Tj
0 -1.2 TD
(up as something executable, and call it. In effect the read-eval-print l\oop will convert it to )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(lambda \(\))Tj
0 -1.2 TD
(   \(let \(\(x 2\)\))Tj
T*
(      \(+ x x\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(before compiling it, and call the resulting closure to execute it. )Tj
0 -2.557 TD
(Likewise, expressions like )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(set! foo quux\))Tj
/T1_0 1 Tf
0 -2.552 TD
(and )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(if bar baz\))Tj
/T1_0 1 Tf
0 -2.552 TD
(can be wrapped up as )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(lambda \(\) \(set! foo quux\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(and )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(lambda \(\) \(if bar baz\)\))Tj
/T1_0 1 Tf
0 -2.552 TD
(Now when we start compiling, we only have to deal with one kind of thing\--a whole procedure, and when we )Tj
0 -1.2 TD
(get the resulting code back and package it up to run it, we'll always be\ dealing with the code for a whole )Tj
T*
(procedure. That makes it easy to create an actual closure to call. )Tj
0 -2.562 TD
(The main routine we use to start off compilation is )Tj
/T1_1 1 Tf
(compile-procedure)Tj
/T1_0 1 Tf
(, which takes an expression, a )Tj
0 -1.2 TD
(compile-time environment, a compile-time continuation, and a literal lis\t as arguments. It returns intermediate )Tj
T*
(code and an updated literal list for the procedure. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(29 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6130 0 obj<</Length 4522>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 747.297 Tm
(We take the intermediate code and hand it to the procedure )Tj
/T1_1 1 Tf
(intermediate-code->executable-)Tj
0 -1.205 TD
(code)Tj
/T1_0 1 Tf
( which generates the executable code object. \(This may be by translatin\g the sequence of intermediate )Tj
0 -1.2 TD
(code instructions into the equivalent sequences of assembly language ins\tructions, and running that through )Tj
0 -1.2 TD
(an assembler. Before doing the assembly, it may run the intermediate cod\e through one or more optimization )Tj
0 -1.2 TD
(phases. )Tj
0 -2.562 TD
(We take the resulting executable code and the literals list, and hand th\em to )Tj
/T1_1 1 Tf
(make-template)Tj
/T1_0 1 Tf
( to create the )Tj
0 -1.2 TD
(template object. )Tj
0 -2.562 TD
(Now we can hand the appropriate runtime environment and the template to \)Tj
/T1_1 1 Tf
(make-closure)Tj
/T1_0 1 Tf
( and get back a )Tj
0 -1.2 TD
(callable closure for the procedure. )Tj
ET
0 0 1 RG
1.553 w 10 M 0 j 0 J []0 d 
9.539 539.118 m
105.078 539.118 l
S
0.932 w 
105.078 540.982 m
171.643 540.982 l
S
1.553 w 
171.643 539.118 m
452.197 539.118 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.4903 0 0 18.4903 9.5387 543.7776 Tm
(Compiling )Tj
/T1_3 1 Tf
(lambda)Tj
/T1_2 1 Tf
( Expressions Inside Procedures)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 505.9942 Tm
(When we compile a )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression, we must generate code that will create a closure at run tim\e. A very )Tj
0 -1.2 TD
(naive way to do this would be to generate code that would call the compi\ler at runtime to compile the )Tj
/T1_1 1 Tf
0 -1.205 TD
(lambda)Tj
/T1_0 1 Tf
( expression into a procedure, plus a little code to create a closure of \that object in the runtime )Tj
0 -1.2 TD
(environment. )Tj
0 -2.557 TD
(Luckily, this is not necessary, and the compiler can do all of the real \compilation at compile time--since the )Tj
0 -1.205 TD
(code for the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression will be the same every time it's executed, and since lexical\ scope guarantees )Tj
0 -1.2 TD
(that it will always execute in an environment with the same structure, o\nly one version of the code is needed, )Tj
T*
(and it can be shared among all closures of that procedure. The template \can be shared as well. )Tj
0 -2.562 TD
(The compiler therefore generates code and a template for the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( procedure; at run time, the actual code )Tj
0 -1.205 TD
(for the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression just makes a closure on the heap and initializes its environ\ment pointer and )Tj
0 -1.2 TD
(template pointer. This code will get the environment pointer from the en\vironment register \(and put it in the )Tj
0 -1.205 TD
(environment field of the new closure\); the template pointer will be the\ ponter to the template for the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(procedure. )Tj
0 -2.557 TD
(To allow this little code sequence to quickly grab the template for the \procedure being closed, the compiler )Tj
0 -1.205 TD
(stores a pointer to that template in the template of the procedure which\ executes the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression. For )Tj
T*
(example, if a )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression is encountered while compiling procedure )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(, the compiler will compile )Tj
T*
(the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( procedure and store its template in the template of )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(. \(While compiling )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
(, it simply )Tj
T*
(records the pointer to the new )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( procedure's template as another literal. Then it will end up in )Tj
/T1_1 1 Tf
(foo)Tj
/T1_0 1 Tf
('s )Tj
0 -1.2 TD
(template like other literals.\) )Tj
0 -2.557 TD
(So the code generated for )Tj
/T1_1 1 Tf
0 -2.562 TD
(   ...)Tj
0 -1.2 TD
(   \(lambda \(x\))Tj
T*
(      \(...\)\))Tj
T*
(   ...)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(30 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6131 0 obj<</Length 3037>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(moved to the normal heap, that can be viewed as moving objects from one \generation to the next. This special )Tj
0 -1.2 TD
(generation is cheaper than a normal generational scheme, however, becaus\e of the stereotyped structures of )Tj
T*
(continuation chains and binding environments.\) )Tj
0 -2.557 TD
(A stack cache, because it's small, can reduce the amount of memory that \is used very frequently, compared to )Tj
0 -1.2 TD
(a generational GC without a stack cache. \(A stack cache may only be a f\ew kilobytes, but the youngest )Tj
0 -1.2 TD
(generation of a generational GC may be hundreds of kilobytes, or megabyt\es.\) For some cache architectures, )Tj
T*
(frequent reuse of this large an area causes significant cache miss penal\ties. \(For some other architectures, the )Tj
T*
(misses still occur but the cost is surprisingly low. I believe that stac\k caches are nonetheless a good idea, )Tj
T*
(because they never hurt much and may sometimes help a lot.\) )Tj
0 -2.557 TD
(Scheme-48 has a stack cache that caches both continuations and binding e\nvironments. RScheme has a stack )Tj
0 -1.2 TD
(cache for continuations only, and relies on the compiler to compile away\ most heap allocation of binding )Tj
T*
(environments. \(This may not currently be as effective as it should be--\the compiler needs more testing and )Tj
T*
(improvement before it will generate really good code.\) )Tj
ET
0.5 0.5 0.5 rg
9.539 495.09 m
9.539 496.998 l
602.461 496.998 l
601.507 496.044 l
10.493 496.044 l
10.493 496.044 l
h
f
0.875 0.875 0.875 rg
602.461 496.998 m
602.461 495.09 l
9.539 495.09 l
10.493 496.044 l
601.507 496.044 l
601.507 496.044 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 476.943 Tm
(Go to the )Tj
ET
0 0 1 RG
0.673 w 10 M 0 j 0 J []0 d 
62.581 474.924 m
84.095 474.924 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 62.5812 476.943 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
90.772 474.924 m
136.763 474.924 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 90.7717 476.943 Tm
(previous)Tj
0 0 0 rg
(, )Tj
ET
143.44 474.924 m
166.436 474.924 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 143.4404 476.943 Tm
(next)Tj
0 0 0 rg
(, )Tj
ET
173.113 474.924 m
191.662 474.924 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 173.1132 476.943 Tm
(last)Tj
0 0 0 rg
( section, )Tj
ET
239.51 474.924 m
327.781 474.924 l
S
0 0 1 rg
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 239.5099 476.943 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(40 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6132 0 obj<</Length 4010>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 743.2759 Tm
(looks like )Tj
/T1_1 1 Tf
0 -2.562 TD
(   ...)Tj
0 -1.2 TD
(   \(envt-reg-get\)     ; primitive to copy envt. reg. onto eval stack)Tj
0 -1.2 TD
(   \(push\))Tj
T*
(   \(fetch-literal 15\) ; grab template pointer for lambda proc)Tj
T*
(   \(push\))Tj
0 -1.2 TD
(   \(make-closure\)     ; code that will create closure w/those values)Tj
T*
(   ...)Tj
/T1_0 1 Tf
0 -2.557 TD
(The real trick is in compiling the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( procedure and stuffing its template into the template of the )Tj
0 -1.205 TD
(procedure that contains the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression. The compiler just calls itself to generate the code and )Tj
0 -1.2 TD
(template then saves the template in the literal list and generates code \like the above to reference the right )Tj
T*
(literal. )Tj
ET
0 0 1 RG
1.553 w 10 M 0 j 0 J []0 d 
9.539 487.086 m
286.93 487.086 l
S
0 0 1 rg
BT
/T1_2 1 Tf
18.4903 0 0 18.4903 9.5387 491.746 Tm
(Compiling Top-level Definitions)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 454.194 Tm
(We said above that we can deal with top-level expressions by turning the\m all into )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expressions, )Tj
0 -1.2 TD
(which will have the effect of evaluating those expressions when called. \)Tj
0 -2.557 TD
(This is a little bit tricky when dealing with top-level definitions, bec\ause top-level definitions can't be nested )Tj
0 -1.2 TD
(inside lambda expressions in the obvious way--they'd just become local d\efinitions. )Tj
0 -2.562 TD
(We therefore have to treat them specially. We use a special procedure, )Tj
/T1_1 1 Tf
(environment-define!)Tj
/T1_0 1 Tf
(, which )Tj
0 -1.2 TD
(operates on top-level environments and allows us to create top-level bin\dings. This is not a standard Scheme )Tj
T*
(procedure--it's a special procedure that the compiler can generate calls\ to, but normal portable Scheme code )Tj
T*
(cannot use directly. )Tj
0 -2.557 TD
(The read-eval-print-loop will therefore recognize top-level definitions \and treat them specially. When it )Tj
0 -1.205 TD
(encounters one, the initial-value expression will be wrapped up as a )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( and compiled, and the results )Tj
0 -1.2 TD
(turned into code, a template, and a closure. \(The closure is given the \runtime toplevel environment pointer.\) )Tj
0 -2.562 TD
(The closure will be called to get a result for the initial value express\ion, and )Tj
/T1_1 1 Tf
(environment-define!)Tj
/T1_0 1 Tf
( will )Tj
0 -1.2 TD
(be used to create and initialize the toplevel variable. )Tj
0 -2.557 TD
(\(This might appear at first to cause a scoping problem: if the binding \isn't created until after the initial value )Tj
0 -1.2 TD
(expression is compiled, the compiler won't see the binding. But recall t\hat if we compile an expression that )Tj
T*
(uses an undefined variable, we assume it's a toplevel variable and creat\e a binding object for it, and mark that )Tj
0 -1.205 TD
(object invalid. If the binding has already been created by a forward ref\erence in this way, )Tj
/T1_1 1 Tf
(environment-)Tj
T*
(define!)Tj
/T1_0 1 Tf
( will just overwrite the marker with a real value.\) )Tj
0 -2.557 TD
(Of course, if the top-level definition uses procedure definition syntax,\ it is necessary to massage that into a )Tj
/T1_1 1 Tf
0 -1.205 TD
(lambda)Tj
/T1_0 1 Tf
( expression before doing the above massaging and compiling. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(31 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6133 0 obj<</Length 4082>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 1 RG
1.553 w 10 M 0 j 0 J []0 d 
9.539 728.254 m
309.544 728.254 l
S
0 0 1 rg
BT
/T1_1 1 Tf
18.4903 0 0 18.4903 9.5387 732.9131 Tm
(Interfacing to the Runtime System)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 695.4254 Tm
(In order to support garbage collection \(as is required for Scheme\), th\ere must be some agreement between the )Tj
0 -1.2 TD
(compiler and the garbage collector, so that the collector can find the p\ointers that the running program might )Tj
T*
(find, and ensure that all objects the program could reach from them are \preserved. )Tj
0 -2.557 TD
(A common way of doing this \(used in RScheme and Scheme-48\) is to have \a fixed set of registers \(plus )Tj
0 -1.2 TD
(maybe an eval stack\) that hold all of the root values that the collecto\r needs to know about, and guarantee that )Tj
T*
(whenever garbage collection occurs, all pointers will be identifiable as\ such. Any given register must be )Tj
T*
(known to never contain pointers, to always contain a pointer, or to cont\ain self-identifying \(tagged\) values )Tj
0 -1.2 TD
(that are decodable to see if they're pointers. )Tj
0 -2.562 TD
(For example, in the straightforward compiled system we've described in d\etail, the )Tj
/T1_2 1 Tf
(VALUE)Tj
/T1_0 1 Tf
( register and the )Tj
/T1_2 1 Tf
0 -1.205 TD
(EVAL)Tj
/T1_0 1 Tf
( stack only contain normal Scheme values: tagged values that can be chec\ked to see if they're pointers. )Tj
0 -1.2 TD
(On the other hand, the template and procedure, pointers would probably a\lways contain raw pointers, since )Tj
T*
(they can only point at one kind of thing, and the tags would slow some t\hings down. )Tj
0 -2.557 TD
(There might also be some other registers, which always contain nonpointe\rs. )Tj
ET
1.294 w 
9.539 408.564 m
150.82 408.564 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 412.4473 Tm
(Garbage Collection)Tj
ET
1.122 w 
9.539 372.361 m
82.265 372.361 l
S
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 375.726 Tm
(Safe Points)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(Many systems \(like RScheme and Scheme-48\) ensure that garbage collecti\on can only happen when a )Tj
0 -1.2 TD
(program is at a well-defined "safe point", not at an arbitrary point in \the code. At a safe point, all pointer )Tj
0 -1.2 TD
(values are known to be recognizable. In between safe points, it's okay f\or the code to use values that aren't )Tj
T*
(properly decipherable by the GC. \(For example, a register that normally\ contains only tagged values might )Tj
T*
(briefly hold a raw pointer.\) )Tj
0 -2.557 TD
(This is easy in a single-threaded system; the GC just keeps some space i\n reserve, so that it never runs out of )Tj
0 -1.2 TD
(memory between safe points. If an allocation requires dipping into this \reserve, a flag is set so that a GC will )Tj
T*
(occur at the next safe point. )Tj
0 -2.557 TD
(The usual trick is to ensure that each procedure call and backward branc\h is a safe point. This ensures that the )Tj
0 -1.2 TD
(a program \(or thread\) reaches safe points periodically, )Tj
0 -2.557 TD
(It's a little bit trickier in a multithreaded system--you have to make s\ure that you suspend threads at safe )Tj
0 -1.2 TD
(points, so that if another thread forces a GC while another thread is su\spended. )Tj
ET
9.539 71.512 m
108.973 71.512 l
S
0 0 1 rg
BT
/T1_1 1 Tf
13.3541 0 0 13.3541 9.5387 74.8768 Tm
(GC at Any Time)Tj
0 0 0 rg
/T1_0 1 Tf
0 -2.683 TD
(Some systems do not use safe points, and in effect make every point in t\he code a safe point for collection. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(32 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6134 0 obj<</Length 4540>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.2267 Tm
(They ensure that no matter where a GC occurs \(or where a thread was sus\pended before the GC occurred\), )Tj
0 -1.2 TD
(there will be enough information lying around so that the collector can \find all of the pointers it needs to find. )Tj
0 -2.557 TD
(Some compilers do this by restricting the way registers are used and cod\e is generated. \(For example, the )Tj
0 -1.2 TD
(Orbit compiler only uses certain registers to hold pointers, and only us\es certain others to hold nonpointers. In )Tj
T*
(addition, all pointers in registers must point directly to the beginning\ of an object; array indexing cannot be )Tj
T*
(converted into arbitrary ponter arithmetic by the optimizing compiler.\)\ )Tj
0 -2.557 TD
(Other compilers allow more use of odd representations and more flexible \use of registers, so that values can )Tj
0 -1.2 TD
(be figured out at run time. For example, a register might be assumed to \hold nonpointers, except at points in )Tj
T*
(the code flagged by the compiler, based on its having register allocated\ a variable there. )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 549.717 m
81.451 549.717 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 553.6004 Tm
(Interrupts)Tj
ET
1.553 w 
9.539 507.719 m
479.1 507.719 l
S
BT
/T1_1 1 Tf
18.4903 0 0 18.4903 9.5387 512.3786 Tm
(Advanced Compiler and Runtime System Techniques)Tj
ET
1.294 w 
9.539 468.976 m
198.787 468.976 l
S
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 472.8593 Tm
(Inlining Small Procedures)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 436.3694 Tm
(The system we've described so far generates fairly slow code, and a majo\r culprit is the frequency of )Tj
0 -1.2 TD
(continuation saving and procedure calls. Even very small, frequently-exe\cuted procedures like eq?, car, cdr, )Tj
T*
(and + require a handful if instructions to call and another handful to r\eturn, plus another handful to save a )Tj
0 -1.2 TD
(continuation if it's a non-tail call. This is much slower that the cost \of similar operations in conventional )Tj
0 -1.2 TD
(languages like C or Pascal; in those languages, these simple little "ope\rations" don't have the semantics of )Tj
T*
(calls to first-class procedures. )Tj
0 -2.557 TD
(Sometimes it is desirable to trade away some of the purity and elegance \of a language like Scheme, and trade )Tj
0 -1.2 TD
(reduced flexibility for better performance. One way of doing this is by \declaring frequently-used small )Tj
0 -1.205 TD
(procedures )Tj
/T1_2 1 Tf
(not)Tj
/T1_0 1 Tf
( to be redefinable, and allowing the compiler to compile those operation\s inline rather than as )Tj
0 -1.2 TD
(procedure calls. In some systems this only works for built-in procedures\ that the compiler understands, but in )Tj
T*
(others the compiler is smart enough to inline user-defined procedures if\ so directed. )Tj
0 -2.557 TD
(In some Scheme systems, you can declare procedures to be inlinable, or u\se a compiler flag that says you )Tj
0 -1.2 TD
(promise not to redefine the common little procedures that are most valua\ble to inline. This means that you )Tj
0 -1.2 TD
(can't change the definition of something like + on the fly, but you seld\om want to. A common tradeoff is to )Tj
T*
(avoid inlining any but the most frequently-called procedures during prog\ram development, and once the )Tj
T*
(program is finished, recompile with lots of inlining. This gives you the\ flexibility to modify procedure )Tj
T*
(definitions on the fly during debugging, while getting maximum speed onc\e it's clear which procedures won't )Tj
T*
(ever be redefined in normal operation. )Tj
0 -2.557 TD
(Some high-tech compilers use advanced techniques to do lots of inlining \when it's safe, without reducing )Tj
0 -1.2 TD
(flexibility much or requiring the user to supply a lot of declarations. \)Tj
0 -2.557 TD
(The Self compiler aggressively inlines code, and automatically recompile\s the code that is invalidated by )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(33 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6135 0 obj<</Length 4595>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(changes to procedure definitions. \(This compiler is for the language Se\lf, not Scheme, but similar techniques )Tj
0 -1.2 TD
(could be applied to Scheme.\) )Tj
0 -2.557 TD
(Some compilers currently in development have a special mode for compilin\g finished programs which will )Tj
0 -1.2 TD
(not be used with a read-eval-print loop. Such a compiler takes advantage\ of the fact that if it can look at the )Tj
T*
(whole program \(rather than having parts typed in by the user interactiv\ely\), it can tell which variables could )Tj
T*
(ever be modified at run time. \(As long as there are no calls to eval at\ run time, the compiler can tell that all of )Tj
T*
(the code for the program exists at compile-time; new closures may be cre\ated at run time, but not totally new )Tj
0 -1.2 TD
(procedures.\) After globally determining that there is no code in the pr\ogram that could change the definition )Tj
T*
(of a procedure, it is free to inline the code for that procedure into it\s callers. )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 568.514 m
281.855 568.514 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 572.3965 Tm
(Type Declarations and Type Analysis)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 535.9066 Tm
(Another key performance problem with naive implementations of Scheme \(o\r other dynamically typed )Tj
0 -1.2 TD
(languages\) is that basic operations are generally slow relative to thei\r execution in conventional statically-)Tj
T*
(typed languages. For example, the Scheme procedure + must check the type\s of its arguments and \(depending )Tj
0 -1.2 TD
(on those types\) execute any of several possible code sequences to add t\wo numbers. Usually, the checking )Tj
0 -1.2 TD
(overhead alone is several times greater than the cost of the actual addi\tion. )Tj
0 -2.557 TD
(One way of reducing this cost is by extending Scheme to allow the user t\o declare the types of some )Tj
0 -1.2 TD
(variables. The compiler may be able to use this information to compile f\ast versions of operations for values )Tj
T*
(of known types. \(This is especially true if common operations are inlin\ed--the compiler can choose to inline )Tj
T*
(the appropriate version rather than the more general code.\) )Tj
0 -2.557 TD
(Another way of reducing type checking cost is for the system to automati\cally infer the types of some )Tj
0 -1.205 TD
(expressions. For example, consider the expression )Tj
/T1_2 1 Tf
(\(+ a 22\))Tj
/T1_0 1 Tf
(. Since )Tj
/T1_2 1 Tf
(22)Tj
/T1_0 1 Tf
( is a literal, its type is known at )Tj
T*
(compile time. If the compiler can inline the )Tj
/T1_2 1 Tf
(+)Tj
/T1_0 1 Tf
( procedure, it may at least omit the type check of that argument. )Tj
0 -2.557 TD
(A combination of declarations and inferencing can work well. For example\, if the user has declared variable a )Tj
0 -1.205 TD
(to be of type )Tj
/T1_2 1 Tf
(<integer>)Tj
/T1_0 1 Tf
(, then the compiler can tell that )Tj
/T1_2 1 Tf
(\(+ a 22\))Tj
/T1_0 1 Tf
( is an expression whose arguments are )Tj
0 -1.2 TD
(integers \(so no run time type test are necessary there\) )Tj
/T1_3 1 Tf
(and)Tj
/T1_0 1 Tf
( whose result is an integer, which may eliminate the )Tj
T*
(need for type checks by the expression that uses the value. )Tj
0 -2.557 TD
(More aggressive schemes are possible for reducing the frequency of dynam\ic type checks. For example, the )Tj
0 -1.2 TD
(Self compiler aggressively inlines and transforms code so that multiple \dynamic type checks can be collapsed )Tj
T*
(into a single one. )Tj
ET
9.539 134.708 m
242.44 134.708 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 138.5911 Tm
(Using More Hardware Registers)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 102.1012 Tm
([ blah blah ] )Tj
0 -2.557 TD
(For example, it's very likely a good idea to use more registers, and eit\her not have an eval stack or not use it )Tj
0 -1.2 TD
(as often. Our simple abstract machine requires arguments to be passed on\ the eval stack, which means storing )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(34 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6136 0 obj<</Length 4780>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(into memory at least once for each argument, and loading back from memor\y when arguments are used. Most )Tj
0 -1.2 TD
(modern machines have several hardware registers available for argument p\assing, and more for holding )Tj
T*
(intermediate values of computations. )Tj
0 -2.557 TD
(If we have a few more registers that can be used for argument passing, w\e could just leave the argument )Tj
0 -1.2 TD
(values in those known registers, and procedures could expect them there.\ In many cases, argument values )Tj
T*
(could be computed in a way that the result is left in the appropriate ar\gument-passing register, without having )Tj
T*
(to copy it there from somwhere else. Similarly, in many cases, procedure\s could leave their arguments in the )Tj
0 -1.2 TD
(argument passing registers and use them there, without actually copying \them into a binding environment on )Tj
T*
(the heap. \(Even if only a few registers can be devoted to this, it will\ account for the large majority of )Tj
T*
(arguments passed, since most procedure calls are to procedures that take\ between one and three arguments.\) )Tj
0 -2.557 TD
(Similarly, in many cases a temporary value generated by evaluating a sub\expression could be left in a )Tj
0 -1.2 TD
(register, and then used by another expression, without pushing and poppi\ng the eval stack. )Tj
0 -2.557 TD
(This can be a big performance win--it is much faster to operate on argum\ents and temporary values that are )Tj
0 -1.2 TD
(already in registers, rather than copying them to and from memory all of\ the time. )Tj
0 -2.557 TD
(Using more registers can make the compiler and runtime system more compl\icated. If variables are in )Tj
0 -1.2 TD
(registers when continuations are saved, their values must be saved in th\e continuations and restored at )Tj
T*
(procedure returns. This requires the compiler to keep track of which reg\isters are in use at which points, and )Tj
T*
(generate appropriate code. It also complicates the interface between the\ compiled code and the garbage )Tj
T*
(collector; the garbage collector must be able to find all of the pointer\ values that are stored in registers, so that )Tj
T*
(it can find all of the reachable objects. The compiler must therefore re\cord sufficient information that all )Tj
T*
(pointer values can be found at garbage collection time. \(Alternatively,\ the compiler may record a safe )Tj
T*
(approximation of the information, and require the collector to make cons\ervative guesses about what's what.\) )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 305.819 m
134.564 305.819 l
S
0 0 1 rg
BT
/T1_1 1 Tf
15.4086 0 0 15.4086 9.5387 309.702 Tm
(Closure Analysis)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 273.2121 Tm
(One of the performance problems with a naive implementation of Scheme is\ that in the general case, variable )Tj
0 -1.2 TD
(bindings must be allocated on the garbage-collected heap, and procedure \calls must be via pointers to )Tj
T*
(closures. This is often much slower than the usual implementation of con\ventional programming languages, )Tj
0 -1.205 TD
(which don't have to support )Tj
/T1_2 1 Tf
(lambda)Tj
/T1_0 1 Tf
(. Allocating closures and environments on the heap is mainly slow )Tj
0 -1.2 TD
(because creating and accessing variable bindings is slower than if the v\ariables were allocated on a stack or in )Tj
T*
(registers. )Tj
0 -2.557 TD
(A smart Scheme compiler can get rid of most of this overhead by analyzin\g programs and noticing that many )Tj
0 -1.2 TD
(closures are used in stereotyped ways, and calls to them can be implemen\ted more cheaply than the naive )Tj
T*
(implementation. Similarly, analysis of expressions may reveal that most \binding environments can't possibly )Tj
T*
(be captured by closures, and therefore don't need to be allocated on the\ garbage-collected heap. The bindings )Tj
T*
(can be saved in continuations along with temporary values, or a more con\ventional stack may be used, or )Tj
T*
(\(best of all\), the bindings can be register-allocated. )Tj
0 -2.557 TD
(A simple example of a language-level closure that doesn't need the fully\ general naive implementation is a )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(35 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6137 0 obj<</Length 3989>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8351 Tm
(closure created by a )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression that appears in the function position of a combination: )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(\(lambda \(x\))Tj
0 -1.2 TD
(    \(+ x x\)\)  )Tj
0 -1.2 TD
( 2\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(\(Recall that constructs like this are often generated by macros that im\plement binding constructs like )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(---)Tj
0 -1.2 TD
(this one is equivalent to )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(x 2\))Tj
0 -1.2 TD
(   \(+ x x\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(In this case, we can tell from the fact that the )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expression appears in the function position that the )Tj
0 -1.2 TD
(closure can't "escape" and have anything weird done with it. That is, no\ pointer to the closure is assigned into )Tj
0 -1.2 TD
(a variable binding, or passed to a procedure call, or inserted into a da\ta structure. It's clear that the only thing )Tj
T*
(that can happen to this closure is that it will be called, and then the \pointer to it will be "dropped," i.e., not )Tj
T*
(passed anywhere else. The closure will therefore become garbage immediat\ely after it's executed. )Tj
0 -2.557 TD
(A smart compiler will therefore recognize that all the closure really do\es is bind its variable and execute it's )Tj
0 -1.2 TD
(body; it will leave out the code to create the closure and just compile \in the equivalent code--in this case, it )Tj
0 -1.205 TD
(will generate the obvious code for a )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( expression. )Tj
0 -2.562 TD
(\(Some compilers always transform )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
('s and )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
('s into )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( combinations, and rely on their )Tj
0 -1.205 TD
(optimizers to recognize the unnecessary )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
('s and remove them. This may seem backwards, but it's nice )Tj
0 -1.2 TD
(because the same optimizations work whether the lambda combinations were\ the result of transforming a )Tj
/T1_1 1 Tf
0 -1.205 TD
(let)Tj
/T1_0 1 Tf
(, or macroexpanding a user-defined macro, or written directly by the use\r, or whatever. The more )Tj
0 -1.2 TD
(sophisticated the optimizer, the more simply the user can write macros a\nd procedures, and expect the )Tj
0 -1.2 TD
(compiler to sort it all out and generate efficient code.\) )Tj
0 -2.557 TD
(Another simple case for closure and environment analyis is binding envir\onments that don't have any closures )Tj
0 -1.205 TD
(created in their scopes. Suppose that our compiler inlines calls to )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
(, )Tj
/T1_1 1 Tf
(eq?)Tj
/T1_0 1 Tf
(, and )Tj
/T1_1 1 Tf
(cdr)Tj
/T1_0 1 Tf
(, and consider the )Tj
0 -1.2 TD
(expression )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(x \(car a\)\))Tj
0 -1.2 TD
(   \(if \(eq? \(car x\) target\))Tj
T*
(       \(car \(cdr x\)\))Tj
T*
(       #f\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(in this case, the body of the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( can be compiled into entirely inline code, and it is clear that there i\s no )Tj
0 -1.205 TD
(possible path of execution that can create a closure that captures )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
(. )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( can therefore be allocated in a register )Tj
0 -1.2 TD
(for its whole lifetime, making this code much faster. )Tj
0 -2.557 TD
([ separate section? Figure out structure here... ] )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(36 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6138 0 obj<</Length 4421>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8351 Tm
(Actually, some of these analyses are trickier than they appear, due to t\he presence of side effects and )Tj
/T1_1 1 Tf
(call/)Tj
0 -1.205 TD
(cc)Tj
/T1_0 1 Tf
(. )Tj
0 -2.562 TD
([ Haven't talked about )Tj
/T1_1 1 Tf
(call/cc)Tj
/T1_0 1 Tf
( yet! ] )Tj
0 -2.557 TD
(Consider the expression, where we don't assume any inlining )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(x \(car a\)\)\))Tj
0 -1.2 TD
(   \(if \(eq? \(car x\) target\))Tj
T*
(       \(car \(cdr x\)\))Tj
T*
(       \(set! x \(foo\)\)\)\))Tj
/T1_0 1 Tf
0 -2.557 TD
(At first it appears that since there are no )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
('s in the expression, )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( can be allocated in a register, and )Tj
0 -1.205 TD
(saved in continuations across calls. \(E.g., when calling )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
(, we could just save the value of )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( in the )Tj
0 -1.205 TD
(continuation and have it restored when )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( returns, right?\) Unfortunately, if we don't have any guarantees )Tj
T*
(that )Tj
/T1_1 1 Tf
(car)Tj
/T1_0 1 Tf
( won't be redefined in weird ways, then it's possible that the call will\ be to procedure that will )Tj
T*
(\(directly or indirectly\) call )Tj
/T1_1 1 Tf
(call/cc)Tj
/T1_0 1 Tf
(, and capture a continuation that could be used to return into this )Tj
0 -1.2 TD
(procedure any number of times. In that case, we can't be sure that we wo\n't return into this code and modify )Tj
/T1_1 1 Tf
0 -1.205 TD
(x)Tj
/T1_0 1 Tf
(. If we did, then each time we returned into this environment, we should\ see the latest value of )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
(. This will )Tj
T*
(happen if the value of )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( is in a normal binding environment on the heap, but not if it's in a re\gister that gets )Tj
0 -1.2 TD
(saved in a continuation. Recall that when we restore a continuation, we \just copy the values out into the )Tj
0 -1.205 TD
(registers. If we restore the same continuation multiple times, we'll jus\t keep copying the same value of )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( back )Tj
0 -1.2 TD
(out. )Tj
0 -2.562 TD
(To get this right, we have to ensure that if there are any assignments t\o )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
(, then all references to )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
( go through )Tj
0 -1.2 TD
(a pointer to a heap-allocated binding. Then when we save a continuation,\ we save this pointer to the binding )Tj
0 -1.205 TD
(of )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
(, not the )Tj
/T1_2 1 Tf
(state)Tj
/T1_0 1 Tf
( \(value\) of the binding of )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
(. Every time set or read the value of )Tj
/T1_1 1 Tf
(x)Tj
/T1_0 1 Tf
(, we go through this )Tj
0 -1.2 TD
(indirection to the same binding, and see the latest value. )Tj
0 -2.562 TD
(Because of this, high-tech scheme compilers keep track of which variable\s are ever )Tj
/T1_1 1 Tf
(set!)Tj
/T1_0 1 Tf
( anywhere in their )Tj
0 -1.2 TD
(scopes, and make sure to allocate those variables' bindings on the heap.\ )Tj
0 -2.557 TD
(In Scheme, it is a common idiom to code iteration as recursion; macros f\or different looping constructs often )Tj
0 -1.205 TD
(compile into )Tj
/T1_1 1 Tf
(letrec)Tj
/T1_0 1 Tf
('s with tail-calling )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expressions. )Tj
0 -2.557 TD
(While this is a very powerful framework for expression various patterns \of iteration, a naive implementation )Tj
0 -1.2 TD
(is slow. In most cases, loops created in this way are actually just used\ as loops, and it is desirable to compile )Tj
0 -1.205 TD
(away the overhead of closure creation and calling. For example, consider\ a named )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( like )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let loop \(\(x 0\)\))Tj
0 -1.2 TD
(   <body>)Tj
T*
(   \(if \(< x 10\))Tj
T*
(       \(loop \(+ x 1\)\)\)\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(37 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6139 0 obj<</Length 3947>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 754.8994 Tm
(that has been transformed to )Tj
/T1_1 1 Tf
0 -2.562 TD
(\(let \(\(loop \(lambda x\))Tj
0 -1.2 TD
(               <body>)Tj
0 -1.2 TD
(               \(if \(< x 10\))Tj
T*
(                   \(loop \(+ x 1\)\)\)\)\)\))Tj
T*
(   \(loop 0\))Tj
/T1_0 1 Tf
0 -2.557 TD
(We can look at this expression, and if no reference to the variable )Tj
/T1_1 1 Tf
(loop)Tj
/T1_0 1 Tf
( occurs in the <body> expression, we )Tj
0 -1.2 TD
(can tell that we can compile it as a loop. )Tj
0 -2.557 TD
(The analysis here is just slightly more complicated than the one that al\lows us to optimize closures that are )Tj
0 -1.205 TD
(produced by )Tj
/T1_1 1 Tf
(lambda)Tj
/T1_0 1 Tf
( expressions in function position of a combination. )Tj
0 -2.562 TD
(When compiling the )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
(, we can keep track of each )Tj
/T1_1 1 Tf
(let)Tj
/T1_0 1 Tf
( variable and see whether it is ever used for as )Tj
0 -1.2 TD
(anything but the name of a procedure to tail-call--if the value of loop \is never assigned, and never read except )Tj
T*
(to call it, then we know that the "calls" to loop don't really need to b\e full-blown closure calls at all. We can )Tj
T*
(inline the code for the body of the loop and compile these calls as jump\s directly to that code. )Tj
0 -2.557 TD
(FOOD FOR THOUGHT--does it matter whether the calls are tail-calls or not\, if we just treat them as )Tj
0 -1.2 TD
(procedure calls to a known address, and go ahead and save a continuation\ with the right label? )Tj
ET
0 0 1 RG
1.294 w 10 M 0 j 0 J []0 d 
9.539 383.652 m
340.038 383.652 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.4086 0 0 15.4086 9.5387 387.5353 Tm
(Register Allocating Loop Variables for Loops)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 351.0454 Tm
(Notice that register closure analysis is particularly important for loop\ control variables and variables for little )Tj
/T1_1 1 Tf
0 -1.205 TD
(let)Tj
/T1_0 1 Tf
('s inside loops. Because Scheme requires that a loop variable be bound a\gain \(to fresh memory\) at each )Tj
0 -1.2 TD
(iteration of a loop, actually allocating them on the heap is expensive. \If it can be determined that the variable )Tj
0 -1.2 TD
(is dead at the end of the loop, however, then the variable can be re-bou\nd at each iteration by simply re-using )Tj
0 -1.2 TD
(the same register. \(We're binding the name to a particular piece of mem\ory--the register--over and over again, )Tj
T*
(and it just happens that these conceptual rebindings incur no runtime co\st.\) )Tj
0 -2.557 TD
(With good closure analysis, loop conversion, and register allocation, a \Scheme compiler can compile )Tj
0 -1.2 TD
("normal" loops into code that's just as efficient as any compiler's. )Tj
ET
9.539 180.62 m
213.302 180.62 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.4086 0 0 15.4086 9.5387 184.5032 Tm
(Conventional Optimizations)Tj
0 0 0 rg
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 148.0132 Tm
(Besides the optimizations described above, conventional compiler optimiz\ations are applicable to optimizing )Tj
0 -1.2 TD
(languages like Scheme. )Tj
0 -2.557 TD
(Just as in a FORTRAN or C compiler, data flow analysis and control flow \analysis can let the compiler )Tj
0 -1.2 TD
(simplify intermediate code and produce better machine code. )Tj
ET
9.539 41.752 m
109.741 41.752 l
S
0 0 1 rg
BT
/T1_2 1 Tf
15.4086 0 0 15.4086 9.5387 45.635 Tm
(Stack Caches)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(38 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6140 0 obj<</Length 4591>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778.4152 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 8.5848 0 0 8.5848 18 780.4851 Tm
(An Introduction to Scheme and its Implementation - Compiling Scheme)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
13.3541 0 0 13.3541 9.5387 740.3446 Tm
(Inlining and closure analyisis can greatly reduce the amount of heap all\ocation in a Scheme implementation. )Tj
0 -1.2 TD
(Allocating all binding environments and continuations on the heap may in\flate allocation rates by an order of )Tj
T*
(magnitude over the rate of allocation of normal data structures like pai\rs and vectors. With a simple compiler )Tj
0 -1.2 TD
(and garbage collector, this can greatly inflate garbage collection costs\. Despite the high rate at which )Tj
0 -1.2 TD
(continuations and environments are allocated, there are typically relati\vely few of them live at any given )Tj
T*
(time--the vast majority of them are used very, very briefly and then bec\ome garbage. )Tj
0 -2.557 TD
(Inlining procedure calls may greatly reduce the allocation of continuati\ons, and closure analysis may allow )Tj
0 -1.2 TD
(most bindings to be allocated in registers instead of on the heap. )Tj
0 -2.557 TD
(Still, it may be desirable to keep most of the continuations and environ\ments from making it to the normal )Tj
0 -1.2 TD
(garbage-collected heap. )Tj
0 -2.562 TD
(A )Tj
/T1_1 1 Tf
(stack cache)Tj
/T1_0 1 Tf
( is an area of memory \(or pool of discontiguous chunks of memory\) that\'s used to for initial )Tj
0 -1.2 TD
(allocation of continuations and/or binding environments, in the expectat\ion that most of them will die quickly. )Tj
T*
(A stack cache caches part of the continuation chain; it's called a stack\ cache because it behaves mostly like a )Tj
T*
(stack. Stack caches may be used for continuatons, with environments stil\l being allocated on the heap, or a )Tj
T*
(more complex design may be used to keep most environments from making it\ to the heap as well. )Tj
0 -2.557 TD
(For the most part, a stack cache is treated like a stack, in that contin\uations are pushed and popped as though )Tj
0 -1.205 TD
(it were a stack. When a continuation is captured by )Tj
/T1_1 1 Tf
(call/cc)Tj
/T1_0 1 Tf
(, however, the continuation chain is first moved )Tj
T*
(to the heap so that it can be preserved in the usual way. This is genera\lly a good tradeoff, because )Tj
/T1_1 1 Tf
(call/cc)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(is not typically executed very often, and the stack cache can behave lik\e a stack most of the time. The large )Tj
T*
(majority of continuations will be reclaimed very quickly, by popping the\ stack cache, while a small minority )Tj
T*
(will be moved out to the normal heap. )Tj
0 -2.557 TD
(Caching binding environments is a little trickier, but the basic princip\le is the same; most environments are )Tj
0 -1.2 TD
(created in the stack cache, and only moved to the garbage-collected heap\ when necessary, i.e., when a closure )Tj
0 -1.2 TD
(is created on the heap. At that moment, the environment is moved to the \heap, one frame at a time, until a )Tj
T*
(frame is reached that is already on the heap. \(The code that does this \must ensure that an environment is never )Tj
T*
(copied to the heap twice, destroying the sharing of outer environements \by inner environments created in their )Tj
T*
(scope.\) )Tj
0 -2.557 TD
(It is not clear how desirable a stack cache for environments is, given a\ compiler that does a reasonably good )Tj
0 -1.2 TD
(job of closure analysis. Using a stack cache for environments makes clos\ure creation slower, and if most of )Tj
T*
(the short-lived environments have been eliminated by closure analysis an\d register allocation, it may not be )Tj
T*
(worth it. )Tj
0 -2.557 TD
(There is also some controversy about whether stack caches are worthwhile\ in general, or whether a )Tj
0 -1.2 TD
(generational garbage collector will take care of the large volume of sho\rt-lived data efficiently. )Tj
0 -2.557 TD
(One interesting point is that a stack cache really )Tj
/T1_2 1 Tf
(is)Tj
/T1_0 1 Tf
( a kind of generational garbage collection scheme, which )Tj
0 -1.2 TD
(exploits the typically short lifetimes of particular kinds of data. \(Wh\en environments and continuations are )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5.4152 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
8.5848 0 0 8.5848 18 7.4851 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_142.html \(39 of 40\)\11/3/2006 9:17:07 PM)Tj
ET
EMC 

endstreamendobj6141 0 obj(An Introduction to Scheme and its Implementation - Compiling Scheme)endobj6142 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_142.html)/S 700 0 R>>endobj6143 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_142.html)endobj6144 0 obj(lç≤°◊0*ÆVÅåN∏wŒ)endobj6145 0 obj<</TS(D:20061104051707)/ID 6144 0 R/CT(text/html)/O[5845 0 R 5861 0 R 5866 0 R 5868 0 R 5876 0 R 5881 0 R 5888 0 R 5895 0 R 5900 0 R 5903 0 R 5912 0 R 5918 0 R 5926 0 R 5929 0 R 5936 0 R 5943 0 R 5950 0 R 5953 0 R 5959 0 R 5963 0 R 5969 0 R 5972 0 R 5975 0 R 5978 0 R 5989 0 R 5992 0 R 5995 0 R 6001 0 R 6007 0 R 6011 0 R 6017 0 R 6023 0 R 6035 0 R 6047 0 R 6056 0 R 6062 0 R 6065 0 R 6068 0 R 6078 0 R 6082 0 R]/S/SPS/T 6141 0 R/TID 6147 0 R/SI 6146 0 R>>endobj6146 0 obj<</TS(D:20061104051707)/AU 6143 0 R>>endobj6147 0 obj(Ô¥Ü»«5˝–C°µh{D)endobj6148 0 obj<</Parent 710 0 R/Next 6332 0 R/Dest[5845 0 R/XYZ 0 792 null]/Prev 5842 0 R/SE 5844 0 R/Title(An Introduction to Scheme and its Implementation - Compiling Scheme)>>endobj6149 0 obj<</TextDecorationType/Underline/O/Layout>>endobj6150 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 6179 0 R/Type/MCR>><</MCID 0/Pg 6207 0 R/Type/MCR>><</MCID 0/Pg 6236 0 R/Type/MCR>><</MCID 0/Pg 6265 0 R/Type/MCR>><</MCID 0/Pg 6297 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 6151 0 R>>endobj6151 0 obj<</Annots 6154 0 R/Parent 6237 0 R/ID 6328 0 R/StructParents 401/Contents 6319 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj6152 0 obj[6150 0 R]endobj6153 0 obj<</Rect[65.608 749.6 88.162 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj6154 0 obj[6153 0 R 6155 0 R 6156 0 R 6160 0 R 6161 0 R 6162 0 R 6163 0 R 6164 0 R 6165 0 R 6166 0 R 6167 0 R 6168 0 R 6169 0 R 6170 0 R 6171 0 R 6172 0 R 6173 0 R 6174 0 R 6175 0 R 6176 0 R 6177 0 R 6178 0 R]endobj6155 0 obj<</Rect[95.162 749.6 143.378 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5845 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html)/S/URI>>/Border[0 0 0]>>endobj6156 0 obj<</Rect[251.094 749.6 343.634 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj6157 0 obj[6151 0 R/XYZ 0 731.2 null]endobj6158 0 obj<</Limits[(Ô1™+X÷¢¡‘≈êlêÑSEC68)(Ô1™+X÷¢¡‘≈êlêÑSEC96)]/Names[(Ô1™+X÷¢¡‘≈êlêÑSEC68)156 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC69)158 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC7)29 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC70)160 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC71)162 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC72)164 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC73)169 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC74)171 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC75)173 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC76)175 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC77)177 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC78)179 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC79)181 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC8)31 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC80)183 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC81)185 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC82)187 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC83)189 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC84)191 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC85)193 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC86)195 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC87)197 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC88)199 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC89)201 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC9)33 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC90)203 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC91)205 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC92)207 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC93)209 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC94)211 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC95)213 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC96)215 0 R]>>endobj6159 0 obj<</Limits[(Ô1™+X÷¢¡‘≈êlêÑSEC97)(ˇÏ,•©Ãè˘ÿh≠˛b§÷SEC69)]/Names[(Ô1™+X÷¢¡‘≈êlêÑSEC97)217 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC98)221 0 R(Ô1™+X÷¢¡‘≈êlêÑSEC99)223 0 R(ÔwÑyÃ˚|¯ä2vø|ÃFOOT1)1244 0 R(ÔwÑyÃ˚|¯ä2vø|ÃIDX10)1243 0 R(ÔwÑyÃ˚|¯ä2vø|ÃIDX8)1241 0 R(ÔwÑyÃ˚|¯ä2vø|ÃIDX9)1242 0 R(ÔwÑyÃ˚|¯ä2vø|ÃSEC18)1239 0 R(ÒTíÇ®P¢Çÿ+]∏»SEC82)3075 0 R(ÚQô\n!aêÅ?ña,÷ﬁIDX16)1580 0 R(ÚQô\n!aêÅ?ña,÷ﬁIDX17)1581 0 R(ÚQô\n!aêÅ?ña,÷ﬁSEC30)1578 0 R(ÛI7	K_¡Dª™ÁciSEC39)1835 0 R(ˆ≥ÉXÔä9Cd^Æb#õaÿIDX38)2069 0 R(ˆ≥ÉXÔä9Cd^Æb#õaÿSEC47)2067 0 R(¯ß=÷èIWi¿M9˙QSEC42)1931 0 R(¯º•”ó‘°∏WM&⁄ÈZIDX69)2671 0 R(¯º•”ó‘°∏WM&⁄ÈZIDX70)2672 0 R(¯º•”ó‘°∏WM&⁄ÈZIDX71)2673 0 R(¯º•”ó‘°∏WM&⁄ÈZSEC70)2669 0 R(˘ú∫≈á™Öàd	–öáSEC252)5675 0 R(˙\\0`…ºÎzºL~Jù…ä∆SEC313)6157 0 R(˝M	„≠rÏ“¢™ÂÃeÆÚIDX32)1874 0 R(˝M	„≠rÏ“¢™ÂÃeÆÚIDX33)1875 0 R(˝M	„≠rÏ“¢™ÂÃeÆÚSEC40)1872 0 R(˛&‚!—IPÍ\\0[[‚Xè”IDX84)3017 0 R(˛&‚!—IPÍ\\0[[‚Xè”IDX85)3018 0 R(˛&‚!—IPÍ\\0[[‚Xè”SEC80)3015 0 R(ˇ¥J%LZKa:b¸z–SEC22)1373 0 R(ˇ¥J%LZKa:b¸z–SEC23)1375 0 R(ˇÏ,•©Ãè˘ÿh≠˛b§÷IDX67)2640 0 R(ˇÏ,•©Ãè˘ÿh≠˛b§÷IDX68)2641 0 R(ˇÏ,•©Ãè˘ÿh≠˛b§÷SEC69)2638 0 R]>>endobj6160 0 obj<</Rect[10.0 683.954 180.66 709.723]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ô1™+X÷¢¡‘≈êlêÑSEC313)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html#SEC313)/S/URI>>/Border[0 0 0]>>endobj6161 0 obj<</Rect[50.0 602.815 61.844 617.815]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‹}ˇp`‚A‰ZÙ˘ÎÿûIDX27)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_35.html#IDX27)/S/URI>>/Border[0 0 0]>>endobj6162 0 obj<</Rect[50.0 522.754 59.324 537.754]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‹}ˇp`‚A‰ZÙ˘ÎÿûIDX26)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_35.html#IDX26)/S/URI>>/Border[0 0 0]>>endobj6163 0 obj<</Rect[50.0 442.692 225.448 457.692]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(íÅ¥çÕ◊&¥ãÚâLº‰IDX50)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_49.html#IDX50)/S/URI>>/Border[0 0 0]>>endobj6164 0 obj<</Rect[50.0 362.631 142.904 377.631]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÕoÂtv-=»ïÚ Õ$Ø/IDX2)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_14.html#IDX2)/S/URI>>/Border[0 0 0]>>endobj6165 0 obj<</Rect[50.0 343.831 174.026 358.831]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(¯º•”ó‘°∏WM&⁄ÈZIDX70)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_63.html#IDX70)/S/URI>>/Border[0 0 0]>>endobj6166 0 obj<</Rect[50.0 325.031 257.984 340.031]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ì\\\\âÂ%$ñq˘‘”èaIDX44)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html#IDX44)/S/URI>>/Border[0 0 0]>>endobj6167 0 obj<</Rect[50.0 306.231 335.768 321.231]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÀU`ˆÏY+dËw¶ßIDX36)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_43.html#IDX36)/S/URI>>/Border[0 0 0]>>endobj6168 0 obj<</Rect[50.0 287.431 248.66 302.431]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(5ójÜøUÄº‚≥ï¯≥c@IDX80)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_69.html#IDX80)/S/URI>>/Border[0 0 0]>>endobj6169 0 obj<</Rect[50.0 268.631 102.878 283.631]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÕoÂtv-=»ïÚ Õ$Ø/IDX5)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_14.html#IDX5)/S/URI>>/Border[0 0 0]>>endobj6170 0 obj<</Rect[50.0 249.831 151.472 264.831]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÕoÂtv-=»ïÚ Õ$Ø/IDX4)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_14.html#IDX4)/S/URI>>/Border[0 0 0]>>endobj6171 0 obj<</Rect[50.0 231.031 221.85 246.031]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÖøÔWØ”3ä∆é4/{ˆ6IDX79)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_68.html#IDX79)/S/URI>>/Border[0 0 0]>>endobj6172 0 obj<</Rect[50.0 212.231 339.254 227.231]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(`æß\)¯Á8;∏úÆI7~IDX114)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#IDX114)/S/URI>>/Border[0 0 0]>>endobj6173 0 obj<</Rect[50.0 193.431 112.216 208.431]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(`æß\)¯Á8;∏úÆI7~IDX116)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#IDX116)/S/URI>>/Border[0 0 0]>>endobj6174 0 obj<</Rect[50.0 174.631 132.838 189.631]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(`æß\)¯Á8;∏úÆI7~IDX117)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#IDX117)/S/URI>>/Border[0 0 0]>>endobj6175 0 obj<</Rect[50.0 94.5692 139.054 109.569]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(9Qr;|…Û‘”…ﬂö‡\\\\⁄IDX60)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_57.html#IDX60)/S/URI>>/Border[0 0 0]>>endobj6176 0 obj<</Rect[50.0 75.7692 167.054 90.7692]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(9Qr;|…Û‘”…ﬂö‡\\\\⁄IDX59)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_57.html#IDX59)/S/URI>>/Border[0 0 0]>>endobj6177 0 obj<</Rect[50.0 56.9692 156.946 71.9692]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D('	Kπg™zRF†gn¨±ñIDX83)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_70.html#IDX83)/S/URI>>/Border[0 0 0]>>endobj6178 0 obj<</Rect[50.0 38.1692 231.188 53.1692]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(§}}©”®ê˘ü¡IDX61)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_58.html#IDX61)/S/URI>>/Border[0 0 0]>>endobj6179 0 obj<</Annots 6182 0 R/Parent 6237 0 R/ID 6328 0 R/StructParents 402/Contents 6320 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 737 0 R/T1_2 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj6180 0 obj[6150 0 R]endobj6181 0 obj<</Rect[50.0 749.369 94.324 764.369]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∂˘‚6∑\)iÒüx˜dd;ˇIDX11)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_19.html#IDX11)/S/URI>>/Border[0 0 0]>>endobj6182 0 obj[6181 0 R 6183 0 R 6184 0 R 6185 0 R 6186 0 R 6187 0 R 6188 0 R 6189 0 R 6190 0 R 6191 0 R 6192 0 R 6193 0 R 6194 0 R 6195 0 R 6196 0 R 6197 0 R 6198 0 R 6199 0 R 6200 0 R 6201 0 R 6202 0 R 6203 0 R 6204 0 R 6205 0 R 6206 0 R]endobj6183 0 obj<</Rect[50.0 730.569 127.0 745.569]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®≈u£ˆ˘Ln€u‹ÙœIDX138)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html#IDX138)/S/URI>>/Border[0 0 0]>>endobj6184 0 obj<</Rect[50.0 650.508 241.646 665.508]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(aÇÛXíS&É∆‡˙¬≠OB€IDX107)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_105.html#IDX107)/S/URI>>/Border[0 0 0]>>endobj6185 0 obj<</Rect[50.0 631.708 146.012 646.708]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(õªÖ\(ùO¯»'≈´ÍIDX29)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_36.html#IDX29)/S/URI>>/Border[0 0 0]>>endobj6186 0 obj<</Rect[50.0 612.908 242.43 627.908]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(aÇÛXíS&É∆‡˙¬≠OB€IDX108)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_105.html#IDX108)/S/URI>>/Border[0 0 0]>>endobj6187 0 obj<</Rect[50.0 594.108 146.796 609.108]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(õªÖ\(ùO¯»'≈´ÍIDX30)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_36.html#IDX30)/S/URI>>/Border[0 0 0]>>endobj6188 0 obj<</Rect[50.0 575.308 120.0 590.308]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®l<¯wÊ±d≥i∞9©™µIDX66)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_61.html#IDX66)/S/URI>>/Border[0 0 0]>>endobj6189 0 obj<</Rect[50.0 556.508 99.77 571.508]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(=>Æ'´0"±B∫_˛òIDX119)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_109.html#IDX119)/S/URI>>/Border[0 0 0]>>endobj6190 0 obj<</Rect[50.0 537.708 182.202 552.708]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(=>Æ'´0"±B∫_˛òIDX120)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_109.html#IDX120)/S/URI>>/Border[0 0 0]>>endobj6191 0 obj<</Rect[50.0 518.908 147.594 533.908]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÔwÑyÃ˚|¯ä2vø|ÃIDX8)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_18.html#IDX8)/S/URI>>/Border[0 0 0]>>endobj6192 0 obj<</Rect[50.0 500.108 95.108 515.108]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ì\\\\âÂ%$ñq˘‘”èaIDX40)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html#IDX40)/S/URI>>/Border[0 0 0]>>endobj6193 0 obj<</Rect[50.0 481.308 140.216 496.308]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®≈u£ˆ˘Ln€u‹ÙœIDX139)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html#IDX139)/S/URI>>/Border[0 0 0]>>endobj6194 0 obj<</Rect[50.0 462.508 97.432 477.508]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Pc]•`\rS≠uíJVUIDX122)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_110.html#IDX122)/S/URI>>/Border[0 0 0]>>endobj6195 0 obj<</Rect[50.0 382.446 107.148 397.446]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ì\\\\âÂ%$ñq˘‘”èaIDX42)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html#IDX42)/S/URI>>/Border[0 0 0]>>endobj6196 0 obj<</Rect[50.0 363.646 160.46 378.646]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®≈u£ˆ˘Ln€u‹ÙœIDX135)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html#IDX135)/S/URI>>/Border[0 0 0]>>endobj6197 0 obj<</Rect[50.0 344.846 145.27 359.846]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(:’Z\\pˆdê‚Òi_\r6IDX72)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_64.html#IDX72)/S/URI>>/Border[0 0 0]>>endobj6198 0 obj<</Rect[50.0 264.785 129.73 279.785]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‹}ˇp`‚A‰ZÙ˘ÎÿûIDX24)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_35.html#IDX24)/S/URI>>/Border[0 0 0]>>endobj6199 0 obj<</Rect[50.0 245.985 343.118 260.985]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(íÅ¥çÕ◊&¥ãÚâLº‰IDX49)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_49.html#IDX49)/S/URI>>/Border[0 0 0]>>endobj6200 0 obj<</Rect[50.0 227.185 155.364 242.185]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(íÅ¥çÕ◊&¥ãÚâLº‰IDX48)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_49.html#IDX48)/S/URI>>/Border[0 0 0]>>endobj6201 0 obj<</Rect[50.0 208.385 212.918 223.385]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D([Dd˙7¸…A∂Û-rudIDX51)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_50.html#IDX51)/S/URI>>/Border[0 0 0]>>endobj6202 0 obj<</Rect[50.0 189.585 231.58 204.585]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®≈u£ˆ˘Ln€u‹ÙœIDX131)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html#IDX131)/S/URI>>/Border[0 0 0]>>endobj6203 0 obj<</Rect[50.0 170.785 136.716 185.785]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(»ZGc0NÀá⁄YøIDX94)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_85.html#IDX94)/S/URI>>/Border[0 0 0]>>endobj6204 0 obj<</Rect[50.0 90.7231 103.27 105.723]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®l<¯wÊ±d≥i∞9©™µIDX65)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_61.html#IDX65)/S/URI>>/Border[0 0 0]>>endobj6205 0 obj<</Rect[50.0 71.9231 264.186 86.9231]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(`æß\)¯Á8;∏úÆI7~IDX112)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#IDX112)/S/URI>>/Border[0 0 0]>>endobj6206 0 obj<</Rect[50.0 53.1231 146.796 68.1231]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÕoÂtv-=»ïÚ Õ$Ø/IDX3)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_14.html#IDX3)/S/URI>>/Border[0 0 0]>>endobj6207 0 obj<</Annots 6210 0 R/Parent 6237 0 R/ID 6328 0 R/StructParents 403/Contents 6321 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 736 0 R/T1_2 737 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj6208 0 obj[6150 0 R]endobj6209 0 obj<</Rect[50.0 703.062 153.026 718.062]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(-Lí∞[“Fn:…]f8@wIDX22)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_33.html#IDX22)/S/URI>>/Border[0 0 0]>>endobj6210 0 obj[6209 0 R 6211 0 R 6212 0 R 6213 0 R 6214 0 R 6215 0 R 6216 0 R 6217 0 R 6218 0 R 6219 0 R 6220 0 R 6221 0 R 6222 0 R 6223 0 R 6224 0 R 6225 0 R 6226 0 R 6227 0 R 6228 0 R 6229 0 R 6230 0 R 6231 0 R 6232 0 R 6233 0 R 6234 0 R 6235 0 R]endobj6211 0 obj<</Rect[50.0 623.0 179.444 638.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ˇÏ,•©Ãè˘ÿh≠˛b§÷IDX68)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_62.html#IDX68)/S/URI>>/Border[0 0 0]>>endobj6212 0 obj<</Rect[50.0 542.938 101.324 557.938]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(U*⁄|˙˝Ò∏ê‚ù‹˚“HÄIDX105)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_104.html#IDX105)/S/URI>>/Border[0 0 0]>>endobj6213 0 obj<</Rect[50.0 524.138 180.256 539.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D('	Kπg™zRF†gn¨±ñIDX81)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_70.html#IDX81)/S/URI>>/Border[0 0 0]>>endobj6214 0 obj<</Rect[50.0 505.338 127.378 520.338]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÔwÑyÃ˚|¯ä2vø|ÃIDX9)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_18.html#IDX9)/S/URI>>/Border[0 0 0]>>endobj6215 0 obj<</Rect[50.0 486.538 148.378 501.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(/@é∆É^x‚ÒW5V|IDX18)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_31.html#IDX18)/S/URI>>/Border[0 0 0]>>endobj6216 0 obj<</Rect[50.0 467.738 189.23 482.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(/@é∆É^x‚ÒW5V|IDX19)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_31.html#IDX19)/S/URI>>/Border[0 0 0]>>endobj6217 0 obj<</Rect[50.0 448.938 121.946 463.938]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(òZè+áI⁄øWº÷i‰osëIDX100)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_93.html#IDX100)/S/URI>>/Border[0 0 0]>>endobj6218 0 obj<</Rect[50.0 430.138 141.378 445.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(-Lí∞[“Fn:…]f8@wIDX23)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_33.html#IDX23)/S/URI>>/Border[0 0 0]>>endobj6219 0 obj<</Rect[50.0 411.338 102.892 426.338]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(&ià,‹Ωªæ≠PÚ0àFûIDX15)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_24.html#IDX15)/S/URI>>/Border[0 0 0]>>endobj6220 0 obj<</Rect[50.0 392.538 216.824 407.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‡ıï5Å\nz?,ê¡hgIDX90)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_84.html#IDX90)/S/URI>>/Border[0 0 0]>>endobj6221 0 obj<</Rect[50.0 373.738 238.58 388.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‡ıï5Å\nz?,ê¡hgIDX91)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_84.html#IDX91)/S/URI>>/Border[0 0 0]>>endobj6222 0 obj<</Rect[50.0 354.938 263.08 369.938]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(É2≤À∫m¶	◊v|˘çIDX87)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_80.html#IDX87)/S/URI>>/Border[0 0 0]>>endobj6223 0 obj<</Rect[50.0 336.138 163.932 351.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‡ıï5Å\nz?,ê¡hgIDX92)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_84.html#IDX92)/S/URI>>/Border[0 0 0]>>endobj6224 0 obj<</Rect[50.0 256.077 173.634 271.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(¯º•”ó‘°∏WM&⁄ÈZIDX71)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_63.html#IDX71)/S/URI>>/Border[0 0 0]>>endobj6225 0 obj<</Rect[50.0 237.277 252.552 252.277]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ì\\\\âÂ%$ñq˘‘”èaIDX39)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html#IDX39)/S/URI>>/Border[0 0 0]>>endobj6226 0 obj<</Rect[50.0 218.477 326.836 233.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(?TÉW\n¨ÿUΩÆ%|DUIDX34)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_41.html#IDX34)/S/URI>>/Border[0 0 0]>>endobj6227 0 obj<</Rect[50.0 199.677 64.0 214.677]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(õß•ãæ‡rãÙ=¿c¨opBIDX57)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_54.html#IDX57)/S/URI>>/Border[0 0 0]>>endobj6228 0 obj<</Rect[50.0 180.877 153.418 195.877]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(_∞é±≈'HÕúÑÄÊûpIDX62)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_59.html#IDX62)/S/URI>>/Border[0 0 0]>>endobj6229 0 obj<</Rect[50.0 162.077 163.512 177.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(a©¶%ùa§Zc—∫ß˜òIDX74)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_66.html#IDX74)/S/URI>>/Border[0 0 0]>>endobj6230 0 obj<</Rect[50.0 143.277 135.932 158.277]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÖÏÿß\r\\ÛïVc˜íû∑rIDX127)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_115.html#IDX127)/S/URI>>/Border[0 0 0]>>endobj6231 0 obj<</Rect[50.0 124.477 122.702 139.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ù0Ì\(kÛ∫ØaX	◊ÔIDX56)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_53.html#IDX56)/S/URI>>/Border[0 0 0]>>endobj6232 0 obj<</Rect[50.0 105.677 163.918 120.677]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‹…a-©¬˝°‹ÀúIúúIDX58)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_56.html#IDX58)/S/URI>>/Border[0 0 0]>>endobj6233 0 obj<</Rect[50.0 86.8769 155.756 101.877]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(õªÖ\(ùO¯»'≈´ÍIDX31)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_36.html#IDX31)/S/URI>>/Border[0 0 0]>>endobj6234 0 obj<</Rect[50.0 68.0769 312.458 83.0769]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(:ºã˚hÖIN’r\rMc6IDX35)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_42.html#IDX35)/S/URI>>/Border[0 0 0]>>endobj6235 0 obj<</Rect[50.0 49.2769 139.838 64.2769]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(`æß\)¯Á8;∏úÆI7~IDX115)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#IDX115)/S/URI>>/Border[0 0 0]>>endobj6236 0 obj<</Annots 6240 0 R/Parent 6237 0 R/ID 6328 0 R/StructParents 404/Contents 6322 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 737 0 R/T1_2 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj6237 0 obj<</Parent 6083 0 R/Count 8/Type/Pages/Kids[6078 0 R 6082 0 R 6151 0 R 6179 0 R 6207 0 R 6236 0 R 6265 0 R 6297 0 R]>>endobj6238 0 obj[6150 0 R]endobj6239 0 obj<</Rect[50.0 749.6 154.986 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(aÇÛXíS&É∆‡˙¬≠OB€IDX106)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_105.html#IDX106)/S/URI>>/Border[0 0 0]>>endobj6240 0 obj[6239 0 R 6241 0 R 6242 0 R 6243 0 R 6244 0 R 6245 0 R 6246 0 R 6247 0 R 6248 0 R 6249 0 R 6250 0 R 6251 0 R 6252 0 R 6253 0 R 6254 0 R 6255 0 R 6256 0 R 6257 0 R 6258 0 R 6259 0 R 6260 0 R 6261 0 R 6262 0 R 6263 0 R 6264 0 R]endobj6241 0 obj<</Rect[50.0 730.8 87.324 745.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(aÇÛXíS&É∆‡˙¬≠OB€IDX109)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_105.html#IDX109)/S/URI>>/Border[0 0 0]>>endobj6242 0 obj<</Rect[50.0 712.0 89.676 727.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(aÇÛXíS&É∆‡˙¬≠OB€IDX110)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_105.html#IDX110)/S/URI>>/Border[0 0 0]>>endobj6243 0 obj<</Rect[50.0 693.2 124.676 708.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ì\\\\âÂ%$ñq˘‘”èaIDX41)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html#IDX41)/S/URI>>/Border[0 0 0]>>endobj6244 0 obj<</Rect[50.0 674.4 122.352 689.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(˝M	„≠rÏ“¢™ÂÃeÆÚIDX32)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_38.html#IDX32)/S/URI>>/Border[0 0 0]>>endobj6245 0 obj<</Rect[50.0 655.6 88.108 670.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(?úØG’\\0À÷™ù$á ø˙IDX54)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_51.html#IDX54)/S/URI>>/Border[0 0 0]>>endobj6246 0 obj<</Rect[50.0 636.8 121.148 651.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(—âø0Ê‘sﬁ”cQÂ!&IDX73)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_65.html#IDX73)/S/URI>>/Border[0 0 0]>>endobj6247 0 obj<</Rect[50.0 618.0 142.134 633.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(a©¶%ùa§Zc—∫ß˜òIDX75)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_66.html#IDX75)/S/URI>>/Border[0 0 0]>>endobj6248 0 obj<</Rect[50.0 599.2 131.256 614.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ù0Ì\(kÛ∫ØaX	◊ÔIDX55)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_53.html#IDX55)/S/URI>>/Border[0 0 0]>>endobj6249 0 obj<</Rect[50.0 519.138 84.986 534.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÅˆÜ'`{FAÜÕ©$DóIDX86)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_74.html#IDX86)/S/URI>>/Border[0 0 0]>>endobj6250 0 obj<</Rect[50.0 500.338 241.66 515.338]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(`æß\)¯Á8;∏úÆI7~IDX111)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#IDX111)/S/URI>>/Border[0 0 0]>>endobj6251 0 obj<</Rect[50.0 481.538 326.052 496.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®≈u£ˆ˘Ln€u‹ÙœIDX132)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html#IDX132)/S/URI>>/Border[0 0 0]>>endobj6252 0 obj<</Rect[50.0 462.738 341.214 477.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ˆ≥ÉXÔä9Cd^Æb#õaÿIDX38)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_45.html#IDX38)/S/URI>>/Border[0 0 0]>>endobj6253 0 obj<</Rect[50.0 443.938 376.592 458.938]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(`æß\)¯Á8;∏úÆI7~IDX113)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_106.html#IDX113)/S/URI>>/Border[0 0 0]>>endobj6254 0 obj<</Rect[50.0 363.877 114.946 378.877]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‹}ˇp`‚A‰ZÙ˘ÎÿûIDX25)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_35.html#IDX25)/S/URI>>/Border[0 0 0]>>endobj6255 0 obj<</Rect[50.0 283.815 130.5 298.815]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ºj\rﬁl¨V£¥T-%«IDX96)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_92.html#IDX96)/S/URI>>/Border[0 0 0]>>endobj6256 0 obj<</Rect[50.0 265.015 167.026 280.015]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Àz@ó"Mü‚~ÿ©aCIDX20)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_32.html#IDX20)/S/URI>>/Border[0 0 0]>>endobj6257 0 obj<</Rect[50.0 246.215 187.606 261.215]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∏âó¬◊Çç¡^odÛ5ŸoEIDX6)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_15.html#IDX6)/S/URI>>/Border[0 0 0]>>endobj6258 0 obj<</Rect[50.0 166.154 234.282 181.154]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(õªÖ\(ùO¯»'≈´ÍIDX28)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_36.html#IDX28)/S/URI>>/Border[0 0 0]>>endobj6259 0 obj<</Rect[50.0 147.354 125.418 162.354]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(—I∆ÀèßEπMòÒ~n?•IDX101)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_95.html#IDX101)/S/URI>>/Border[0 0 0]>>endobj6260 0 obj<</Rect[50.0 128.554 115.31 143.554]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(&ià,‹Ωªæ≠PÚ0àFûIDX14)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_24.html#IDX14)/S/URI>>/Border[0 0 0]>>endobj6261 0 obj<</Rect[50.0 109.754 205.89 124.754]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÖÏÿß\r\\ÛïVc˜íû∑rIDX130)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_115.html#IDX130)/S/URI>>/Border[0 0 0]>>endobj6262 0 obj<</Rect[50.0 90.9538 95.108 105.954]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÚQô\n!aêÅ?ña,÷ﬁIDX17)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_29.html#IDX17)/S/URI>>/Border[0 0 0]>>endobj6263 0 obj<</Rect[50.0 72.1538 106.756 87.1538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∆ã¸ó©0»¶M†ó$`OIDX46)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_47.html#IDX46)/S/URI>>/Border[0 0 0]>>endobj6264 0 obj<</Rect[50.0 53.3539 105.972 68.3539]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ÿ1´‘?jµ3ÓF'‹˘èÆ¯IDX63)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_60.html#IDX63)/S/URI>>/Border[0 0 0]>>endobj6265 0 obj<</Annots 6268 0 R/Parent 6237 0 R/ID 6328 0 R/StructParents 405/Contents 6323 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 737 0 R/T1_2 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj6266 0 obj[6150 0 R]endobj6267 0 obj<</Rect[50.0 749.6 178.702 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(=>Æ'´0"±B∫_˛òIDX121)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_109.html#IDX121)/S/URI>>/Border[0 0 0]>>endobj6268 0 obj[6267 0 R 6269 0 R 6270 0 R 6271 0 R 6272 0 R 6273 0 R 6274 0 R 6275 0 R 6276 0 R 6277 0 R 6278 0 R 6279 0 R 6280 0 R 6281 0 R 6282 0 R 6283 0 R 6284 0 R 6285 0 R 6286 0 R 6287 0 R 6288 0 R 6289 0 R 6290 0 R 6291 0 R 6292 0 R 6293 0 R 6294 0 R 6295 0 R 6296 0 R]endobj6269 0 obj<</Rect[50.0 730.8 186.458 745.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(L\\0µXï—w&|dﬁÍ¨aIDX118)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_108.html#IDX118)/S/URI>>/Border[0 0 0]>>endobj6270 0 obj<</Rect[50.0 712.0 177.526 727.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(¯º•”ó‘°∏WM&⁄ÈZIDX69)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_63.html#IDX69)/S/URI>>/Border[0 0 0]>>endobj6271 0 obj<</Rect[50.0 693.2 166.242 708.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®l<¯wÊ±d≥i∞9©™µIDX64)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_61.html#IDX64)/S/URI>>/Border[0 0 0]>>endobj6272 0 obj<</Rect[50.0 674.4 182.944 689.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ˇÏ,•©Ãè˘ÿh≠˛b§÷IDX67)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_62.html#IDX67)/S/URI>>/Border[0 0 0]>>endobj6273 0 obj<</Rect[50.0 655.6 145.634 670.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(a©¶%ùa§Zc—∫ß˜òIDX76)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_66.html#IDX76)/S/URI>>/Border[0 0 0]>>endobj6274 0 obj<</Rect[50.0 636.8 107.162 651.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(òZè+áI⁄øWº÷i‰osëIDX99)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_93.html#IDX99)/S/URI>>/Border[0 0 0]>>endobj6275 0 obj<</Rect[50.0 556.738 141.392 571.738]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(»ZGc0NÀá⁄YøIDX95)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_85.html#IDX95)/S/URI>>/Border[0 0 0]>>endobj6276 0 obj<</Rect[50.0 537.938 158.108 552.938]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(?úØG’\\0À÷™ù$á ø˙IDX53)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_51.html#IDX53)/S/URI>>/Border[0 0 0]>>endobj6277 0 obj<</Rect[50.0 519.138 118.852 534.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(˝M	„≠rÏ“¢™ÂÃeÆÚIDX33)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_38.html#IDX33)/S/URI>>/Border[0 0 0]>>endobj6278 0 obj<</Rect[50.0 439.077 219.918 454.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÖÏÿß\r\\ÛïVc˜íû∑rIDX125)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_115.html#IDX125)/S/URI>>/Border[0 0 0]>>endobj6279 0 obj<</Rect[50.0 420.277 161.58 435.277]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(E<z¯\\dÍHH6Nöà0IDX123)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_114.html#IDX123)/S/URI>>/Border[0 0 0]>>endobj6280 0 obj<</Rect[50.0 401.477 302.7 416.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÖÏÿß\r\\ÛïVc˜íû∑rIDX129)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_115.html#IDX129)/S/URI>>/Border[0 0 0]>>endobj6281 0 obj<</Rect[50.0 382.677 84.972 397.677]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÖÏÿß\r\\ÛïVc˜íû∑rIDX124)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_115.html#IDX124)/S/URI>>/Border[0 0 0]>>endobj6282 0 obj<</Rect[50.0 363.877 193.08 378.877]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(´Îï9∞Ò‰˘^ìÃÆ±trIDX89)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_82.html#IDX89)/S/URI>>/Border[0 0 0]>>endobj6283 0 obj<</Rect[50.0 345.077 195.81 360.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®≈u£ˆ˘Ln€u‹ÙœIDX134)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html#IDX134)/S/URI>>/Border[0 0 0]>>endobj6284 0 obj<</Rect[50.0 326.277 227.674 341.277]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®≈u£ˆ˘Ln€u‹ÙœIDX136)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html#IDX136)/S/URI>>/Border[0 0 0]>>endobj6285 0 obj<</Rect[50.0 307.477 96.284 322.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÖøÔWØ”3ä∆é4/{ˆ6IDX78)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_68.html#IDX78)/S/URI>>/Border[0 0 0]>>endobj6286 0 obj<</Rect[50.0 288.677 207.486 303.677]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(fo\\\\Öq0v%O›/!Í¿VÀIDX88)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_81.html#IDX88)/S/URI>>/Border[0 0 0]>>endobj6287 0 obj<</Rect[50.0 269.877 122.702 284.877]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÔwÑyÃ˚|¯ä2vø|ÃIDX10)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_18.html#IDX10)/S/URI>>/Border[0 0 0]>>endobj6288 0 obj<</Rect[50.0 251.077 257.97 266.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ì\\\\âÂ%$ñq˘‘”èaIDX45)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html#IDX45)/S/URI>>/Border[0 0 0]>>endobj6289 0 obj<</Rect[50.0 232.277 335.754 247.277]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(»!ÖÙú◊yÕ*|˙#|ÏΩ±IDX37)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_44.html#IDX37)/S/URI>>/Border[0 0 0]>>endobj6290 0 obj<</Rect[50.0 152.215 208.62 167.215]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(=€∑‰[Œ‰yMèÃaMsIDX102)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_101.html#IDX102)/S/URI>>/Border[0 0 0]>>endobj6291 0 obj<</Rect[50.0 133.415 168.972 148.415]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÖÏÿß\r\\ÛïVc˜íû∑rIDX126)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_115.html#IDX126)/S/URI>>/Border[0 0 0]>>endobj6292 0 obj<</Rect[50.0 114.615 198.526 129.615]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÖÏÿß\r\\ÛïVc˜íû∑rIDX128)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_115.html#IDX128)/S/URI>>/Border[0 0 0]>>endobj6293 0 obj<</Rect[50.0 95.8154 133.202 110.815]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(?úØG’\\0À÷™ù$á ø˙IDX52)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_51.html#IDX52)/S/URI>>/Border[0 0 0]>>endobj6294 0 obj<</Rect[50.0 77.0154 304.296 92.0154]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®≈u£ˆ˘Ln€u‹ÙœIDX133)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html#IDX133)/S/URI>>/Border[0 0 0]>>endobj6295 0 obj<</Rect[50.0 58.2154 124.27 73.2154]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Ì\\\\âÂ%$ñq˘‘”èaIDX43)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_46.html#IDX43)/S/URI>>/Border[0 0 0]>>endobj6296 0 obj<</Rect[50.0 39.4154 113.364 54.4154]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∏ﬂ·&T/gs˜Ôoƒ b’IDX1)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_13.html#IDX1)/S/URI>>/Border[0 0 0]>>endobj6297 0 obj<</Annots 6300 0 R/Parent 6237 0 R/ID 6328 0 R/StructParents 406/Contents 6324 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 735 0 R/T1_1 737 0 R/T1_2 736 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj6298 0 obj[6150 0 R]endobj6299 0 obj<</Rect[50.0 749.6 242.248 764.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ºj\rﬁl¨V£¥T-%«IDX98)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_92.html#IDX98)/S/URI>>/Border[0 0 0]>>endobj6300 0 obj[6299 0 R 6301 0 R 6302 0 R 6303 0 R 6304 0 R 6305 0 R 6306 0 R 6307 0 R 6308 0 R 6309 0 R 6310 0 R 6311 0 R 6312 0 R 6313 0 R 6314 0 R 6315 0 R 6316 0 R 6317 0 R 6318 0 R]endobj6301 0 obj<</Rect[50.0 730.8 95.878 745.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(®≈u£ˆ˘Ln€u‹ÙœIDX137)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_116.html#IDX137)/S/URI>>/Border[0 0 0]>>endobj6302 0 obj<</Rect[50.0 712.0 125.04 727.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∑µîÄr˝2">ÓØ˙0\\\\IDX7)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_17.html#IDX7)/S/URI>>/Border[0 0 0]>>endobj6303 0 obj<</Rect[50.0 693.2 145.648 708.2]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(\\—’ ¨$Úó7J´CR¥IDX103)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_102.html#IDX103)/S/URI>>/Border[0 0 0]>>endobj6304 0 obj<</Rect[50.0 674.4 173.242 689.4]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ºj\rﬁl¨V£¥T-%«IDX97)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_92.html#IDX97)/S/URI>>/Border[0 0 0]>>endobj6305 0 obj<</Rect[50.0 655.6 154.986 670.6]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(◊á¥◊ÕŸµK∫”gÈäáÄIDX104)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_103.html#IDX104)/S/URI>>/Border[0 0 0]>>endobj6306 0 obj<</Rect[50.0 636.8 133.594 651.8]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Åıí«’ç*LvY€ ∆7øIDX13)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_21.html#IDX13)/S/URI>>/Border[0 0 0]>>endobj6307 0 obj<</Rect[50.0 618.0 125.054 633.0]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(‡ıï5Å\nz?,ê¡hgIDX93)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_84.html#IDX93)/S/URI>>/Border[0 0 0]>>endobj6308 0 obj<</Rect[50.0 537.938 91.608 552.938]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(˛&‚!—IPÍ\\0[[‚Xè”IDX85)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_73.html#IDX85)/S/URI>>/Border[0 0 0]>>endobj6309 0 obj<</Rect[50.0 519.138 123.486 534.138]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(˛&‚!—IPÍ\\0[[‚Xè”IDX84)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_73.html#IDX84)/S/URI>>/Border[0 0 0]>>endobj6310 0 obj<</Rect[50.0 500.338 76.446 515.338]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(∂˘‚6∑\)iÒüx˜dd;ˇIDX12)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_19.html#IDX12)/S/URI>>/Border[0 0 0]>>endobj6311 0 obj<</Rect[50.0 481.538 134.364 496.538]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(`•cöulå∞7˛8DCW‚IDX47)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_48.html#IDX47)/S/URI>>/Border[0 0 0]>>endobj6312 0 obj<</Rect[50.0 401.477 109.486 416.477]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(Àz@ó"Mü‚~ÿ©aCIDX21)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_32.html#IDX21)/S/URI>>/Border[0 0 0]>>endobj6313 0 obj<</Rect[50.0 382.677 85.77 397.677]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÚQô\n!aêÅ?ña,÷ﬁIDX16)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_29.html#IDX16)/S/URI>>/Border[0 0 0]>>endobj6314 0 obj<</Rect[50.0 363.877 124.256 378.877]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D(ÖøÔWØ”3ä∆é4/{ˆ6IDX77)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_68.html#IDX77)/S/URI>>/Border[0 0 0]>>endobj6315 0 obj<</Rect[50.0 345.077 171.716 360.077]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D('	Kπg™zRF†gn¨±ñIDX82)/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_70.html#IDX82)/S/URI>>/Border[0 0 0]>>endobj6316 0 obj<</Rect[65.608 291.277 88.162 306.277]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.federated.com/~jim/schintro-v14/schintro_1.html)/S/URI>>/Border[0 0 0]>>endobj6317 0 obj<</Rect[95.162 291.277 143.378 306.277]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[5845 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_142.html)/S/URI>>/Border[0 0 0]>>endobj6318 0 obj<</Rect[251.094 291.277 343.634 306.277]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</D[11 0 R/XYZ 0 792 null]/S/GoTo>>/PA<</URI(http://www.federated.com/~jim/schintro-v14/schintro_toc.html)/S/URI>>/Border[0 0 0]>>endobj6319 0 obj<</Length 4975>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Concept Index)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_0 1 Tf
14 0 0 14 10 753.9756 Tm
(Go to the )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
65.608 751.859 m
88.162 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 753.9756 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 751.859 m
143.378 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 753.9756 Tm
(previous)Tj
0 0 0 rg
(, next, last section, )Tj
ET
251.094 751.859 m
343.634 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 753.9756 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
0.5 0.5 0.5 rg
10 738.2 m
10 740.2 l
602 740.2 l
601 739.2 l
11 739.2 l
11 739.2 l
h
f
0.875 0.875 0.875 rg
602 740.2 m
602 738.2 l
10 738.2 l
11 739.2 l
601 739.2 l
601 739.2 l
h
f
2.081 w 
10 684.255 m
180.66 684.255 l
S
0 0 1 rg
BT
/T1_1 1 Tf
24.7692 0 0 24.7692 10 690.4968 Tm
(Concept Index)Tj
0 0 0 rg
19.3846 0 0 19.3846 10 644.4918 Tm
(')Tj
/T1_2 1 Tf
7 0 0 7 35.713 607.1909 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0.706 w 
50 605.074 m
61.844 605.074 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 607.1909 Tm
('\(\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
19.3846 0 0 19.3846 10 564.4303 Tm
(\()Tj
/T1_2 1 Tf
7 0 0 7 35.713 527.1294 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 525.013 m
59.324 525.013 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 527.1294 Tm
(\(\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
19.3846 0 0 19.3846 10 484.3687 Tm
(=)Tj
/T1_2 1 Tf
7 0 0 7 35.713 447.0679 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 444.951 m
225.448 444.951 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 447.0679 Tm
(= \(standard Scheme procedure\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
19.3846 0 0 19.3846 10 404.3072 Tm
(a)Tj
/T1_2 1 Tf
7 0 0 7 35.713 367.0063 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 364.89 m
142.904 364.89 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 367.0063 Tm
(actual parameter)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 348.2063 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 346.09 m
174.026 346.09 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 348.2063 Tm
(anonymous procedure)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 329.4063 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 327.29 m
257.984 327.29 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 329.4063 Tm
(append \(standard Scheme procedure\))Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 310.6063 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 308.49 m
335.768 308.49 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 310.6063 Tm
(append \(std. Scheme procedure\), brief introduction)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 291.8063 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 289.69 m
248.66 289.69 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 291.8063 Tm
(apply \(standard Scheme procedure\))Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 273.0063 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 270.89 m
102.878 270.89 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 273.0063 Tm
(argument)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 254.2063 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 252.09 m
151.472 252.09 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 254.2063 Tm
(argument variable)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 235.4063 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 233.29 m
221.85 233.29 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 235.4063 Tm
(arguments, variable number of)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 216.6063 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 214.49 m
339.254 214.49 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 216.6063 Tm
(assoc, assq, and assv \(standard Scheme procedures\))Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 197.8063 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 195.69 m
112.216 195.69 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 197.8063 Tm
(association)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 179.0063 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 176.89 m
132.838 176.89 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 179.0063 Tm
(association list)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
19.3846 0 0 19.3846 10 136.2457 Tm
(b)Tj
/T1_2 1 Tf
7 0 0 7 35.713 98.9448 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 96.828 m
139.054 96.828 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 98.9448 Tm
(binding contour)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 80.1448 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 78.028 m
167.054 78.028 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 80.1448 Tm
(binding environment)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 61.3448 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 59.228 m
156.946 59.228 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 61.3448 Tm
(bindings vs. values)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 42.5448 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 40.428 m
231.188 40.428 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 42.5448 Tm
(block structure diagrams for lets)Tj
0 0 0 rg
( )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_143.html \(1 of 6\)1\1/3/2006 9:17:27 PM)Tj
ET
EMC 

endstreamendobj6320 0 obj<</Length 5436>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Concept Index)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
7 0 0 7 35.713 753.7448 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
50 751.628 m
94.324 751.628 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 753.7448 Tm
(boolean)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 734.9448 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 732.828 m
127 732.828 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 734.9448 Tm
(bootstrapping)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
19.3846 0 0 19.3846 10 692.1841 Tm
(c)Tj
/T1_1 1 Tf
7 0 0 7 35.713 654.8833 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 652.766 m
241.646 652.766 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 654.8833 Tm
(cadr \(standard Scheme procedure\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 636.0833 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 633.966 m
146.012 633.966 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 636.0833 Tm
(car \(field of pair\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 617.2832 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 615.166 m
242.43 615.166 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 617.2832 Tm
(cddr \(standard Scheme procedure\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 598.4832 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 596.366 m
146.796 596.366 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 598.4832 Tm
(cdr \(field of pair\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 579.6832 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 577.566 m
120 577.566 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 579.6832 Tm
(combination)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 560.8833 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 558.766 m
99.77 558.766 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 560.8833 Tm
(compose)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 542.0833 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 539.966 m
182.202 539.966 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 542.0833 Tm
(composition, procedure)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 523.2832 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 521.166 m
147.594 521.166 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 523.2832 Tm
(control structures)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 504.4832 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 502.366 m
95.108 502.366 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 504.4832 Tm
(copying)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 485.6832 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 483.566 m
140.216 483.566 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 485.6832 Tm
(cross-compiling)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 466.8833 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 464.766 m
97.432 464.766 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 466.8833 Tm
(currying)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
19.3846 0 0 19.3846 10 424.1226 Tm
(d)Tj
/T1_1 1 Tf
7 0 0 7 35.713 386.8217 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 384.705 m
107.148 384.705 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 386.8217 Tm
(deep copy)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 368.0217 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 365.905 m
160.46 365.905 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 368.0217 Tm
(disjoint union types)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 349.2217 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 347.105 m
145.27 347.105 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 349.2217 Tm
(dynamic scoping)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
19.3846 0 0 19.3846 10 306.461 Tm
(e)Tj
/T1_1 1 Tf
7 0 0 7 35.713 269.1602 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 267.043 m
129.73 267.043 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 269.1602 Tm
(empty list, the)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 250.3602 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 248.243 m
343.118 248.243 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 250.3602 Tm
(eq?, equal?, and eqv? \(standard Scheme procedures\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 231.5602 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 229.443 m
155.364 229.443 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 231.5602 Tm
(equality predicates)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 212.7602 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 210.643 m
212.918 210.643 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 212.7602 Tm
(equality predicates, choosing)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 193.9602 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 191.843 m
231.58 191.843 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 193.9602 Tm
(evaluation of nested expressions)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 175.1602 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 173.043 m
136.716 173.043 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 175.1602 Tm
(exiting Scheme)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
19.3846 0 0 19.3846 10 132.3995 Tm
(f)Tj
/T1_1 1 Tf
7 0 0 7 35.713 95.0986 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 92.982 m
103.27 92.982 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 95.0986 Tm
(first class)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 76.2986 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 74.182 m
264.186 74.182 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 76.2986 Tm
(for-each \(standard Scheme procedure\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 57.4986 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 55.382 m
146.796 55.382 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 57.4986 Tm
(formal parameter)Tj
0 0 0 rg
( )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_143.html \(2 of 6\)1\1/3/2006 9:17:27 PM)Tj
ET
EMC 

endstreamendobj6321 0 obj<</Length 5684>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Concept Index)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
19.3846 0 0 19.3846 10 744.738 Tm
(g)Tj
/T1_2 1 Tf
7 0 0 7 35.713 707.4371 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
50 705.32 m
153.026 705.32 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 707.4371 Tm
(garbage collection)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
19.3846 0 0 19.3846 10 664.6764 Tm
(h)Tj
/T1_2 1 Tf
7 0 0 7 35.713 627.3755 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 625.259 m
179.444 625.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 627.3755 Tm
(higher-order procedure)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
19.3846 0 0 19.3846 10 584.6149 Tm
(i)Tj
/T1_2 1 Tf
7 0 0 7 35.713 547.314 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 545.197 m
101.324 545.197 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 547.314 Tm
(identifier)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 528.514 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 526.397 m
180.256 526.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 528.514 Tm
(identifiers vs. variables)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 509.714 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 507.597 m
127.378 507.597 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 509.714 Tm
(if expressions)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 490.914 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 488.797 m
148.378 488.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 490.914 Tm
(immediate values)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 472.114 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 469.997 m
189.23 469.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 472.114 Tm
(immutability of numbers)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 453.314 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 451.197 m
121.946 451.197 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 453.314 Tm
(improper list)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 434.514 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 432.397 m
141.378 432.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 434.514 Tm
(indefinite extent)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 415.714 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 413.597 m
102.892 413.597 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 415.714 Tm
(indenting)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 396.914 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 394.797 m
216.824 394.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 396.914 Tm
(infinite loops, breaking out of)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 378.114 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 375.997 m
238.58 375.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 378.114 Tm
(infinite recursion, breaking out of)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 359.314 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 357.197 m
263.08 357.197 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 359.314 Tm
(interactive programming environment)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 340.514 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 338.397 m
163.932 338.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 340.514 Tm
(interrupting Scheme)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
19.3846 0 0 19.3846 10 297.7533 Tm
(l)Tj
/T1_2 1 Tf
7 0 0 7 35.713 260.4525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 258.336 m
173.634 258.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 260.4525 Tm
(lambda \(special form\))Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 241.6525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 239.536 m
252.552 239.536 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 241.6525 Tm
(length \(standard Scheme procedure\))Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 222.8525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 220.736 m
326.836 220.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 222.8525 Tm
(length \(std Scheme procedure\), brief introduction)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 204.0525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 201.936 m
64 201.936 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 204.0525 Tm
(let)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 185.2525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 183.136 m
153.418 183.136 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 185.2525 Tm
(let* \(special form\))Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 166.4525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 164.336 m
163.512 164.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 166.4525 Tm
(letrec \(special form\))Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 147.6525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 145.536 m
135.932 145.536 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 147.6525 Tm
(lexical analysis)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 128.8525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 126.736 m
122.702 126.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 128.8525 Tm
(lexical scope)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 110.0525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 107.936 m
163.918 107.936 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 110.0525 Tm
(lexical scope and let)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 91.2525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 89.136 m
155.756 89.136 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 91.2525 Tm
(list \(data structure\))Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 72.4525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 70.336 m
312.458 70.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 72.4525 Tm
(list \(std. Scheme procedure\), brief introduction)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
7 0 0 7 35.713 53.6525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 51.536 m
139.838 51.536 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 53.6525 Tm
(list membership)Tj
0 0 0 rg
( )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_143.html \(3 of 6\)1\1/3/2006 9:17:27 PM)Tj
ET
EMC 

endstreamendobj6322 0 obj<</Length 5441>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Concept Index)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
7 0 0 7 35.713 753.9756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
50 751.859 m
154.986 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 753.9756 Tm
(list, heterogeneous)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 735.1756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 733.059 m
87.324 733.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 735.1756 Tm
(list-ref)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 716.3755 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 714.259 m
89.676 714.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 716.3755 Tm
(list-tail)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 697.5756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 695.459 m
124.676 695.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 697.5756 Tm
(lists, copying)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 678.7756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 676.659 m
122.352 676.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 678.7756 Tm
(lists, quoting)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 659.9756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 657.859 m
88.108 657.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 659.9756 Tm
(literals)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 641.1756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 639.059 m
121.148 639.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 641.1756 Tm
(local defines)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 622.3755 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 620.259 m
142.134 620.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 622.3755 Tm
(local procedures)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 603.5756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 601.459 m
131.256 601.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 603.5756 Tm
(local variables)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
19.3846 0 0 19.3846 10 560.8149 Tm
(m)Tj
/T1_1 1 Tf
7 0 0 7 35.713 523.514 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 521.397 m
84.986 521.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 523.514 Tm
(macro)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 504.714 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 502.597 m
241.66 502.597 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 504.714 Tm
(map \(standard Scheme procedure\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 485.914 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 483.797 m
326.052 483.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 485.914 Tm
(math-eval \(simple example expression evaluator\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 467.114 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 464.997 m
341.214 464.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 467.114 Tm
(member \(std. Scheme procedure\), brief introduction)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 448.314 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 446.197 m
376.592 446.197 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 448.314 Tm
(member, memq, and memv \(standard Scheme procedures\))Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
19.3846 0 0 19.3846 10 405.5533 Tm
(n)Tj
/T1_1 1 Tf
7 0 0 7 35.713 368.2525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 366.136 m
114.946 366.136 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 368.2525 Tm
(null pointer)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
19.3846 0 0 19.3846 10 325.4918 Tm
(o)Tj
/T1_1 1 Tf
7 0 0 7 35.713 288.1909 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 286.074 m
130.5 286.074 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 288.1909 Tm
(object identity)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 269.3909 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 267.274 m
167.026 267.274 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 269.3909 Tm
(object representation)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 250.5909 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 248.474 m
187.606 248.474 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 250.5909 Tm
(operators are procedures)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
19.3846 0 0 19.3846 10 207.8303 Tm
(p)Tj
/T1_1 1 Tf
7 0 0 7 35.713 170.5294 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 168.413 m
234.282 168.413 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 170.5294 Tm
(pair \(standard Scheme data type\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 151.7294 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 149.613 m
125.418 149.613 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 151.7294 Tm
(pair-tree-sum)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 132.9294 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 130.813 m
115.31 130.813 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 132.9294 Tm
(parentheses)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 114.1294 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 112.013 m
205.89 112.013 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 114.1294 Tm
(parser, reader as simple one)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 95.3294 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 93.213 m
95.108 93.213 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 95.3294 Tm
(pointers)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 76.5294 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 74.413 m
106.756 74.413 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 76.5294 Tm
(predicates)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 57.7294 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 55.613 m
105.972 55.613 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 57.7294 Tm
(procedure)Tj
0 0 0 rg
( )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_143.html \(4 of 6\)1\1/3/2006 9:17:27 PM)Tj
ET
EMC 

endstreamendobj6323 0 obj<</Length 6243>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Concept Index)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
7 0 0 7 35.713 753.9756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
50 751.859 m
178.702 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 753.9756 Tm
(procedure composition)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 735.1756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 733.059 m
186.458 733.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 735.1756 Tm
(procedure specialization)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 716.3755 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 714.259 m
177.526 714.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 716.3755 Tm
(procedure, anonymous)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 697.5756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 695.459 m
166.242 695.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 697.5756 Tm
(procedure, first class)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 678.7756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 676.659 m
182.944 676.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 678.7756 Tm
(procedure, higher-order)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 659.9756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 657.859 m
145.634 657.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 659.9756 Tm
(procedures, local)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 641.1756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 639.059 m
107.162 639.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 641.1756 Tm
(proper list)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
19.3846 0 0 19.3846 10 598.4149 Tm
(q)Tj
/T1_1 1 Tf
7 0 0 7 35.713 561.114 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 558.997 m
141.392 558.997 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 561.114 Tm
(quitting Scheme)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 542.314 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 540.197 m
158.108 540.197 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 542.314 Tm
(quoting and literals)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 523.514 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 521.397 m
118.852 521.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 523.514 Tm
(quoting lists)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
19.3846 0 0 19.3846 10 480.7533 Tm
(r)Tj
/T1_1 1 Tf
7 0 0 7 35.713 443.4525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 441.336 m
219.918 441.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 443.4525 Tm
(read, example implementation)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 424.6525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 422.536 m
161.58 422.536 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 424.6525 Tm
(read-eval-print loop)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 405.8525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 403.736 m
302.7 403.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 405.8525 Tm
(read-token \(simple example lexical analyzer\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 387.0525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 384.936 m
84.972 384.936 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 387.0525 Tm
(reader)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 368.2525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 366.136 m
193.08 366.136 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 368.2525 Tm
(recovering from mistakes)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 349.4525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 347.336 m
195.81 347.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 349.4525 Tm
(recursion over nested lists)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 330.6525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 328.536 m
227.674 328.536 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 330.6525 Tm
(recursion over nested structures)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 311.8525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 309.736 m
96.284 309.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 311.8525 Tm
(rest lists)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 293.0525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 290.936 m
207.486 290.936 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 293.0525 Tm
(RETURN and ENTER keys)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 274.2525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 272.136 m
122.702 272.136 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 274.2525 Tm
(return values)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 255.4525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 253.336 m
257.97 253.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 255.4525 Tm
(reverse \(standard Scheme procedure\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 236.6525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 234.536 m
335.754 234.536 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 236.6525 Tm
(reverse \(std. Scheme procedure\), brief introduction)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
19.3846 0 0 19.3846 10 193.8918 Tm
(s)Tj
/T1_1 1 Tf
7 0 0 7 35.713 156.5909 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 154.474 m
208.62 154.474 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 156.5909 Tm
(s-expression \(data structure\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 137.7909 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 135.674 m
168.972 135.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 137.7909 Tm
(s-expression, defined)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 118.9909 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 116.874 m
198.526 116.874 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 118.9909 Tm
(scanning \(lexical analysis\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 100.1909 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 98.074 m
133.202 98.074 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 100.1909 Tm
(self-evaluation)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 81.3909 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 79.274 m
304.296 79.274 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 81.3909 Tm
(self-evaluation, implementation in interpreter)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 62.5909 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 60.474 m
124.27 60.474 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 62.5909 Tm
(shallow copy)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 43.7909 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 41.674 m
113.364 41.674 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 43.7909 Tm
(side effects)Tj
0 0 0 rg
( )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_143.html \(5 of 6\)1\1/3/2006 9:17:27 PM)Tj
ET
EMC 

endstreamendobj6324 0 obj<</Length 4244>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(An Introduction to Scheme and its Implementation - Concept Index)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
7 0 0 7 35.713 753.9756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
0 0 1 RG
0.706 w 10 M 0 j 0 J []0 d 
50 751.859 m
242.248 751.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 753.9756 Tm
(side effects, cons doesn't have any)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 735.1756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 733.059 m
95.878 733.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 735.1756 Tm
(snarfing)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 716.3755 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 714.259 m
125.04 714.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 716.3755 Tm
(special forms)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 697.5756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 695.459 m
145.648 695.459 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 697.5756 Tm
(string \(data type\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 678.7756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 676.659 m
173.242 676.659 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 678.7756 Tm
(structural equivalence)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 659.9756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 657.859 m
154.986 657.859 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 659.9756 Tm
(symbol \(data type\))Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 641.1756 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 639.059 m
133.594 639.059 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 641.1756 Tm
(syntactic sugar)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 622.3755 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 620.259 m
125.054 620.259 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 622.3755 Tm
(system hangs)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
19.3846 0 0 19.3846 10 579.6149 Tm
(t)Tj
/T1_1 1 Tf
7 0 0 7 35.713 542.314 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 540.197 m
91.608 540.197 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 542.314 Tm
(tail call)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 523.514 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 521.397 m
123.486 521.397 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 523.514 Tm
(tail recursion)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 504.714 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 502.597 m
76.446 502.597 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 504.714 Tm
(truth)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 485.914 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 483.797 m
134.364 483.797 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 485.914 Tm
(type predicates)Tj
0 0 0 rg
( )Tj
/T1_2 1 Tf
19.3846 0 0 19.3846 10 443.1534 Tm
(v)Tj
/T1_1 1 Tf
7 0 0 7 35.713 405.8525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 403.736 m
109.486 403.736 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 405.8525 Tm
(value cells)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 387.0525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 384.936 m
85.77 384.936 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 387.0525 Tm
(values)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 368.2525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 366.136 m
124.256 366.136 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 368.2525 Tm
(variable arity)Tj
0 0 0 rg
( )Tj
/T1_1 1 Tf
7 0 0 7 35.713 349.4525 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
ET
50 347.336 m
171.716 347.336 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 50 349.4525 Tm
(variables vs. bindings)Tj
0 0 0 rg
( )Tj
ET
0.5 0.5 0.5 rg
10 314.677 m
10 316.677 l
602 316.677 l
601 315.677 l
11 315.677 l
11 315.677 l
h
f
0.875 0.875 0.875 rg
602 316.677 m
602 314.677 l
10 314.677 l
11 315.677 l
601 315.677 l
601 315.677 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 10 295.6525 Tm
(Go to the )Tj
ET
65.608 293.536 m
88.162 293.536 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 65.608 295.6525 Tm
(first)Tj
0 0 0 rg
(, )Tj
ET
95.162 293.536 m
143.378 293.536 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 95.162 295.6525 Tm
(previous)Tj
0 0 0 rg
(, next, last section, )Tj
ET
251.094 293.536 m
343.634 293.536 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 251.094 295.6525 Tm
(table of contents)Tj
0 0 0 rg
(. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://www.federated.com/~jim/schintro-v14/schintro_143.html \(6 of 6\)1\1/3/2006 9:17:27 PM)Tj
ET
EMC 

endstreamendobj6325 0 obj(An Introduction to Scheme and its Implementation - Concept Index)endobj6326 0 obj<</URL(http://www.federated.com/~jim/schintro-v14/schintro_143.html)/S 700 0 R>>endobj6327 0 obj(http://www.federated.com/~jim/schintro-v14/schintro_143.html)endobj6328 0 obj(˙ `…ºÎzºL~Jù…ä∆)endobj6329 0 obj<</TS(D:20061104051727)/ID 6328 0 R/CT(text/html)/O[6151 0 R 6179 0 R 6207 0 R 6236 0 R 6265 0 R 6297 0 R]/S/SPS/T 6325 0 R/TID 6331 0 R/SI 6330 0 R>>endobj6330 0 obj<</TS(D:20061104051727)/AU 6327 0 R>>endobj6331 0 obj(Æˆ¥Ô@¯tôÜ|π¨mE)endobj6332 0 obj<</Parent 710 0 R/Dest[6151 0 R/XYZ 0 792 null]/Prev 6148 0 R/SE 6150 0 R/Title(An Introduction to Scheme and its Implementation - Concept Index)>>endobj6333 0 obj<</Subtype/XML/Length 3442/Type/Metadata>>stream
<?xpacket begin="Ôªø" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:ModifyDate>2006-11-03T21:18:01-08:00</xap:ModifyDate>
         <xap:CreateDate>2006-11-03T20:45:56-08:00</xap:CreateDate>
         <xap:MetadataDate>2006-11-03T21:18:01-08:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/pdf</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">An Introduction to Scheme and its Implementation - Table of Contents</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:b0f0a018-913c-4492-8c29-a52604644b70</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:f2dcb7fe-b6d3-4136-9910-fe03b3458725</xapMM:InstanceID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Acrobat Web Capture 7.0</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
endstreamendobjxref
1 3
0000183989 00000 n
0000184119 00000 n
0000184192 00000 n
5 1
0000184392 00000 n
7 3
0000184462 00000 n
0000184564 00000 n
0000187007 00000 n
11 2
0000188315 00000 n
0000188542 00000 n
15 1
0000188676 00000 n
17 1
0000188875 00000 n
20 1
0000189103 00000 n
22 1
0000189331 00000 n
24 1
0000189559 00000 n
26 1
0000189789 00000 n
28 1
0000190019 00000 n
30 1
0000190245 00000 n
32 1
0000190474 00000 n
34 1
0000190702 00000 n
36 1
0000190930 00000 n
38 1
0000191164 00000 n
40 1
0000191396 00000 n
42 1
0000191628 00000 n
44 1
0000191860 00000 n
46 1
0000192092 00000 n
48 1
0000192324 00000 n
50 1
0000192556 00000 n
52 1
0000192789 00000 n
54 1
0000193020 00000 n
56 1
0000193253 00000 n
58 1
0000193483 00000 n
60 1
0000193713 00000 n
62 1
0000193945 00000 n
64 1
0000194177 00000 n
66 1
0000194409 00000 n
68 1
0000194641 00000 n
70 1
0000194873 00000 n
72 1
0000195107 00000 n
74 1
0000195341 00000 n
76 1
0000195575 00000 n
78 1
0000195808 00000 n
80 1
0000196040 00000 n
82 1
0000196272 00000 n
84 1
0000196504 00000 n
86 1
0000196718 00000 n
89 1
0000196946 00000 n
91 1
0000197177 00000 n
93 1
0000197408 00000 n
95 1
0000197636 00000 n
97 1
0000197864 00000 n
99 1
0000198094 00000 n
101 1
0000198326 00000 n
103 1
0000198559 00000 n
105 1
0000198792 00000 n
107 1
0000199024 00000 n
109 1
0000199256 00000 n
111 1
0000199487 00000 n
113 1
0000199718 00000 n
115 1
0000199949 00000 n
117 1
0000200184 00000 n
119 1
0000200418 00000 n
121 1
0000200653 00000 n
123 1
0000200889 00000 n
125 1
0000201123 00000 n
127 1
0000201357 00000 n
129 1
0000201589 00000 n
131 1
0000201821 00000 n
133 1
0000202054 00000 n
135 1
0000202287 00000 n
137 1
0000202521 00000 n
139 1
0000202755 00000 n
141 1
0000202988 00000 n
143 1
0000203219 00000 n
145 1
0000203455 00000 n
147 1
0000203688 00000 n
151 1
0000203924 00000 n
153 1
0000204156 00000 n
155 1
0000204385 00000 n
157 1
0000204615 00000 n
159 1
0000204845 00000 n
161 1
0000205076 00000 n
163 1
0000205308 00000 n
165 1
0000205543 00000 n
167 1
0000205759 00000 n
170 1
0000205988 00000 n
172 1
0000206219 00000 n
174 1
0000206452 00000 n
176 1
0000206684 00000 n
178 1
0000206915 00000 n
180 1
0000207146 00000 n
182 1
0000207380 00000 n
184 1
0000207614 00000 n
186 1
0000207848 00000 n
188 1
0000208080 00000 n
190 1
0000208312 00000 n
192 1
0000208548 00000 n
194 1
0000208783 00000 n
196 1
0000209014 00000 n
198 1
0000209245 00000 n
200 1
0000209481 00000 n
202 1
0000209713 00000 n
204 1
0000209948 00000 n
206 1
0000210182 00000 n
208 1
0000210415 00000 n
210 1
0000210648 00000 n
212 1
0000210884 00000 n
214 1
0000211117 00000 n
216 1
0000211349 00000 n
219 2
0000211582 00000 n
0000211666 00000 n
222 1
0000211898 00000 n
224 1
0000212130 00000 n
226 1
0000212361 00000 n
228 1
0000212596 00000 n
230 1
0000212829 00000 n
232 1
0000213064 00000 n
234 1
0000213297 00000 n
236 1
0000213532 00000 n
238 1
0000213769 00000 n
240 1
0000214004 00000 n
242 1
0000214239 00000 n
244 1
0000214474 00000 n
246 1
0000214709 00000 n
248 1
0000214925 00000 n
251 1
0000215158 00000 n
253 1
0000215389 00000 n
255 1
0000215623 00000 n
257 1
0000215855 00000 n
259 1
0000216087 00000 n
261 1
0000216319 00000 n
263 1
0000216551 00000 n
265 1
0000216783 00000 n
267 1
0000217014 00000 n
269 1
0000217247 00000 n
271 1
0000217482 00000 n
273 1
0000217717 00000 n
275 1
0000217952 00000 n
277 1
0000218188 00000 n
279 1
0000218425 00000 n
281 1
0000218661 00000 n
283 1
0000218894 00000 n
285 1
0000219129 00000 n
287 1
0000219363 00000 n
289 1
0000219598 00000 n
291 1
0000219832 00000 n
293 1
0000220065 00000 n
295 1
0000220150 00000 n
297 1
0000220383 00000 n
299 1
0000220616 00000 n
301 1
0000220851 00000 n
303 1
0000221088 00000 n
305 1
0000221326 00000 n
307 1
0000221565 00000 n
309 1
0000221804 00000 n
311 1
0000222040 00000 n
313 1
0000222276 00000 n
315 1
0000222512 00000 n
317 1
0000222748 00000 n
319 1
0000222984 00000 n
321 1
0000223220 00000 n
323 1
0000223456 00000 n
325 1
0000223691 00000 n
327 1
0000223926 00000 n
329 1
0000224142 00000 n
332 1
0000224376 00000 n
334 1
0000224610 00000 n
336 1
0000224844 00000 n
338 1
0000225078 00000 n
340 1
0000225314 00000 n
342 1
0000225549 00000 n
344 1
0000225785 00000 n
346 1
0000226022 00000 n
348 1
0000226259 00000 n
350 1
0000226495 00000 n
352 1
0000226730 00000 n
354 1
0000226965 00000 n
356 1
0000227201 00000 n
358 1
0000227436 00000 n
360 1
0000227672 00000 n
364 1
0000227908 00000 n
366 1
0000228142 00000 n
368 1
0000228377 00000 n
370 1
0000228613 00000 n
372 1
0000228848 00000 n
374 1
0000229083 00000 n
376 1
0000229319 00000 n
378 1
0000229555 00000 n
380 1
0000229791 00000 n
382 1
0000230027 00000 n
384 1
0000230264 00000 n
386 1
0000230500 00000 n
388 1
0000230736 00000 n
390 1
0000230971 00000 n
392 1
0000231207 00000 n
394 1
0000231444 00000 n
396 1
0000231679 00000 n
398 1
0000231914 00000 n
400 1
0000232147 00000 n
402 1
0000232381 00000 n
404 1
0000232618 00000 n
406 1
0000232856 00000 n
408 1
0000233093 00000 n
410 1
0000233309 00000 n
413 1
0000233541 00000 n
415 1
0000233773 00000 n
417 1
0000234005 00000 n
419 1
0000234239 00000 n
421 1
0000234472 00000 n
423 1
0000234706 00000 n
425 1
0000234940 00000 n
427 1
0000235174 00000 n
429 1
0000235408 00000 n
433 1
0000235641 00000 n
435 1
0000235875 00000 n
437 1
0000236110 00000 n
439 1
0000236348 00000 n
441 1
0000236584 00000 n
443 1
0000236820 00000 n
445 1
0000237056 00000 n
447 1
0000237291 00000 n
449 1
0000237528 00000 n
451 1
0000237763 00000 n
453 1
0000237998 00000 n
455 1
0000238234 00000 n
457 1
0000238470 00000 n
459 1
0000238705 00000 n
461 1
0000238939 00000 n
463 1
0000239175 00000 n
465 1
0000239411 00000 n
467 1
0000239646 00000 n
469 1
0000239881 00000 n
471 1
0000240117 00000 n
473 1
0000240352 00000 n
475 1
0000240587 00000 n
477 1
0000240823 00000 n
479 1
0000241059 00000 n
481 1
0000241295 00000 n
483 1
0000241531 00000 n
485 1
0000241767 00000 n
487 1
0000242003 00000 n
489 1
0000242239 00000 n
491 1
0000242455 00000 n
494 1
0000242687 00000 n
496 1
0000242917 00000 n
498 1
0000243149 00000 n
502 1
0000243380 00000 n
504 1
0000243612 00000 n
506 1
0000243844 00000 n
508 1
0000244076 00000 n
510 1
0000244308 00000 n
512 1
0000244540 00000 n
514 1
0000244771 00000 n
516 1
0000245002 00000 n
518 1
0000245234 00000 n
520 1
0000245466 00000 n
522 1
0000245698 00000 n
524 1
0000245928 00000 n
526 1
0000246159 00000 n
528 1
0000246390 00000 n
530 1
0000246621 00000 n
532 1
0000246852 00000 n
534 1
0000247084 00000 n
536 1
0000247316 00000 n
538 1
0000247548 00000 n
540 1
0000247780 00000 n
542 1
0000248012 00000 n
544 1
0000248246 00000 n
546 1
0000248481 00000 n
548 1
0000248717 00000 n
550 1
0000248952 00000 n
552 1
0000249188 00000 n
554 1
0000249422 00000 n
556 1
0000249658 00000 n
558 1
0000249894 00000 n
560 1
0000250128 00000 n
562 1
0000250364 00000 n
564 1
0000250599 00000 n
568 1
0000250835 00000 n
570 1
0000251071 00000 n
572 1
0000251307 00000 n
574 1
0000251523 00000 n
577 1
0000251754 00000 n
579 1
0000251986 00000 n
581 1
0000252215 00000 n
583 1
0000252446 00000 n
585 1
0000252677 00000 n
587 1
0000252908 00000 n
589 1
0000253137 00000 n
591 1
0000253368 00000 n
593 1
0000253601 00000 n
595 1
0000253834 00000 n
597 1
0000254069 00000 n
599 1
0000254305 00000 n
601 1
0000254541 00000 n
603 1
0000254776 00000 n
605 1
0000255011 00000 n
607 1
0000255246 00000 n
609 1
0000255482 00000 n
611 1
0000255717 00000 n
613 1
0000255953 00000 n
615 1
0000256189 00000 n
617 1
0000256425 00000 n
619 1
0000256660 00000 n
621 1
0000256896 00000 n
623 1
0000257132 00000 n
625 1
0000257368 00000 n
627 1
0000257604 00000 n
629 1
0000257839 00000 n
631 1
0000258074 00000 n
633 1
0000258309 00000 n
637 1
0000258544 00000 n
639 1
0000258780 00000 n
641 1
0000259015 00000 n
643 1
0000259249 00000 n
645 1
0000259484 00000 n
647 1
0000259719 00000 n
649 1
0000259954 00000 n
651 1
0000260189 00000 n
653 1
0000260424 00000 n
655 1
0000260627 00000 n
658 1
0000260858 00000 n
660 1
0000261090 00000 n
662 1
0000261322 00000 n
664 1
0000261554 00000 n
666 1
0000261786 00000 n
668 1
0000262017 00000 n
670 1
0000262249 00000 n
672 1
0000262481 00000 n
674 1
0000262713 00000 n
676 1
0000262945 00000 n
678 1
0000263177 00000 n
680 1
0000263409 00000 n
682 1
0000263640 00000 n
702 1
0000263872 00000 n
708 4
0000265159 00000 n
0000265213 00000 n
0000265276 00000 n
0000265369 00000 n
713 5621
0000265532 00000 n
0000265591 00000 n
0000265659 00000 n
0000265875 00000 n
0000265901 00000 n
0000266084 00000 n
0000266230 00000 n
0000266414 00000 n
0000266639 00000 n
0000266867 00000 n
0000267093 00000 n
0000267136 00000 n
0000267367 00000 n
0000267595 00000 n
0000267824 00000 n
0000268055 00000 n
0000268282 00000 n
0000268512 00000 n
0000268699 00000 n
0000268887 00000 n
0000269116 00000 n
0000269348 00000 n
0000269578 00000 n
0000269669 00000 n
0000269763 00000 n
0000269830 00000 n
0000273593 00000 n
0000273671 00000 n
0000273766 00000 n
0000273843 00000 n
0000273878 00000 n
0000273995 00000 n
0000274048 00000 n
0000274083 00000 n
0000274252 00000 n
0000274311 00000 n
0000274379 00000 n
0000274596 00000 n
0000274698 00000 n
0000274798 00000 n
0000274824 00000 n
0000275007 00000 n
0000275113 00000 n
0000275337 00000 n
0000275562 00000 n
0000275790 00000 n
0000276016 00000 n
0000276059 00000 n
0000276290 00000 n
0000276477 00000 n
0000276705 00000 n
0000276934 00000 n
0000277166 00000 n
0000277396 00000 n
0000277488 00000 n
0000281722 00000 n
0000281798 00000 n
0000281893 00000 n
0000281970 00000 n
0000282005 00000 n
0000282122 00000 n
0000282175 00000 n
0000282210 00000 n
0000282377 00000 n
0000282436 00000 n
0000282536 00000 n
0000282753 00000 n
0000282779 00000 n
0000282962 00000 n
0000283028 00000 n
0000283252 00000 n
0000283477 00000 n
0000283705 00000 n
0000283931 00000 n
0000283974 00000 n
0000284204 00000 n
0000284395 00000 n
0000284421 00000 n
0000284604 00000 n
0000284662 00000 n
0000284886 00000 n
0000285111 00000 n
0000285339 00000 n
0000285565 00000 n
0000290320 00000 n
0000295180 00000 n
0000295271 00000 n
0000295366 00000 n
0000295443 00000 n
0000295478 00000 n
0000295603 00000 n
0000295656 00000 n
0000295692 00000 n
0000295874 00000 n
0000295933 00000 n
0000296033 00000 n
0000296250 00000 n
0000296276 00000 n
0000296459 00000 n
0000296525 00000 n
0000296749 00000 n
0000296974 00000 n
0000297202 00000 n
0000297428 00000 n
0000297471 00000 n
0000297702 00000 n
0000297906 00000 n
0000297932 00000 n
0000297975 00000 n
0000298206 00000 n
0000298272 00000 n
0000298459 00000 n
0000298687 00000 n
0000298916 00000 n
0000299148 00000 n
0000299378 00000 n
0000299465 00000 n
0000304077 00000 n
0000307444 00000 n
0000307525 00000 n
0000307620 00000 n
0000307697 00000 n
0000307734 00000 n
0000307859 00000 n
0000307912 00000 n
0000307948 00000 n
0000308120 00000 n
0000308179 00000 n
0000308247 00000 n
0000308464 00000 n
0000308566 00000 n
0000308592 00000 n
0000308775 00000 n
0000308881 00000 n
0000309105 00000 n
0000309330 00000 n
0000309558 00000 n
0000309784 00000 n
0000309827 00000 n
0000310058 00000 n
0000310245 00000 n
0000310473 00000 n
0000310702 00000 n
0000310934 00000 n
0000311164 00000 n
0000315818 00000 n
0000315909 00000 n
0000316004 00000 n
0000316081 00000 n
0000316116 00000 n
0000316233 00000 n
0000316286 00000 n
0000316323 00000 n
0000316505 00000 n
0000316564 00000 n
0000316664 00000 n
0000316881 00000 n
0000316907 00000 n
0000317090 00000 n
0000317212 00000 n
0000317436 00000 n
0000317661 00000 n
0000317889 00000 n
0000318115 00000 n
0000318158 00000 n
0000318389 00000 n
0000318620 00000 n
0000318854 00000 n
0000319092 00000 n
0000319332 00000 n
0000319570 00000 n
0000319807 00000 n
0000320044 00000 n
0000320248 00000 n
0000320274 00000 n
0000320506 00000 n
0000320588 00000 n
0000320821 00000 n
0000321054 00000 n
0000321237 00000 n
0000321461 00000 n
0000321686 00000 n
0000321914 00000 n
0000322140 00000 n
0000327454 00000 n
0000330407 00000 n
0000330499 00000 n
0000330594 00000 n
0000330671 00000 n
0000330707 00000 n
0000330832 00000 n
0000330885 00000 n
0000330921 00000 n
0000331104 00000 n
0000331163 00000 n
0000331263 00000 n
0000331493 00000 n
0000331519 00000 n
0000331702 00000 n
0000331872 00000 n
0000332096 00000 n
0000332321 00000 n
0000332549 00000 n
0000332775 00000 n
0000332818 00000 n
0000333049 00000 n
0000333278 00000 n
0000333513 00000 n
0000333746 00000 n
0000333981 00000 n
0000334213 00000 n
0000334447 00000 n
0000334680 00000 n
0000334912 00000 n
0000335143 00000 n
0000335377 00000 n
0000335608 00000 n
0000335840 00000 n
0000336076 00000 n
0000336280 00000 n
0000336306 00000 n
0000336537 00000 n
0000336603 00000 n
0000336786 00000 n
0000337010 00000 n
0000337235 00000 n
0000337463 00000 n
0000337689 00000 n
0000343636 00000 n
0000345300 00000 n
0000345382 00000 n
0000345477 00000 n
0000345554 00000 n
0000345589 00000 n
0000345714 00000 n
0000345767 00000 n
0000345802 00000 n
0000345975 00000 n
0000346034 00000 n
0000346102 00000 n
0000346333 00000 n
0000346435 00000 n
0000346461 00000 n
0000346644 00000 n
0000346750 00000 n
0000346974 00000 n
0000347200 00000 n
0000347428 00000 n
0000347654 00000 n
0000347697 00000 n
0000347927 00000 n
0000348114 00000 n
0000348342 00000 n
0000348572 00000 n
0000348804 00000 n
0000349034 00000 n
0000353449 00000 n
0000353534 00000 n
0000353629 00000 n
0000353706 00000 n
0000353741 00000 n
0000353858 00000 n
0000353911 00000 n
0000353946 00000 n
0000354123 00000 n
0000354182 00000 n
0000354250 00000 n
0000354470 00000 n
0000354496 00000 n
0000354679 00000 n
0000354860 00000 n
0000355084 00000 n
0000355311 00000 n
0000355539 00000 n
0000355765 00000 n
0000355808 00000 n
0000356041 00000 n
0000356273 00000 n
0000356506 00000 n
0000356736 00000 n
0000356968 00000 n
0000357200 00000 n
0000357432 00000 n
0000357664 00000 n
0000357898 00000 n
0000358130 00000 n
0000358317 00000 n
0000358545 00000 n
0000358777 00000 n
0000359010 00000 n
0000359241 00000 n
0000363844 00000 n
0000363928 00000 n
0000364025 00000 n
0000364104 00000 n
0000364141 00000 n
0000364263 00000 n
0000364318 00000 n
0000364354 00000 n
0000364530 00000 n
0000364590 00000 n
0000364660 00000 n
0000364895 00000 n
0000364923 00000 n
0000365107 00000 n
0000365288 00000 n
0000365514 00000 n
0000365742 00000 n
0000365971 00000 n
0000366198 00000 n
0000366243 00000 n
0000366477 00000 n
0000366710 00000 n
0000366943 00000 n
0000367176 00000 n
0000367409 00000 n
0000367642 00000 n
0000367876 00000 n
0000368108 00000 n
0000368296 00000 n
0000368526 00000 n
0000368758 00000 n
0000368991 00000 n
0000369222 00000 n
0000373876 00000 n
0000373958 00000 n
0000374055 00000 n
0000374134 00000 n
0000374170 00000 n
0000374293 00000 n
0000374348 00000 n
0000374384 00000 n
0000374561 00000 n
0000374621 00000 n
0000374724 00000 n
0000374959 00000 n
0000374987 00000 n
0000375171 00000 n
0000375244 00000 n
0000375471 00000 n
0000375699 00000 n
0000375928 00000 n
0000376155 00000 n
0000376200 00000 n
0000376430 00000 n
0000376652 00000 n
0000376680 00000 n
0000376868 00000 n
0000376932 00000 n
0000377163 00000 n
0000377395 00000 n
0000377628 00000 n
0000377859 00000 n
0000382537 00000 n
0000384376 00000 n
0000384465 00000 n
0000384562 00000 n
0000384641 00000 n
0000384677 00000 n
0000384809 00000 n
0000384864 00000 n
0000384900 00000 n
0000385084 00000 n
0000385144 00000 n
0000385247 00000 n
0000385482 00000 n
0000385588 00000 n
0000385616 00000 n
0000385800 00000 n
0000385873 00000 n
0000386100 00000 n
0000386328 00000 n
0000386557 00000 n
0000386784 00000 n
0000386829 00000 n
0000387059 00000 n
0000387104 00000 n
0000387326 00000 n
0000387354 00000 n
0000387542 00000 n
0000387606 00000 n
0000387837 00000 n
0000388069 00000 n
0000388302 00000 n
0000388533 00000 n
0000393048 00000 n
0000397012 00000 n
0000397106 00000 n
0000397203 00000 n
0000397282 00000 n
0000397318 00000 n
0000397450 00000 n
0000397505 00000 n
0000397541 00000 n
0000397730 00000 n
0000397790 00000 n
0000397925 00000 n
0000398173 00000 n
0000398201 00000 n
0000398385 00000 n
0000398458 00000 n
0000398685 00000 n
0000398913 00000 n
0000399142 00000 n
0000399369 00000 n
0000399414 00000 n
0000399644 00000 n
0000399850 00000 n
0000399878 00000 n
0000399925 00000 n
0000399972 00000 n
0000400019 00000 n
0000400066 00000 n
0000400288 00000 n
0000400316 00000 n
0000400504 00000 n
0000400568 00000 n
0000400799 00000 n
0000401031 00000 n
0000401264 00000 n
0000401495 00000 n
0000406065 00000 n
0000409680 00000 n
0000412019 00000 n
0000412123 00000 n
0000412220 00000 n
0000412299 00000 n
0000412335 00000 n
0000412476 00000 n
0000412531 00000 n
0000412567 00000 n
0000412766 00000 n
0000412826 00000 n
0000412896 00000 n
0000413131 00000 n
0000413239 00000 n
0000413267 00000 n
0000413451 00000 n
0000413569 00000 n
0000413796 00000 n
0000414024 00000 n
0000414253 00000 n
0000414480 00000 n
0000414525 00000 n
0000414755 00000 n
0000414800 00000 n
0000414986 00000 n
0000415215 00000 n
0000415445 00000 n
0000415676 00000 n
0000415905 00000 n
0000419771 00000 n
0000419871 00000 n
0000419968 00000 n
0000420047 00000 n
0000420083 00000 n
0000420206 00000 n
0000420261 00000 n
0000420297 00000 n
0000420492 00000 n
0000420552 00000 n
0000420622 00000 n
0000420844 00000 n
0000420872 00000 n
0000421056 00000 n
0000421174 00000 n
0000421401 00000 n
0000421629 00000 n
0000421858 00000 n
0000422085 00000 n
0000422130 00000 n
0000422360 00000 n
0000422548 00000 n
0000422779 00000 n
0000423011 00000 n
0000423244 00000 n
0000423475 00000 n
0000427572 00000 n
0000427670 00000 n
0000427767 00000 n
0000427846 00000 n
0000427882 00000 n
0000428005 00000 n
0000428060 00000 n
0000428096 00000 n
0000428289 00000 n
0000428349 00000 n
0000428452 00000 n
0000428700 00000 n
0000428728 00000 n
0000428912 00000 n
0000428985 00000 n
0000429212 00000 n
0000429440 00000 n
0000429669 00000 n
0000429896 00000 n
0000429941 00000 n
0000430171 00000 n
0000430216 00000 n
0000430412 00000 n
0000430440 00000 n
0000430628 00000 n
0000430692 00000 n
0000430923 00000 n
0000431155 00000 n
0000431388 00000 n
0000431619 00000 n
0000437077 00000 n
0000438552 00000 n
0000438636 00000 n
0000438733 00000 n
0000438812 00000 n
0000438849 00000 n
0000438981 00000 n
0000439036 00000 n
0000439072 00000 n
0000439251 00000 n
0000439311 00000 n
0000439446 00000 n
0000439668 00000 n
0000439696 00000 n
0000439880 00000 n
0000439962 00000 n
0000440189 00000 n
0000440417 00000 n
0000440646 00000 n
0000440873 00000 n
0000440918 00000 n
0000441148 00000 n
0000441193 00000 n
0000441238 00000 n
0000441283 00000 n
0000441330 00000 n
0000441527 00000 n
0000441733 00000 n
0000441841 00000 n
0000441869 00000 n
0000442078 00000 n
0000442106 00000 n
0000442290 00000 n
0000442354 00000 n
0000442581 00000 n
0000442809 00000 n
0000443038 00000 n
0000443265 00000 n
0000447101 00000 n
0000450926 00000 n
0000452465 00000 n
0000452570 00000 n
0000452667 00000 n
0000452746 00000 n
0000452782 00000 n
0000452923 00000 n
0000452978 00000 n
0000453016 00000 n
0000453216 00000 n
0000453276 00000 n
0000453346 00000 n
0000453595 00000 n
0000453623 00000 n
0000453807 00000 n
0000453925 00000 n
0000454152 00000 n
0000454380 00000 n
0000454609 00000 n
0000454836 00000 n
0000454881 00000 n
0000455115 00000 n
0000455162 00000 n
0000455209 00000 n
0000455397 00000 n
0000455628 00000 n
0000455860 00000 n
0000456093 00000 n
0000456324 00000 n
0000456417 00000 n
0000461292 00000 n
0000461371 00000 n
0000461468 00000 n
0000461547 00000 n
0000461584 00000 n
0000461707 00000 n
0000461762 00000 n
0000461799 00000 n
0000461973 00000 n
0000462033 00000 n
0000462103 00000 n
0000462365 00000 n
0000462393 00000 n
0000462577 00000 n
0000462713 00000 n
0000462940 00000 n
0000463168 00000 n
0000463397 00000 n
0000463624 00000 n
0000463669 00000 n
0000463903 00000 n
0000464135 00000 n
0000464368 00000 n
0000464556 00000 n
0000464787 00000 n
0000465019 00000 n
0000465252 00000 n
0000465483 00000 n
0000469422 00000 n
0000469522 00000 n
0000469619 00000 n
0000469698 00000 n
0000469734 00000 n
0000469857 00000 n
0000469912 00000 n
0000469949 00000 n
0000470144 00000 n
0000470204 00000 n
0000470371 00000 n
0000470594 00000 n
0000470622 00000 n
0000470806 00000 n
0000470879 00000 n
0000471106 00000 n
0000471334 00000 n
0000471563 00000 n
0000471790 00000 n
0000471835 00000 n
0000472062 00000 n
0000472268 00000 n
0000472376 00000 n
0000472404 00000 n
0000472610 00000 n
0000472638 00000 n
0000472860 00000 n
0000472888 00000 n
0000472935 00000 n
0000473123 00000 n
0000473187 00000 n
0000473418 00000 n
0000473650 00000 n
0000473883 00000 n
0000474114 00000 n
0000477882 00000 n
0000480886 00000 n
0000484075 00000 n
0000487213 00000 n
0000487288 00000 n
0000487385 00000 n
0000487464 00000 n
0000487500 00000 n
0000487650 00000 n
0000487705 00000 n
0000487741 00000 n
0000487911 00000 n
0000487971 00000 n
0000488074 00000 n
0000488310 00000 n
0000488338 00000 n
0000488522 00000 n
0000488604 00000 n
0000488831 00000 n
0000489059 00000 n
0000489288 00000 n
0000489515 00000 n
0000489560 00000 n
0000489791 00000 n
0000489838 00000 n
0000490071 00000 n
0000490293 00000 n
0000490321 00000 n
0000490555 00000 n
0000490628 00000 n
0000490814 00000 n
0000491043 00000 n
0000491273 00000 n
0000491504 00000 n
0000491733 00000 n
0000496623 00000 n
0000499935 00000 n
0000500016 00000 n
0000500113 00000 n
0000500192 00000 n
0000500228 00000 n
0000500360 00000 n
0000500415 00000 n
0000500451 00000 n
0000500627 00000 n
0000500687 00000 n
0000500757 00000 n
0000500992 00000 n
0000501100 00000 n
0000501128 00000 n
0000501312 00000 n
0000501430 00000 n
0000501657 00000 n
0000501885 00000 n
0000502114 00000 n
0000502341 00000 n
0000502386 00000 n
0000502620 00000 n
0000502808 00000 n
0000503039 00000 n
0000503271 00000 n
0000503504 00000 n
0000503735 00000 n
0000507744 00000 n
0000507823 00000 n
0000507920 00000 n
0000507999 00000 n
0000508035 00000 n
0000508158 00000 n
0000508213 00000 n
0000508249 00000 n
0000508423 00000 n
0000508483 00000 n
0000508586 00000 n
0000508808 00000 n
0000508836 00000 n
0000509020 00000 n
0000509093 00000 n
0000509320 00000 n
0000509548 00000 n
0000509777 00000 n
0000510004 00000 n
0000510049 00000 n
0000510283 00000 n
0000510330 00000 n
0000510416 00000 n
0000512055 00000 n
0000512102 00000 n
0000512337 00000 n
0000512365 00000 n
0000512596 00000 n
0000512696 00000 n
0000512929 00000 n
0000513162 00000 n
0000513395 00000 n
0000513581 00000 n
0000513810 00000 n
0000514040 00000 n
0000514271 00000 n
0000514500 00000 n
0000518189 00000 n
0000522661 00000 n
0000522757 00000 n
0000522854 00000 n
0000522933 00000 n
0000522969 00000 n
0000523101 00000 n
0000523156 00000 n
0000523192 00000 n
0000523383 00000 n
0000523443 00000 n
0000523513 00000 n
0000523735 00000 n
0000523763 00000 n
0000523947 00000 n
0000524065 00000 n
0000524292 00000 n
0000524520 00000 n
0000524749 00000 n
0000524976 00000 n
0000525021 00000 n
0000525250 00000 n
0000525436 00000 n
0000525665 00000 n
0000525895 00000 n
0000526126 00000 n
0000526355 00000 n
0000530947 00000 n
0000531038 00000 n
0000531135 00000 n
0000531214 00000 n
0000531250 00000 n
0000531373 00000 n
0000531428 00000 n
0000531465 00000 n
0000531651 00000 n
0000531711 00000 n
0000531781 00000 n
0000531990 00000 n
0000532018 00000 n
0000532202 00000 n
0000532320 00000 n
0000532547 00000 n
0000532775 00000 n
0000533004 00000 n
0000533231 00000 n
0000533276 00000 n
0000533506 00000 n
0000533690 00000 n
0000533917 00000 n
0000534145 00000 n
0000534374 00000 n
0000534601 00000 n
0000537075 00000 n
0000537169 00000 n
0000537266 00000 n
0000537345 00000 n
0000537382 00000 n
0000537505 00000 n
0000537560 00000 n
0000537596 00000 n
0000537785 00000 n
0000537845 00000 n
0000537915 00000 n
0000538175 00000 n
0000538283 00000 n
0000538311 00000 n
0000538501 00000 n
0000538619 00000 n
0000538851 00000 n
0000539083 00000 n
0000539315 00000 n
0000539546 00000 n
0000539593 00000 n
0000539830 00000 n
0000540020 00000 n
0000540252 00000 n
0000540484 00000 n
0000540716 00000 n
0000540947 00000 n
0000545613 00000 n
0000545698 00000 n
0000545795 00000 n
0000545874 00000 n
0000545910 00000 n
0000546033 00000 n
0000546088 00000 n
0000546125 00000 n
0000546305 00000 n
0000546365 00000 n
0000546435 00000 n
0000546670 00000 n
0000546779 00000 n
0000546884 00000 n
0000546912 00000 n
0000547096 00000 n
0000547214 00000 n
0000547441 00000 n
0000547669 00000 n
0000547898 00000 n
0000548125 00000 n
0000548170 00000 n
0000548400 00000 n
0000548588 00000 n
0000548819 00000 n
0000549051 00000 n
0000549284 00000 n
0000549515 00000 n
0000553015 00000 n
0000553117 00000 n
0000553214 00000 n
0000553293 00000 n
0000553329 00000 n
0000553452 00000 n
0000553507 00000 n
0000553543 00000 n
0000553740 00000 n
0000553800 00000 n
0000553870 00000 n
0000554105 00000 n
0000554133 00000 n
0000554317 00000 n
0000554453 00000 n
0000554680 00000 n
0000554908 00000 n
0000555137 00000 n
0000555364 00000 n
0000555409 00000 n
0000555643 00000 n
0000555690 00000 n
0000555737 00000 n
0000555970 00000 n
0000556203 00000 n
0000556391 00000 n
0000556622 00000 n
0000556854 00000 n
0000557087 00000 n
0000557318 00000 n
0000561139 00000 n
0000561229 00000 n
0000561326 00000 n
0000561405 00000 n
0000561442 00000 n
0000561565 00000 n
0000561620 00000 n
0000561656 00000 n
0000561841 00000 n
0000561901 00000 n
0000562004 00000 n
0000562239 00000 n
0000562267 00000 n
0000562451 00000 n
0000562524 00000 n
0000562751 00000 n
0000562979 00000 n
0000563208 00000 n
0000563435 00000 n
0000563480 00000 n
0000563710 00000 n
0000563919 00000 n
0000563947 00000 n
0000563994 00000 n
0000564191 00000 n
0000564264 00000 n
0000564450 00000 n
0000564679 00000 n
0000564909 00000 n
0000565140 00000 n
0000565369 00000 n
0000570530 00000 n
0000574044 00000 n
0000574138 00000 n
0000574235 00000 n
0000574314 00000 n
0000574350 00000 n
0000574482 00000 n
0000574537 00000 n
0000574573 00000 n
0000574762 00000 n
0000574822 00000 n
0000574925 00000 n
0000575147 00000 n
0000575255 00000 n
0000575283 00000 n
0000575467 00000 n
0000575540 00000 n
0000575767 00000 n
0000575995 00000 n
0000576224 00000 n
0000576451 00000 n
0000576496 00000 n
0000576726 00000 n
0000576771 00000 n
0000576816 00000 n
0000577025 00000 n
0000577053 00000 n
0000577237 00000 n
0000577301 00000 n
0000577528 00000 n
0000577756 00000 n
0000577985 00000 n
0000578212 00000 n
0000582812 00000 n
0000584873 00000 n
0000584960 00000 n
0000585057 00000 n
0000585136 00000 n
0000585172 00000 n
0000585304 00000 n
0000585359 00000 n
0000585397 00000 n
0000585579 00000 n
0000585639 00000 n
0000585742 00000 n
0000585977 00000 n
0000586005 00000 n
0000586189 00000 n
0000586262 00000 n
0000586489 00000 n
0000586717 00000 n
0000586946 00000 n
0000587173 00000 n
0000587218 00000 n
0000587448 00000 n
0000587493 00000 n
0000587539 00000 n
0000587761 00000 n
0000587789 00000 n
0000587977 00000 n
0000588041 00000 n
0000588272 00000 n
0000588504 00000 n
0000588737 00000 n
0000588968 00000 n
0000593305 00000 n
0000596607 00000 n
0000596697 00000 n
0000596794 00000 n
0000596873 00000 n
0000596909 00000 n
0000597041 00000 n
0000597096 00000 n
0000597133 00000 n
0000597318 00000 n
0000597378 00000 n
0000597448 00000 n
0000597683 00000 n
0000597711 00000 n
0000597895 00000 n
0000598013 00000 n
0000598240 00000 n
0000598468 00000 n
0000598697 00000 n
0000598924 00000 n
0000598969 00000 n
0000599203 00000 n
0000599250 00000 n
0000599297 00000 n
0000599485 00000 n
0000599716 00000 n
0000599948 00000 n
0000600181 00000 n
0000600412 00000 n
0000605641 00000 n
0000605739 00000 n
0000605836 00000 n
0000605915 00000 n
0000605951 00000 n
0000606074 00000 n
0000606129 00000 n
0000606165 00000 n
0000606358 00000 n
0000606418 00000 n
0000606521 00000 n
0000606756 00000 n
0000606864 00000 n
0000606892 00000 n
0000607076 00000 n
0000607167 00000 n
0000607394 00000 n
0000607622 00000 n
0000607851 00000 n
0000608078 00000 n
0000608123 00000 n
0000608357 00000 n
0000608404 00000 n
0000608638 00000 n
0000608685 00000 n
0000608884 00000 n
0000609093 00000 n
0000609121 00000 n
0000609354 00000 n
0000609427 00000 n
0000609611 00000 n
0000609838 00000 n
0000610066 00000 n
0000610295 00000 n
0000610522 00000 n
0000614994 00000 n
0000616948 00000 n
0000617033 00000 n
0000617130 00000 n
0000617209 00000 n
0000617246 00000 n
0000617378 00000 n
0000617433 00000 n
0000617469 00000 n
0000617649 00000 n
0000617709 00000 n
0000617779 00000 n
0000618001 00000 n
0000618029 00000 n
0000618213 00000 n
0000618331 00000 n
0000618558 00000 n
0000618786 00000 n
0000619015 00000 n
0000619242 00000 n
0000619287 00000 n
0000619520 00000 n
0000619567 00000 n
0000619614 00000 n
0000619661 00000 n
0000619708 00000 n
0000619896 00000 n
0000620127 00000 n
0000620359 00000 n
0000620592 00000 n
0000620823 00000 n
0000625952 00000 n
0000626037 00000 n
0000626134 00000 n
0000626213 00000 n
0000626249 00000 n
0000626372 00000 n
0000626427 00000 n
0000626463 00000 n
0000626643 00000 n
0000626703 00000 n
0000626773 00000 n
0000627008 00000 n
0000627036 00000 n
0000627220 00000 n
0000627374 00000 n
0000627601 00000 n
0000627829 00000 n
0000628058 00000 n
0000628285 00000 n
0000628330 00000 n
0000628564 00000 n
0000628611 00000 n
0000628658 00000 n
0000628705 00000 n
0000628752 00000 n
0000628985 00000 n
0000629218 00000 n
0000629451 00000 n
0000629684 00000 n
0000629872 00000 n
0000630103 00000 n
0000630335 00000 n
0000630568 00000 n
0000630799 00000 n
0000634736 00000 n
0000634822 00000 n
0000634919 00000 n
0000634998 00000 n
0000635035 00000 n
0000635158 00000 n
0000635213 00000 n
0000635250 00000 n
0000635431 00000 n
0000635491 00000 n
0000635658 00000 n
0000635918 00000 n
0000635946 00000 n
0000636337 00000 n
0000636380 00000 n
0000636570 00000 n
0000636643 00000 n
0000636875 00000 n
0000637106 00000 n
0000637339 00000 n
0000637570 00000 n
0000637617 00000 n
0000637854 00000 n
0000638071 00000 n
0000638179 00000 n
0000638207 00000 n
0000638424 00000 n
0000638452 00000 n
0000638685 00000 n
0000638713 00000 n
0000638903 00000 n
0000638967 00000 n
0000639199 00000 n
0000639430 00000 n
0000639663 00000 n
0000639894 00000 n
0000644994 00000 n
0000649303 00000 n
0000652769 00000 n
0000655803 00000 n
0000655890 00000 n
0000655987 00000 n
0000656066 00000 n
0000656102 00000 n
0000656252 00000 n
0000656307 00000 n
0000656343 00000 n
0000656525 00000 n
0000656585 00000 n
0000656688 00000 n
0000656923 00000 n
0000656951 00000 n
0000657135 00000 n
0000657208 00000 n
0000657435 00000 n
0000657663 00000 n
0000657892 00000 n
0000658119 00000 n
0000658164 00000 n
0000658398 00000 n
0000658445 00000 n
0000658492 00000 n
0000658714 00000 n
0000658742 00000 n
0000658930 00000 n
0000658994 00000 n
0000659225 00000 n
0000659457 00000 n
0000659690 00000 n
0000659921 00000 n
0000664610 00000 n
0000668179 00000 n
0000668267 00000 n
0000668364 00000 n
0000668443 00000 n
0000668479 00000 n
0000668611 00000 n
0000668666 00000 n
0000668702 00000 n
0000668885 00000 n
0000668945 00000 n
0000669015 00000 n
0000669250 00000 n
0000669358 00000 n
0000669386 00000 n
0000669570 00000 n
0000669688 00000 n
0000669915 00000 n
0000670143 00000 n
0000670372 00000 n
0000670599 00000 n
0000670644 00000 n
0000670878 00000 n
0000671066 00000 n
0000671297 00000 n
0000671529 00000 n
0000671762 00000 n
0000671993 00000 n
0000675951 00000 n
0000676055 00000 n
0000676152 00000 n
0000676231 00000 n
0000676267 00000 n
0000676390 00000 n
0000676445 00000 n
0000676481 00000 n
0000676680 00000 n
0000676740 00000 n
0000676810 00000 n
0000677032 00000 n
0000677060 00000 n
0000677244 00000 n
0000677362 00000 n
0000677589 00000 n
0000677817 00000 n
0000678046 00000 n
0000678273 00000 n
0000678318 00000 n
0000678552 00000 n
0000678740 00000 n
0000678971 00000 n
0000679203 00000 n
0000679436 00000 n
0000679667 00000 n
0000682751 00000 n
0000682865 00000 n
0000682962 00000 n
0000683041 00000 n
0000683077 00000 n
0000683200 00000 n
0000683255 00000 n
0000683291 00000 n
0000683500 00000 n
0000683560 00000 n
0000683630 00000 n
0000683853 00000 n
0000683881 00000 n
0000684065 00000 n
0000684183 00000 n
0000684410 00000 n
0000684638 00000 n
0000684867 00000 n
0000685094 00000 n
0000685139 00000 n
0000685373 00000 n
0000685420 00000 n
0000685608 00000 n
0000685839 00000 n
0000686071 00000 n
0000686304 00000 n
0000686535 00000 n
0000689256 00000 n
0000689333 00000 n
0000689430 00000 n
0000689509 00000 n
0000689546 00000 n
0000689669 00000 n
0000689724 00000 n
0000689760 00000 n
0000689932 00000 n
0000689992 00000 n
0000690062 00000 n
0000690298 00000 n
0000690326 00000 n
0000690510 00000 n
0000690628 00000 n
0000690855 00000 n
0000691083 00000 n
0000691312 00000 n
0000691539 00000 n
0000691584 00000 n
0000691811 00000 n
0000691856 00000 n
0000692044 00000 n
0000692275 00000 n
0000692507 00000 n
0000692740 00000 n
0000692971 00000 n
0000696689 00000 n
0000696764 00000 n
0000696861 00000 n
0000696940 00000 n
0000696977 00000 n
0000697100 00000 n
0000697155 00000 n
0000697192 00000 n
0000697362 00000 n
0000697422 00000 n
0000697492 00000 n
0000697728 00000 n
0000697756 00000 n
0000697940 00000 n
0000698058 00000 n
0000698285 00000 n
0000698513 00000 n
0000698742 00000 n
0000698969 00000 n
0000699014 00000 n
0000699241 00000 n
0000699286 00000 n
0000699474 00000 n
0000699705 00000 n
0000699937 00000 n
0000700170 00000 n
0000700401 00000 n
0000704708 00000 n
0000704785 00000 n
0000704882 00000 n
0000704961 00000 n
0000704997 00000 n
0000705120 00000 n
0000705175 00000 n
0000705211 00000 n
0000705383 00000 n
0000705443 00000 n
0000705513 00000 n
0000705736 00000 n
0000705844 00000 n
0000705872 00000 n
0000706056 00000 n
0000706174 00000 n
0000706401 00000 n
0000706629 00000 n
0000706858 00000 n
0000707085 00000 n
0000707130 00000 n
0000707357 00000 n
0000707402 00000 n
0000707590 00000 n
0000707821 00000 n
0000708053 00000 n
0000708286 00000 n
0000708517 00000 n
0000711554 00000 n
0000711632 00000 n
0000711729 00000 n
0000711808 00000 n
0000711844 00000 n
0000711967 00000 n
0000712022 00000 n
0000712058 00000 n
0000712231 00000 n
0000712291 00000 n
0000712361 00000 n
0000712597 00000 n
0000712706 00000 n
0000712734 00000 n
0000712918 00000 n
0000713036 00000 n
0000713263 00000 n
0000713491 00000 n
0000713720 00000 n
0000713947 00000 n
0000713992 00000 n
0000714219 00000 n
0000714264 00000 n
0000714450 00000 n
0000714679 00000 n
0000714909 00000 n
0000715140 00000 n
0000715369 00000 n
0000718990 00000 n
0000719067 00000 n
0000719164 00000 n
0000719243 00000 n
0000719279 00000 n
0000719402 00000 n
0000719457 00000 n
0000719493 00000 n
0000719665 00000 n
0000719725 00000 n
0000720052 00000 n
0000720301 00000 n
0000720329 00000 n
0000720513 00000 n
0000720595 00000 n
0000720822 00000 n
0000721050 00000 n
0000721279 00000 n
0000721506 00000 n
0000721551 00000 n
0000721637 00000 n
0000721724 00000 n
0000721958 00000 n
0000722005 00000 n
0000722239 00000 n
0000722286 00000 n
0000722521 00000 n
0000722549 00000 n
0000722596 00000 n
0000722830 00000 n
0000722858 00000 n
0000722905 00000 n
0000722952 00000 n
0000722999 00000 n
0000723046 00000 n
0000723252 00000 n
0000723280 00000 n
0000723499 00000 n
0000723607 00000 n
0000723635 00000 n
0000723884 00000 n
0000723931 00000 n
0000723959 00000 n
0000724193 00000 n
0000724230 00000 n
0000724277 00000 n
0000724324 00000 n
0000724371 00000 n
0000724602 00000 n
0000724808 00000 n
0000724836 00000 n
0000725072 00000 n
0000725100 00000 n
0000725147 00000 n
0000725378 00000 n
0000725406 00000 n
0000725612 00000 n
0000725640 00000 n
0000725849 00000 n
0000725957 00000 n
0000725985 00000 n
0000726220 00000 n
0000726293 00000 n
0000726481 00000 n
0000726712 00000 n
0000726944 00000 n
0000727177 00000 n
0000727408 00000 n
0000732163 00000 n
0000736360 00000 n
0000740116 00000 n
0000743915 00000 n
0000747721 00000 n
0000751332 00000 n
0000755389 00000 n
0000760249 00000 n
0000763938 00000 n
0000764039 00000 n
0000764136 00000 n
0000764215 00000 n
0000764252 00000 n
0000764447 00000 n
0000764502 00000 n
0000764538 00000 n
0000764734 00000 n
0000764794 00000 n
0000764864 00000 n
0000765112 00000 n
0000765140 00000 n
0000765324 00000 n
0000765469 00000 n
0000765696 00000 n
0000765924 00000 n
0000766153 00000 n
0000766380 00000 n
0000766425 00000 n
0000766659 00000 n
0000766706 00000 n
0000766938 00000 n
0000767171 00000 n
0000767404 00000 n
0000767592 00000 n
0000767823 00000 n
0000768055 00000 n
0000768288 00000 n
0000768519 00000 n
0000774020 00000 n
0000774119 00000 n
0000774216 00000 n
0000774295 00000 n
0000774331 00000 n
0000774454 00000 n
0000774509 00000 n
0000774545 00000 n
0000774739 00000 n
0000774799 00000 n
0000774869 00000 n
0000775091 00000 n
0000775119 00000 n
0000775303 00000 n
0000775421 00000 n
0000775648 00000 n
0000775876 00000 n
0000776105 00000 n
0000776332 00000 n
0000776377 00000 n
0000776609 00000 n
0000776656 00000 n
0000776844 00000 n
0000777075 00000 n
0000777307 00000 n
0000777540 00000 n
0000777771 00000 n
0000781228 00000 n
0000781314 00000 n
0000781411 00000 n
0000781490 00000 n
0000781526 00000 n
0000781649 00000 n
0000781704 00000 n
0000781740 00000 n
0000781921 00000 n
0000781981 00000 n
0000782084 00000 n
0000782319 00000 n
0000782347 00000 n
0000782531 00000 n
0000782604 00000 n
0000782831 00000 n
0000783059 00000 n
0000783288 00000 n
0000783515 00000 n
0000783560 00000 n
0000783794 00000 n
0000783841 00000 n
0000783888 00000 n
0000783935 00000 n
0000784144 00000 n
0000784172 00000 n
0000784413 00000 n
0000784486 00000 n
0000784674 00000 n
0000784905 00000 n
0000785137 00000 n
0000785370 00000 n
0000785601 00000 n
0000790915 00000 n
0000793360 00000 n
0000793450 00000 n
0000793547 00000 n
0000793626 00000 n
0000793662 00000 n
0000793794 00000 n
0000793849 00000 n
0000793886 00000 n
0000794071 00000 n
0000794131 00000 n
0000794201 00000 n
0000794436 00000 n
0000794544 00000 n
0000794572 00000 n
0000794756 00000 n
0000794874 00000 n
0000795101 00000 n
0000795329 00000 n
0000795558 00000 n
0000795785 00000 n
0000795830 00000 n
0000796064 00000 n
0000796111 00000 n
0000796299 00000 n
0000796530 00000 n
0000796762 00000 n
0000796995 00000 n
0000797226 00000 n
0000802782 00000 n
0000802881 00000 n
0000802978 00000 n
0000803057 00000 n
0000803093 00000 n
0000803216 00000 n
0000803271 00000 n
0000803307 00000 n
0000803501 00000 n
0000803561 00000 n
0000803664 00000 n
0000803899 00000 n
0000803927 00000 n
0000804111 00000 n
0000804184 00000 n
0000804411 00000 n
0000804639 00000 n
0000804868 00000 n
0000805095 00000 n
0000805140 00000 n
0000805374 00000 n
0000805421 00000 n
0000805468 00000 n
0000805515 00000 n
0000805737 00000 n
0000805765 00000 n
0000805953 00000 n
0000806017 00000 n
0000806248 00000 n
0000806480 00000 n
0000806713 00000 n
0000806944 00000 n
0000811257 00000 n
0000814029 00000 n
0000814120 00000 n
0000814217 00000 n
0000814296 00000 n
0000814332 00000 n
0000814464 00000 n
0000814519 00000 n
0000814555 00000 n
0000814741 00000 n
0000814801 00000 n
0000814871 00000 n
0000815106 00000 n
0000815134 00000 n
0000815318 00000 n
0000815436 00000 n
0000815663 00000 n
0000815891 00000 n
0000816120 00000 n
0000816347 00000 n
0000816392 00000 n
0000816626 00000 n
0000816814 00000 n
0000817045 00000 n
0000817277 00000 n
0000817510 00000 n
0000817741 00000 n
0000823500 00000 n
0000823606 00000 n
0000823703 00000 n
0000823782 00000 n
0000823820 00000 n
0000823943 00000 n
0000823998 00000 n
0000824035 00000 n
0000824236 00000 n
0000824296 00000 n
0000824366 00000 n
0000824601 00000 n
0000824629 00000 n
0000824813 00000 n
0000824958 00000 n
0000825185 00000 n
0000825413 00000 n
0000825642 00000 n
0000825869 00000 n
0000825914 00000 n
0000826148 00000 n
0000826195 00000 n
0000826242 00000 n
0000826472 00000 n
0000826705 00000 n
0000826935 00000 n
0000827123 00000 n
0000827354 00000 n
0000827586 00000 n
0000827819 00000 n
0000828050 00000 n
0000832047 00000 n
0000832151 00000 n
0000832248 00000 n
0000832327 00000 n
0000832364 00000 n
0000832487 00000 n
0000832542 00000 n
0000832578 00000 n
0000832777 00000 n
0000832837 00000 n
0000832972 00000 n
0000833208 00000 n
0000833316 00000 n
0000833344 00000 n
0000833528 00000 n
0000833601 00000 n
0000833828 00000 n
0000834056 00000 n
0000834285 00000 n
0000834512 00000 n
0000834557 00000 n
0000834791 00000 n
0000834838 00000 n
0000835044 00000 n
0000835072 00000 n
0000835498 00000 n
0000835542 00000 n
0000835751 00000 n
0000835779 00000 n
0000836015 00000 n
0000836088 00000 n
0000836276 00000 n
0000836507 00000 n
0000836739 00000 n
0000836972 00000 n
0000837203 00000 n
0000841687 00000 n
0000845648 00000 n
0000847415 00000 n
0000847489 00000 n
0000847586 00000 n
0000847665 00000 n
0000847701 00000 n
0000847842 00000 n
0000847897 00000 n
0000847933 00000 n
0000848102 00000 n
0000848162 00000 n
0000848232 00000 n
0000848481 00000 n
0000848509 00000 n
0000848693 00000 n
0000848811 00000 n
0000849038 00000 n
0000849266 00000 n
0000849495 00000 n
0000849722 00000 n
0000849767 00000 n
0000849999 00000 n
0000850187 00000 n
0000850418 00000 n
0000850650 00000 n
0000850883 00000 n
0000851114 00000 n
0000855136 00000 n
0000855232 00000 n
0000855329 00000 n
0000855408 00000 n
0000855445 00000 n
0000855568 00000 n
0000855623 00000 n
0000855659 00000 n
0000855850 00000 n
0000855910 00000 n
0000856013 00000 n
0000856248 00000 n
0000856276 00000 n
0000856460 00000 n
0000856533 00000 n
0000856760 00000 n
0000856988 00000 n
0000857217 00000 n
0000857444 00000 n
0000857489 00000 n
0000857723 00000 n
0000857770 00000 n
0000857980 00000 n
0000858088 00000 n
0000858116 00000 n
0000858350 00000 n
0000858432 00000 n
0000858663 00000 n
0000858849 00000 n
0000859078 00000 n
0000859308 00000 n
0000859539 00000 n
0000859768 00000 n
0000865243 00000 n
0000867140 00000 n
0000867224 00000 n
0000867321 00000 n
0000867400 00000 n
0000867436 00000 n
0000867568 00000 n
0000867623 00000 n
0000867659 00000 n
0000867838 00000 n
0000867898 00000 n
0000867968 00000 n
0000868204 00000 n
0000868313 00000 n
0000868341 00000 n
0000868525 00000 n
0000868643 00000 n
0000868870 00000 n
0000869098 00000 n
0000869327 00000 n
0000869554 00000 n
0000869599 00000 n
0000869829 00000 n
0000869874 00000 n
0000869919 00000 n
0000870107 00000 n
0000870338 00000 n
0000870570 00000 n
0000870803 00000 n
0000871034 00000 n
0000875672 00000 n
0000875784 00000 n
0000875881 00000 n
0000875960 00000 n
0000875997 00000 n
0000876120 00000 n
0000876175 00000 n
0000876211 00000 n
0000876418 00000 n
0000876478 00000 n
0000876548 00000 n
0000876798 00000 n
0000876826 00000 n
0000877010 00000 n
0000877128 00000 n
0000877355 00000 n
0000877583 00000 n
0000877812 00000 n
0000878039 00000 n
0000878084 00000 n
0000878316 00000 n
0000878363 00000 n
0000878551 00000 n
0000878782 00000 n
0000879014 00000 n
0000879247 00000 n
0000879478 00000 n
0000884968 00000 n
0000885063 00000 n
0000885160 00000 n
0000885239 00000 n
0000885275 00000 n
0000885398 00000 n
0000885453 00000 n
0000885489 00000 n
0000885679 00000 n
0000885739 00000 n
0000885842 00000 n
0000886077 00000 n
0000886105 00000 n
0000886295 00000 n
0000886368 00000 n
0000886600 00000 n
0000886831 00000 n
0000887064 00000 n
0000887294 00000 n
0000887341 00000 n
0000887577 00000 n
0000887623 00000 n
0000887844 00000 n
0000887872 00000 n
0000888109 00000 n
0000888182 00000 n
0000888371 00000 n
0000888602 00000 n
0000888832 00000 n
0000889064 00000 n
0000889293 00000 n
0000893783 00000 n
0000897590 00000 n
0000897665 00000 n
0000897762 00000 n
0000897841 00000 n
0000897877 00000 n
0000898009 00000 n
0000898064 00000 n
0000898100 00000 n
0000898270 00000 n
0000898330 00000 n
0000898400 00000 n
0000898636 00000 n
0000898744 00000 n
0000898772 00000 n
0000898956 00000 n
0000899155 00000 n
0000899382 00000 n
0000899610 00000 n
0000899839 00000 n
0000900066 00000 n
0000900111 00000 n
0000900345 00000 n
0000900392 00000 n
0000900625 00000 n
0000900857 00000 n
0000901089 00000 n
0000901325 00000 n
0000901558 00000 n
0000901790 00000 n
0000902023 00000 n
0000902256 00000 n
0000902488 00000 n
0000902676 00000 n
0000902907 00000 n
0000903139 00000 n
0000903372 00000 n
0000903603 00000 n
0000908608 00000 n
0000908689 00000 n
0000908786 00000 n
0000908865 00000 n
0000908901 00000 n
0000909024 00000 n
0000909079 00000 n
0000909116 00000 n
0000909292 00000 n
0000909352 00000 n
0000909487 00000 n
0000909723 00000 n
0000909751 00000 n
0000909935 00000 n
0000910008 00000 n
0000910235 00000 n
0000910463 00000 n
0000910692 00000 n
0000910919 00000 n
0000910964 00000 n
0000911198 00000 n
0000911245 00000 n
0000911292 00000 n
0000911339 00000 n
0000911546 00000 n
0000911574 00000 n
0000911771 00000 n
0000911799 00000 n
0000911983 00000 n
0000912047 00000 n
0000912274 00000 n
0000912502 00000 n
0000912731 00000 n
0000912958 00000 n
0000917359 00000 n
0000921909 00000 n
0000923809 00000 n
0000923902 00000 n
0000923999 00000 n
0000924078 00000 n
0000924114 00000 n
0000924255 00000 n
0000924310 00000 n
0000924346 00000 n
0000924534 00000 n
0000924594 00000 n
0000924664 00000 n
0000924900 00000 n
0000924928 00000 n
0000925112 00000 n
0000925230 00000 n
0000925457 00000 n
0000925685 00000 n
0000925914 00000 n
0000926141 00000 n
0000926186 00000 n
0000926420 00000 n
0000926467 00000 n
0000926514 00000 n
0000926700 00000 n
0000926929 00000 n
0000927159 00000 n
0000927390 00000 n
0000927619 00000 n
0000927782 00000 n
0000927890 00000 n
0000932485 00000 n
0000932996 00000 n
0000933090 00000 n
0000933187 00000 n
0000933266 00000 n
0000933302 00000 n
0000933434 00000 n
0000933489 00000 n
0000933525 00000 n
0000933714 00000 n
0000933774 00000 n
0000933877 00000 n
0000934127 00000 n
0000934155 00000 n
0000934339 00000 n
0000934412 00000 n
0000934639 00000 n
0000934867 00000 n
0000935096 00000 n
0000935323 00000 n
0000935368 00000 n
0000935602 00000 n
0000935649 00000 n
0000935696 00000 n
0000935743 00000 n
0000935953 00000 n
0000935981 00000 n
0000936217 00000 n
0000936299 00000 n
0000936531 00000 n
0000936715 00000 n
0000936942 00000 n
0000937170 00000 n
0000937399 00000 n
0000937626 00000 n
0000941466 00000 n
0000943444 00000 n
0000943546 00000 n
0000943643 00000 n
0000943722 00000 n
0000943758 00000 n
0000943890 00000 n
0000943945 00000 n
0000943981 00000 n
0000944178 00000 n
0000944238 00000 n
0000944341 00000 n
0000944591 00000 n
0000944619 00000 n
0000944803 00000 n
0000944876 00000 n
0000945103 00000 n
0000945331 00000 n
0000945560 00000 n
0000945787 00000 n
0000945832 00000 n
0000946066 00000 n
0000946289 00000 n
0000946317 00000 n
0000946364 00000 n
0000946451 00000 n
0000946540 00000 n
0000946728 00000 n
0000946792 00000 n
0000947023 00000 n
0000947255 00000 n
0000947488 00000 n
0000947719 00000 n
0000951768 00000 n
0000956114 00000 n
0000956209 00000 n
0000956306 00000 n
0000956385 00000 n
0000956422 00000 n
0000956554 00000 n
0000956609 00000 n
0000956645 00000 n
0000956835 00000 n
0000956895 00000 n
0000956998 00000 n
0000957234 00000 n
0000957342 00000 n
0000957370 00000 n
0000957554 00000 n
0000957627 00000 n
0000957854 00000 n
0000958082 00000 n
0000958311 00000 n
0000958538 00000 n
0000958583 00000 n
0000958817 00000 n
0000958864 00000 n
0000959087 00000 n
0000959115 00000 n
0000959303 00000 n
0000959367 00000 n
0000959598 00000 n
0000959830 00000 n
0000960063 00000 n
0000960294 00000 n
0000964898 00000 n
0000968770 00000 n
0000968858 00000 n
0000968955 00000 n
0000969034 00000 n
0000969070 00000 n
0000969202 00000 n
0000969257 00000 n
0000969293 00000 n
0000969369 00000 n
0000970385 00000 n
0000970546 00000 n
0000970707 00000 n
0000970890 00000 n
0000970950 00000 n
0000971117 00000 n
0000971392 00000 n
0000971420 00000 n
0000971609 00000 n
0000971682 00000 n
0000971913 00000 n
0000972144 00000 n
0000972376 00000 n
0000972606 00000 n
0000972653 00000 n
0000972890 00000 n
0000972937 00000 n
0000972984 00000 n
0000973031 00000 n
0000973249 00000 n
0000973277 00000 n
0000973495 00000 n
0000973523 00000 n
0000973731 00000 n
0000973839 00000 n
0000973867 00000 n
0000974056 00000 n
0000974120 00000 n
0000974351 00000 n
0000974582 00000 n
0000974814 00000 n
0000975044 00000 n
0000975140 00000 n
0000980120 00000 n
0000984072 00000 n
0000988166 00000 n
0000989805 00000 n
0000989903 00000 n
0000990000 00000 n
0000990079 00000 n
0000990115 00000 n
0000990265 00000 n
0000990320 00000 n
0000990356 00000 n
0000990549 00000 n
0000990609 00000 n
0000990744 00000 n
0000990981 00000 n
0000991009 00000 n
0000991193 00000 n
0000991266 00000 n
0000991493 00000 n
0000991721 00000 n
0000991950 00000 n
0000992177 00000 n
0000992222 00000 n
0000992456 00000 n
0000992650 00000 n
0000992678 00000 n
0000992888 00000 n
0000992916 00000 n
0000993104 00000 n
0000993168 00000 n
0000993399 00000 n
0000993631 00000 n
0000993864 00000 n
0000994095 00000 n
0000997490 00000 n
0000999980 00000 n
0001002290 00000 n
0001002395 00000 n
0001002492 00000 n
0001002571 00000 n
0001002607 00000 n
0001002748 00000 n
0001002803 00000 n
0001002839 00000 n
0001003039 00000 n
0001003099 00000 n
0001003202 00000 n
0001003438 00000 n
0001003466 00000 n
0001003650 00000 n
0001003732 00000 n
0001003959 00000 n
0001004187 00000 n
0001004416 00000 n
0001004643 00000 n
0001004688 00000 n
0001004922 00000 n
0001004969 00000 n
0001005016 00000 n
0001005063 00000 n
0001005110 00000 n
0001005308 00000 n
0001005531 00000 n
0001005639 00000 n
0001005667 00000 n
0001005855 00000 n
0001005919 00000 n
0001006150 00000 n
0001006382 00000 n
0001006615 00000 n
0001006846 00000 n
0001011498 00000 n
0001016712 00000 n
0001016797 00000 n
0001016894 00000 n
0001016973 00000 n
0001017009 00000 n
0001017141 00000 n
0001017196 00000 n
0001017235 00000 n
0001017415 00000 n
0001017475 00000 n
0001017545 00000 n
0001017769 00000 n
0001017878 00000 n
0001017906 00000 n
0001018090 00000 n
0001018208 00000 n
0001018435 00000 n
0001018663 00000 n
0001018892 00000 n
0001019119 00000 n
0001019164 00000 n
0001019398 00000 n
0001019445 00000 n
0001019633 00000 n
0001019864 00000 n
0001020096 00000 n
0001020329 00000 n
0001020560 00000 n
0001023970 00000 n
0001024046 00000 n
0001024143 00000 n
0001024222 00000 n
0001024258 00000 n
0001024381 00000 n
0001024436 00000 n
0001024474 00000 n
0001024645 00000 n
0001024705 00000 n
0001024808 00000 n
0001025057 00000 n
0001025085 00000 n
0001025269 00000 n
0001025360 00000 n
0001025587 00000 n
0001025815 00000 n
0001026044 00000 n
0001026271 00000 n
0001026316 00000 n
0001026550 00000 n
0001026597 00000 n
0001026644 00000 n
0001026691 00000 n
0001026925 00000 n
0001027159 00000 n
0001027356 00000 n
0001027384 00000 n
0001027568 00000 n
0001027632 00000 n
0001027859 00000 n
0001028087 00000 n
0001028316 00000 n
0001028543 00000 n
0001033126 00000 n
0001034803 00000 n
0001034896 00000 n
0001034993 00000 n
0001035072 00000 n
0001035108 00000 n
0001035240 00000 n
0001035295 00000 n
0001035331 00000 n
0001035519 00000 n
0001035579 00000 n
0001035649 00000 n
0001035885 00000 n
0001035913 00000 n
0001036339 00000 n
0001036383 00000 n
0001036567 00000 n
0001036685 00000 n
0001036912 00000 n
0001037140 00000 n
0001037369 00000 n
0001037596 00000 n
0001037641 00000 n
0001037875 00000 n
0001038063 00000 n
0001038294 00000 n
0001038526 00000 n
0001038759 00000 n
0001038990 00000 n
0001042883 00000 n
0001042979 00000 n
0001043076 00000 n
0001043155 00000 n
0001043192 00000 n
0001043315 00000 n
0001043370 00000 n
0001043406 00000 n
0001043597 00000 n
0001043657 00000 n
0001043824 00000 n
0001044071 00000 n
0001044179 00000 n
0001044207 00000 n
0001044397 00000 n
0001044470 00000 n
0001044702 00000 n
0001044934 00000 n
0001045166 00000 n
0001045397 00000 n
0001045444 00000 n
0001045681 00000 n
0001045899 00000 n
0001045927 00000 n
0001046161 00000 n
0001046189 00000 n
0001046236 00000 n
0001046435 00000 n
0001046463 00000 n
0001046710 00000 n
0001046738 00000 n
0001046978 00000 n
0001047051 00000 n
0001047240 00000 n
0001047471 00000 n
0001047702 00000 n
0001047933 00000 n
0001048163 00000 n
0001052853 00000 n
0001057089 00000 n
0001062205 00000 n
0001065869 00000 n
0001065973 00000 n
0001066070 00000 n
0001066149 00000 n
0001066186 00000 n
0001066336 00000 n
0001066391 00000 n
0001066427 00000 n
0001066626 00000 n
0001066686 00000 n
0001066789 00000 n
0001067039 00000 n
0001067067 00000 n
0001067251 00000 n
0001067324 00000 n
0001067551 00000 n
0001067779 00000 n
0001068008 00000 n
0001068235 00000 n
0001068280 00000 n
0001068513 00000 n
0001068560 00000 n
0001068607 00000 n
0001068817 00000 n
0001068925 00000 n
0001068953 00000 n
0001069137 00000 n
0001069201 00000 n
0001069428 00000 n
0001069656 00000 n
0001069885 00000 n
0001070112 00000 n
0001074929 00000 n
0001076747 00000 n
0001076832 00000 n
0001076929 00000 n
0001077008 00000 n
0001077044 00000 n
0001077176 00000 n
0001077231 00000 n
0001077268 00000 n
0001077448 00000 n
0001077508 00000 n
0001077578 00000 n
0001077801 00000 n
0001077829 00000 n
0001078013 00000 n
0001078131 00000 n
0001078358 00000 n
0001078586 00000 n
0001078815 00000 n
0001079042 00000 n
0001079087 00000 n
0001079321 00000 n
0001079368 00000 n
0001079556 00000 n
0001079787 00000 n
0001080019 00000 n
0001080252 00000 n
0001080483 00000 n
0001084418 00000 n
0001084495 00000 n
0001084592 00000 n
0001084671 00000 n
0001084707 00000 n
0001084830 00000 n
0001084885 00000 n
0001084921 00000 n
0001085093 00000 n
0001085153 00000 n
0001085223 00000 n
0001085459 00000 n
0001085487 00000 n
0001085671 00000 n
0001085798 00000 n
0001086025 00000 n
0001086253 00000 n
0001086482 00000 n
0001086709 00000 n
0001086754 00000 n
0001086988 00000 n
0001087228 00000 n
0001087416 00000 n
0001087647 00000 n
0001087879 00000 n
0001088112 00000 n
0001088343 00000 n
0001092945 00000 n
0001093029 00000 n
0001093126 00000 n
0001093205 00000 n
0001093241 00000 n
0001093364 00000 n
0001093419 00000 n
0001093456 00000 n
0001093635 00000 n
0001093695 00000 n
0001093765 00000 n
0001094001 00000 n
0001094029 00000 n
0001094213 00000 n
0001094331 00000 n
0001094558 00000 n
0001094786 00000 n
0001095015 00000 n
0001095242 00000 n
0001095287 00000 n
0001095521 00000 n
0001095709 00000 n
0001095940 00000 n
0001096172 00000 n
0001096405 00000 n
0001096636 00000 n
0001100946 00000 n
0001101037 00000 n
0001101134 00000 n
0001101213 00000 n
0001101251 00000 n
0001101374 00000 n
0001101429 00000 n
0001101466 00000 n
0001101652 00000 n
0001101712 00000 n
0001101782 00000 n
0001101992 00000 n
0001102020 00000 n
0001102204 00000 n
0001102322 00000 n
0001102549 00000 n
0001102736 00000 n
0001102965 00000 n
0001103192 00000 n
0001103237 00000 n
0001103470 00000 n
0001103658 00000 n
0001103889 00000 n
0001104080 00000 n
0001104313 00000 n
0001104544 00000 n
0001107010 00000 n
0001107104 00000 n
0001107201 00000 n
0001107280 00000 n
0001107317 00000 n
0001107440 00000 n
0001107495 00000 n
0001107532 00000 n
0001107721 00000 n
0001107781 00000 n
0001107851 00000 n
0001108074 00000 n
0001108182 00000 n
0001108210 00000 n
0001108394 00000 n
0001108602 00000 n
0001108788 00000 n
0001109016 00000 n
0001109245 00000 n
0001109472 00000 n
0001109517 00000 n
0001109751 00000 n
0001109984 00000 n
0001110222 00000 n
0001110457 00000 n
0001110694 00000 n
0001110931 00000 n
0001111167 00000 n
0001111404 00000 n
0001111640 00000 n
0001111876 00000 n
0001112108 00000 n
0001112296 00000 n
0001112486 00000 n
0001112718 00000 n
0001112951 00000 n
0001113182 00000 n
0001118475 00000 n
0001118573 00000 n
0001118670 00000 n
0001118749 00000 n
0001118785 00000 n
0001118908 00000 n
0001118963 00000 n
0001118999 00000 n
0001119192 00000 n
0001119252 00000 n
0001119355 00000 n
0001119591 00000 n
0001119619 00000 n
0001119803 00000 n
0001119876 00000 n
0001120103 00000 n
0001120331 00000 n
0001120560 00000 n
0001120787 00000 n
0001120832 00000 n
0001121066 00000 n
0001121113 00000 n
0001121323 00000 n
0001121351 00000 n
0001121583 00000 n
0001121746 00000 n
0001121974 00000 n
0001122205 00000 n
0001122435 00000 n
0001122664 00000 n
0001122893 00000 n
0001123125 00000 n
0001123354 00000 n
0001123583 00000 n
0001123813 00000 n
0001124040 00000 n
0001124224 00000 n
0001124451 00000 n
0001124679 00000 n
0001124908 00000 n
0001125135 00000 n
0001129738 00000 n
0001133825 00000 n
0001133917 00000 n
0001134014 00000 n
0001134093 00000 n
0001134129 00000 n
0001134261 00000 n
0001134316 00000 n
0001134355 00000 n
0001134542 00000 n
0001134602 00000 n
0001134705 00000 n
0001134955 00000 n
0001134983 00000 n
0001135167 00000 n
0001135240 00000 n
0001135467 00000 n
0001135695 00000 n
0001135924 00000 n
0001136151 00000 n
0001136196 00000 n
0001136429 00000 n
0001136476 00000 n
0001136686 00000 n
0001136714 00000 n
0001136902 00000 n
0001136966 00000 n
0001137197 00000 n
0001137429 00000 n
0001137662 00000 n
0001137893 00000 n
0001142351 00000 n
0001145396 00000 n
0001145482 00000 n
0001145579 00000 n
0001145658 00000 n
0001145695 00000 n
0001145827 00000 n
0001145882 00000 n
0001145918 00000 n
0001146099 00000 n
0001146159 00000 n
0001146262 00000 n
0001146485 00000 n
0001146593 00000 n
0001146621 00000 n
0001146805 00000 n
0001146878 00000 n
0001147105 00000 n
0001147333 00000 n
0001147562 00000 n
0001147789 00000 n
0001147834 00000 n
0001148068 00000 n
0001148115 00000 n
0001148338 00000 n
0001148366 00000 n
0001148554 00000 n
0001148618 00000 n
0001148849 00000 n
0001149081 00000 n
0001149314 00000 n
0001149545 00000 n
0001154267 00000 n
0001157298 00000 n
0001157393 00000 n
0001157490 00000 n
0001157569 00000 n
0001157605 00000 n
0001157737 00000 n
0001157792 00000 n
0001157828 00000 n
0001158018 00000 n
0001158078 00000 n
0001158148 00000 n
0001158371 00000 n
0001158399 00000 n
0001158583 00000 n
0001158701 00000 n
0001158928 00000 n
0001159156 00000 n
0001159385 00000 n
0001159612 00000 n
0001159657 00000 n
0001159891 00000 n
0001160079 00000 n
0001160310 00000 n
0001160542 00000 n
0001160775 00000 n
0001161006 00000 n
0001164997 00000 n
0001165091 00000 n
0001165188 00000 n
0001165267 00000 n
0001165303 00000 n
0001165426 00000 n
0001165481 00000 n
0001165517 00000 n
0001165706 00000 n
0001165766 00000 n
0001165836 00000 n
0001166059 00000 n
0001166087 00000 n
0001166271 00000 n
0001166389 00000 n
0001166616 00000 n
0001166844 00000 n
0001167073 00000 n
0001167300 00000 n
0001167345 00000 n
0001167578 00000 n
0001167625 00000 n
0001167672 00000 n
0001167719 00000 n
0001167766 00000 n
0001167954 00000 n
0001168185 00000 n
0001168417 00000 n
0001168650 00000 n
0001168881 00000 n
0001173176 00000 n
0001173266 00000 n
0001173363 00000 n
0001173442 00000 n
0001173479 00000 n
0001173602 00000 n
0001173657 00000 n
0001173693 00000 n
0001173878 00000 n
0001173938 00000 n
0001174008 00000 n
0001174231 00000 n
0001174259 00000 n
0001174443 00000 n
0001174561 00000 n
0001174788 00000 n
0001175016 00000 n
0001175245 00000 n
0001175472 00000 n
0001175517 00000 n
0001175751 00000 n
0001175798 00000 n
0001175845 00000 n
0001176033 00000 n
0001176264 00000 n
0001176496 00000 n
0001176729 00000 n
0001176960 00000 n
0001180566 00000 n
0001180651 00000 n
0001180748 00000 n
0001180827 00000 n
0001180863 00000 n
0001180986 00000 n
0001181041 00000 n
0001181077 00000 n
0001181257 00000 n
0001181317 00000 n
0001181452 00000 n
0001181675 00000 n
0001181783 00000 n
0001181811 00000 n
0001181995 00000 n
0001182068 00000 n
0001182295 00000 n
0001182523 00000 n
0001182752 00000 n
0001182979 00000 n
0001183024 00000 n
0001183258 00000 n
0001183465 00000 n
0001183574 00000 n
0001183602 00000 n
0001183812 00000 n
0001183840 00000 n
0001184028 00000 n
0001184092 00000 n
0001184323 00000 n
0001184555 00000 n
0001184788 00000 n
0001185019 00000 n
0001189006 00000 n
0001192131 00000 n
0001195629 00000 n
0001195723 00000 n
0001195820 00000 n
0001195899 00000 n
0001195935 00000 n
0001196076 00000 n
0001196131 00000 n
0001196167 00000 n
0001196356 00000 n
0001196416 00000 n
0001196519 00000 n
0001196755 00000 n
0001196783 00000 n
0001196967 00000 n
0001197040 00000 n
0001197267 00000 n
0001197495 00000 n
0001197724 00000 n
0001197951 00000 n
0001197996 00000 n
0001198230 00000 n
0001198453 00000 n
0001198481 00000 n
0001198669 00000 n
0001198733 00000 n
0001198964 00000 n
0001199196 00000 n
0001199429 00000 n
0001199660 00000 n
0001203572 00000 n
0001207018 00000 n
0001207114 00000 n
0001207211 00000 n
0001207290 00000 n
0001207327 00000 n
0001207459 00000 n
0001207514 00000 n
0001207550 00000 n
0001207741 00000 n
0001207801 00000 n
0001207904 00000 n
0001208127 00000 n
0001208235 00000 n
0001208263 00000 n
0001208447 00000 n
0001208520 00000 n
0001208747 00000 n
0001208975 00000 n
0001209204 00000 n
0001209431 00000 n
0001209476 00000 n
0001209709 00000 n
0001209919 00000 n
0001209947 00000 n
0001210131 00000 n
0001210195 00000 n
0001210422 00000 n
0001210650 00000 n
0001210879 00000 n
0001211106 00000 n
0001214820 00000 n
0001216458 00000 n
0001216539 00000 n
0001216636 00000 n
0001216715 00000 n
0001216751 00000 n
0001216883 00000 n
0001216938 00000 n
0001216974 00000 n
0001217150 00000 n
0001217210 00000 n
0001217280 00000 n
0001217490 00000 n
0001217518 00000 n
0001217702 00000 n
0001217820 00000 n
0001218047 00000 n
0001218275 00000 n
0001218504 00000 n
0001218731 00000 n
0001218776 00000 n
0001219010 00000 n
0001219198 00000 n
0001219429 00000 n
0001219661 00000 n
0001219894 00000 n
0001220125 00000 n
0001222620 00000 n
0001222723 00000 n
0001222820 00000 n
0001222899 00000 n
0001222935 00000 n
0001223058 00000 n
0001223113 00000 n
0001223149 00000 n
0001223347 00000 n
0001223407 00000 n
0001223477 00000 n
0001223701 00000 n
0001223729 00000 n
0001223913 00000 n
0001224031 00000 n
0001224258 00000 n
0001224486 00000 n
0001224715 00000 n
0001224942 00000 n
0001224987 00000 n
0001225218 00000 n
0001225406 00000 n
0001225637 00000 n
0001225869 00000 n
0001226102 00000 n
0001226333 00000 n
0001228822 00000 n
0001228903 00000 n
0001229000 00000 n
0001229079 00000 n
0001229115 00000 n
0001229238 00000 n
0001229293 00000 n
0001229329 00000 n
0001229505 00000 n
0001229565 00000 n
0001229635 00000 n
0001229872 00000 n
0001229900 00000 n
0001230084 00000 n
0001230211 00000 n
0001230438 00000 n
0001230666 00000 n
0001230895 00000 n
0001231122 00000 n
0001231167 00000 n
0001231398 00000 n
0001231633 00000 n
0001231821 00000 n
0001232052 00000 n
0001232284 00000 n
0001232517 00000 n
0001232748 00000 n
0001235953 00000 n
0001236040 00000 n
0001236137 00000 n
0001236216 00000 n
0001236252 00000 n
0001236375 00000 n
0001236430 00000 n
0001236466 00000 n
0001236648 00000 n
0001236708 00000 n
0001236939 00000 n
0001237175 00000 n
0001237283 00000 n
0001237311 00000 n
0001237495 00000 n
0001237568 00000 n
0001237795 00000 n
0001238023 00000 n
0001238252 00000 n
0001238479 00000 n
0001238524 00000 n
0001238758 00000 n
0001238965 00000 n
0001238993 00000 n
0001239448 00000 n
0001239493 00000 n
0001239700 00000 n
0001239728 00000 n
0001239935 00000 n
0001239963 00000 n
0001240010 00000 n
0001240057 00000 n
0001240264 00000 n
0001240292 00000 n
0001240338 00000 n
0001240548 00000 n
0001240656 00000 n
0001240684 00000 n
0001240919 00000 n
0001240992 00000 n
0001241180 00000 n
0001241411 00000 n
0001241643 00000 n
0001241876 00000 n
0001242107 00000 n
0001246819 00000 n
0001249980 00000 n
0001252636 00000 n
0001255583 00000 n
0001258930 00000 n
0001261208 00000 n
0001261298 00000 n
0001261395 00000 n
0001261474 00000 n
0001261511 00000 n
0001261679 00000 n
0001261734 00000 n
0001261771 00000 n
0001261956 00000 n
0001262016 00000 n
0001262247 00000 n
0001262496 00000 n
0001262524 00000 n
0001262708 00000 n
0001262781 00000 n
0001263008 00000 n
0001263236 00000 n
0001263465 00000 n
0001263692 00000 n
0001263737 00000 n
0001263971 00000 n
0001264018 00000 n
0001264225 00000 n
0001264253 00000 n
0001264460 00000 n
0001264488 00000 n
0001264535 00000 n
0001264729 00000 n
0001264757 00000 n
0001264964 00000 n
0001265072 00000 n
0001265100 00000 n
0001265323 00000 n
0001265351 00000 n
0001265587 00000 n
0001265660 00000 n
0001265848 00000 n
0001266079 00000 n
0001266311 00000 n
0001266544 00000 n
0001266775 00000 n
0001271502 00000 n
0001273820 00000 n
0001277427 00000 n
0001280253 00000 n
0001283453 00000 n
0001285923 00000 n
0001285999 00000 n
0001286096 00000 n
0001286175 00000 n
0001286211 00000 n
0001286379 00000 n
0001286434 00000 n
0001286470 00000 n
0001286641 00000 n
0001286701 00000 n
0001286804 00000 n
0001287027 00000 n
0001287055 00000 n
0001287239 00000 n
0001287312 00000 n
0001287539 00000 n
0001287767 00000 n
0001287996 00000 n
0001288223 00000 n
0001288268 00000 n
0001288504 00000 n
0001288740 00000 n
0001288768 00000 n
0001289003 00000 n
0001289085 00000 n
0001289322 00000 n
0001289510 00000 n
0001289741 00000 n
0001289973 00000 n
0001290206 00000 n
0001290437 00000 n
0001294205 00000 n
0001297373 00000 n
0001297460 00000 n
0001297557 00000 n
0001297636 00000 n
0001297673 00000 n
0001297805 00000 n
0001297860 00000 n
0001297896 00000 n
0001298078 00000 n
0001298138 00000 n
0001298241 00000 n
0001298490 00000 n
0001298518 00000 n
0001298702 00000 n
0001298775 00000 n
0001299002 00000 n
0001299230 00000 n
0001299459 00000 n
0001299686 00000 n
0001299731 00000 n
0001299967 00000 n
0001300014 00000 n
0001300224 00000 n
0001300332 00000 n
0001300360 00000 n
0001300548 00000 n
0001300612 00000 n
0001300843 00000 n
0001301075 00000 n
0001301308 00000 n
0001301539 00000 n
0001305947 00000 n
0001308780 00000 n
0001308872 00000 n
0001308969 00000 n
0001309048 00000 n
0001309084 00000 n
0001309216 00000 n
0001309271 00000 n
0001309309 00000 n
0001309496 00000 n
0001309556 00000 n
0001309659 00000 n
0001309895 00000 n
0001310004 00000 n
0001310032 00000 n
0001310216 00000 n
0001310289 00000 n
0001310516 00000 n
0001310744 00000 n
0001310973 00000 n
0001311200 00000 n
0001311245 00000 n
0001311481 00000 n
0001311691 00000 n
0001311719 00000 n
0001311951 00000 n
0001312024 00000 n
0001312208 00000 n
0001312435 00000 n
0001312663 00000 n
0001312892 00000 n
0001313119 00000 n
0001317493 00000 n
0001320067 00000 n
0001320163 00000 n
0001320260 00000 n
0001320339 00000 n
0001320375 00000 n
0001320507 00000 n
0001320562 00000 n
0001320598 00000 n
0001320789 00000 n
0001320849 00000 n
0001320919 00000 n
0001321156 00000 n
0001321184 00000 n
0001321368 00000 n
0001321495 00000 n
0001321722 00000 n
0001321950 00000 n
0001322179 00000 n
0001322406 00000 n
0001322451 00000 n
0001322686 00000 n
0001322922 00000 n
0001323110 00000 n
0001323341 00000 n
0001323573 00000 n
0001323806 00000 n
0001324037 00000 n
0001327499 00000 n
0001327585 00000 n
0001327682 00000 n
0001327761 00000 n
0001327797 00000 n
0001327920 00000 n
0001327975 00000 n
0001328011 00000 n
0001328192 00000 n
0001328252 00000 n
0001328419 00000 n
0001328668 00000 n
0001328696 00000 n
0001328880 00000 n
0001328971 00000 n
0001329198 00000 n
0001329426 00000 n
0001329655 00000 n
0001329882 00000 n
0001329927 00000 n
0001330163 00000 n
0001330397 00000 n
0001330444 00000 n
0001330680 00000 n
0001330887 00000 n
0001330995 00000 n
0001331023 00000 n
0001331230 00000 n
0001331258 00000 n
0001331468 00000 n
0001331496 00000 n
0001331684 00000 n
0001331748 00000 n
0001331979 00000 n
0001332211 00000 n
0001332444 00000 n
0001332675 00000 n
0001336741 00000 n
0001340229 00000 n
0001343466 00000 n
0001345589 00000 n
0001345676 00000 n
0001345773 00000 n
0001345852 00000 n
0001345888 00000 n
0001346038 00000 n
0001346093 00000 n
0001346129 00000 n
0001346858 00000 n
0001347623 00000 n
0001347805 00000 n
0001347865 00000 n
0001348000 00000 n
0001348236 00000 n
0001348264 00000 n
0001348448 00000 n
0001348521 00000 n
0001348748 00000 n
0001348977 00000 n
0001349206 00000 n
0001349433 00000 n
0001349478 00000 n
0001349714 00000 n
0001349908 00000 n
0001349936 00000 n
0001350146 00000 n
0001350254 00000 n
0001350282 00000 n
0001350521 00000 n
0001350594 00000 n
0001350782 00000 n
0001351013 00000 n
0001351246 00000 n
0001351479 00000 n
0001351710 00000 n
0001356219 00000 n
0001359476 00000 n
0001363399 00000 n
0001363511 00000 n
0001363608 00000 n
0001363687 00000 n
0001363723 00000 n
0001363864 00000 n
0001363919 00000 n
0001363955 00000 n
0001364162 00000 n
0001364222 00000 n
0001364389 00000 n
0001364612 00000 n
0001364640 00000 n
0001364824 00000 n
0001364906 00000 n
0001365133 00000 n
0001365362 00000 n
0001365591 00000 n
0001365818 00000 n
0001365863 00000 n
0001366098 00000 n
0001366145 00000 n
0001366381 00000 n
0001366617 00000 n
0001366645 00000 n
0001366692 00000 n
0001366927 00000 n
0001366955 00000 n
0001367149 00000 n
0001367177 00000 n
0001367413 00000 n
0001367441 00000 n
0001367488 00000 n
0001367724 00000 n
0001367797 00000 n
0001367985 00000 n
0001368216 00000 n
0001368449 00000 n
0001368682 00000 n
0001368913 00000 n
0001373299 00000 n
0001377349 00000 n
0001380590 00000 n
0001384507 00000 n
0001384610 00000 n
0001384708 00000 n
0001384788 00000 n
0001384825 00000 n
0001384975 00000 n
0001385030 00000 n
0001385067 00000 n
0001385265 00000 n
0001385325 00000 n
0001385395 00000 n
0001385631 00000 n
0001385739 00000 n
0001385767 00000 n
0001385951 00000 n
0001386105 00000 n
0001386333 00000 n
0001386562 00000 n
0001386791 00000 n
0001387018 00000 n
0001387063 00000 n
0001387299 00000 n
0001387346 00000 n
0001387583 00000 n
0001387818 00000 n
0001388053 00000 n
0001388284 00000 n
0001388472 00000 n
0001388704 00000 n
0001388937 00000 n
0001389170 00000 n
0001389401 00000 n
0001394871 00000 n
0001394970 00000 n
0001395068 00000 n
0001395148 00000 n
0001395184 00000 n
0001395307 00000 n
0001395362 00000 n
0001395398 00000 n
0001395592 00000 n
0001395652 00000 n
0001395787 00000 n
0001396010 00000 n
0001396038 00000 n
0001396222 00000 n
0001396295 00000 n
0001396523 00000 n
0001396752 00000 n
0001396981 00000 n
0001397208 00000 n
0001397253 00000 n
0001397487 00000 n
0001397534 00000 n
0001397728 00000 n
0001397756 00000 n
0001397953 00000 n
0001397981 00000 n
0001398441 00000 n
0001398486 00000 n
0001398670 00000 n
0001398734 00000 n
0001398962 00000 n
0001399191 00000 n
0001399420 00000 n
0001399647 00000 n
0001403878 00000 n
0001407245 00000 n
0001408506 00000 n
0001408584 00000 n
0001408682 00000 n
0001408762 00000 n
0001408798 00000 n
0001408939 00000 n
0001408994 00000 n
0001409030 00000 n
0001409203 00000 n
0001409263 00000 n
0001409398 00000 n
0001409634 00000 n
0001409662 00000 n
0001409846 00000 n
0001409919 00000 n
0001410147 00000 n
0001410376 00000 n
0001410605 00000 n
0001410832 00000 n
0001410877 00000 n
0001411113 00000 n
0001411160 00000 n
0001411367 00000 n
0001411475 00000 n
0001411503 00000 n
0001411713 00000 n
0001411741 00000 n
0001411929 00000 n
0001411993 00000 n
0001412225 00000 n
0001412458 00000 n
0001412691 00000 n
0001412922 00000 n
0001417053 00000 n
0001420847 00000 n
0001425078 00000 n
0001425156 00000 n
0001425254 00000 n
0001425334 00000 n
0001425370 00000 n
0001425511 00000 n
0001425566 00000 n
0001425603 00000 n
0001425776 00000 n
0001425836 00000 n
0001425939 00000 n
0001426175 00000 n
0001426203 00000 n
0001426387 00000 n
0001426460 00000 n
0001426688 00000 n
0001426917 00000 n
0001427146 00000 n
0001427373 00000 n
0001427418 00000 n
0001427650 00000 n
0001427695 00000 n
0001427783 00000 n
0001427872 00000 n
0001428082 00000 n
0001428110 00000 n
0001428298 00000 n
0001428362 00000 n
0001428594 00000 n
0001428827 00000 n
0001429060 00000 n
0001429291 00000 n
0001434922 00000 n
0001437925 00000 n
0001438007 00000 n
0001438105 00000 n
0001438185 00000 n
0001438221 00000 n
0001438353 00000 n
0001438408 00000 n
0001438444 00000 n
0001438621 00000 n
0001438681 00000 n
0001438880 00000 n
0001439116 00000 n
0001439144 00000 n
0001439328 00000 n
0001439410 00000 n
0001439638 00000 n
0001439867 00000 n
0001440096 00000 n
0001440323 00000 n
0001440368 00000 n
0001440604 00000 n
0001440651 00000 n
0001440887 00000 n
0001440933 00000 n
0001441156 00000 n
0001441264 00000 n
0001441292 00000 n
0001441339 00000 n
0001441575 00000 n
0001441603 00000 n
0001441797 00000 n
0001441906 00000 n
0001441934 00000 n
0001441980 00000 n
0001442026 00000 n
0001442233 00000 n
0001442261 00000 n
0001442308 00000 n
0001442355 00000 n
0001442578 00000 n
0001442606 00000 n
0001442842 00000 n
0001442915 00000 n
0001443101 00000 n
0001443331 00000 n
0001443562 00000 n
0001443793 00000 n
0001444022 00000 n
0001448109 00000 n
0001451834 00000 n
0001455305 00000 n
0001460239 00000 n
0001463255 00000 n
0001463337 00000 n
0001463435 00000 n
0001463515 00000 n
0001463551 00000 n
0001463710 00000 n
0001463765 00000 n
0001463801 00000 n
0001463978 00000 n
0001464038 00000 n
0001464237 00000 n
0001464498 00000 n
0001464526 00000 n
0001464714 00000 n
0001464805 00000 n
0001465037 00000 n
0001465269 00000 n
0001465501 00000 n
0001465731 00000 n
0001465778 00000 n
0001466017 00000 n
0001466064 00000 n
0001466303 00000 n
0001466350 00000 n
0001466589 00000 n
0001466636 00000 n
0001466683 00000 n
0001466918 00000 n
0001467026 00000 n
0001467054 00000 n
0001467101 00000 n
0001467340 00000 n
0001467377 00000 n
0001467424 00000 n
0001467663 00000 n
0001467937 00000 n
0001467965 00000 n
0001468012 00000 n
0001468250 00000 n
0001468278 00000 n
0001468325 00000 n
0001468372 00000 n
0001468419 00000 n
0001468680 00000 n
0001468708 00000 n
0001468946 00000 n
0001468983 00000 n
0001469030 00000 n
0001469077 00000 n
0001469316 00000 n
0001469363 00000 n
0001469410 00000 n
0001469631 00000 n
0001469659 00000 n
0001469848 00000 n
0001469912 00000 n
0001470145 00000 n
0001470378 00000 n
0001470611 00000 n
0001470842 00000 n
0001476092 00000 n
0001480204 00000 n
0001484769 00000 n
0001489552 00000 n
0001493338 00000 n
0001493435 00000 n
0001493533 00000 n
0001493613 00000 n
0001493650 00000 n
0001493809 00000 n
0001493864 00000 n
0001493900 00000 n
0001494092 00000 n
0001494152 00000 n
0001494222 00000 n
0001494445 00000 n
0001494473 00000 n
0001494657 00000 n
0001494775 00000 n
0001495003 00000 n
0001495232 00000 n
0001495461 00000 n
0001495688 00000 n
0001495733 00000 n
0001495969 00000 n
0001496157 00000 n
0001496389 00000 n
0001496622 00000 n
0001496855 00000 n
0001497086 00000 n
0001500238 00000 n
0001500331 00000 n
0001500429 00000 n
0001500509 00000 n
0001500545 00000 n
0001500668 00000 n
0001500723 00000 n
0001500760 00000 n
0001500948 00000 n
0001501008 00000 n
0001501175 00000 n
0001501411 00000 n
0001501519 00000 n
0001501547 00000 n
0001501731 00000 n
0001501804 00000 n
0001502032 00000 n
0001502261 00000 n
0001502490 00000 n
0001502717 00000 n
0001502762 00000 n
0001502998 00000 n
0001503045 00000 n
0001503239 00000 n
0001503267 00000 n
0001503461 00000 n
0001503489 00000 n
0001503699 00000 n
0001503727 00000 n
0001503915 00000 n
0001503979 00000 n
0001504211 00000 n
0001504444 00000 n
0001504677 00000 n
0001504908 00000 n
0001509378 00000 n
0001513596 00000 n
0001517007 00000 n
0001520151 00000 n
0001520246 00000 n
0001520344 00000 n
0001520424 00000 n
0001520460 00000 n
0001520610 00000 n
0001520665 00000 n
0001520701 00000 n
0001521514 00000 n
0001522446 00000 n
0001522636 00000 n
0001522696 00000 n
0001522766 00000 n
0001522976 00000 n
0001523004 00000 n
0001523188 00000 n
0001523306 00000 n
0001523534 00000 n
0001523763 00000 n
0001523992 00000 n
0001524219 00000 n
0001524264 00000 n
0001524500 00000 n
0001524547 00000 n
0001524594 00000 n
0001524641 00000 n
0001524829 00000 n
0001525061 00000 n
0001525294 00000 n
0001525527 00000 n
0001525758 00000 n
0001528232 00000 n
0001528324 00000 n
0001528422 00000 n
0001528502 00000 n
0001528538 00000 n
0001528661 00000 n
0001528716 00000 n
0001528754 00000 n
0001528941 00000 n
0001529001 00000 n
0001529104 00000 n
0001529340 00000 n
0001529448 00000 n
0001529476 00000 n
0001529660 00000 n
0001529733 00000 n
0001529961 00000 n
0001530190 00000 n
0001530419 00000 n
0001530646 00000 n
0001530691 00000 n
0001530927 00000 n
0001530974 00000 n
0001531224 00000 n
0001531252 00000 n
0001531299 00000 n
0001531533 00000 n
0001531606 00000 n
0001531794 00000 n
0001532026 00000 n
0001532259 00000 n
0001532492 00000 n
0001532723 00000 n
0001537144 00000 n
0001541094 00000 n
0001541173 00000 n
0001541271 00000 n
0001541351 00000 n
0001541388 00000 n
0001541520 00000 n
0001541575 00000 n
0001541614 00000 n
0001541788 00000 n
0001541848 00000 n
0001541918 00000 n
0001542141 00000 n
0001542169 00000 n
0001542353 00000 n
0001542471 00000 n
0001542699 00000 n
0001542928 00000 n
0001543157 00000 n
0001543384 00000 n
0001543429 00000 n
0001543665 00000 n
0001543851 00000 n
0001544081 00000 n
0001544312 00000 n
0001544543 00000 n
0001544772 00000 n
0001547754 00000 n
0001547847 00000 n
0001547945 00000 n
0001548025 00000 n
0001548062 00000 n
0001548185 00000 n
0001548240 00000 n
0001548276 00000 n
0001548464 00000 n
0001548524 00000 n
0001548627 00000 n
0001548863 00000 n
0001548891 00000 n
0001549075 00000 n
0001549148 00000 n
0001549376 00000 n
0001549605 00000 n
0001549834 00000 n
0001550061 00000 n
0001550106 00000 n
0001550342 00000 n
0001550539 00000 n
0001550567 00000 n
0001550755 00000 n
0001550819 00000 n
0001551051 00000 n
0001551284 00000 n
0001551517 00000 n
0001551748 00000 n
0001556860 00000 n
0001559947 00000 n
0001560048 00000 n
0001560146 00000 n
0001560226 00000 n
0001560262 00000 n
0001560394 00000 n
0001560449 00000 n
0001560485 00000 n
0001560681 00000 n
0001560741 00000 n
0001560811 00000 n
0001561047 00000 n
0001561155 00000 n
0001561183 00000 n
0001561367 00000 n
0001561485 00000 n
0001561713 00000 n
0001561942 00000 n
0001562171 00000 n
0001562398 00000 n
0001562443 00000 n
0001562679 00000 n
0001562867 00000 n
0001563099 00000 n
0001563332 00000 n
0001563565 00000 n
0001563796 00000 n
0001567834 00000 n
0001567938 00000 n
0001568036 00000 n
0001568116 00000 n
0001568152 00000 n
0001568275 00000 n
0001568330 00000 n
0001568366 00000 n
0001568565 00000 n
0001568625 00000 n
0001568760 00000 n
0001569007 00000 n
0001569035 00000 n
0001569225 00000 n
0001569298 00000 n
0001569531 00000 n
0001569763 00000 n
0001569996 00000 n
0001570226 00000 n
0001570273 00000 n
0001570511 00000 n
0001570557 00000 n
0001570762 00000 n
0001570790 00000 n
0001570998 00000 n
0001571026 00000 n
0001571216 00000 n
0001571280 00000 n
0001571513 00000 n
0001571745 00000 n
0001571978 00000 n
0001572208 00000 n
0001577182 00000 n
0001581419 00000 n
0001582800 00000 n
0001582895 00000 n
0001582993 00000 n
0001583073 00000 n
0001583109 00000 n
0001583250 00000 n
0001583305 00000 n
0001583342 00000 n
0001583532 00000 n
0001583592 00000 n
0001583855 00000 n
0001584116 00000 n
0001584144 00000 n
0001584334 00000 n
0001584416 00000 n
0001584649 00000 n
0001584881 00000 n
0001585113 00000 n
0001585343 00000 n
0001585390 00000 n
0001585629 00000 n
0001585676 00000 n
0001585723 00000 n
0001585770 00000 n
0001586008 00000 n
0001586055 00000 n
0001586289 00000 n
0001586397 00000 n
0001586425 00000 n
0001586885 00000 n
0001586930 00000 n
0001586977 00000 n
0001587176 00000 n
0001587204 00000 n
0001587251 00000 n
0001587298 00000 n
0001587516 00000 n
0001587625 00000 n
0001587653 00000 n
0001587700 00000 n
0001587931 00000 n
0001587959 00000 n
0001588220 00000 n
0001588248 00000 n
0001588295 00000 n
0001588533 00000 n
0001588561 00000 n
0001588808 00000 n
0001588836 00000 n
0001588882 00000 n
0001589121 00000 n
0001589149 00000 n
0001589196 00000 n
0001589430 00000 n
0001589538 00000 n
0001589585 00000 n
0001589613 00000 n
0001589812 00000 n
0001589903 00000 n
0001589950 00000 n
0001590147 00000 n
0001590194 00000 n
0001590393 00000 n
0001590583 00000 n
0001590816 00000 n
0001591048 00000 n
0001591280 00000 n
0001591510 00000 n
0001596879 00000 n
0001602066 00000 n
0001606149 00000 n
0001611095 00000 n
0001616215 00000 n
0001621082 00000 n
0001625414 00000 n
0001625495 00000 n
0001625593 00000 n
0001625673 00000 n
0001625710 00000 n
0001625887 00000 n
0001625942 00000 n
0001625978 00000 n
0001626154 00000 n
0001626214 00000 n
0001626413 00000 n
0001626660 00000 n
0001626688 00000 n
0001626878 00000 n
0001626951 00000 n
0001627184 00000 n
0001627416 00000 n
0001627649 00000 n
0001627879 00000 n
0001627926 00000 n
0001628164 00000 n
0001628210 00000 n
0001628256 00000 n
0001628303 00000 n
0001630351 00000 n
0001631827 00000 n
0001632087 00000 n
0001632115 00000 n
0001632162 00000 n
0001632400 00000 n
0001632428 00000 n
0001632475 00000 n
0001632522 00000 n
0001632569 00000 n
0001632800 00000 n
0001632828 00000 n
0001632875 00000 n
0001633122 00000 n
0001633150 00000 n
0001633389 00000 n
0001633435 00000 n
0001633482 00000 n
0001633529 00000 n
0001633768 00000 n
0001633815 00000 n
0001634053 00000 n
0001634100 00000 n
0001634147 00000 n
0001634381 00000 n
0001634489 00000 n
0001634517 00000 n
0001634707 00000 n
0001634771 00000 n
0001635004 00000 n
0001635236 00000 n
0001635469 00000 n
0001635699 00000 n
0001639844 00000 n
0001644572 00000 n
0001651052 00000 n
0001656198 00000 n
0001661470 00000 n
0001661561 00000 n
0001661659 00000 n
0001661739 00000 n
0001661775 00000 n
0001661934 00000 n
0001661989 00000 n
0001662025 00000 n
0001662211 00000 n
0001662271 00000 n
0001662470 00000 n
0001662731 00000 n
0001662759 00000 n
0001662949 00000 n
0001663022 00000 n
0001663255 00000 n
0001663487 00000 n
0001663720 00000 n
0001663950 00000 n
0001663997 00000 n
0001664235 00000 n
0001664440 00000 n
0001664468 00000 n
0001664729 00000 n
0001664757 00000 n
0001664804 00000 n
0001665042 00000 n
0001665070 00000 n
0001665275 00000 n
0001665303 00000 n
0001665550 00000 n
0001665658 00000 n
0001665686 00000 n
0001665733 00000 n
0001665972 00000 n
0001666045 00000 n
0001666235 00000 n
0001666468 00000 n
0001666700 00000 n
0001666933 00000 n
0001667163 00000 n
0001671454 00000 n
0001675268 00000 n
0001679280 00000 n
0001682689 00000 n
0001686397 00000 n
0001686500 00000 n
0001686598 00000 n
0001686678 00000 n
0001686714 00000 n
0001686873 00000 n
0001686928 00000 n
0001686965 00000 n
0001687163 00000 n
0001687223 00000 n
0001687293 00000 n
0001687503 00000 n
0001687531 00000 n
0001687715 00000 n
0001687833 00000 n
0001688061 00000 n
0001688290 00000 n
0001688519 00000 n
0001688746 00000 n
0001688791 00000 n
0001689026 00000 n
0001689214 00000 n
0001689446 00000 n
0001689679 00000 n
0001689912 00000 n
0001690143 00000 n
0001692608 00000 n
0001692700 00000 n
0001692798 00000 n
0001692878 00000 n
0001692914 00000 n
0001693037 00000 n
0001693092 00000 n
0001693128 00000 n
0001693315 00000 n
0001693375 00000 n
0001693445 00000 n
0001693655 00000 n
0001693683 00000 n
0001693867 00000 n
0001693985 00000 n
0001694213 00000 n
0001694442 00000 n
0001694671 00000 n
0001694898 00000 n
0001694943 00000 n
0001695179 00000 n
0001695367 00000 n
0001695599 00000 n
0001695832 00000 n
0001696065 00000 n
0001696296 00000 n
0001698782 00000 n
0001698880 00000 n
0001698978 00000 n
0001699058 00000 n
0001699095 00000 n
0001699218 00000 n
0001699273 00000 n
0001699310 00000 n
0001699503 00000 n
0001699563 00000 n
0001699633 00000 n
0001699857 00000 n
0001699885 00000 n
0001700069 00000 n
0001700187 00000 n
0001700415 00000 n
0001700644 00000 n
0001700873 00000 n
0001701100 00000 n
0001701145 00000 n
0001701381 00000 n
0001701569 00000 n
0001701801 00000 n
0001702034 00000 n
0001702267 00000 n
0001702498 00000 n
0001705171 00000 n
0001705270 00000 n
0001705368 00000 n
0001705448 00000 n
0001705485 00000 n
0001705608 00000 n
0001705663 00000 n
0001705699 00000 n
0001705893 00000 n
0001705953 00000 n
0001706120 00000 n
0001706344 00000 n
0001706372 00000 n
0001706556 00000 n
0001706629 00000 n
0001706857 00000 n
0001707086 00000 n
0001707315 00000 n
0001707542 00000 n
0001707587 00000 n
0001707823 00000 n
0001708030 00000 n
0001708138 00000 n
0001708166 00000 n
0001708373 00000 n
0001708401 00000 n
0001708598 00000 n
0001708626 00000 n
0001708810 00000 n
0001708874 00000 n
0001709102 00000 n
0001709331 00000 n
0001709560 00000 n
0001709787 00000 n
0001714119 00000 n
0001717817 00000 n
0001722243 00000 n
0001724894 00000 n
0001724982 00000 n
0001725080 00000 n
0001725160 00000 n
0001725196 00000 n
0001725346 00000 n
0001725401 00000 n
0001725437 00000 n
0001725620 00000 n
0001725680 00000 n
0001725975 00000 n
0001726212 00000 n
0001726240 00000 n
0001726424 00000 n
0001726506 00000 n
0001726734 00000 n
0001726963 00000 n
0001727192 00000 n
0001727419 00000 n
0001727464 00000 n
0001727700 00000 n
0001727746 00000 n
0001727980 00000 n
0001728187 00000 n
0001728215 00000 n
0001728409 00000 n
0001728517 00000 n
0001728545 00000 n
0001728739 00000 n
0001728848 00000 n
0001728876 00000 n
0001729083 00000 n
0001729190 00000 n
0001729297 00000 n
0001729325 00000 n
0001729532 00000 n
0001729560 00000 n
0001729767 00000 n
0001729795 00000 n
0001730031 00000 n
0001730139 00000 n
0001730167 00000 n
0001730212 00000 n
0001731476 00000 n
0001733256 00000 n
0001733492 00000 n
0001733574 00000 n
0001733621 00000 n
0001733817 00000 n
0001734005 00000 n
0001734237 00000 n
0001734470 00000 n
0001734703 00000 n
0001734934 00000 n
0001738466 00000 n
0001742440 00000 n
0001746470 00000 n
0001749525 00000 n
0001753048 00000 n
0001755851 00000 n
0001759964 00000 n
0001764467 00000 n
0001764558 00000 n
0001764656 00000 n
0001764736 00000 n
0001764772 00000 n
0001764958 00000 n
0001765013 00000 n
0001765049 00000 n
0001765235 00000 n
0001765295 00000 n
0001765590 00000 n
0001765851 00000 n
0001765879 00000 n
0001766069 00000 n
0001766151 00000 n
0001766384 00000 n
0001766616 00000 n
0001766849 00000 n
0001767079 00000 n
0001767126 00000 n
0001767365 00000 n
0001767412 00000 n
0001767651 00000 n
0001767869 00000 n
0001767897 00000 n
0001768357 00000 n
0001768402 00000 n
0001768607 00000 n
0001768635 00000 n
0001768840 00000 n
0001768868 00000 n
0001769115 00000 n
0001769223 00000 n
0001769251 00000 n
0001769298 00000 n
0001769535 00000 n
0001769563 00000 n
0001769794 00000 n
0001769822 00000 n
0001770027 00000 n
0001770055 00000 n
0001770263 00000 n
0001770291 00000 n
0001770481 00000 n
0001770545 00000 n
0001770778 00000 n
0001771010 00000 n
0001771243 00000 n
0001771473 00000 n
0001776751 00000 n
0001781223 00000 n
0001785199 00000 n
0001789194 00000 n
0001793898 00000 n
0001798379 00000 n
0001801983 00000 n
0001803634 00000 n
0001803739 00000 n
0001803837 00000 n
0001803917 00000 n
0001803954 00000 n
0001804140 00000 n
0001804195 00000 n
0001804231 00000 n
0001804431 00000 n
0001804491 00000 n
0001804626 00000 n
0001804874 00000 n
0001804902 00000 n
0001805090 00000 n
0001805163 00000 n
0001805394 00000 n
0001805625 00000 n
0001805856 00000 n
0001806084 00000 n
0001806131 00000 n
0001806370 00000 n
0001806631 00000 n
0001806739 00000 n
0001806767 00000 n
0001806814 00000 n
0001807053 00000 n
0001807081 00000 n
0001807302 00000 n
0001807330 00000 n
0001807519 00000 n
0001807583 00000 n
0001807815 00000 n
0001808047 00000 n
0001808279 00000 n
0001808508 00000 n
0001813273 00000 n
0001817617 00000 n
0001820761 00000 n
0001820848 00000 n
0001820946 00000 n
0001821026 00000 n
0001821062 00000 n
0001821203 00000 n
0001821258 00000 n
0001821294 00000 n
0001821476 00000 n
0001821536 00000 n
0001821703 00000 n
0001821951 00000 n
0001821979 00000 n
0001822167 00000 n
0001822240 00000 n
0001822471 00000 n
0001822702 00000 n
0001822933 00000 n
0001823161 00000 n
0001823208 00000 n
0001823447 00000 n
0001823652 00000 n
0001823680 00000 n
0001823898 00000 n
0001823926 00000 n
0001824173 00000 n
0001824281 00000 n
0001824309 00000 n
0001824356 00000 n
0001824594 00000 n
0001824667 00000 n
0001824857 00000 n
0001825090 00000 n
0001825323 00000 n
0001825556 00000 n
0001825786 00000 n
0001831076 00000 n
0001835320 00000 n
0001839292 00000 n
0001844143 00000 n
0001844233 00000 n
0001844331 00000 n
0001844411 00000 n
0001844447 00000 n
0001844597 00000 n
0001844652 00000 n
0001844688 00000 n
0001844873 00000 n
0001844933 00000 n
0001845228 00000 n
0001845489 00000 n
0001845517 00000 n
0001845706 00000 n
0001845788 00000 n
0001846020 00000 n
0001846252 00000 n
0001846484 00000 n
0001846714 00000 n
0001846761 00000 n
0001847000 00000 n
0001847047 00000 n
0001847285 00000 n
0001847490 00000 n
0001847518 00000 n
0001847723 00000 n
0001847751 00000 n
0001847999 00000 n
0001848046 00000 n
0001848074 00000 n
0001848313 00000 n
0001848341 00000 n
0001848576 00000 n
0001848684 00000 n
0001848712 00000 n
0001848759 00000 n
0001848997 00000 n
0001849025 00000 n
0001849286 00000 n
0001849395 00000 n
0001849423 00000 n
0001849470 00000 n
0001849709 00000 n
0001849746 00000 n
0001849793 00000 n
0001850031 00000 n
0001850236 00000 n
0001850264 00000 n
0001850524 00000 n
0001850552 00000 n
0001850599 00000 n
0001850838 00000 n
0001850920 00000 n
0001850967 00000 n
0001851206 00000 n
0001851396 00000 n
0001851629 00000 n
0001851862 00000 n
0001852095 00000 n
0001852326 00000 n
0001857890 00000 n
0001861652 00000 n
0001864844 00000 n
0001868761 00000 n
0001872121 00000 n
0001876389 00000 n
0001879995 00000 n
0001884074 00000 n
0001884160 00000 n
0001884258 00000 n
0001884338 00000 n
0001884374 00000 n
0001884560 00000 n
0001884615 00000 n
0001884652 00000 n
0001884833 00000 n
0001884893 00000 n
0001885508 00000 n
0001885744 00000 n
0001885772 00000 n
0001885956 00000 n
0001886038 00000 n
0001886266 00000 n
0001886495 00000 n
0001886724 00000 n
0001886951 00000 n
0001886996 00000 n
0001887232 00000 n
0001887278 00000 n
0001887514 00000 n
0001887721 00000 n
0001887829 00000 n
0001887857 00000 n
0001888093 00000 n
0001888121 00000 n
0001888168 00000 n
0001888402 00000 n
0001888430 00000 n
0001888637 00000 n
0001888665 00000 n
0001888885 00000 n
0001888913 00000 n
0001889120 00000 n
0001889148 00000 n
0001889355 00000 n
0001889463 00000 n
0001889491 00000 n
0001889685 00000 n
0001889713 00000 n
0001889907 00000 n
0001889935 00000 n
0001890129 00000 n
0001890157 00000 n
0001890393 00000 n
0001894220 00000 n
0001894248 00000 n
0001894708 00000 n
0001894753 00000 n
0001894799 00000 n
0001895035 00000 n
0001895081 00000 n
0001895128 00000 n
0001895362 00000 n
0001895409 00000 n
0001895645 00000 n
0001895852 00000 n
0001895960 00000 n
0001900540 00000 n
0001900568 00000 n
0001900818 00000 n
0001904717 00000 n
0001904745 00000 n
0001904792 00000 n
0001905028 00000 n
0001905056 00000 n
0001905293 00000 n
0001909171 00000 n
0001909199 00000 n
0001909246 00000 n
0001909481 00000 n
0001909509 00000 n
0001909716 00000 n
0001913386 00000 n
0001913414 00000 n
0001913621 00000 n
0001916780 00000 n
0001916808 00000 n
0001917029 00000 n
0001917137 00000 n
0001920202 00000 n
0001920230 00000 n
0001920467 00000 n
0001922735 00000 n
0001922763 00000 n
0001922810 00000 n
0001923046 00000 n
0001923137 00000 n
0001923184 00000 n
0001923420 00000 n
0001923467 00000 n
0001923703 00000 n
0001923891 00000 n
0001924123 00000 n
0001924356 00000 n
0001924589 00000 n
0001924820 00000 n
0001926959 00000 n
0001929272 00000 n
0001932678 00000 n
0001935887 00000 n
0001939549 00000 n
0001941891 00000 n
0001944266 00000 n
0001947590 00000 n
0001950199 00000 n
0001954450 00000 n
0001959424 00000 n
0001963747 00000 n
0001968023 00000 n
0001972119 00000 n
0001975711 00000 n
0001979213 00000 n
0001981891 00000 n
0001986000 00000 n
0001988579 00000 n
0001991270 00000 n
0001995096 00000 n
0001998718 00000 n
0002002789 00000 n
0002005551 00000 n
0002008323 00000 n
0002012058 00000 n
0002015101 00000 n
0002015191 00000 n
0002015289 00000 n
0002015369 00000 n
0002015406 00000 n
0002015682 00000 n
0002015737 00000 n
0002015774 00000 n
0002015959 00000 n
0002016019 00000 n
0002016089 00000 n
0002016312 00000 n
0002016340 00000 n
0002016524 00000 n
0002016642 00000 n
0002016870 00000 n
0002017099 00000 n
0002017328 00000 n
0002017555 00000 n
0002017600 00000 n
0002017836 00000 n
0002018024 00000 n
0002018256 00000 n
0002018489 00000 n
0002018722 00000 n
0002018953 00000 n
0002023192 00000 n
0002023288 00000 n
0002023386 00000 n
0002023466 00000 n
0002023502 00000 n
0002023625 00000 n
0002023680 00000 n
0002023716 00000 n
0002023907 00000 n
0002023967 00000 n
0002024134 00000 n
0002024382 00000 n
0002024410 00000 n
0002024600 00000 n
0002024682 00000 n
0002024915 00000 n
0002025147 00000 n
0002025380 00000 n
0002025611 00000 n
0002025658 00000 n
0002025897 00000 n
0002025944 00000 n
0002026144 00000 n
0002026362 00000 n
0002026390 00000 n
0002026625 00000 n
0002026733 00000 n
0002026761 00000 n
0002026808 00000 n
0002027047 00000 n
0002027075 00000 n
0002027309 00000 n
0002027418 00000 n
0002027446 00000 n
0002027636 00000 n
0002027700 00000 n
0002027933 00000 n
0002028165 00000 n
0002028398 00000 n
0002028629 00000 n
0002034223 00000 n
0002037411 00000 n
0002040549 00000 n
0002042720 00000 n
0002042801 00000 n
0002042899 00000 n
0002042979 00000 n
0002043015 00000 n
0002043165 00000 n
0002043220 00000 n
0002043256 00000 n
0002043432 00000 n
0002043492 00000 n
0002044171 00000 n
0002044405 00000 n
0002044433 00000 n
0002044622 00000 n
0002044704 00000 n
0002044936 00000 n
0002045168 00000 n
0002045400 00000 n
0002045630 00000 n
0002045677 00000 n
0002045915 00000 n
0002045962 00000 n
0002046201 00000 n
0002046419 00000 n
0002046447 00000 n
0002046665 00000 n
0002046693 00000 n
0002046911 00000 n
0002047019 00000 n
0002047047 00000 n
0002047265 00000 n
0002047293 00000 n
0002047511 00000 n
0002047539 00000 n
0002047757 00000 n
0002047785 00000 n
0002048046 00000 n
0002048074 00000 n
0002048121 00000 n
0002048360 00000 n
0002048397 00000 n
0002048443 00000 n
0002048682 00000 n
0002048900 00000 n
0002049008 00000 n
0002049036 00000 n
0002049284 00000 n
0002049312 00000 n
0002049359 00000 n
0002049598 00000 n
0002049626 00000 n
0002049900 00000 n
0002054594 00000 n
0002054622 00000 n
0002054669 00000 n
0002054908 00000 n
0002054954 00000 n
0002055001 00000 n
0002055240 00000 n
0002055287 00000 n
0002055525 00000 n
0002055772 00000 n
0002059361 00000 n
0002059408 00000 n
0002059436 00000 n
0002059675 00000 n
0002059703 00000 n
0002059934 00000 n
0002064019 00000 n
0002064047 00000 n
0002064281 00000 n
0002064389 00000 n
0002067596 00000 n
0002067624 00000 n
0002067671 00000 n
0002067910 00000 n
0002067938 00000 n
0002068172 00000 n
0002072171 00000 n
0002072199 00000 n
0002072246 00000 n
0002072484 00000 n
0002072512 00000 n
0002072759 00000 n
0002075397 00000 n
0002075425 00000 n
0002075472 00000 n
0002075710 00000 n
0002075738 00000 n
0002075986 00000 n
0002079545 00000 n
0002079573 00000 n
0002079620 00000 n
0002079859 00000 n
0002079914 00000 n
0002079961 00000 n
0002080200 00000 n
0002080247 00000 n
0002080485 00000 n
0002080532 00000 n
0002080770 00000 n
0002081018 00000 n
0002084783 00000 n
0002084811 00000 n
0002084858 00000 n
0002085097 00000 n
0002085125 00000 n
0002085360 00000 n
0002085468 00000 n
0002089427 00000 n
0002089455 00000 n
0002089502 00000 n
0002089741 00000 n
0002089769 00000 n
0002090030 00000 n
0002093634 00000 n
0002093662 00000 n
0002094122 00000 n
0002094167 00000 n
0002094214 00000 n
0002094452 00000 n
0002094525 00000 n
0002094714 00000 n
0002094946 00000 n
0002095178 00000 n
0002095410 00000 n
0002095640 00000 n
0002100679 00000 n
0002104041 00000 n
0002107781 00000 n
0002111137 00000 n
0002114850 00000 n
0002118731 00000 n
0002122801 00000 n
0002125765 00000 n
0002129142 00000 n
0002134277 00000 n
0002138312 00000 n
0002142831 00000 n
0002146463 00000 n
0002150908 00000 n
0002153994 00000 n
0002157985 00000 n
0002162208 00000 n
0002166581 00000 n
0002170657 00000 n
0002175523 00000 n
0002181051 00000 n
0002184886 00000 n
0002189103 00000 n
0002192897 00000 n
0002197057 00000 n
0002201392 00000 n
0002205930 00000 n
0002209350 00000 n
0002213190 00000 n
0002213287 00000 n
0002213385 00000 n
0002213465 00000 n
0002213501 00000 n
0002213795 00000 n
0002213850 00000 n
0002213886 00000 n
0002214078 00000 n
0002214138 00000 n
0002214208 00000 n
0002214418 00000 n
0002214446 00000 n
0002214630 00000 n
0002214748 00000 n
0002214976 00000 n
0002215205 00000 n
0002215434 00000 n
0002215661 00000 n
0002215706 00000 n
0002215942 00000 n
0002216130 00000 n
0002216362 00000 n
0002216595 00000 n
0002216828 00000 n
0002217059 00000 n
0002219573 00000 n
0002219689 00000 n
0002219787 00000 n
0002219867 00000 n
0002219903 00000 n
0002220026 00000 n
0002220081 00000 n
0002220117 00000 n
0002220328 00000 n
0002220388 00000 n
0002220458 00000 n
0002220668 00000 n
0002220696 00000 n
0002220880 00000 n
0002220998 00000 n
0002221226 00000 n
0002221455 00000 n
0002221684 00000 n
0002221911 00000 n
0002221956 00000 n
0002222192 00000 n
0002222380 00000 n
0002222612 00000 n
0002222845 00000 n
0002223078 00000 n
0002223309 00000 n
0002225799 00000 n
0002225903 00000 n
0002226001 00000 n
0002226081 00000 n
0002226117 00000 n
0002226240 00000 n
0002226295 00000 n
0002226331 00000 n
0002227068 00000 n
0002228017 00000 n
0002228216 00000 n
0002228276 00000 n
0002229115 00000 n
0002229362 00000 n
0002229390 00000 n
0002229578 00000 n
0002229669 00000 n
0002229901 00000 n
0002230133 00000 n
0002230365 00000 n
0002230595 00000 n
0002230642 00000 n
0002230879 00000 n
0002230926 00000 n
0002231014 00000 n
0002232429 00000 n
0002232668 00000 n
0002232714 00000 n
0002232953 00000 n
0002233158 00000 n
0002233266 00000 n
0002233294 00000 n
0002233528 00000 n
0002233637 00000 n
0002233665 00000 n
0002233712 00000 n
0002233951 00000 n
0002233979 00000 n
0002234184 00000 n
0002234212 00000 n
0002234459 00000 n
0002234487 00000 n
0002234534 00000 n
0002234770 00000 n
0002234807 00000 n
0002234854 00000 n
0002235093 00000 n
0002235340 00000 n
0002235368 00000 n
0002235414 00000 n
0002235653 00000 n
0002235681 00000 n
0002235915 00000 n
0002236023 00000 n
0002236051 00000 n
0002236098 00000 n
0002236298 00000 n
0002236326 00000 n
0002236573 00000 n
0002236601 00000 n
0002236648 00000 n
0002236887 00000 n
0002236915 00000 n
0002237133 00000 n
0002237161 00000 n
0002237379 00000 n
0002237407 00000 n
0002237625 00000 n
0002242817 00000 n
0002242845 00000 n
0002243092 00000 n
0002243200 00000 n
0002246081 00000 n
0002246109 00000 n
0002246156 00000 n
0002246393 00000 n
0002246430 00000 n
0002246477 00000 n
0002246716 00000 n
0002246977 00000 n
0002250595 00000 n
0002250623 00000 n
0002250670 00000 n
0002250909 00000 n
0002250937 00000 n
0002251171 00000 n
0002254387 00000 n
0002254415 00000 n
0002254462 00000 n
0002254661 00000 n
0002254698 00000 n
0002254745 00000 n
0002254944 00000 n
0002255149 00000 n
0002258539 00000 n
0002258567 00000 n
0002258801 00000 n
0002263509 00000 n
0002263537 00000 n
0002263583 00000 n
0002263782 00000 n
0002263810 00000 n
0002264071 00000 n
0002264179 00000 n
0002268816 00000 n
0002268844 00000 n
0002268891 00000 n
0002269129 00000 n
0002269157 00000 n
0002269405 00000 n
0002273342 00000 n
0002273370 00000 n
0002273417 00000 n
0002273655 00000 n
0002273683 00000 n
0002273901 00000 n
0002278037 00000 n
0002278065 00000 n
0002278270 00000 n
0002282683 00000 n
0002282711 00000 n
0002282959 00000 n
0002286266 00000 n
0002286294 00000 n
0002286341 00000 n
0002286580 00000 n
0002286608 00000 n
0002286855 00000 n
0002286963 00000 n
0002291168 00000 n
0002291196 00000 n
0002291243 00000 n
0002291482 00000 n
0002291528 00000 n
0002291575 00000 n
0002291813 00000 n
0002291860 00000 n
0002292099 00000 n
0002292346 00000 n
0002296359 00000 n
0002296387 00000 n
0002296434 00000 n
0002296672 00000 n
0002296700 00000 n
0002296947 00000 n
0002302047 00000 n
0002302075 00000 n
0002302122 00000 n
0002302361 00000 n
0002302533 00000 n
0002302580 00000 n
0002302818 00000 n
0002302865 00000 n
0002303103 00000 n
0002303150 00000 n
0002303388 00000 n
0002303435 00000 n
0002303674 00000 n
0002303721 00000 n
0002303960 00000 n
0002304006 00000 n
0002304245 00000 n
0002304292 00000 n
0002304531 00000 n
0002304578 00000 n
0002304817 00000 n
0002304864 00000 n
0002305103 00000 n
0002305150 00000 n
0002305389 00000 n
0002305435 00000 n
0002305674 00000 n
0002305721 00000 n
0002306843 00000 n
0002308440 00000 n
0002308679 00000 n
0002308726 00000 n
0002308965 00000 n
0002309012 00000 n
0002309251 00000 n
0002309298 00000 n
0002309537 00000 n
0002309584 00000 n
0002309823 00000 n
0002310071 00000 n
0002313563 00000 n
0002313609 00000 n
0002313637 00000 n
0002313876 00000 n
0002314039 00000 n
0002314086 00000 n
0002314325 00000 n
0002314372 00000 n
0002314611 00000 n
0002314850 00000 n
0002314897 00000 n
0002315136 00000 n
0002315183 00000 n
0002315422 00000 n
0002315469 00000 n
0002315708 00000 n
0002315755 00000 n
0002315994 00000 n
0002316041 00000 n
0002316278 00000 n
0002316325 00000 n
0002316563 00000 n
0002316610 00000 n
0002316849 00000 n
0002317038 00000 n
0002317271 00000 n
0002317504 00000 n
0002317737 00000 n
0002317968 00000 n
0002321991 00000 n
0002326068 00000 n
0002329397 00000 n
0002333330 00000 n
0002336701 00000 n
0002340150 00000 n
0002344208 00000 n
0002349143 00000 n
0002352270 00000 n
0002357926 00000 n
0002361245 00000 n
0002365343 00000 n
0002369023 00000 n
0002372893 00000 n
0002378037 00000 n
0002383106 00000 n
0002387509 00000 n
0002392118 00000 n
0002396989 00000 n
0002400721 00000 n
0002405393 00000 n
0002409832 00000 n
0002415434 00000 n
0002419393 00000 n
0002422996 00000 n
0002427493 00000 n
0002432016 00000 n
0002435847 00000 n
0002440254 00000 n
0002444092 00000 n
0002448022 00000 n
0002452561 00000 n
0002457947 00000 n
0002461541 00000 n
0002461642 00000 n
0002461740 00000 n
0002461820 00000 n
0002461856 00000 n
0002462195 00000 n
0002462250 00000 n
0002462287 00000 n
0002462483 00000 n
0002462543 00000 n
0002462613 00000 n
0002462823 00000 n
0002462851 00000 n
0002463035 00000 n
0002463153 00000 n
0002463381 00000 n
0002463610 00000 n
0002463839 00000 n
0002464066 00000 n
0002464111 00000 n
0002464347 00000 n
0002464535 00000 n
0002464767 00000 n
0002465000 00000 n
0002465233 00000 n
0002465464 00000 n
0002467938 00000 n
0002468030 00000 n
0002468128 00000 n
0002468208 00000 n
0002468244 00000 n
0002468367 00000 n
0002468422 00000 n
0002468459 00000 n
0002468646 00000 n
0002468706 00000 n
0002468776 00000 n
0002468986 00000 n
0002469094 00000 n
0002469122 00000 n
0002469306 00000 n
0002469424 00000 n
0002469652 00000 n
0002469881 00000 n
0002470110 00000 n
0002470337 00000 n
0002470382 00000 n
0002470618 00000 n
0002470806 00000 n
0002471038 00000 n
0002471271 00000 n
0002471504 00000 n
0002471735 00000 n
0002474190 00000 n
0002474281 00000 n
0002474379 00000 n
0002474459 00000 n
0002474496 00000 n
0002474619 00000 n
0002474674 00000 n
0002474710 00000 n
0002474896 00000 n
0002474956 00000 n
0002475026 00000 n
0002475236 00000 n
0002475345 00000 n
0002475373 00000 n
0002475557 00000 n
0002475675 00000 n
0002475903 00000 n
0002476132 00000 n
0002476361 00000 n
0002476588 00000 n
0002476633 00000 n
0002476868 00000 n
0002477056 00000 n
0002477288 00000 n
0002477521 00000 n
0002477754 00000 n
0002477985 00000 n
0002480454 00000 n
0002480548 00000 n
0002480646 00000 n
0002480726 00000 n
0002480762 00000 n
0002480885 00000 n
0002480940 00000 n
0002480976 00000 n
0002481165 00000 n
0002481225 00000 n
0002481295 00000 n
0002481519 00000 n
0002481547 00000 n
0002481731 00000 n
0002481849 00000 n
0002482077 00000 n
0002482306 00000 n
0002482535 00000 n
0002482762 00000 n
0002482807 00000 n
0002483043 00000 n
0002483231 00000 n
0002483463 00000 n
0002483696 00000 n
0002483929 00000 n
0002484160 00000 n
0002486740 00000 n
0002486825 00000 n
0002486923 00000 n
0002487003 00000 n
0002487039 00000 n
0002487162 00000 n
0002487217 00000 n
0002487254 00000 n
0002487434 00000 n
0002487494 00000 n
0002487564 00000 n
0002487775 00000 n
0002487803 00000 n
0002488263 00000 n
0002488308 00000 n
0002488492 00000 n
0002488610 00000 n
0002488838 00000 n
0002489067 00000 n
0002489296 00000 n
0002489523 00000 n
0002489568 00000 n
0002489804 00000 n
0002489992 00000 n
0002490224 00000 n
0002490457 00000 n
0002490690 00000 n
0002490921 00000 n
0002493364 00000 n
0002493442 00000 n
0002493540 00000 n
0002493620 00000 n
0002493656 00000 n
0002493779 00000 n
0002493834 00000 n
0002493870 00000 n
0002494043 00000 n
0002494103 00000 n
0002494173 00000 n
0002494383 00000 n
0002494411 00000 n
0002494595 00000 n
0002494713 00000 n
0002494941 00000 n
0002495170 00000 n
0002495399 00000 n
0002495626 00000 n
0002495671 00000 n
0002495907 00000 n
0002496095 00000 n
0002496327 00000 n
0002496560 00000 n
0002496793 00000 n
0002497024 00000 n
0002499463 00000 n
0002499539 00000 n
0002499637 00000 n
0002499717 00000 n
0002499753 00000 n
0002499876 00000 n
0002499931 00000 n
0002499967 00000 n
0002500138 00000 n
0002500198 00000 n
0002500268 00000 n
0002500492 00000 n
0002500600 00000 n
0002500628 00000 n
0002500812 00000 n
0002501002 00000 n
0002501230 00000 n
0002501459 00000 n
0002501688 00000 n
0002501915 00000 n
0002501960 00000 n
0002502196 00000 n
0002502243 00000 n
0002502478 00000 n
0002502525 00000 n
0002502761 00000 n
0002502808 00000 n
0002503044 00000 n
0002503091 00000 n
0002503327 00000 n
0002503374 00000 n
0002503609 00000 n
0002503656 00000 n
0002503892 00000 n
0002503939 00000 n
0002504175 00000 n
0002504222 00000 n
0002504458 00000 n
0002504646 00000 n
0002504878 00000 n
0002505111 00000 n
0002505344 00000 n
0002505575 00000 n
0002508986 00000 n
0002509077 00000 n
0002509175 00000 n
0002509255 00000 n
0002509291 00000 n
0002509414 00000 n
0002509469 00000 n
0002509505 00000 n
0002509691 00000 n
0002509751 00000 n
0002509982 00000 n
0002510219 00000 n
0002510247 00000 n
0002510431 00000 n
0002510504 00000 n
0002510732 00000 n
0002510961 00000 n
0002511190 00000 n
0002511417 00000 n
0002511462 00000 n
0002511698 00000 n
0002511905 00000 n
0002511933 00000 n
0002512153 00000 n
0002512181 00000 n
0002512388 00000 n
0002512416 00000 n
0002512623 00000 n
0002512731 00000 n
0002512759 00000 n
0002512996 00000 n
0002513024 00000 n
0002513071 00000 n
0002513306 00000 n
0002513424 00000 n
0002513471 00000 n
0002513707 00000 n
0002513753 00000 n
0002513989 00000 n
0002514036 00000 n
0002514270 00000 n
0002514317 00000 n
0002514553 00000 n
0002514600 00000 n
0002514836 00000 n
0002515024 00000 n
0002515256 00000 n
0002515489 00000 n
0002515722 00000 n
0002515953 00000 n
0002520822 00000 n
0002525375 00000 n
0002530054 00000 n
0002533523 00000 n
0002537137 00000 n
0002539831 00000 n
0002539932 00000 n
0002540030 00000 n
0002540110 00000 n
0002540146 00000 n
0002540314 00000 n
0002540369 00000 n
0002540405 00000 n
0002540601 00000 n
0002540661 00000 n
0002541980 00000 n
0002542214 00000 n
0002542242 00000 n
0002542432 00000 n
0002542523 00000 n
0002542756 00000 n
0002542988 00000 n
0002543221 00000 n
0002543451 00000 n
0002543498 00000 n
0002543589 00000 n
0002544765 00000 n
0002545004 00000 n
0002545051 00000 n
0002545290 00000 n
0002545337 00000 n
0002545576 00000 n
0002545823 00000 n
0002545851 00000 n
0002545898 00000 n
0002546136 00000 n
0002546164 00000 n
0002546369 00000 n
0002546397 00000 n
0002546631 00000 n
0002546739 00000 n
0002546767 00000 n
0002546813 00000 n
0002547051 00000 n
0002547088 00000 n
0002547135 00000 n
0002547374 00000 n
0002547608 00000 n
0002547636 00000 n
0002547683 00000 n
0002547922 00000 n
0002547950 00000 n
0002548184 00000 n
0002548212 00000 n
0002548259 00000 n
0002548498 00000 n
0002548535 00000 n
0002548582 00000 n
0002548821 00000 n
0002549068 00000 n
0002549096 00000 n
0002549143 00000 n
0002549382 00000 n
0002549419 00000 n
0002549466 00000 n
0002549705 00000 n
0002549952 00000 n
0002549980 00000 n
0002550027 00000 n
0002550266 00000 n
0002550294 00000 n
0002550512 00000 n
0002550620 00000 n
0002550648 00000 n
0002550895 00000 n
0002550923 00000 n
0002550970 00000 n
0002551208 00000 n
0002551254 00000 n
0002551301 00000 n
0002551539 00000 n
0002551586 00000 n
0002551823 00000 n
0002552057 00000 n
0002557051 00000 n
0002557079 00000 n
0002557126 00000 n
0002557365 00000 n
0002557393 00000 n
0002557627 00000 n
0002561013 00000 n
0002561041 00000 n
0002561088 00000 n
0002561327 00000 n
0002561364 00000 n
0002561411 00000 n
0002561650 00000 n
0002561855 00000 n
0002565353 00000 n
0002565381 00000 n
0002565641 00000 n
0002565749 00000 n
0002567906 00000 n
0002567934 00000 n
0002567981 00000 n
0002568220 00000 n
0002568248 00000 n
0002568495 00000 n
0002568604 00000 n
0002572126 00000 n
0002572154 00000 n
0002572201 00000 n
0002572439 00000 n
0002572467 00000 n
0002572701 00000 n
0002572817 00000 n
0002576808 00000 n
0002576836 00000 n
0002576883 00000 n
0002577122 00000 n
0002577150 00000 n
0002577368 00000 n
0002581360 00000 n
0002581388 00000 n
0002581635 00000 n
0002585237 00000 n
0002585265 00000 n
0002585312 00000 n
0002585551 00000 n
0002585579 00000 n
0002585784 00000 n
0002585892 00000 n
0002589470 00000 n
0002589498 00000 n
0002589732 00000 n
0002593429 00000 n
0002593457 00000 n
0002593504 00000 n
0002593743 00000 n
0002593771 00000 n
0002593976 00000 n
0002596528 00000 n
0002596556 00000 n
0002596761 00000 n
0002601256 00000 n
0002601284 00000 n
0002601489 00000 n
0002605257 00000 n
0002605285 00000 n
0002605519 00000 n
0002605627 00000 n
0002610300 00000 n
0002610328 00000 n
0002610788 00000 n
0002611547 00000 n
0002611594 00000 n
0002611833 00000 n
0002611870 00000 n
0002611917 00000 n
0002612156 00000 n
0002612374 00000 n
0002616342 00000 n
0002616370 00000 n
0002616601 00000 n
0002620042 00000 n
0002620070 00000 n
0002620317 00000 n
0002623831 00000 n
0002623859 00000 n
0002623906 00000 n
0002624145 00000 n
0002624173 00000 n
0002624407 00000 n
0002628492 00000 n
0002628520 00000 n
0002628567 00000 n
0002628804 00000 n
0002628832 00000 n
0002629037 00000 n
0002629145 00000 n
0002632364 00000 n
0002632392 00000 n
0002632640 00000 n
0002636328 00000 n
0002636356 00000 n
0002636403 00000 n
0002636641 00000 n
0002636669 00000 n
0002636903 00000 n
0002641186 00000 n
0002641214 00000 n
0002641261 00000 n
0002641499 00000 n
0002641527 00000 n
0002641761 00000 n
0002645264 00000 n
0002645311 00000 n
0002645339 00000 n
0002645578 00000 n
0002645633 00000 n
0002645680 00000 n
0002645918 00000 n
0002645965 00000 n
0002646204 00000 n
0002646251 00000 n
0002646490 00000 n
0002646724 00000 n
0002650140 00000 n
0002650168 00000 n
0002650215 00000 n
0002651331 00000 n
0002652718 00000 n
0002652957 00000 n
0002653003 00000 n
0002653049 00000 n
0002653286 00000 n
0002653333 00000 n
0002653571 00000 n
0002653818 00000 n
0002653926 00000 n
0002657137 00000 n
0002657165 00000 n
0002657212 00000 n
0002657451 00000 n
0002657488 00000 n
0002657535 00000 n
0002657773 00000 n
0002658007 00000 n
0002661583 00000 n
0002661611 00000 n
0002661658 00000 n
0002661895 00000 n
0002661923 00000 n
0002662128 00000 n
0002666273 00000 n
0002666301 00000 n
0002666519 00000 n
0002670738 00000 n
0002670766 00000 n
0002671000 00000 n
0002674097 00000 n
0002674125 00000 n
0002674172 00000 n
0002674411 00000 n
0002674457 00000 n
0002674504 00000 n
0002674743 00000 n
0002674790 00000 n
0002675028 00000 n
0002675246 00000 n
0002675354 00000 n
0002677650 00000 n
0002677678 00000 n
0002677886 00000 n
0002678004 00000 n
0002682141 00000 n
0002682169 00000 n
0002682359 00000 n
0002682423 00000 n
0002682656 00000 n
0002682888 00000 n
0002683121 00000 n
0002683351 00000 n
0002686958 00000 n
0002690639 00000 n
0002694760 00000 n
0002698966 00000 n
0002703348 00000 n
0002706932 00000 n
0002710980 00000 n
0002714522 00000 n
0002718710 00000 n
0002724133 00000 n
0002727953 00000 n
0002731920 00000 n
0002734527 00000 n
0002738483 00000 n
0002742882 00000 n
0002747321 00000 n
0002751394 00000 n
0002755443 00000 n
0002759584 00000 n
0002762601 00000 n
0002767523 00000 n
0002771742 00000 n
0002776880 00000 n
0002781283 00000 n
0002785161 00000 n
0002789140 00000 n
0002793646 00000 n
0002797309 00000 n
0002801460 00000 n
0002806182 00000 n
0002810123 00000 n
0002813979 00000 n
0002817669 00000 n
0002821678 00000 n
0002826293 00000 n
0002830938 00000 n
0002834477 00000 n
0002837231 00000 n
0002841806 00000 n
0002844896 00000 n
0002848959 00000 n
0002853094 00000 n
0002857687 00000 n
0002862335 00000 n
0002867168 00000 n
0002871210 00000 n
0002875684 00000 n
0002879684 00000 n
0002884328 00000 n
0002884415 00000 n
0002884513 00000 n
0002884593 00000 n
0002884629 00000 n
0002885103 00000 n
0002885158 00000 n
0002885194 00000 n
0002885376 00000 n
0002885436 00000 n
0002885667 00000 n
0002885890 00000 n
0002885918 00000 n
0002886102 00000 n
0002886319 00000 n
0002886547 00000 n
0002886774 00000 n
0002886819 00000 n
0002887858 00000 n
0002888974 00000 n
0002889209 00000 n
0002889441 00000 n
0002889673 00000 n
0002889906 00000 n
0002890137 00000 n
0002890370 00000 n
0002890606 00000 n
0002890839 00000 n
0002891071 00000 n
0002891302 00000 n
0002891533 00000 n
0002891765 00000 n
0002892002 00000 n
0002892239 00000 n
0002892476 00000 n
0002892712 00000 n
0002892948 00000 n
0002893181 00000 n
0002893414 00000 n
0002893637 00000 n
0002893665 00000 n
0002893898 00000 n
0002894142 00000 n
0002894376 00000 n
0002894612 00000 n
0002894846 00000 n
0002895081 00000 n
0002895315 00000 n
0002895546 00000 n
0002895780 00000 n
0002896016 00000 n
0002896247 00000 n
0002896482 00000 n
0002896718 00000 n
0002896954 00000 n
0002897190 00000 n
0002897425 00000 n
0002897660 00000 n
0002897892 00000 n
0002898125 00000 n
0002898358 00000 n
0002898591 00000 n
0002898826 00000 n
0002899059 00000 n
0002899291 00000 n
0002899528 00000 n
0002899759 00000 n
0002899982 00000 n
0002900010 00000 n
0002900243 00000 n
0002900496 00000 n
0002900725 00000 n
0002900961 00000 n
0002901194 00000 n
0002901425 00000 n
0002901658 00000 n
0002901890 00000 n
0002902125 00000 n
0002902358 00000 n
0002902591 00000 n
0002902825 00000 n
0002903058 00000 n
0002903290 00000 n
0002903524 00000 n
0002903757 00000 n
0002903993 00000 n
0002904227 00000 n
0002904457 00000 n
0002904690 00000 n
0002904923 00000 n
0002905162 00000 n
0002905396 00000 n
0002905629 00000 n
0002905863 00000 n
0002906097 00000 n
0002906334 00000 n
0002906557 00000 n
0002906692 00000 n
0002906720 00000 n
0002906952 00000 n
0002907196 00000 n
0002907427 00000 n
0002907658 00000 n
0002907890 00000 n
0002908119 00000 n
0002908349 00000 n
0002908578 00000 n
0002908807 00000 n
0002909037 00000 n
0002909269 00000 n
0002909505 00000 n
0002909741 00000 n
0002909974 00000 n
0002910211 00000 n
0002910444 00000 n
0002910676 00000 n
0002910909 00000 n
0002911140 00000 n
0002911374 00000 n
0002911609 00000 n
0002911841 00000 n
0002912079 00000 n
0002912312 00000 n
0002912545 00000 n
0002912778 00000 n
0002913001 00000 n
0002913029 00000 n
0002913261 00000 n
0002913541 00000 n
0002913775 00000 n
0002914004 00000 n
0002914233 00000 n
0002914462 00000 n
0002914691 00000 n
0002914920 00000 n
0002915153 00000 n
0002915388 00000 n
0002915621 00000 n
0002915860 00000 n
0002916097 00000 n
0002916334 00000 n
0002916572 00000 n
0002916804 00000 n
0002917039 00000 n
0002917275 00000 n
0002917507 00000 n
0002917743 00000 n
0002917976 00000 n
0002918211 00000 n
0002918444 00000 n
0002918679 00000 n
0002918918 00000 n
0002919157 00000 n
0002919392 00000 n
0002919628 00000 n
0002919863 00000 n
0002920094 00000 n
0002920317 00000 n
0002920345 00000 n
0002920575 00000 n
0002920765 00000 n
0002920996 00000 n
0002921225 00000 n
0002921459 00000 n
0002921689 00000 n
0002921921 00000 n
0002922150 00000 n
0002922380 00000 n
0002922614 00000 n
0002922849 00000 n
0002923082 00000 n
0002923315 00000 n
0002923548 00000 n
0002923780 00000 n
0002924013 00000 n
0002924246 00000 n
0002924434 00000 n
0002924666 00000 n
0002924897 00000 n
0002929925 00000 n
0002935414 00000 n
0002941151 00000 n
0002946645 00000 n
0002952941 00000 n
0002957238 00000 n
0002957322 00000 n
0002957420 00000 n
0002957500 00000 n
0002957536 00000 n
0002957704 00000 n
0002957759 00000 n
0002957795 00000 n
0002957960 00000 n
trailer
<</Size 6334/Root 1 0 R/Info 3 0 R/ID[<9103C1CC6A92694F9125BDBA4A866BEA><C659D068A1CA0248B4EE18B18CC65459>]/Prev 169571 >>
startxref
2961481
%%EOF
