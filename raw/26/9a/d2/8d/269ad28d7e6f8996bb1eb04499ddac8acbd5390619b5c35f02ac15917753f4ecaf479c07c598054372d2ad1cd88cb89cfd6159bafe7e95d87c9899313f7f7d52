
1. 实现一个队列的类模板
     
2. 实现一个模板形式的单例类，要求对于任意类型的类经过Singleton的处理之后，
  　都能获取一个单例对象，并且可以传递任意参数
     
     class Point;
     class Computer;
     
     Point pt(1, 2);
     Point pt2(3, 4);
     
     Computer com("Mac", 8888);
     
     
     int main(void)
     {
        Computer * p1 = Singleton<Computer>::getInstance("Xiaomi", 6666);
        Computer * p2 = Singleton<Computer>::getInstance("Xiaomi", 6666);
        
        Point　* p3 = Singleton<Point>::getInstance(1, 2);
        Point　* p4 = Singleton<Point>::getInstance(1, 2);
        
        return 0;
     } 

3. 使用tinyXml2解析RSS文件，并生成一个网页库pagelib.dat
  
    tinyXml2 -- https://github.com/leethomason/tinyxml2
    rss    --   http://www.runoob.com/rss/rss-tutorial.html
    
   	正则表达式 进行过滤
  
   参考接口:
   
    struct RssItem
    {
        string title;
        string link;
        string description;
        string content;
    };
    
    class RssReader
    {
    public:
        RssReader();
        
        void parseRss();//解析
        void dump();//输出
    private:
        vector<RssItem> _rss;
    };   
    
要求：最后生成一个 pagelib.dat, 其格式:
    
    <doc>
      <docid>1</docid>
      <title> ... </title>
      <link> ...  </link>
      <content> ... </content>
    </doc>
    <doc>
      ...
    </doc>
    <doc>
      ...
    </doc>
    
    
  RSS文件解析作业思路：                 
    xml -->  rss --> tinyxml2 --> boost::regex