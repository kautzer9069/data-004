 ///
 /// @file    constructMultiDervied.cc
 /// @author  lemon(haohb13@gmail.com)
 /// @date    2018-06-25 15:09:13
 ///
 
#include <iostream>
using std::cout;
using std::endl;

class A
{
public:
	A(){	cout <<"A()" << endl;	}
	~A(){	cout <<"~A()" << endl;	}
};
 
class B
{
public:
	B(){	cout <<"B()" << endl;	}
	~B(){	cout <<"~B()" << endl;	}
};

class C 
: public A
, public B
{
public:
	C()
	: B()
	, A()
	{	cout <<"C()" << endl;	}
	~C(){	cout <<"~C()" << endl;	}
};

int main(void)
{
	C c;

	return 0;
}
